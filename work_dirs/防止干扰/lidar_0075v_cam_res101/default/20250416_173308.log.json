{"env_info": "sys.platform: linux\nPython: 3.8.20 | packaged by conda-forge | (default, Sep 30 2024, 17:52:49) [GCC 13.3.0]\nCUDA available: True\nGPU 0,1: NVIDIA GeForce RTX 4090 D\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 11.8, V11.8.89\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0\nPyTorch: 1.13.0+cu116\nPyTorch compiling details: PyTorch built with:\n  - GCC 9.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.6\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.3.2  (built against CUDA 11.5)\n  - Magma 2.6.1\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.6, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.14.0+cu116\nOpenCV: 4.11.0\nMMCV: 1.7.0\nMMCV Compiler: GCC 9.3\nMMCV CUDA Compiler: 11.6\nMMDetection: 2.27.0\nMMSegmentation: 0.30.0\nMMDetection3D: 1.0.0rc6+9130d71\nspconv2.0: True", "config": "point_cloud_range = [-54, -54, -5.0, 54, 54, 3.0]\nclass_names = [\n    'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',\n    'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n]\ndataset_type = 'NuScenesDataset'\ndata_root = 'data/nuscenes/'\ninput_modality = dict(\n    use_lidar=True,\n    use_camera=True,\n    use_radar=False,\n    use_map=False,\n    use_external=False)\nfile_client_args = dict(backend='disk')\ntrain_pipeline = [\n    dict(type='LoadMultiViewImageFromFiles', to_float32=True),\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=5,\n        use_dim=5,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='LoadPointsFromMultiSweeps',\n        sweeps_num=9,\n        use_dim=[0, 1, 2, 3, 4],\n        file_client_args=dict(backend='disk'),\n        pad_empty_sweeps=True,\n        remove_close=True),\n    dict(type='PhotoMetricDistortionMultiViewImage'),\n    dict(type='LoadAnnotations3D', with_bbox_3d=True, with_label_3d=True),\n    dict(\n        type='PointsRangeFilter',\n        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n    dict(\n        type='ObjectRangeFilter',\n        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n    dict(\n        type='ObjectNameFilter',\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ]),\n    dict(\n        type='NormalizeMultiviewImage',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='PadMultiViewImage', size_divisor=32),\n    dict(type='PointShuffle'),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ]),\n    dict(\n        type='Collect3D',\n        keys=['points', 'img', 'gt_bboxes_3d', 'gt_labels_3d'])\n]\ntest_pipeline = [\n    dict(type='LoadMultiViewImageFromFiles', to_float32=True),\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=5,\n        use_dim=5,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='LoadPointsFromMultiSweeps',\n        sweeps_num=9,\n        use_dim=[0, 1, 2, 3, 4],\n        file_client_args=dict(backend='disk'),\n        pad_empty_sweeps=True,\n        remove_close=True),\n    dict(\n        type='NormalizeMultiviewImage',\n        mean=[103.53, 116.28, 123.675],\n        std=[1.0, 1.0, 1.0],\n        to_rgb=False),\n    dict(type='PadMultiViewImage', size_divisor=32),\n    dict(\n        type='MultiScaleFlipAug3D',\n        img_scale=(1333, 800),\n        pts_scale_ratio=1,\n        flip=False,\n        transforms=[\n            dict(\n                type='GlobalRotScaleTrans',\n                rot_range=[0, 0],\n                scale_ratio_range=[1.0, 1.0],\n                translation_std=[0, 0, 0]),\n            dict(type='RandomFlip3D'),\n            dict(\n                type='PointsRangeFilter',\n                point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ],\n                with_label=False),\n            dict(type='Collect3D', keys=['points', 'img'])\n        ])\n]\neval_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=5,\n        use_dim=5,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='LoadPointsFromMultiSweeps',\n        sweeps_num=9,\n        use_dim=[0, 1, 2, 3, 4],\n        file_client_args=dict(backend='disk'),\n        pad_empty_sweeps=True,\n        remove_close=True),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        with_label=False),\n    dict(type='Collect3D', keys=['points'])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=4,\n    train=dict(\n        type='NuScenesDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/nuscenes/nuscenes_infos_train.pkl',\n        pipeline=[\n            dict(type='LoadMultiViewImageFromFiles', to_float32=True),\n            dict(\n                type='LoadPointsFromFile',\n                coord_type='LIDAR',\n                load_dim=5,\n                use_dim=5,\n                file_client_args=dict(backend='disk')),\n            dict(\n                type='LoadPointsFromMultiSweeps',\n                sweeps_num=9,\n                use_dim=[0, 1, 2, 3, 4],\n                file_client_args=dict(backend='disk'),\n                pad_empty_sweeps=True,\n                remove_close=True),\n            dict(type='PhotoMetricDistortionMultiViewImage'),\n            dict(\n                type='LoadAnnotations3D',\n                with_bbox_3d=True,\n                with_label_3d=True),\n            dict(\n                type='PointsRangeFilter',\n                point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n            dict(\n                type='ObjectRangeFilter',\n                point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n            dict(\n                type='ObjectNameFilter',\n                classes=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ]),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(type='PointShuffle'),\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ]),\n            dict(\n                type='Collect3D',\n                keys=['points', 'img', 'gt_bboxes_3d', 'gt_labels_3d'])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=True,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=False),\n        test_mode=False,\n        box_type_3d='LiDAR',\n        use_valid_flag=True),\n    val=dict(\n        type='NuScenesDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/nuscenes/nuscenes_infos_val.pkl',\n        pipeline=[\n            dict(type='LoadMultiViewImageFromFiles', to_float32=True),\n            dict(\n                type='LoadPointsFromFile',\n                coord_type='LIDAR',\n                load_dim=5,\n                use_dim=5,\n                file_client_args=dict(backend='disk')),\n            dict(\n                type='LoadPointsFromMultiSweeps',\n                sweeps_num=9,\n                use_dim=[0, 1, 2, 3, 4],\n                file_client_args=dict(backend='disk'),\n                pad_empty_sweeps=True,\n                remove_close=True),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1333, 800),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='GlobalRotScaleTrans',\n                        rot_range=[0, 0],\n                        scale_ratio_range=[1.0, 1.0],\n                        translation_std=[0, 0, 0]),\n                    dict(type='RandomFlip3D'),\n                    dict(\n                        type='PointsRangeFilter',\n                        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        with_label=False),\n                    dict(type='Collect3D', keys=['points', 'img'])\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=True,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=False),\n        test_mode=True,\n        box_type_3d='LiDAR'),\n    test=dict(\n        type='NuScenesDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/nuscenes/nuscenes_infos_val.pkl',\n        pipeline=[\n            dict(type='LoadMultiViewImageFromFiles', to_float32=True),\n            dict(\n                type='LoadPointsFromFile',\n                coord_type='LIDAR',\n                load_dim=5,\n                use_dim=5,\n                file_client_args=dict(backend='disk')),\n            dict(\n                type='LoadPointsFromMultiSweeps',\n                sweeps_num=9,\n                use_dim=[0, 1, 2, 3, 4],\n                file_client_args=dict(backend='disk'),\n                pad_empty_sweeps=True,\n                remove_close=True),\n            dict(\n                type='NormalizeMultiviewImage',\n                mean=[103.53, 116.28, 123.675],\n                std=[1.0, 1.0, 1.0],\n                to_rgb=False),\n            dict(type='PadMultiViewImage', size_divisor=32),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1333, 800),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='GlobalRotScaleTrans',\n                        rot_range=[0, 0],\n                        scale_ratio_range=[1.0, 1.0],\n                        translation_std=[0, 0, 0]),\n                    dict(type='RandomFlip3D'),\n                    dict(\n                        type='PointsRangeFilter',\n                        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        with_label=False),\n                    dict(type='Collect3D', keys=['points', 'img'])\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=True,\n            use_camera=True,\n            use_radar=False,\n            use_map=False,\n            use_external=False),\n        test_mode=True,\n        box_type_3d='LiDAR'))\nevaluation = dict(\n    interval=1,\n    pipeline=[\n        dict(\n            type='LoadPointsFromFile',\n            coord_type='LIDAR',\n            load_dim=5,\n            use_dim=5,\n            file_client_args=dict(backend='disk')),\n        dict(\n            type='LoadPointsFromMultiSweeps',\n            sweeps_num=10,\n            file_client_args=dict(backend='disk')),\n        dict(\n            type='DefaultFormatBundle3D',\n            class_names=[\n                'car', 'truck', 'trailer', 'bus', 'construction_vehicle',\n                'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone',\n                'barrier'\n            ],\n            with_label=False),\n        dict(type='Collect3D', keys=['points'])\n    ])\ncheckpoint_config = dict(interval=1, max_keep_ckpts=1)\nlog_config = dict(\n    interval=50,\n    hooks=[dict(type='TextLoggerHook'),\n           dict(type='TensorboardLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nwork_dir = './work_dirs/lidar_0075v_cam_res101/default'\nload_from = 'checkpoints/fuse.pth'\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nplugin = 'plugin/futr3d'\nvoxel_size = [0.075, 0.075, 0.2]\nimg_norm_cfg = dict(\n    mean=[103.53, 116.28, 123.675], std=[1.0, 1.0, 1.0], to_rgb=False)\ncenter_head = dict(\n    type='CenterHead',\n    in_channels=512,\n    tasks=[\n        dict(num_class=1, class_names=['car']),\n        dict(num_class=2, class_names=['truck', 'construction_vehicle']),\n        dict(num_class=2, class_names=['bus', 'trailer']),\n        dict(num_class=1, class_names=['barrier']),\n        dict(num_class=2, class_names=['motorcycle', 'bicycle']),\n        dict(num_class=2, class_names=['pedestrian', 'traffic_cone'])\n    ],\n    common_heads=dict(\n        reg=(2, 2), height=(1, 2), dim=(3, 2), rot=(2, 2), vel=(2, 2)),\n    share_conv_channel=64,\n    bbox_coder=dict(\n        type='CenterPointBBoxCoder',\n        pc_range=[-54, -54],\n        post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],\n        max_num=500,\n        score_threshold=0.1,\n        out_size_factor=8,\n        voxel_size=[0.075, 0.075],\n        code_size=9),\n    separate_head=dict(type='SeparateHead', init_bias=-2.19, final_kernel=3),\n    loss_cls=dict(type='GaussianFocalLoss', reduction='mean'),\n    loss_bbox=dict(type='L1Loss', reduction='mean', loss_weight=0.25),\n    norm_bbox=True)\nmodel = dict(\n    type='FUTR3D',\n    use_lidar=True,\n    use_camera=True,\n    use_radar=False,\n    use_grid_mask=True,\n    freeze_backbone=True,\n    img_backbone=dict(\n        type='ResNet',\n        depth=101,\n        num_stages=4,\n        out_indices=(0, 1, 2, 3),\n        frozen_stages=1,\n        norm_cfg=dict(type='BN2d', requires_grad=False),\n        norm_eval=True,\n        style='caffe',\n        dcn=dict(type='DCNv2', deform_groups=1, fallback_on_stride=False),\n        stage_with_dcn=(False, False, True, True)),\n    img_neck=dict(\n        type='FPN',\n        in_channels=[256, 512, 1024, 2048],\n        out_channels=256,\n        start_level=1,\n        add_extra_convs='on_output',\n        num_outs=4,\n        relu_before_extra_convs=True),\n    pts_voxel_layer=dict(\n        max_num_points=10,\n        voxel_size=[0.075, 0.075, 0.2],\n        max_voxels=(120000, 160000),\n        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n    pts_voxel_encoder=dict(type='HardSimpleVFE', num_features=5),\n    pts_middle_encoder=dict(\n        type='SparseEncoder',\n        in_channels=5,\n        sparse_shape=[41, 1440, 1440],\n        output_channels=128,\n        order=('conv', 'norm', 'act'),\n        encoder_channels=((16, 16, 32), (32, 32, 64), (64, 64, 128), (128,\n                                                                      128)),\n        encoder_paddings=((0, 0, 1), (0, 0, 1), (0, 0, [0, 1, 1]), (0, 0)),\n        block_type='basicblock'),\n    pts_backbone=dict(\n        type='SECOND',\n        in_channels=256,\n        out_channels=[128, 256],\n        layer_nums=[5, 5],\n        layer_strides=[1, 2],\n        norm_cfg=dict(type='BN', eps=0.001, momentum=0.01),\n        conv_cfg=dict(type='Conv2d', bias=False)),\n    pts_neck=dict(\n        type='FPN',\n        norm_cfg=dict(type='BN2d', eps=0.001, momentum=0.01),\n        act_cfg=dict(type='ReLU', inplace=False),\n        in_channels=[128, 256],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs=True,\n        num_outs=4,\n        relu_before_extra_convs=True),\n    pts_bbox_head=dict(\n        type='FUTR3DHead',\n        use_dab=True,\n        anchor_size=3,\n        num_query=900,\n        num_classes=10,\n        in_channels=256,\n        pc_range=[-54, -54, -5.0, 54, 54, 3.0],\n        sync_cls_avg_factor=True,\n        with_box_refine=True,\n        as_two_stage=False,\n        code_weights=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2],\n        transformer=dict(\n            type='FUTR3DTransformer',\n            use_dab=True,\n            decoder=dict(\n                type='FUTR3DTransformerDecoder',\n                num_layers=6,\n                use_dab=True,\n                anchor_size=3,\n                return_intermediate=True,\n                transformerlayers=dict(\n                    type='DetrTransformerDecoderLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='MultiheadAttention',\n                            embed_dims=256,\n                            num_heads=8,\n                            dropout=0.1),\n                        dict(\n                            type='FUTR3DAttention',\n                            use_lidar=True,\n                            use_camera=True,\n                            use_radar=False,\n                            pc_range=[-54, -54, -5.0, 54, 54, 3.0],\n                            embed_dims=256)\n                    ],\n                    feedforward_channels=1024,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm')))),\n        positional_encoding=dict(\n            type='SinePositionalEncoding',\n            num_feats=128,\n            normalize=True,\n            offset=-0.5),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=0.25),\n        loss_iou=dict(type='GIoULoss', loss_weight=0)),\n    train_cfg=dict(\n        pts=dict(\n            point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0],\n            pc_range=[-54, -54, -5.0, 54, 54, 3.0],\n            grid_size=[1440, 1440, 40],\n            voxel_size=[0.075, 0.075, 0.2],\n            out_size_factor=8,\n            dense_reg=1,\n            gaussian_overlap=0.1,\n            max_objs=500,\n            min_radius=2,\n            code_weights=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2],\n            assigner=dict(\n                type='HungarianAssigner3D',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(type='BBox3DL1Cost', weight=0.25),\n                iou_cost=dict(type='IoUCost', weight=0)))),\n    test_cfg=dict(\n        pts=dict(\n            pc_range=[-54, -54],\n            post_center_limit_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],\n            max_per_img=500,\n            max_pool_nms=False,\n            min_radius=[4, 12, 10, 1, 0.85, 0.175],\n            out_size_factor=8,\n            voxel_size=[0.075, 0.075],\n            nms_type='circle',\n            pre_max_size=1000,\n            post_max_size=83,\n            nms_thr=0.2,\n            max_num=300,\n            score_threshold=0,\n            post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0])))\ndb_sampler = dict(\n    data_root='data/nuscenes/',\n    info_path='data/nuscenes/nuscenes_dbinfos_train.pkl',\n    rate=1.0,\n    prepare=dict(\n        filter_by_difficulty=[-1],\n        filter_by_min_points=dict(\n            car=5,\n            truck=5,\n            bus=5,\n            trailer=5,\n            construction_vehicle=5,\n            traffic_cone=5,\n            barrier=5,\n            motorcycle=5,\n            bicycle=5,\n            pedestrian=5)),\n    classes=[\n        'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',\n        'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n    ],\n    sample_groups=dict(\n        car=2,\n        truck=3,\n        construction_vehicle=7,\n        bus=4,\n        trailer=6,\n        barrier=2,\n        motorcycle=6,\n        bicycle=6,\n        pedestrian=2,\n        traffic_cone=2),\n    points_loader=dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=5,\n        use_dim=[0, 1, 2, 3, 4],\n        file_client_args=dict(backend='disk')))\nfind_unused_parameters = True\nrunner = dict(type='EpochBasedRunner', max_epochs=6)\noptimizer = dict(\n    type='AdamW',\n    lr=0.0001,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            img_backbone=dict(lr_mult=0.1),\n            img_neck=dict(lr_mult=0.1),\n            pts_middle_encoder=dict(lr_mult=0.1),\n            pts_backbone=dict(lr_mult=0.1),\n            pts_neck=dict(lr_mult=0.1))),\n    weight_decay=0.01)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='CosineAnnealing',\n    warmup='linear',\n    warmup_iters=500,\n    warmup_ratio=0.3333333333333333,\n    min_lr_ratio=0.001)\ngpu_ids = range(0, 2)\n", "seed": 0, "exp_name": "lidar_0075v_cam_res101.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 4e-05, "memory": 4350, "data_time": 0.10791, "loss_cls": 1.22812, "loss_bbox": 1.6048, "d0.loss_cls": 1.28614, "d0.loss_bbox": 1.72503, "d1.loss_cls": 1.24584, "d1.loss_bbox": 1.69745, "d2.loss_cls": 1.16826, "d2.loss_bbox": 1.60064, "d3.loss_cls": 1.17913, "d3.loss_bbox": 1.61711, "d4.loss_cls": 1.14925, "d4.loss_bbox": 1.55991, "loss": 17.06168, "grad_norm": 16.75174, "time": 1.14693}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 5e-05, "memory": 4350, "data_time": 0.02272, "loss_cls": 0.91759, "loss_bbox": 1.30576, "d0.loss_cls": 1.00972, "d0.loss_bbox": 1.43791, "d1.loss_cls": 1.00879, "d1.loss_bbox": 1.38366, "d2.loss_cls": 0.99046, "d2.loss_bbox": 1.34169, "d3.loss_cls": 0.94187, "d3.loss_bbox": 1.3344, "d4.loss_cls": 0.89665, "d4.loss_bbox": 1.29804, "loss": 13.86654, "grad_norm": 11.58623, "time": 0.9988}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 5e-05, "memory": 4350, "data_time": 0.02228, "loss_cls": 0.82003, "loss_bbox": 1.2277, "d0.loss_cls": 0.92228, "d0.loss_bbox": 1.34644, "d1.loss_cls": 0.8869, "d1.loss_bbox": 1.2696, "d2.loss_cls": 0.88879, "d2.loss_bbox": 1.25722, "d3.loss_cls": 0.85493, "d3.loss_bbox": 1.23851, "d4.loss_cls": 0.82204, "d4.loss_bbox": 1.23386, "loss": 12.7683, "grad_norm": 10.30626, "time": 1.04527}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 6e-05, "memory": 4350, "data_time": 0.02469, "loss_cls": 0.76292, "loss_bbox": 1.16042, "d0.loss_cls": 0.87068, "d0.loss_bbox": 1.26885, "d1.loss_cls": 0.7991, "d1.loss_bbox": 1.20038, "d2.loss_cls": 0.79905, "d2.loss_bbox": 1.18451, "d3.loss_cls": 0.79755, "d3.loss_bbox": 1.17144, "d4.loss_cls": 0.77186, "d4.loss_bbox": 1.17727, "loss": 11.96405, "grad_norm": 8.99477, "time": 1.03028}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 7e-05, "memory": 4350, "data_time": 0.02566, "loss_cls": 0.73661, "loss_bbox": 1.09669, "d0.loss_cls": 0.83323, "d0.loss_bbox": 1.20566, "d1.loss_cls": 0.75897, "d1.loss_bbox": 1.13287, "d2.loss_cls": 0.75682, "d2.loss_bbox": 1.11854, "d3.loss_cls": 0.75584, "d3.loss_bbox": 1.10673, "d4.loss_cls": 0.75234, "d4.loss_bbox": 1.10991, "loss": 11.36421, "grad_norm": 8.86383, "time": 1.02283}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 7e-05, "memory": 4350, "data_time": 0.02857, "loss_cls": 0.70585, "loss_bbox": 1.0371, "d0.loss_cls": 0.79924, "d0.loss_bbox": 1.14484, "d1.loss_cls": 0.70819, "d1.loss_bbox": 1.09357, "d2.loss_cls": 0.71011, "d2.loss_bbox": 1.06455, "d3.loss_cls": 0.71829, "d3.loss_bbox": 1.05593, "d4.loss_cls": 0.71347, "d4.loss_bbox": 1.0546, "loss": 10.80573, "grad_norm": 8.42085, "time": 1.02123}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 8e-05, "memory": 4350, "data_time": 0.02377, "loss_cls": 0.68866, "loss_bbox": 1.02765, "d0.loss_cls": 0.76647, "d0.loss_bbox": 1.13429, "d1.loss_cls": 0.67293, "d1.loss_bbox": 1.08849, "d2.loss_cls": 0.6773, "d2.loss_bbox": 1.05863, "d3.loss_cls": 0.68853, "d3.loss_bbox": 1.04878, "d4.loss_cls": 0.69052, "d4.loss_bbox": 1.04802, "loss": 10.59027, "grad_norm": 8.3127, "time": 1.01836}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 9e-05, "memory": 4350, "data_time": 0.02351, "loss_cls": 0.64398, "loss_bbox": 0.99505, "d0.loss_cls": 0.701, "d0.loss_bbox": 1.10354, "d1.loss_cls": 0.61519, "d1.loss_bbox": 1.05903, "d2.loss_cls": 0.62133, "d2.loss_bbox": 1.02539, "d3.loss_cls": 0.62846, "d3.loss_bbox": 1.02106, "d4.loss_cls": 0.64114, "d4.loss_bbox": 1.02109, "loss": 10.07625, "grad_norm": 8.4972, "time": 1.01273}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 9e-05, "memory": 4350, "data_time": 0.02504, "loss_cls": 0.62343, "loss_bbox": 0.97481, "d0.loss_cls": 0.59687, "d0.loss_bbox": 1.07948, "d1.loss_cls": 0.57718, "d1.loss_bbox": 1.03912, "d2.loss_cls": 0.57853, "d2.loss_bbox": 1.01136, "d3.loss_cls": 0.59589, "d3.loss_bbox": 1.00185, "d4.loss_cls": 0.60873, "d4.loss_bbox": 1.00297, "loss": 9.69023, "grad_norm": 8.0837, "time": 0.82109}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 0.0001, "memory": 4350, "data_time": 0.02534, "loss_cls": 0.55116, "loss_bbox": 0.94062, "d0.loss_cls": 0.47945, "d0.loss_bbox": 1.06576, "d1.loss_cls": 0.46237, "d1.loss_bbox": 1.01902, "d2.loss_cls": 0.46005, "d2.loss_bbox": 0.99195, "d3.loss_cls": 0.48098, "d3.loss_bbox": 0.98951, "d4.loss_cls": 0.51213, "d4.loss_bbox": 0.97941, "loss": 8.93239, "grad_norm": 9.59889, "time": 0.78574}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 0.0001, "memory": 4350, "data_time": 0.02324, "loss_cls": 0.43112, "loss_bbox": 0.91115, "d0.loss_cls": 0.41082, "d0.loss_bbox": 1.01687, "d1.loss_cls": 0.37649, "d1.loss_bbox": 0.98353, "d2.loss_cls": 0.38095, "d2.loss_bbox": 0.95535, "d3.loss_cls": 0.38513, "d3.loss_bbox": 0.96119, "d4.loss_cls": 0.40254, "d4.loss_bbox": 0.94757, "loss": 8.1627, "grad_norm": 10.44331, "time": 0.78544}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 0.0001, "memory": 4350, "data_time": 0.0221, "loss_cls": 0.3687, "loss_bbox": 0.89519, "d0.loss_cls": 0.38021, "d0.loss_bbox": 0.98386, "d1.loss_cls": 0.34188, "d1.loss_bbox": 0.96615, "d2.loss_cls": 0.33867, "d2.loss_bbox": 0.92775, "d3.loss_cls": 0.33865, "d3.loss_bbox": 0.93139, "d4.loss_cls": 0.34848, "d4.loss_bbox": 0.91921, "loss": 7.74015, "grad_norm": 11.35426, "time": 0.78369}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 0.0001, "memory": 4350, "data_time": 0.02339, "loss_cls": 0.33191, "loss_bbox": 0.84614, "d0.loss_cls": 0.35453, "d0.loss_bbox": 0.93785, "d1.loss_cls": 0.31277, "d1.loss_bbox": 0.91779, "d2.loss_cls": 0.31244, "d2.loss_bbox": 0.87727, "d3.loss_cls": 0.31717, "d3.loss_bbox": 0.87568, "d4.loss_cls": 0.31651, "d4.loss_bbox": 0.86911, "loss": 7.26917, "grad_norm": 11.95794, "time": 0.78128}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 0.0001, "memory": 4350, "data_time": 0.02418, "loss_cls": 0.31629, "loss_bbox": 0.7839, "d0.loss_cls": 0.3347, "d0.loss_bbox": 0.87689, "d1.loss_cls": 0.30192, "d1.loss_bbox": 0.85656, "d2.loss_cls": 0.29914, "d2.loss_bbox": 0.80963, "d3.loss_cls": 0.30322, "d3.loss_bbox": 0.80587, "d4.loss_cls": 0.30987, "d4.loss_bbox": 0.79949, "loss": 6.79747, "grad_norm": 12.0077, "time": 0.78587}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 0.0001, "memory": 4350, "data_time": 0.02102, "loss_cls": 0.30334, "loss_bbox": 0.75395, "d0.loss_cls": 0.33465, "d0.loss_bbox": 0.84193, "d1.loss_cls": 0.29431, "d1.loss_bbox": 0.81744, "d2.loss_cls": 0.29035, "d2.loss_bbox": 0.77547, "d3.loss_cls": 0.29558, "d3.loss_bbox": 0.7701, "d4.loss_cls": 0.29588, "d4.loss_bbox": 0.76784, "loss": 6.54086, "grad_norm": 12.29434, "time": 0.78396}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 0.0001, "memory": 4350, "data_time": 0.02244, "loss_cls": 0.30094, "loss_bbox": 0.68877, "d0.loss_cls": 0.33498, "d0.loss_bbox": 0.77869, "d1.loss_cls": 0.29141, "d1.loss_bbox": 0.74463, "d2.loss_cls": 0.28933, "d2.loss_bbox": 0.6985, "d3.loss_cls": 0.29318, "d3.loss_bbox": 0.69551, "d4.loss_cls": 0.29281, "d4.loss_bbox": 0.704, "loss": 6.11274, "grad_norm": 12.91256, "time": 0.78432}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 0.0001, "memory": 4350, "data_time": 0.02239, "loss_cls": 0.2817, "loss_bbox": 0.68495, "d0.loss_cls": 0.32128, "d0.loss_bbox": 0.76855, "d1.loss_cls": 0.27319, "d1.loss_bbox": 0.732, "d2.loss_cls": 0.26771, "d2.loss_bbox": 0.69364, "d3.loss_cls": 0.27067, "d3.loss_bbox": 0.68416, "d4.loss_cls": 0.27109, "d4.loss_bbox": 0.69672, "loss": 5.94567, "grad_norm": 14.75844, "time": 0.78315}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 0.0001, "memory": 4350, "data_time": 0.02314, "loss_cls": 0.27889, "loss_bbox": 0.65896, "d0.loss_cls": 0.31041, "d0.loss_bbox": 0.74076, "d1.loss_cls": 0.26726, "d1.loss_bbox": 0.71122, "d2.loss_cls": 0.26929, "d2.loss_bbox": 0.66927, "d3.loss_cls": 0.26971, "d3.loss_bbox": 0.66179, "d4.loss_cls": 0.27086, "d4.loss_bbox": 0.66572, "loss": 5.77416, "grad_norm": 13.81214, "time": 0.78315}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 0.0001, "memory": 4350, "data_time": 0.02235, "loss_cls": 0.27062, "loss_bbox": 0.61981, "d0.loss_cls": 0.30034, "d0.loss_bbox": 0.72031, "d1.loss_cls": 0.25801, "d1.loss_bbox": 0.67956, "d2.loss_cls": 0.25915, "d2.loss_bbox": 0.63954, "d3.loss_cls": 0.26591, "d3.loss_bbox": 0.61922, "d4.loss_cls": 0.26647, "d4.loss_bbox": 0.62568, "loss": 5.52462, "grad_norm": 14.91443, "time": 0.78416}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 0.0001, "memory": 4350, "data_time": 0.02314, "loss_cls": 0.26063, "loss_bbox": 0.64174, "d0.loss_cls": 0.28901, "d0.loss_bbox": 0.72888, "d1.loss_cls": 0.24478, "d1.loss_bbox": 0.69772, "d2.loss_cls": 0.24459, "d2.loss_bbox": 0.65156, "d3.loss_cls": 0.24702, "d3.loss_bbox": 0.64008, "d4.loss_cls": 0.25168, "d4.loss_bbox": 0.65031, "loss": 5.54798, "grad_norm": 17.87845, "time": 0.78225}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 0.0001, "memory": 4350, "data_time": 0.02304, "loss_cls": 0.26732, "loss_bbox": 0.63968, "d0.loss_cls": 0.30118, "d0.loss_bbox": 0.74417, "d1.loss_cls": 0.25627, "d1.loss_bbox": 0.70357, "d2.loss_cls": 0.25829, "d2.loss_bbox": 0.65936, "d3.loss_cls": 0.26077, "d3.loss_bbox": 0.64231, "d4.loss_cls": 0.26353, "d4.loss_bbox": 0.64699, "loss": 5.64342, "grad_norm": 19.28415, "time": 0.7829}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 0.0001, "memory": 4350, "data_time": 0.02019, "loss_cls": 0.26482, "loss_bbox": 0.59529, "d0.loss_cls": 0.29493, "d0.loss_bbox": 0.68525, "d1.loss_cls": 0.25126, "d1.loss_bbox": 0.65805, "d2.loss_cls": 0.2524, "d2.loss_bbox": 0.60654, "d3.loss_cls": 0.25447, "d3.loss_bbox": 0.59195, "d4.loss_cls": 0.26025, "d4.loss_bbox": 0.59614, "loss": 5.31136, "grad_norm": 18.24929, "time": 0.78182}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 0.0001, "memory": 4350, "data_time": 0.0209, "loss_cls": 0.25766, "loss_bbox": 0.55288, "d0.loss_cls": 0.29605, "d0.loss_bbox": 0.65033, "d1.loss_cls": 0.24565, "d1.loss_bbox": 0.60935, "d2.loss_cls": 0.25021, "d2.loss_bbox": 0.56347, "d3.loss_cls": 0.25329, "d3.loss_bbox": 0.54916, "d4.loss_cls": 0.25681, "d4.loss_bbox": 0.55298, "loss": 5.03784, "grad_norm": 16.59356, "time": 0.78391}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 0.0001, "memory": 4350, "data_time": 0.02139, "loss_cls": 0.25153, "loss_bbox": 0.55731, "d0.loss_cls": 0.29028, "d0.loss_bbox": 0.65674, "d1.loss_cls": 0.24476, "d1.loss_bbox": 0.61693, "d2.loss_cls": 0.24216, "d2.loss_bbox": 0.56999, "d3.loss_cls": 0.24554, "d3.loss_bbox": 0.55327, "d4.loss_cls": 0.2465, "d4.loss_bbox": 0.55906, "loss": 5.03408, "grad_norm": 13.82927, "time": 0.78396}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 0.0001, "memory": 4350, "data_time": 0.01993, "loss_cls": 0.24869, "loss_bbox": 0.53492, "d0.loss_cls": 0.29362, "d0.loss_bbox": 0.62915, "d1.loss_cls": 0.24032, "d1.loss_bbox": 0.59492, "d2.loss_cls": 0.2405, "d2.loss_bbox": 0.55353, "d3.loss_cls": 0.24543, "d3.loss_bbox": 0.5357, "d4.loss_cls": 0.24588, "d4.loss_bbox": 0.53844, "loss": 4.90111, "grad_norm": 13.79851, "time": 0.78066}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 0.0001, "memory": 4350, "data_time": 0.01967, "loss_cls": 0.23365, "loss_bbox": 0.51784, "d0.loss_cls": 0.27217, "d0.loss_bbox": 0.59472, "d1.loss_cls": 0.23059, "d1.loss_bbox": 0.56442, "d2.loss_cls": 0.23003, "d2.loss_bbox": 0.52333, "d3.loss_cls": 0.2336, "d3.loss_bbox": 0.50728, "d4.loss_cls": 0.2326, "d4.loss_bbox": 0.51328, "loss": 4.65352, "grad_norm": 14.30768, "time": 0.78008}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 0.0001, "memory": 4350, "data_time": 0.01982, "loss_cls": 0.22869, "loss_bbox": 0.49939, "d0.loss_cls": 0.26842, "d0.loss_bbox": 0.57399, "d1.loss_cls": 0.22621, "d1.loss_bbox": 0.53816, "d2.loss_cls": 0.22277, "d2.loss_bbox": 0.50653, "d3.loss_cls": 0.22976, "d3.loss_bbox": 0.49423, "d4.loss_cls": 0.22597, "d4.loss_bbox": 0.5001, "loss": 4.51422, "grad_norm": 13.99995, "time": 0.77853}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 0.0001, "memory": 4350, "data_time": 0.02138, "loss_cls": 0.22489, "loss_bbox": 0.49765, "d0.loss_cls": 0.27878, "d0.loss_bbox": 0.5545, "d1.loss_cls": 0.2272, "d1.loss_bbox": 0.52536, "d2.loss_cls": 0.22198, "d2.loss_bbox": 0.50672, "d3.loss_cls": 0.22411, "d3.loss_bbox": 0.48894, "d4.loss_cls": 0.22312, "d4.loss_bbox": 0.49451, "loss": 4.46775, "grad_norm": 16.25484, "time": 0.78216}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 0.0001, "memory": 4350, "data_time": 0.02155, "loss_cls": 0.22143, "loss_bbox": 0.49007, "d0.loss_cls": 0.27283, "d0.loss_bbox": 0.55673, "d1.loss_cls": 0.22673, "d1.loss_bbox": 0.5297, "d2.loss_cls": 0.2211, "d2.loss_bbox": 0.49843, "d3.loss_cls": 0.22139, "d3.loss_bbox": 0.48694, "d4.loss_cls": 0.22127, "d4.loss_bbox": 0.49031, "loss": 4.43693, "grad_norm": 13.91971, "time": 0.78516}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 0.0001, "memory": 4350, "data_time": 0.02172, "loss_cls": 0.2235, "loss_bbox": 0.49143, "d0.loss_cls": 0.2724, "d0.loss_bbox": 0.56076, "d1.loss_cls": 0.2303, "d1.loss_bbox": 0.5228, "d2.loss_cls": 0.2229, "d2.loss_bbox": 0.49936, "d3.loss_cls": 0.22315, "d3.loss_bbox": 0.48643, "d4.loss_cls": 0.22278, "d4.loss_bbox": 0.48921, "loss": 4.44501, "grad_norm": 14.00351, "time": 0.77845}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 0.0001, "memory": 4350, "data_time": 0.02166, "loss_cls": 0.22597, "loss_bbox": 0.48076, "d0.loss_cls": 0.28003, "d0.loss_bbox": 0.54488, "d1.loss_cls": 0.22754, "d1.loss_bbox": 0.50909, "d2.loss_cls": 0.22272, "d2.loss_bbox": 0.48713, "d3.loss_cls": 0.22254, "d3.loss_bbox": 0.4765, "d4.loss_cls": 0.22075, "d4.loss_bbox": 0.47781, "loss": 4.37573, "grad_norm": 15.56779, "time": 0.78556}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 0.0001, "memory": 4350, "data_time": 0.02002, "loss_cls": 0.22552, "loss_bbox": 0.48295, "d0.loss_cls": 0.26938, "d0.loss_bbox": 0.54375, "d1.loss_cls": 0.22629, "d1.loss_bbox": 0.50232, "d2.loss_cls": 0.2248, "d2.loss_bbox": 0.49283, "d3.loss_cls": 0.22333, "d3.loss_bbox": 0.47938, "d4.loss_cls": 0.22315, "d4.loss_bbox": 0.48323, "loss": 4.37694, "grad_norm": 14.85062, "time": 0.78369}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 0.0001, "memory": 4350, "data_time": 0.01992, "loss_cls": 0.21077, "loss_bbox": 0.47388, "d0.loss_cls": 0.25081, "d0.loss_bbox": 0.53407, "d1.loss_cls": 0.20975, "d1.loss_bbox": 0.48967, "d2.loss_cls": 0.20634, "d2.loss_bbox": 0.47773, "d3.loss_cls": 0.20719, "d3.loss_bbox": 0.46862, "d4.loss_cls": 0.21002, "d4.loss_bbox": 0.46844, "loss": 4.20729, "grad_norm": 16.14739, "time": 0.78054}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 0.0001, "memory": 4350, "data_time": 0.02004, "loss_cls": 0.21564, "loss_bbox": 0.49192, "d0.loss_cls": 0.27372, "d0.loss_bbox": 0.54913, "d1.loss_cls": 0.22123, "d1.loss_bbox": 0.50469, "d2.loss_cls": 0.21475, "d2.loss_bbox": 0.49518, "d3.loss_cls": 0.21515, "d3.loss_bbox": 0.48777, "d4.loss_cls": 0.21474, "d4.loss_bbox": 0.49272, "loss": 4.37664, "grad_norm": 15.6108, "time": 0.77746}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 0.0001, "memory": 4350, "data_time": 0.02147, "loss_cls": 0.2103, "loss_bbox": 0.47138, "d0.loss_cls": 0.27569, "d0.loss_bbox": 0.52701, "d1.loss_cls": 0.22187, "d1.loss_bbox": 0.4823, "d2.loss_cls": 0.21153, "d2.loss_bbox": 0.47047, "d3.loss_cls": 0.21346, "d3.loss_bbox": 0.46466, "d4.loss_cls": 0.20825, "d4.loss_bbox": 0.47021, "loss": 4.22713, "grad_norm": 17.74571, "time": 0.78579}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 0.0001, "memory": 4350, "data_time": 0.01945, "loss_cls": 0.20864, "loss_bbox": 0.47201, "d0.loss_cls": 0.26716, "d0.loss_bbox": 0.53261, "d1.loss_cls": 0.2135, "d1.loss_bbox": 0.48525, "d2.loss_cls": 0.20835, "d2.loss_bbox": 0.47241, "d3.loss_cls": 0.20604, "d3.loss_bbox": 0.46921, "d4.loss_cls": 0.20674, "d4.loss_bbox": 0.46901, "loss": 4.21094, "grad_norm": 17.6801, "time": 0.78044}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 0.0001, "memory": 4350, "data_time": 0.01974, "loss_cls": 0.20584, "loss_bbox": 0.44972, "d0.loss_cls": 0.26701, "d0.loss_bbox": 0.51049, "d1.loss_cls": 0.21295, "d1.loss_bbox": 0.45398, "d2.loss_cls": 0.20547, "d2.loss_bbox": 0.44696, "d3.loss_cls": 0.20592, "d3.loss_bbox": 0.44262, "d4.loss_cls": 0.20526, "d4.loss_bbox": 0.44413, "loss": 4.05033, "grad_norm": 18.63813, "time": 0.78135}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 0.0001, "memory": 4350, "data_time": 0.02032, "loss_cls": 0.20807, "loss_bbox": 0.44965, "d0.loss_cls": 0.27102, "d0.loss_bbox": 0.50052, "d1.loss_cls": 0.21646, "d1.loss_bbox": 0.45379, "d2.loss_cls": 0.21043, "d2.loss_bbox": 0.44557, "d3.loss_cls": 0.20788, "d3.loss_bbox": 0.44471, "d4.loss_cls": 0.20751, "d4.loss_bbox": 0.44702, "loss": 4.06265, "grad_norm": 16.46429, "time": 0.78219}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 0.0001, "memory": 4350, "data_time": 0.0204, "loss_cls": 0.20041, "loss_bbox": 0.46648, "d0.loss_cls": 0.26645, "d0.loss_bbox": 0.51997, "d1.loss_cls": 0.21191, "d1.loss_bbox": 0.47271, "d2.loss_cls": 0.20349, "d2.loss_bbox": 0.46037, "d3.loss_cls": 0.20168, "d3.loss_bbox": 0.45742, "d4.loss_cls": 0.20035, "d4.loss_bbox": 0.46331, "loss": 4.12454, "grad_norm": 16.29959, "time": 0.78434}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 0.0001, "memory": 4350, "data_time": 0.02097, "loss_cls": 0.21544, "loss_bbox": 0.47421, "d0.loss_cls": 0.28459, "d0.loss_bbox": 0.53478, "d1.loss_cls": 0.22528, "d1.loss_bbox": 0.48509, "d2.loss_cls": 0.21433, "d2.loss_bbox": 0.4722, "d3.loss_cls": 0.21437, "d3.loss_bbox": 0.46981, "d4.loss_cls": 0.2146, "d4.loss_bbox": 0.47072, "loss": 4.27543, "grad_norm": 16.55759, "time": 0.78035}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 0.0001, "memory": 4350, "data_time": 0.02124, "loss_cls": 0.19506, "loss_bbox": 0.44616, "d0.loss_cls": 0.25658, "d0.loss_bbox": 0.49526, "d1.loss_cls": 0.20676, "d1.loss_bbox": 0.44416, "d2.loss_cls": 0.19603, "d2.loss_bbox": 0.43828, "d3.loss_cls": 0.19655, "d3.loss_bbox": 0.43866, "d4.loss_cls": 0.19368, "d4.loss_bbox": 0.4444, "loss": 3.95157, "grad_norm": 17.22714, "time": 0.7867}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 0.0001, "memory": 4350, "data_time": 0.02116, "loss_cls": 0.1992, "loss_bbox": 0.44996, "d0.loss_cls": 0.26403, "d0.loss_bbox": 0.51297, "d1.loss_cls": 0.21303, "d1.loss_bbox": 0.45517, "d2.loss_cls": 0.20455, "d2.loss_bbox": 0.44284, "d3.loss_cls": 0.20059, "d3.loss_bbox": 0.44018, "d4.loss_cls": 0.19833, "d4.loss_bbox": 0.44596, "loss": 4.0268, "grad_norm": 18.45834, "time": 0.78706}
{"mode": "train", "epoch": 1, "iter": 2150, "lr": 0.0001, "memory": 4350, "data_time": 0.0207, "loss_cls": 0.19947, "loss_bbox": 0.45978, "d0.loss_cls": 0.27026, "d0.loss_bbox": 0.51195, "d1.loss_cls": 0.21145, "d1.loss_bbox": 0.45969, "d2.loss_cls": 0.20066, "d2.loss_bbox": 0.44991, "d3.loss_cls": 0.2009, "d3.loss_bbox": 0.44653, "d4.loss_cls": 0.19892, "d4.loss_bbox": 0.45134, "loss": 4.06084, "grad_norm": 18.46906, "time": 0.78321}
{"mode": "train", "epoch": 1, "iter": 2200, "lr": 0.0001, "memory": 4350, "data_time": 0.02021, "loss_cls": 0.18893, "loss_bbox": 0.44384, "d0.loss_cls": 0.25547, "d0.loss_bbox": 0.49887, "d1.loss_cls": 0.20248, "d1.loss_bbox": 0.44472, "d2.loss_cls": 0.19113, "d2.loss_bbox": 0.43382, "d3.loss_cls": 0.19129, "d3.loss_bbox": 0.43392, "d4.loss_cls": 0.19026, "d4.loss_bbox": 0.43815, "loss": 3.91287, "grad_norm": 16.46366, "time": 0.78396}
{"mode": "train", "epoch": 1, "iter": 2250, "lr": 0.0001, "memory": 4350, "data_time": 0.02063, "loss_cls": 0.19419, "loss_bbox": 0.43703, "d0.loss_cls": 0.26183, "d0.loss_bbox": 0.49829, "d1.loss_cls": 0.20789, "d1.loss_bbox": 0.43873, "d2.loss_cls": 0.19874, "d2.loss_bbox": 0.42978, "d3.loss_cls": 0.19509, "d3.loss_bbox": 0.42904, "d4.loss_cls": 0.19406, "d4.loss_bbox": 0.43393, "loss": 3.91861, "grad_norm": 16.75681, "time": 0.7826}
{"mode": "train", "epoch": 1, "iter": 2300, "lr": 0.0001, "memory": 4350, "data_time": 0.02098, "loss_cls": 0.19191, "loss_bbox": 0.43344, "d0.loss_cls": 0.26452, "d0.loss_bbox": 0.48767, "d1.loss_cls": 0.21145, "d1.loss_bbox": 0.43061, "d2.loss_cls": 0.19671, "d2.loss_bbox": 0.42281, "d3.loss_cls": 0.19204, "d3.loss_bbox": 0.42612, "d4.loss_cls": 0.1921, "d4.loss_bbox": 0.42814, "loss": 3.87752, "grad_norm": 15.49844, "time": 0.78371}
{"mode": "train", "epoch": 1, "iter": 2350, "lr": 0.0001, "memory": 4350, "data_time": 0.02093, "loss_cls": 0.19049, "loss_bbox": 0.44474, "d0.loss_cls": 0.26559, "d0.loss_bbox": 0.5045, "d1.loss_cls": 0.20707, "d1.loss_bbox": 0.4464, "d2.loss_cls": 0.19203, "d2.loss_bbox": 0.44032, "d3.loss_cls": 0.19099, "d3.loss_bbox": 0.43983, "d4.loss_cls": 0.18811, "d4.loss_bbox": 0.44407, "loss": 3.95415, "grad_norm": 16.17642, "time": 0.7834}
{"mode": "train", "epoch": 1, "iter": 2400, "lr": 0.0001, "memory": 4350, "data_time": 0.02031, "loss_cls": 0.18464, "loss_bbox": 0.4332, "d0.loss_cls": 0.25515, "d0.loss_bbox": 0.49031, "d1.loss_cls": 0.20027, "d1.loss_bbox": 0.43386, "d2.loss_cls": 0.18878, "d2.loss_bbox": 0.42111, "d3.loss_cls": 0.18762, "d3.loss_bbox": 0.4216, "d4.loss_cls": 0.18764, "d4.loss_bbox": 0.42517, "loss": 3.82937, "grad_norm": 23.15832, "time": 0.78402}
{"mode": "train", "epoch": 1, "iter": 2450, "lr": 0.0001, "memory": 4350, "data_time": 0.02135, "loss_cls": 0.18371, "loss_bbox": 0.43376, "d0.loss_cls": 0.26165, "d0.loss_bbox": 0.49264, "d1.loss_cls": 0.20289, "d1.loss_bbox": 0.43317, "d2.loss_cls": 0.19045, "d2.loss_bbox": 0.42486, "d3.loss_cls": 0.1871, "d3.loss_bbox": 0.42319, "d4.loss_cls": 0.18427, "d4.loss_bbox": 0.42757, "loss": 3.84527, "grad_norm": 17.72795, "time": 0.97341}
{"mode": "train", "epoch": 1, "iter": 2500, "lr": 0.0001, "memory": 4350, "data_time": 0.02248, "loss_cls": 0.18288, "loss_bbox": 0.43001, "d0.loss_cls": 0.25324, "d0.loss_bbox": 0.49556, "d1.loss_cls": 0.19873, "d1.loss_bbox": 0.42901, "d2.loss_cls": 0.18804, "d2.loss_bbox": 0.42174, "d3.loss_cls": 0.18379, "d3.loss_bbox": 0.42179, "d4.loss_cls": 0.181, "d4.loss_bbox": 0.42584, "loss": 3.81162, "grad_norm": 17.18866, "time": 1.03459}
{"mode": "train", "epoch": 1, "iter": 2550, "lr": 0.0001, "memory": 4350, "data_time": 0.02162, "loss_cls": 0.17927, "loss_bbox": 0.42351, "d0.loss_cls": 0.25209, "d0.loss_bbox": 0.47985, "d1.loss_cls": 0.19143, "d1.loss_bbox": 0.42297, "d2.loss_cls": 0.18319, "d2.loss_bbox": 0.41116, "d3.loss_cls": 0.18177, "d3.loss_bbox": 0.41292, "d4.loss_cls": 0.17971, "d4.loss_bbox": 0.41619, "loss": 3.73405, "grad_norm": 18.95109, "time": 0.99942}
{"mode": "train", "epoch": 1, "iter": 2600, "lr": 0.0001, "memory": 4350, "data_time": 0.02261, "loss_cls": 0.18318, "loss_bbox": 0.41895, "d0.loss_cls": 0.25593, "d0.loss_bbox": 0.48755, "d1.loss_cls": 0.20392, "d1.loss_bbox": 0.42462, "d2.loss_cls": 0.19068, "d2.loss_bbox": 0.4156, "d3.loss_cls": 0.18491, "d3.loss_bbox": 0.41574, "d4.loss_cls": 0.18214, "d4.loss_bbox": 0.41755, "loss": 3.78077, "grad_norm": 24.98259, "time": 1.02198}
{"mode": "train", "epoch": 1, "iter": 2650, "lr": 0.0001, "memory": 4350, "data_time": 0.02137, "loss_cls": 0.18622, "loss_bbox": 0.42771, "d0.loss_cls": 0.25781, "d0.loss_bbox": 0.48821, "d1.loss_cls": 0.20425, "d1.loss_bbox": 0.42903, "d2.loss_cls": 0.19208, "d2.loss_bbox": 0.41652, "d3.loss_cls": 0.18702, "d3.loss_bbox": 0.42085, "d4.loss_cls": 0.18468, "d4.loss_bbox": 0.42424, "loss": 3.81862, "grad_norm": 21.64948, "time": 0.99978}
{"mode": "train", "epoch": 1, "iter": 2700, "lr": 0.0001, "memory": 4350, "data_time": 0.02167, "loss_cls": 0.18873, "loss_bbox": 0.40807, "d0.loss_cls": 0.26386, "d0.loss_bbox": 0.47188, "d1.loss_cls": 0.20794, "d1.loss_bbox": 0.40696, "d2.loss_cls": 0.19769, "d2.loss_bbox": 0.39508, "d3.loss_cls": 0.19117, "d3.loss_bbox": 0.39581, "d4.loss_cls": 0.18918, "d4.loss_bbox": 0.40184, "loss": 3.71821, "grad_norm": 20.12736, "time": 0.99414}
{"mode": "train", "epoch": 1, "iter": 2750, "lr": 0.0001, "memory": 4350, "data_time": 0.02177, "loss_cls": 0.18739, "loss_bbox": 0.42617, "d0.loss_cls": 0.26863, "d0.loss_bbox": 0.4863, "d1.loss_cls": 0.20659, "d1.loss_bbox": 0.42511, "d2.loss_cls": 0.19399, "d2.loss_bbox": 0.4117, "d3.loss_cls": 0.18994, "d3.loss_bbox": 0.41218, "d4.loss_cls": 0.18618, "d4.loss_bbox": 0.41925, "loss": 3.81343, "grad_norm": 19.77335, "time": 1.01009}
{"mode": "train", "epoch": 1, "iter": 2800, "lr": 0.0001, "memory": 4350, "data_time": 0.02206, "loss_cls": 0.17841, "loss_bbox": 0.41027, "d0.loss_cls": 0.25725, "d0.loss_bbox": 0.47363, "d1.loss_cls": 0.19853, "d1.loss_bbox": 0.40958, "d2.loss_cls": 0.18445, "d2.loss_bbox": 0.39726, "d3.loss_cls": 0.1795, "d3.loss_bbox": 0.39809, "d4.loss_cls": 0.17847, "d4.loss_bbox": 0.40366, "loss": 3.66911, "grad_norm": 18.42359, "time": 0.99702}
{"mode": "train", "epoch": 1, "iter": 2850, "lr": 0.0001, "memory": 4350, "data_time": 0.02224, "loss_cls": 0.17985, "loss_bbox": 0.40302, "d0.loss_cls": 0.25322, "d0.loss_bbox": 0.46731, "d1.loss_cls": 0.19411, "d1.loss_bbox": 0.40097, "d2.loss_cls": 0.18392, "d2.loss_bbox": 0.3911, "d3.loss_cls": 0.17887, "d3.loss_bbox": 0.39419, "d4.loss_cls": 0.17921, "d4.loss_bbox": 0.39647, "loss": 3.62225, "grad_norm": 22.87254, "time": 0.98773}
{"mode": "train", "epoch": 1, "iter": 2900, "lr": 0.0001, "memory": 4350, "data_time": 0.02154, "loss_cls": 0.17323, "loss_bbox": 0.38745, "d0.loss_cls": 0.25346, "d0.loss_bbox": 0.45387, "d1.loss_cls": 0.19105, "d1.loss_bbox": 0.3881, "d2.loss_cls": 0.17893, "d2.loss_bbox": 0.37793, "d3.loss_cls": 0.17724, "d3.loss_bbox": 0.37799, "d4.loss_cls": 0.17573, "d4.loss_bbox": 0.38103, "loss": 3.51602, "grad_norm": 20.56342, "time": 1.00549}
{"mode": "train", "epoch": 1, "iter": 2950, "lr": 0.0001, "memory": 4350, "data_time": 0.02199, "loss_cls": 0.17815, "loss_bbox": 0.40763, "d0.loss_cls": 0.25857, "d0.loss_bbox": 0.47485, "d1.loss_cls": 0.20127, "d1.loss_bbox": 0.40854, "d2.loss_cls": 0.18673, "d2.loss_bbox": 0.39626, "d3.loss_cls": 0.18055, "d3.loss_bbox": 0.3994, "d4.loss_cls": 0.17812, "d4.loss_bbox": 0.40298, "loss": 3.67305, "grad_norm": 18.85888, "time": 1.00637}
{"mode": "train", "epoch": 1, "iter": 3000, "lr": 0.0001, "memory": 4350, "data_time": 0.02159, "loss_cls": 0.17361, "loss_bbox": 0.41446, "d0.loss_cls": 0.25828, "d0.loss_bbox": 0.48321, "d1.loss_cls": 0.20004, "d1.loss_bbox": 0.41055, "d2.loss_cls": 0.18396, "d2.loss_bbox": 0.39724, "d3.loss_cls": 0.17701, "d3.loss_bbox": 0.40236, "d4.loss_cls": 0.17554, "d4.loss_bbox": 0.40671, "loss": 3.68297, "grad_norm": 18.67179, "time": 1.02862}
{"mode": "train", "epoch": 1, "iter": 3050, "lr": 0.0001, "memory": 4350, "data_time": 0.0235, "loss_cls": 0.17814, "loss_bbox": 0.39365, "d0.loss_cls": 0.25753, "d0.loss_bbox": 0.47406, "d1.loss_cls": 0.19787, "d1.loss_bbox": 0.40202, "d2.loss_cls": 0.18358, "d2.loss_bbox": 0.38731, "d3.loss_cls": 0.18083, "d3.loss_bbox": 0.38545, "d4.loss_cls": 0.17784, "d4.loss_bbox": 0.38995, "loss": 3.60823, "grad_norm": 20.98945, "time": 1.00507}
{"mode": "train", "epoch": 1, "iter": 3100, "lr": 0.0001, "memory": 4350, "data_time": 0.02186, "loss_cls": 0.17354, "loss_bbox": 0.39185, "d0.loss_cls": 0.25183, "d0.loss_bbox": 0.47571, "d1.loss_cls": 0.19688, "d1.loss_bbox": 0.40435, "d2.loss_cls": 0.18218, "d2.loss_bbox": 0.39002, "d3.loss_cls": 0.17532, "d3.loss_bbox": 0.3864, "d4.loss_cls": 0.17378, "d4.loss_bbox": 0.38791, "loss": 3.58978, "grad_norm": 23.43472, "time": 0.96968}
{"mode": "train", "epoch": 1, "iter": 3150, "lr": 0.0001, "memory": 4350, "data_time": 0.02231, "loss_cls": 0.18761, "loss_bbox": 0.42596, "d0.loss_cls": 0.26421, "d0.loss_bbox": 0.50041, "d1.loss_cls": 0.2117, "d1.loss_bbox": 0.42113, "d2.loss_cls": 0.19377, "d2.loss_bbox": 0.41283, "d3.loss_cls": 0.19377, "d3.loss_bbox": 0.41175, "d4.loss_cls": 0.18938, "d4.loss_bbox": 0.41859, "loss": 3.83109, "grad_norm": 26.12225, "time": 1.03596}
{"mode": "train", "epoch": 1, "iter": 3200, "lr": 0.0001, "memory": 4350, "data_time": 0.0234, "loss_cls": 0.18288, "loss_bbox": 0.4037, "d0.loss_cls": 0.26905, "d0.loss_bbox": 0.48642, "d1.loss_cls": 0.2062, "d1.loss_bbox": 0.40889, "d2.loss_cls": 0.19061, "d2.loss_bbox": 0.39242, "d3.loss_cls": 0.1876, "d3.loss_bbox": 0.39352, "d4.loss_cls": 0.18415, "d4.loss_bbox": 0.39826, "loss": 3.70371, "grad_norm": 21.47983, "time": 1.01004}
{"mode": "train", "epoch": 1, "iter": 3250, "lr": 0.0001, "memory": 4350, "data_time": 0.0231, "loss_cls": 0.1708, "loss_bbox": 0.39137, "d0.loss_cls": 0.2505, "d0.loss_bbox": 0.47418, "d1.loss_cls": 0.1908, "d1.loss_bbox": 0.39034, "d2.loss_cls": 0.1779, "d2.loss_bbox": 0.37758, "d3.loss_cls": 0.17393, "d3.loss_bbox": 0.3778, "d4.loss_cls": 0.17007, "d4.loss_bbox": 0.38595, "loss": 3.53123, "grad_norm": 24.28593, "time": 1.01003}
{"mode": "train", "epoch": 1, "iter": 3300, "lr": 0.0001, "memory": 4350, "data_time": 0.02217, "loss_cls": 0.17052, "loss_bbox": 0.38931, "d0.loss_cls": 0.25141, "d0.loss_bbox": 0.47403, "d1.loss_cls": 0.19147, "d1.loss_bbox": 0.39485, "d2.loss_cls": 0.17249, "d2.loss_bbox": 0.38061, "d3.loss_cls": 0.17394, "d3.loss_bbox": 0.37954, "d4.loss_cls": 0.1714, "d4.loss_bbox": 0.38419, "loss": 3.53375, "grad_norm": 25.62893, "time": 1.01177}
{"mode": "train", "epoch": 1, "iter": 3350, "lr": 0.0001, "memory": 4350, "data_time": 0.02377, "loss_cls": 0.17121, "loss_bbox": 0.40036, "d0.loss_cls": 0.25725, "d0.loss_bbox": 0.4754, "d1.loss_cls": 0.19358, "d1.loss_bbox": 0.39709, "d2.loss_cls": 0.18177, "d2.loss_bbox": 0.38616, "d3.loss_cls": 0.17679, "d3.loss_bbox": 0.38633, "d4.loss_cls": 0.17189, "d4.loss_bbox": 0.39271, "loss": 3.59055, "grad_norm": 27.20558, "time": 0.99689}
{"mode": "train", "epoch": 1, "iter": 3400, "lr": 0.0001, "memory": 4350, "data_time": 0.02309, "loss_cls": 0.17766, "loss_bbox": 0.38616, "d0.loss_cls": 0.26355, "d0.loss_bbox": 0.47431, "d1.loss_cls": 0.20213, "d1.loss_bbox": 0.39313, "d2.loss_cls": 0.18558, "d2.loss_bbox": 0.37977, "d3.loss_cls": 0.17991, "d3.loss_bbox": 0.38006, "d4.loss_cls": 0.17864, "d4.loss_bbox": 0.38111, "loss": 3.58201, "grad_norm": 22.7098, "time": 0.98908}
{"mode": "train", "epoch": 1, "iter": 3450, "lr": 0.0001, "memory": 4350, "data_time": 0.02261, "loss_cls": 0.1702, "loss_bbox": 0.37492, "d0.loss_cls": 0.24208, "d0.loss_bbox": 0.45604, "d1.loss_cls": 0.18546, "d1.loss_bbox": 0.38032, "d2.loss_cls": 0.17379, "d2.loss_bbox": 0.36644, "d3.loss_cls": 0.17254, "d3.loss_bbox": 0.36554, "d4.loss_cls": 0.16876, "d4.loss_bbox": 0.37034, "loss": 3.42645, "grad_norm": 20.83873, "time": 1.016}
{"mode": "train", "epoch": 1, "iter": 3500, "lr": 0.0001, "memory": 4350, "data_time": 0.02205, "loss_cls": 0.17829, "loss_bbox": 0.37022, "d0.loss_cls": 0.26195, "d0.loss_bbox": 0.45568, "d1.loss_cls": 0.19832, "d1.loss_bbox": 0.37728, "d2.loss_cls": 0.1821, "d2.loss_bbox": 0.36351, "d3.loss_cls": 0.17776, "d3.loss_bbox": 0.36181, "d4.loss_cls": 0.17865, "d4.loss_bbox": 0.36491, "loss": 3.47048, "grad_norm": 25.92789, "time": 1.02723}
{"mode": "train", "epoch": 1, "iter": 3550, "lr": 0.0001, "memory": 4350, "data_time": 0.02177, "loss_cls": 0.17203, "loss_bbox": 0.36417, "d0.loss_cls": 0.26626, "d0.loss_bbox": 0.45111, "d1.loss_cls": 0.20017, "d1.loss_bbox": 0.36658, "d2.loss_cls": 0.18197, "d2.loss_bbox": 0.35376, "d3.loss_cls": 0.17579, "d3.loss_bbox": 0.35444, "d4.loss_cls": 0.17167, "d4.loss_bbox": 0.35897, "loss": 3.41691, "grad_norm": 20.655, "time": 0.98247}
{"mode": "train", "epoch": 1, "iter": 3600, "lr": 0.0001, "memory": 4350, "data_time": 0.02284, "loss_cls": 0.16916, "loss_bbox": 0.37147, "d0.loss_cls": 0.24919, "d0.loss_bbox": 0.45431, "d1.loss_cls": 0.18598, "d1.loss_bbox": 0.37851, "d2.loss_cls": 0.17099, "d2.loss_bbox": 0.36869, "d3.loss_cls": 0.16946, "d3.loss_bbox": 0.36521, "d4.loss_cls": 0.16705, "d4.loss_bbox": 0.36849, "loss": 3.4185, "grad_norm": 23.63165, "time": 1.01175}
{"mode": "train", "epoch": 1, "iter": 3650, "lr": 0.0001, "memory": 4350, "data_time": 0.02147, "loss_cls": 0.17018, "loss_bbox": 0.36631, "d0.loss_cls": 0.26188, "d0.loss_bbox": 0.46542, "d1.loss_cls": 0.19848, "d1.loss_bbox": 0.3774, "d2.loss_cls": 0.18036, "d2.loss_bbox": 0.36071, "d3.loss_cls": 0.17559, "d3.loss_bbox": 0.35955, "d4.loss_cls": 0.17095, "d4.loss_bbox": 0.36393, "loss": 3.45077, "grad_norm": 31.54357, "time": 1.0354}
{"mode": "train", "epoch": 1, "iter": 3700, "lr": 0.0001, "memory": 4350, "data_time": 0.02328, "loss_cls": 0.16591, "loss_bbox": 0.37725, "d0.loss_cls": 0.24676, "d0.loss_bbox": 0.46704, "d1.loss_cls": 0.18871, "d1.loss_bbox": 0.38026, "d2.loss_cls": 0.17241, "d2.loss_bbox": 0.36808, "d3.loss_cls": 0.1673, "d3.loss_bbox": 0.36808, "d4.loss_cls": 0.16587, "d4.loss_bbox": 0.37136, "loss": 3.43903, "grad_norm": 22.18018, "time": 1.00629}
{"mode": "train", "epoch": 1, "iter": 3750, "lr": 0.0001, "memory": 4350, "data_time": 0.02232, "loss_cls": 0.17088, "loss_bbox": 0.3651, "d0.loss_cls": 0.25335, "d0.loss_bbox": 0.44803, "d1.loss_cls": 0.19591, "d1.loss_bbox": 0.36892, "d2.loss_cls": 0.17807, "d2.loss_bbox": 0.35492, "d3.loss_cls": 0.17385, "d3.loss_bbox": 0.35506, "d4.loss_cls": 0.17217, "d4.loss_bbox": 0.35656, "loss": 3.39283, "grad_norm": 19.35425, "time": 0.99628}
{"mode": "train", "epoch": 1, "iter": 3800, "lr": 0.0001, "memory": 4350, "data_time": 0.02401, "loss_cls": 0.16864, "loss_bbox": 0.36245, "d0.loss_cls": 0.25416, "d0.loss_bbox": 0.44549, "d1.loss_cls": 0.19281, "d1.loss_bbox": 0.36313, "d2.loss_cls": 0.17492, "d2.loss_bbox": 0.35119, "d3.loss_cls": 0.17137, "d3.loss_bbox": 0.35249, "d4.loss_cls": 0.16851, "d4.loss_bbox": 0.35638, "loss": 3.36154, "grad_norm": 22.09058, "time": 1.00911}
{"mode": "train", "epoch": 1, "iter": 3850, "lr": 0.0001, "memory": 4350, "data_time": 0.03349, "loss_cls": 0.15972, "loss_bbox": 0.36588, "d0.loss_cls": 0.24191, "d0.loss_bbox": 0.45268, "d1.loss_cls": 0.18307, "d1.loss_bbox": 0.37515, "d2.loss_cls": 0.16807, "d2.loss_bbox": 0.36364, "d3.loss_cls": 0.1621, "d3.loss_bbox": 0.36154, "d4.loss_cls": 0.15972, "d4.loss_bbox": 0.36173, "loss": 3.35521, "grad_norm": 32.37606, "time": 1.01996}
{"mode": "train", "epoch": 1, "iter": 3900, "lr": 0.0001, "memory": 4350, "data_time": 0.02356, "loss_cls": 0.16709, "loss_bbox": 0.36155, "d0.loss_cls": 0.25349, "d0.loss_bbox": 0.44974, "d1.loss_cls": 0.18903, "d1.loss_bbox": 0.37147, "d2.loss_cls": 0.17399, "d2.loss_bbox": 0.35392, "d3.loss_cls": 0.16843, "d3.loss_bbox": 0.3545, "d4.loss_cls": 0.16924, "d4.loss_bbox": 0.35594, "loss": 3.3684, "grad_norm": 24.63207, "time": 1.01694}
{"mode": "train", "epoch": 1, "iter": 3950, "lr": 0.0001, "memory": 4350, "data_time": 0.02324, "loss_cls": 0.16169, "loss_bbox": 0.37387, "d0.loss_cls": 0.25383, "d0.loss_bbox": 0.46331, "d1.loss_cls": 0.18318, "d1.loss_bbox": 0.38415, "d2.loss_cls": 0.16942, "d2.loss_bbox": 0.36814, "d3.loss_cls": 0.16398, "d3.loss_bbox": 0.36548, "d4.loss_cls": 0.16114, "d4.loss_bbox": 0.36904, "loss": 3.41723, "grad_norm": 25.62931, "time": 0.98667}
{"mode": "train", "epoch": 1, "iter": 4000, "lr": 0.0001, "memory": 4350, "data_time": 0.02471, "loss_cls": 0.16521, "loss_bbox": 0.35121, "d0.loss_cls": 0.25127, "d0.loss_bbox": 0.44723, "d1.loss_cls": 0.19036, "d1.loss_bbox": 0.36118, "d2.loss_cls": 0.17077, "d2.loss_bbox": 0.34602, "d3.loss_cls": 0.16729, "d3.loss_bbox": 0.3449, "d4.loss_cls": 0.16483, "d4.loss_bbox": 0.34713, "loss": 3.3074, "grad_norm": 19.82712, "time": 0.78722}
{"mode": "train", "epoch": 1, "iter": 4050, "lr": 0.0001, "memory": 4350, "data_time": 0.02463, "loss_cls": 0.17405, "loss_bbox": 0.35591, "d0.loss_cls": 0.25136, "d0.loss_bbox": 0.45252, "d1.loss_cls": 0.19885, "d1.loss_bbox": 0.36543, "d2.loss_cls": 0.18199, "d2.loss_bbox": 0.34901, "d3.loss_cls": 0.17783, "d3.loss_bbox": 0.34624, "d4.loss_cls": 0.17458, "d4.loss_bbox": 0.3505, "loss": 3.37828, "grad_norm": 22.06781, "time": 0.78245}
{"mode": "train", "epoch": 1, "iter": 4100, "lr": 0.0001, "memory": 4350, "data_time": 0.02, "loss_cls": 0.16822, "loss_bbox": 0.37094, "d0.loss_cls": 0.25321, "d0.loss_bbox": 0.46382, "d1.loss_cls": 0.19, "d1.loss_bbox": 0.38396, "d2.loss_cls": 0.17557, "d2.loss_bbox": 0.36298, "d3.loss_cls": 0.17242, "d3.loss_bbox": 0.36281, "d4.loss_cls": 0.16914, "d4.loss_bbox": 0.36674, "loss": 3.43982, "grad_norm": 23.2262, "time": 0.78246}
{"mode": "train", "epoch": 1, "iter": 4150, "lr": 0.0001, "memory": 4350, "data_time": 0.01864, "loss_cls": 0.16147, "loss_bbox": 0.354, "d0.loss_cls": 0.24555, "d0.loss_bbox": 0.4379, "d1.loss_cls": 0.18703, "d1.loss_bbox": 0.36191, "d2.loss_cls": 0.17039, "d2.loss_bbox": 0.34633, "d3.loss_cls": 0.16464, "d3.loss_bbox": 0.34644, "d4.loss_cls": 0.16113, "d4.loss_bbox": 0.3497, "loss": 3.2865, "grad_norm": 20.23811, "time": 0.78231}
{"mode": "train", "epoch": 1, "iter": 4200, "lr": 0.0001, "memory": 4350, "data_time": 0.02041, "loss_cls": 0.1617, "loss_bbox": 0.36796, "d0.loss_cls": 0.2529, "d0.loss_bbox": 0.44893, "d1.loss_cls": 0.18842, "d1.loss_bbox": 0.36745, "d2.loss_cls": 0.16984, "d2.loss_bbox": 0.35544, "d3.loss_cls": 0.16456, "d3.loss_bbox": 0.35565, "d4.loss_cls": 0.16264, "d4.loss_bbox": 0.36058, "loss": 3.35607, "grad_norm": 19.69987, "time": 0.77875}
{"mode": "train", "epoch": 1, "iter": 4250, "lr": 0.0001, "memory": 4350, "data_time": 0.02076, "loss_cls": 0.15776, "loss_bbox": 0.34837, "d0.loss_cls": 0.24057, "d0.loss_bbox": 0.44055, "d1.loss_cls": 0.18596, "d1.loss_bbox": 0.35395, "d2.loss_cls": 0.16497, "d2.loss_bbox": 0.33914, "d3.loss_cls": 0.16152, "d3.loss_bbox": 0.33891, "d4.loss_cls": 0.15787, "d4.loss_bbox": 0.34268, "loss": 3.23225, "grad_norm": 33.18976, "time": 0.78179}
{"mode": "train", "epoch": 1, "iter": 4300, "lr": 0.0001, "memory": 4350, "data_time": 0.02333, "loss_cls": 0.15993, "loss_bbox": 0.35926, "d0.loss_cls": 0.25769, "d0.loss_bbox": 0.45268, "d1.loss_cls": 0.19257, "d1.loss_bbox": 0.37086, "d2.loss_cls": 0.17175, "d2.loss_bbox": 0.35266, "d3.loss_cls": 0.16664, "d3.loss_bbox": 0.35126, "d4.loss_cls": 0.16152, "d4.loss_bbox": 0.35554, "loss": 3.35239, "grad_norm": 16.12493, "time": 0.78211}
{"mode": "train", "epoch": 1, "iter": 4350, "lr": 0.0001, "memory": 4350, "data_time": 0.02037, "loss_cls": 0.16305, "loss_bbox": 0.35487, "d0.loss_cls": 0.24706, "d0.loss_bbox": 0.44451, "d1.loss_cls": 0.1887, "d1.loss_bbox": 0.36248, "d2.loss_cls": 0.17043, "d2.loss_bbox": 0.34535, "d3.loss_cls": 0.16384, "d3.loss_bbox": 0.34608, "d4.loss_cls": 0.16221, "d4.loss_bbox": 0.35012, "loss": 3.2987, "grad_norm": 21.12393, "time": 0.78166}
{"mode": "train", "epoch": 1, "iter": 4400, "lr": 0.0001, "memory": 4350, "data_time": 0.0192, "loss_cls": 0.16138, "loss_bbox": 0.35945, "d0.loss_cls": 0.2527, "d0.loss_bbox": 0.45434, "d1.loss_cls": 0.18868, "d1.loss_bbox": 0.36445, "d2.loss_cls": 0.16911, "d2.loss_bbox": 0.34993, "d3.loss_cls": 0.16606, "d3.loss_bbox": 0.34816, "d4.loss_cls": 0.16188, "d4.loss_bbox": 0.35228, "loss": 3.32842, "grad_norm": 21.08382, "time": 0.77802}
{"mode": "train", "epoch": 1, "iter": 4450, "lr": 0.0001, "memory": 4350, "data_time": 0.02043, "loss_cls": 0.16183, "loss_bbox": 0.34913, "d0.loss_cls": 0.24492, "d0.loss_bbox": 0.44467, "d1.loss_cls": 0.19085, "d1.loss_bbox": 0.362, "d2.loss_cls": 0.17226, "d2.loss_bbox": 0.34698, "d3.loss_cls": 0.16526, "d3.loss_bbox": 0.34503, "d4.loss_cls": 0.16254, "d4.loss_bbox": 0.34422, "loss": 3.28969, "grad_norm": 17.01029, "time": 0.81163}
{"mode": "train", "epoch": 1, "iter": 4500, "lr": 0.0001, "memory": 4350, "data_time": 0.02121, "loss_cls": 0.16429, "loss_bbox": 0.34481, "d0.loss_cls": 0.24592, "d0.loss_bbox": 0.44044, "d1.loss_cls": 0.18884, "d1.loss_bbox": 0.35627, "d2.loss_cls": 0.16918, "d2.loss_bbox": 0.33993, "d3.loss_cls": 0.16593, "d3.loss_bbox": 0.33859, "d4.loss_cls": 0.16289, "d4.loss_bbox": 0.34304, "loss": 3.26011, "grad_norm": 24.24087, "time": 0.97414}
{"mode": "train", "epoch": 1, "iter": 4550, "lr": 0.0001, "memory": 4350, "data_time": 0.02142, "loss_cls": 0.16068, "loss_bbox": 0.35198, "d0.loss_cls": 0.25776, "d0.loss_bbox": 0.45518, "d1.loss_cls": 0.19141, "d1.loss_bbox": 0.36754, "d2.loss_cls": 0.17067, "d2.loss_bbox": 0.34893, "d3.loss_cls": 0.16374, "d3.loss_bbox": 0.34769, "d4.loss_cls": 0.16012, "d4.loss_bbox": 0.34724, "loss": 3.32294, "grad_norm": 32.42924, "time": 0.80293}
{"mode": "train", "epoch": 1, "iter": 4600, "lr": 0.0001, "memory": 4350, "data_time": 0.02144, "loss_cls": 0.15993, "loss_bbox": 0.35707, "d0.loss_cls": 0.24294, "d0.loss_bbox": 0.44584, "d1.loss_cls": 0.18467, "d1.loss_bbox": 0.36393, "d2.loss_cls": 0.16829, "d2.loss_bbox": 0.34622, "d3.loss_cls": 0.16173, "d3.loss_bbox": 0.3482, "d4.loss_cls": 0.16084, "d4.loss_bbox": 0.35129, "loss": 3.29094, "grad_norm": 21.07258, "time": 0.87015}
{"mode": "train", "epoch": 1, "iter": 4650, "lr": 0.0001, "memory": 4350, "data_time": 0.02124, "loss_cls": 0.15807, "loss_bbox": 0.34053, "d0.loss_cls": 0.24202, "d0.loss_bbox": 0.43878, "d1.loss_cls": 0.1805, "d1.loss_bbox": 0.34987, "d2.loss_cls": 0.16762, "d2.loss_bbox": 0.33449, "d3.loss_cls": 0.1612, "d3.loss_bbox": 0.33316, "d4.loss_cls": 0.15943, "d4.loss_bbox": 0.33415, "loss": 3.19984, "grad_norm": 23.86819, "time": 1.022}
{"mode": "train", "epoch": 1, "iter": 4700, "lr": 0.0001, "memory": 4350, "data_time": 0.02275, "loss_cls": 0.15913, "loss_bbox": 0.34977, "d0.loss_cls": 0.24615, "d0.loss_bbox": 0.44903, "d1.loss_cls": 0.18497, "d1.loss_bbox": 0.3625, "d2.loss_cls": 0.16886, "d2.loss_bbox": 0.34309, "d3.loss_cls": 0.16319, "d3.loss_bbox": 0.3416, "d4.loss_cls": 0.15903, "d4.loss_bbox": 0.3458, "loss": 3.27312, "grad_norm": 19.38044, "time": 1.01613}
{"mode": "train", "epoch": 1, "iter": 4750, "lr": 0.0001, "memory": 4350, "data_time": 0.022, "loss_cls": 0.14505, "loss_bbox": 0.32837, "d0.loss_cls": 0.22929, "d0.loss_bbox": 0.42438, "d1.loss_cls": 0.17245, "d1.loss_bbox": 0.34071, "d2.loss_cls": 0.1572, "d2.loss_bbox": 0.32222, "d3.loss_cls": 0.15063, "d3.loss_bbox": 0.32175, "d4.loss_cls": 0.14656, "d4.loss_bbox": 0.3249, "loss": 3.06351, "grad_norm": 19.50648, "time": 0.98251}
{"mode": "train", "epoch": 1, "iter": 4800, "lr": 0.0001, "memory": 4350, "data_time": 0.02209, "loss_cls": 0.14986, "loss_bbox": 0.33591, "d0.loss_cls": 0.24761, "d0.loss_bbox": 0.42839, "d1.loss_cls": 0.18058, "d1.loss_bbox": 0.34323, "d2.loss_cls": 0.15944, "d2.loss_bbox": 0.32364, "d3.loss_cls": 0.15457, "d3.loss_bbox": 0.32235, "d4.loss_cls": 0.15093, "d4.loss_bbox": 0.32682, "loss": 3.12334, "grad_norm": 19.10922, "time": 1.01524}
{"mode": "train", "epoch": 1, "iter": 4850, "lr": 0.0001, "memory": 4350, "data_time": 0.0225, "loss_cls": 0.16613, "loss_bbox": 0.34654, "d0.loss_cls": 0.25329, "d0.loss_bbox": 0.4368, "d1.loss_cls": 0.19107, "d1.loss_bbox": 0.3535, "d2.loss_cls": 0.17283, "d2.loss_bbox": 0.33516, "d3.loss_cls": 0.16815, "d3.loss_bbox": 0.33589, "d4.loss_cls": 0.16629, "d4.loss_bbox": 0.34095, "loss": 3.26659, "grad_norm": 21.201, "time": 1.02758}
{"mode": "train", "epoch": 1, "iter": 4900, "lr": 0.0001, "memory": 4350, "data_time": 0.02165, "loss_cls": 0.15966, "loss_bbox": 0.34618, "d0.loss_cls": 0.24055, "d0.loss_bbox": 0.44515, "d1.loss_cls": 0.18221, "d1.loss_bbox": 0.35405, "d2.loss_cls": 0.16475, "d2.loss_bbox": 0.33906, "d3.loss_cls": 0.16108, "d3.loss_bbox": 0.33735, "d4.loss_cls": 0.15884, "d4.loss_bbox": 0.34154, "loss": 3.23041, "grad_norm": 25.28361, "time": 1.03076}
{"mode": "train", "epoch": 1, "iter": 4950, "lr": 0.0001, "memory": 4350, "data_time": 0.02298, "loss_cls": 0.17096, "loss_bbox": 0.35585, "d0.loss_cls": 0.25658, "d0.loss_bbox": 0.46078, "d1.loss_cls": 0.19615, "d1.loss_bbox": 0.36478, "d2.loss_cls": 0.17803, "d2.loss_bbox": 0.34734, "d3.loss_cls": 0.17443, "d3.loss_bbox": 0.34621, "d4.loss_cls": 0.17068, "d4.loss_bbox": 0.34985, "loss": 3.37164, "grad_norm": 25.38419, "time": 1.02496}
{"mode": "train", "epoch": 1, "iter": 5000, "lr": 0.0001, "memory": 4350, "data_time": 0.0221, "loss_cls": 0.14755, "loss_bbox": 0.33295, "d0.loss_cls": 0.23283, "d0.loss_bbox": 0.42803, "d1.loss_cls": 0.17556, "d1.loss_bbox": 0.33634, "d2.loss_cls": 0.15768, "d2.loss_bbox": 0.31897, "d3.loss_cls": 0.15208, "d3.loss_bbox": 0.31791, "d4.loss_cls": 0.14757, "d4.loss_bbox": 0.32625, "loss": 3.07374, "grad_norm": 24.15083, "time": 0.98906}
{"mode": "train", "epoch": 1, "iter": 5050, "lr": 0.0001, "memory": 4350, "data_time": 0.02044, "loss_cls": 0.15999, "loss_bbox": 0.33107, "d0.loss_cls": 0.25363, "d0.loss_bbox": 0.4317, "d1.loss_cls": 0.18885, "d1.loss_bbox": 0.34204, "d2.loss_cls": 0.17225, "d2.loss_bbox": 0.32692, "d3.loss_cls": 0.16602, "d3.loss_bbox": 0.3252, "d4.loss_cls": 0.1614, "d4.loss_bbox": 0.32695, "loss": 3.18602, "grad_norm": 30.13301, "time": 0.99894}
{"mode": "train", "epoch": 1, "iter": 5100, "lr": 0.0001, "memory": 4350, "data_time": 0.02187, "loss_cls": 0.16474, "loss_bbox": 0.34513, "d0.loss_cls": 0.25384, "d0.loss_bbox": 0.45416, "d1.loss_cls": 0.19501, "d1.loss_bbox": 0.35319, "d2.loss_cls": 0.17474, "d2.loss_bbox": 0.33619, "d3.loss_cls": 0.16842, "d3.loss_bbox": 0.33414, "d4.loss_cls": 0.16682, "d4.loss_bbox": 0.34009, "loss": 3.28645, "grad_norm": 23.97874, "time": 1.01883}
{"mode": "train", "epoch": 1, "iter": 5150, "lr": 0.0001, "memory": 4350, "data_time": 0.02335, "loss_cls": 0.16766, "loss_bbox": 0.33545, "d0.loss_cls": 0.25541, "d0.loss_bbox": 0.44792, "d1.loss_cls": 0.19635, "d1.loss_bbox": 0.3499, "d2.loss_cls": 0.17543, "d2.loss_bbox": 0.33286, "d3.loss_cls": 0.17017, "d3.loss_bbox": 0.32935, "d4.loss_cls": 0.16564, "d4.loss_bbox": 0.3329, "loss": 3.25904, "grad_norm": 19.5209, "time": 1.03628}
{"mode": "train", "epoch": 1, "iter": 5200, "lr": 0.0001, "memory": 4350, "data_time": 0.02168, "loss_cls": 0.16606, "loss_bbox": 0.34137, "d0.loss_cls": 0.25026, "d0.loss_bbox": 0.45206, "d1.loss_cls": 0.18874, "d1.loss_bbox": 0.36, "d2.loss_cls": 0.17551, "d2.loss_bbox": 0.33725, "d3.loss_cls": 0.16807, "d3.loss_bbox": 0.3359, "d4.loss_cls": 0.16602, "d4.loss_bbox": 0.33773, "loss": 3.27898, "grad_norm": 17.83023, "time": 1.03801}
{"mode": "train", "epoch": 1, "iter": 5250, "lr": 0.0001, "memory": 4350, "data_time": 0.02255, "loss_cls": 0.15384, "loss_bbox": 0.32933, "d0.loss_cls": 0.2541, "d0.loss_bbox": 0.42748, "d1.loss_cls": 0.18435, "d1.loss_bbox": 0.33644, "d2.loss_cls": 0.16368, "d2.loss_bbox": 0.31882, "d3.loss_cls": 0.15664, "d3.loss_bbox": 0.31882, "d4.loss_cls": 0.15332, "d4.loss_bbox": 0.32355, "loss": 3.12039, "grad_norm": 23.56777, "time": 1.0227}
{"mode": "train", "epoch": 1, "iter": 5300, "lr": 0.0001, "memory": 4350, "data_time": 0.02263, "loss_cls": 0.15333, "loss_bbox": 0.32926, "d0.loss_cls": 0.24822, "d0.loss_bbox": 0.43843, "d1.loss_cls": 0.18002, "d1.loss_bbox": 0.34384, "d2.loss_cls": 0.1614, "d2.loss_bbox": 0.32452, "d3.loss_cls": 0.159, "d3.loss_bbox": 0.32195, "d4.loss_cls": 0.15529, "d4.loss_bbox": 0.32328, "loss": 3.13854, "grad_norm": 25.19174, "time": 1.01422}
{"mode": "train", "epoch": 1, "iter": 5350, "lr": 0.0001, "memory": 4350, "data_time": 0.02301, "loss_cls": 0.16583, "loss_bbox": 0.35318, "d0.loss_cls": 0.25208, "d0.loss_bbox": 0.45856, "d1.loss_cls": 0.18891, "d1.loss_bbox": 0.36926, "d2.loss_cls": 0.17313, "d2.loss_bbox": 0.35132, "d3.loss_cls": 0.16674, "d3.loss_bbox": 0.34777, "d4.loss_cls": 0.16539, "d4.loss_bbox": 0.35068, "loss": 3.34285, "grad_norm": 15.71306, "time": 1.02097}
{"mode": "train", "epoch": 1, "iter": 5400, "lr": 0.0001, "memory": 4350, "data_time": 0.02225, "loss_cls": 0.15487, "loss_bbox": 0.33462, "d0.loss_cls": 0.24268, "d0.loss_bbox": 0.4423, "d1.loss_cls": 0.18022, "d1.loss_bbox": 0.35152, "d2.loss_cls": 0.16667, "d2.loss_bbox": 0.32898, "d3.loss_cls": 0.16001, "d3.loss_bbox": 0.32696, "d4.loss_cls": 0.1555, "d4.loss_bbox": 0.33112, "loss": 3.17546, "grad_norm": 24.29638, "time": 1.00186}
{"mode": "train", "epoch": 1, "iter": 5450, "lr": 0.0001, "memory": 4350, "data_time": 0.0237, "loss_cls": 0.15513, "loss_bbox": 0.34041, "d0.loss_cls": 0.25688, "d0.loss_bbox": 0.448, "d1.loss_cls": 0.18853, "d1.loss_bbox": 0.35293, "d2.loss_cls": 0.1649, "d2.loss_bbox": 0.33774, "d3.loss_cls": 0.15966, "d3.loss_bbox": 0.33588, "d4.loss_cls": 0.15412, "d4.loss_bbox": 0.33706, "loss": 3.23123, "grad_norm": 20.54123, "time": 1.01671}
{"mode": "train", "epoch": 1, "iter": 5500, "lr": 0.0001, "memory": 4350, "data_time": 0.02177, "loss_cls": 0.15725, "loss_bbox": 0.3228, "d0.loss_cls": 0.24301, "d0.loss_bbox": 0.42229, "d1.loss_cls": 0.18866, "d1.loss_bbox": 0.3303, "d2.loss_cls": 0.16912, "d2.loss_bbox": 0.31402, "d3.loss_cls": 0.16179, "d3.loss_bbox": 0.31372, "d4.loss_cls": 0.15821, "d4.loss_bbox": 0.31764, "loss": 3.0988, "grad_norm": 26.37319, "time": 1.01334}
{"mode": "train", "epoch": 1, "iter": 5550, "lr": 0.0001, "memory": 4350, "data_time": 0.022, "loss_cls": 0.15289, "loss_bbox": 0.33032, "d0.loss_cls": 0.25619, "d0.loss_bbox": 0.4423, "d1.loss_cls": 0.18937, "d1.loss_bbox": 0.34091, "d2.loss_cls": 0.16762, "d2.loss_bbox": 0.32371, "d3.loss_cls": 0.15962, "d3.loss_bbox": 0.32378, "d4.loss_cls": 0.15492, "d4.loss_bbox": 0.32529, "loss": 3.16691, "grad_norm": 49.65864, "time": 0.99162}
{"mode": "train", "epoch": 1, "iter": 5600, "lr": 0.0001, "memory": 4350, "data_time": 0.02244, "loss_cls": 0.15961, "loss_bbox": 0.33415, "d0.loss_cls": 0.24632, "d0.loss_bbox": 0.44445, "d1.loss_cls": 0.18847, "d1.loss_bbox": 0.34952, "d2.loss_cls": 0.17037, "d2.loss_bbox": 0.33245, "d3.loss_cls": 0.16362, "d3.loss_bbox": 0.32879, "d4.loss_cls": 0.16012, "d4.loss_bbox": 0.3311, "loss": 3.20898, "grad_norm": 24.82771, "time": 1.00248}
{"mode": "train", "epoch": 1, "iter": 5650, "lr": 0.0001, "memory": 4350, "data_time": 0.02384, "loss_cls": 0.16199, "loss_bbox": 0.34192, "d0.loss_cls": 0.25098, "d0.loss_bbox": 0.43982, "d1.loss_cls": 0.19321, "d1.loss_bbox": 0.35109, "d2.loss_cls": 0.17344, "d2.loss_bbox": 0.3332, "d3.loss_cls": 0.16931, "d3.loss_bbox": 0.33044, "d4.loss_cls": 0.16315, "d4.loss_bbox": 0.33498, "loss": 3.24354, "grad_norm": 32.68257, "time": 1.02466}
{"mode": "train", "epoch": 1, "iter": 5700, "lr": 0.0001, "memory": 4350, "data_time": 0.02321, "loss_cls": 0.15047, "loss_bbox": 0.32662, "d0.loss_cls": 0.24042, "d0.loss_bbox": 0.42968, "d1.loss_cls": 0.18002, "d1.loss_bbox": 0.3406, "d2.loss_cls": 0.16095, "d2.loss_bbox": 0.3215, "d3.loss_cls": 0.15514, "d3.loss_bbox": 0.31959, "d4.loss_cls": 0.15116, "d4.loss_bbox": 0.3217, "loss": 3.09784, "grad_norm": 28.78031, "time": 1.01366}
{"mode": "train", "epoch": 1, "iter": 5750, "lr": 0.0001, "memory": 4350, "data_time": 0.02357, "loss_cls": 0.14276, "loss_bbox": 0.32828, "d0.loss_cls": 0.23731, "d0.loss_bbox": 0.43275, "d1.loss_cls": 0.17161, "d1.loss_bbox": 0.33947, "d2.loss_cls": 0.15472, "d2.loss_bbox": 0.31893, "d3.loss_cls": 0.14757, "d3.loss_bbox": 0.31964, "d4.loss_cls": 0.14296, "d4.loss_bbox": 0.3246, "loss": 3.0606, "grad_norm": 17.35877, "time": 1.01137}
{"mode": "train", "epoch": 1, "iter": 5800, "lr": 0.0001, "memory": 4350, "data_time": 0.02219, "loss_cls": 0.15115, "loss_bbox": 0.32384, "d0.loss_cls": 0.24525, "d0.loss_bbox": 0.43747, "d1.loss_cls": 0.18235, "d1.loss_bbox": 0.33918, "d2.loss_cls": 0.16291, "d2.loss_bbox": 0.32038, "d3.loss_cls": 0.15616, "d3.loss_bbox": 0.31714, "d4.loss_cls": 0.15192, "d4.loss_bbox": 0.31935, "loss": 3.10709, "grad_norm": 31.01439, "time": 1.00836}
{"mode": "train", "epoch": 1, "iter": 5850, "lr": 0.0001, "memory": 4350, "data_time": 0.02257, "loss_cls": 0.15204, "loss_bbox": 0.32017, "d0.loss_cls": 0.2518, "d0.loss_bbox": 0.43427, "d1.loss_cls": 0.18876, "d1.loss_bbox": 0.34136, "d2.loss_cls": 0.16626, "d2.loss_bbox": 0.31966, "d3.loss_cls": 0.15903, "d3.loss_bbox": 0.31622, "d4.loss_cls": 0.15209, "d4.loss_bbox": 0.31768, "loss": 3.11935, "grad_norm": 20.54265, "time": 1.01055}
{"mode": "train", "epoch": 1, "iter": 5900, "lr": 0.0001, "memory": 4350, "data_time": 0.02223, "loss_cls": 0.15683, "loss_bbox": 0.33066, "d0.loss_cls": 0.25679, "d0.loss_bbox": 0.44499, "d1.loss_cls": 0.19033, "d1.loss_bbox": 0.34355, "d2.loss_cls": 0.16931, "d2.loss_bbox": 0.32633, "d3.loss_cls": 0.16314, "d3.loss_bbox": 0.32205, "d4.loss_cls": 0.15836, "d4.loss_bbox": 0.3264, "loss": 3.18875, "grad_norm": 32.3396, "time": 1.02803}
{"mode": "train", "epoch": 1, "iter": 5950, "lr": 0.0001, "memory": 4350, "data_time": 0.02221, "loss_cls": 0.1516, "loss_bbox": 0.3246, "d0.loss_cls": 0.24214, "d0.loss_bbox": 0.43469, "d1.loss_cls": 0.18078, "d1.loss_bbox": 0.34122, "d2.loss_cls": 0.16583, "d2.loss_bbox": 0.31928, "d3.loss_cls": 0.15638, "d3.loss_bbox": 0.31793, "d4.loss_cls": 0.15343, "d4.loss_bbox": 0.31949, "loss": 3.10737, "grad_norm": 24.90629, "time": 1.01053}
{"mode": "train", "epoch": 1, "iter": 6000, "lr": 0.0001, "memory": 4350, "data_time": 0.02426, "loss_cls": 0.15351, "loss_bbox": 0.33235, "d0.loss_cls": 0.24823, "d0.loss_bbox": 0.43432, "d1.loss_cls": 0.18159, "d1.loss_bbox": 0.34832, "d2.loss_cls": 0.162, "d2.loss_bbox": 0.32699, "d3.loss_cls": 0.15812, "d3.loss_bbox": 0.32316, "d4.loss_cls": 0.15571, "d4.loss_bbox": 0.32693, "loss": 3.15123, "grad_norm": 30.09183, "time": 1.02779}
{"mode": "train", "epoch": 1, "iter": 6050, "lr": 0.0001, "memory": 4350, "data_time": 0.02337, "loss_cls": 0.14905, "loss_bbox": 0.30877, "d0.loss_cls": 0.23988, "d0.loss_bbox": 0.4248, "d1.loss_cls": 0.17863, "d1.loss_bbox": 0.33381, "d2.loss_cls": 0.16062, "d2.loss_bbox": 0.31193, "d3.loss_cls": 0.15113, "d3.loss_bbox": 0.30819, "d4.loss_cls": 0.14875, "d4.loss_bbox": 0.30803, "loss": 3.02359, "grad_norm": 116.50452, "time": 0.995}
{"mode": "train", "epoch": 1, "iter": 6100, "lr": 0.0001, "memory": 4350, "data_time": 0.02372, "loss_cls": 0.15657, "loss_bbox": 0.31607, "d0.loss_cls": 0.24612, "d0.loss_bbox": 0.42387, "d1.loss_cls": 0.1879, "d1.loss_bbox": 0.32936, "d2.loss_cls": 0.16836, "d2.loss_bbox": 0.31097, "d3.loss_cls": 0.1602, "d3.loss_bbox": 0.31025, "d4.loss_cls": 0.15768, "d4.loss_bbox": 0.31141, "loss": 3.07875, "grad_norm": 32.03134, "time": 1.02631}
{"mode": "train", "epoch": 1, "iter": 6150, "lr": 0.0001, "memory": 4350, "data_time": 0.02231, "loss_cls": 0.15001, "loss_bbox": 0.32997, "d0.loss_cls": 0.24655, "d0.loss_bbox": 0.43461, "d1.loss_cls": 0.18311, "d1.loss_bbox": 0.34143, "d2.loss_cls": 0.15825, "d2.loss_bbox": 0.32484, "d3.loss_cls": 0.15335, "d3.loss_bbox": 0.3229, "d4.loss_cls": 0.15049, "d4.loss_bbox": 0.32627, "loss": 3.12177, "grad_norm": 21.96795, "time": 1.0087}
{"mode": "train", "epoch": 1, "iter": 6200, "lr": 0.0001, "memory": 4350, "data_time": 0.02355, "loss_cls": 0.148, "loss_bbox": 0.31457, "d0.loss_cls": 0.24451, "d0.loss_bbox": 0.42961, "d1.loss_cls": 0.18116, "d1.loss_bbox": 0.3342, "d2.loss_cls": 0.16134, "d2.loss_bbox": 0.31312, "d3.loss_cls": 0.15409, "d3.loss_bbox": 0.30793, "d4.loss_cls": 0.14918, "d4.loss_bbox": 0.31114, "loss": 3.04884, "grad_norm": 28.77779, "time": 0.7868}
{"mode": "train", "epoch": 1, "iter": 6250, "lr": 0.0001, "memory": 4350, "data_time": 0.02302, "loss_cls": 0.1462, "loss_bbox": 0.31923, "d0.loss_cls": 0.24804, "d0.loss_bbox": 0.42996, "d1.loss_cls": 0.18044, "d1.loss_bbox": 0.33622, "d2.loss_cls": 0.15718, "d2.loss_bbox": 0.31706, "d3.loss_cls": 0.14948, "d3.loss_bbox": 0.31556, "d4.loss_cls": 0.14593, "d4.loss_bbox": 0.31736, "loss": 3.06265, "grad_norm": 34.57, "time": 0.7855}
{"mode": "train", "epoch": 1, "iter": 6300, "lr": 0.0001, "memory": 4350, "data_time": 0.02239, "loss_cls": 0.15192, "loss_bbox": 0.33675, "d0.loss_cls": 0.24115, "d0.loss_bbox": 0.45065, "d1.loss_cls": 0.18247, "d1.loss_bbox": 0.35128, "d2.loss_cls": 0.15941, "d2.loss_bbox": 0.33126, "d3.loss_cls": 0.15501, "d3.loss_bbox": 0.32915, "d4.loss_cls": 0.15259, "d4.loss_bbox": 0.33274, "loss": 3.17438, "grad_norm": 20.22233, "time": 0.78272}
{"mode": "train", "epoch": 1, "iter": 6350, "lr": 0.0001, "memory": 4350, "data_time": 0.02007, "loss_cls": 0.15825, "loss_bbox": 0.31779, "d0.loss_cls": 0.25098, "d0.loss_bbox": 0.43665, "d1.loss_cls": 0.19247, "d1.loss_bbox": 0.33546, "d2.loss_cls": 0.16888, "d2.loss_bbox": 0.31774, "d3.loss_cls": 0.16211, "d3.loss_bbox": 0.31636, "d4.loss_cls": 0.15939, "d4.loss_bbox": 0.31447, "loss": 3.13056, "grad_norm": 23.06829, "time": 0.77844}
{"mode": "train", "epoch": 1, "iter": 6400, "lr": 0.0001, "memory": 4350, "data_time": 0.01954, "loss_cls": 0.16375, "loss_bbox": 0.32851, "d0.loss_cls": 0.25714, "d0.loss_bbox": 0.43817, "d1.loss_cls": 0.19892, "d1.loss_bbox": 0.34577, "d2.loss_cls": 0.1758, "d2.loss_bbox": 0.32644, "d3.loss_cls": 0.16914, "d3.loss_bbox": 0.32204, "d4.loss_cls": 0.16424, "d4.loss_bbox": 0.32518, "loss": 3.21509, "grad_norm": 34.57179, "time": 0.78109}
{"mode": "train", "epoch": 1, "iter": 6450, "lr": 0.0001, "memory": 4350, "data_time": 0.02254, "loss_cls": 0.15007, "loss_bbox": 0.31283, "d0.loss_cls": 0.23587, "d0.loss_bbox": 0.42111, "d1.loss_cls": 0.18094, "d1.loss_bbox": 0.32647, "d2.loss_cls": 0.15878, "d2.loss_bbox": 0.30915, "d3.loss_cls": 0.15356, "d3.loss_bbox": 0.30819, "d4.loss_cls": 0.14996, "d4.loss_bbox": 0.30958, "loss": 3.01652, "grad_norm": 23.47733, "time": 0.78317}
{"mode": "train", "epoch": 1, "iter": 6500, "lr": 0.0001, "memory": 4350, "data_time": 0.01975, "loss_cls": 0.16331, "loss_bbox": 0.31849, "d0.loss_cls": 0.25665, "d0.loss_bbox": 0.43784, "d1.loss_cls": 0.19688, "d1.loss_bbox": 0.33572, "d2.loss_cls": 0.17647, "d2.loss_bbox": 0.31638, "d3.loss_cls": 0.16769, "d3.loss_bbox": 0.31463, "d4.loss_cls": 0.16427, "d4.loss_bbox": 0.31677, "loss": 3.1651, "grad_norm": 22.48031, "time": 0.77911}
{"mode": "train", "epoch": 1, "iter": 6550, "lr": 0.0001, "memory": 4350, "data_time": 0.02011, "loss_cls": 0.15299, "loss_bbox": 0.32901, "d0.loss_cls": 0.24626, "d0.loss_bbox": 0.44206, "d1.loss_cls": 0.18322, "d1.loss_bbox": 0.33956, "d2.loss_cls": 0.16593, "d2.loss_bbox": 0.32194, "d3.loss_cls": 0.15986, "d3.loss_bbox": 0.31769, "d4.loss_cls": 0.15315, "d4.loss_bbox": 0.3236, "loss": 3.13526, "grad_norm": 26.70155, "time": 0.78038}
{"mode": "train", "epoch": 1, "iter": 6600, "lr": 0.0001, "memory": 4350, "data_time": 0.024, "loss_cls": 0.14729, "loss_bbox": 0.31124, "d0.loss_cls": 0.23948, "d0.loss_bbox": 0.41728, "d1.loss_cls": 0.17904, "d1.loss_bbox": 0.32605, "d2.loss_cls": 0.15638, "d2.loss_bbox": 0.30589, "d3.loss_cls": 0.15075, "d3.loss_bbox": 0.30496, "d4.loss_cls": 0.14858, "d4.loss_bbox": 0.30817, "loss": 2.9951, "grad_norm": 20.4986, "time": 0.77881}
{"mode": "train", "epoch": 1, "iter": 6650, "lr": 0.0001, "memory": 4350, "data_time": 0.01936, "loss_cls": 0.1464, "loss_bbox": 0.32934, "d0.loss_cls": 0.24021, "d0.loss_bbox": 0.43393, "d1.loss_cls": 0.17313, "d1.loss_bbox": 0.34037, "d2.loss_cls": 0.15645, "d2.loss_bbox": 0.32174, "d3.loss_cls": 0.14957, "d3.loss_bbox": 0.32098, "d4.loss_cls": 0.14496, "d4.loss_bbox": 0.32518, "loss": 3.08227, "grad_norm": 16.86037, "time": 0.77954}
{"mode": "train", "epoch": 1, "iter": 6700, "lr": 0.0001, "memory": 4350, "data_time": 0.01875, "loss_cls": 0.14516, "loss_bbox": 0.31599, "d0.loss_cls": 0.24582, "d0.loss_bbox": 0.41799, "d1.loss_cls": 0.17594, "d1.loss_bbox": 0.33335, "d2.loss_cls": 0.15633, "d2.loss_bbox": 0.31084, "d3.loss_cls": 0.15068, "d3.loss_bbox": 0.30967, "d4.loss_cls": 0.14662, "d4.loss_bbox": 0.31263, "loss": 3.02101, "grad_norm": 21.4686, "time": 0.77581}
{"mode": "train", "epoch": 1, "iter": 6750, "lr": 0.0001, "memory": 4350, "data_time": 0.02258, "loss_cls": 0.15109, "loss_bbox": 0.31583, "d0.loss_cls": 0.24462, "d0.loss_bbox": 0.43177, "d1.loss_cls": 0.1821, "d1.loss_bbox": 0.33789, "d2.loss_cls": 0.16333, "d2.loss_bbox": 0.31576, "d3.loss_cls": 0.15662, "d3.loss_bbox": 0.31248, "d4.loss_cls": 0.15107, "d4.loss_bbox": 0.31339, "loss": 3.07594, "grad_norm": 22.36316, "time": 0.78703}
{"mode": "train", "epoch": 1, "iter": 6800, "lr": 0.0001, "memory": 4350, "data_time": 0.0225, "loss_cls": 0.15598, "loss_bbox": 0.32154, "d0.loss_cls": 0.25203, "d0.loss_bbox": 0.42988, "d1.loss_cls": 0.18647, "d1.loss_bbox": 0.33503, "d2.loss_cls": 0.16525, "d2.loss_bbox": 0.31871, "d3.loss_cls": 0.16011, "d3.loss_bbox": 0.31456, "d4.loss_cls": 0.15733, "d4.loss_bbox": 0.31661, "loss": 3.11349, "grad_norm": 23.83522, "time": 0.7816}
{"mode": "train", "epoch": 1, "iter": 6850, "lr": 0.0001, "memory": 4350, "data_time": 0.02015, "loss_cls": 0.14226, "loss_bbox": 0.30904, "d0.loss_cls": 0.23166, "d0.loss_bbox": 0.4187, "d1.loss_cls": 0.16934, "d1.loss_bbox": 0.32626, "d2.loss_cls": 0.15189, "d2.loss_bbox": 0.30719, "d3.loss_cls": 0.14718, "d3.loss_bbox": 0.30499, "d4.loss_cls": 0.14261, "d4.loss_bbox": 0.30769, "loss": 2.95879, "grad_norm": 30.02592, "time": 0.78139}
{"mode": "train", "epoch": 1, "iter": 6900, "lr": 0.0001, "memory": 4350, "data_time": 0.02198, "loss_cls": 0.14855, "loss_bbox": 0.32267, "d0.loss_cls": 0.23999, "d0.loss_bbox": 0.44345, "d1.loss_cls": 0.17728, "d1.loss_bbox": 0.3471, "d2.loss_cls": 0.15756, "d2.loss_bbox": 0.32595, "d3.loss_cls": 0.15182, "d3.loss_bbox": 0.32171, "d4.loss_cls": 0.14843, "d4.loss_bbox": 0.32144, "loss": 3.10595, "grad_norm": 25.45998, "time": 0.77797}
{"mode": "train", "epoch": 1, "iter": 6950, "lr": 0.0001, "memory": 4350, "data_time": 0.0196, "loss_cls": 0.14022, "loss_bbox": 0.30984, "d0.loss_cls": 0.23481, "d0.loss_bbox": 0.42704, "d1.loss_cls": 0.17302, "d1.loss_bbox": 0.33075, "d2.loss_cls": 0.15273, "d2.loss_bbox": 0.31208, "d3.loss_cls": 0.14445, "d3.loss_bbox": 0.30723, "d4.loss_cls": 0.14177, "d4.loss_bbox": 0.30872, "loss": 2.98267, "grad_norm": 20.81027, "time": 0.78461}
{"mode": "train", "epoch": 1, "iter": 7000, "lr": 0.0001, "memory": 4350, "data_time": 0.02146, "loss_cls": 0.14788, "loss_bbox": 0.31332, "d0.loss_cls": 0.24406, "d0.loss_bbox": 0.4281, "d1.loss_cls": 0.17963, "d1.loss_bbox": 0.3303, "d2.loss_cls": 0.15887, "d2.loss_bbox": 0.3122, "d3.loss_cls": 0.15191, "d3.loss_bbox": 0.31006, "d4.loss_cls": 0.14814, "d4.loss_bbox": 0.31241, "loss": 3.03688, "grad_norm": 31.51393, "time": 0.78337}
{"mode": "val", "epoch": 1, "iter": 3010, "lr": 0.0001, "pts_bbox_NuScenes/car_AP_dist_0.5": 0.7417, "pts_bbox_NuScenes/car_AP_dist_1.0": 0.859, "pts_bbox_NuScenes/car_AP_dist_2.0": 0.901, "pts_bbox_NuScenes/car_AP_dist_4.0": 0.9213, "pts_bbox_NuScenes/car_trans_err": 0.208, "pts_bbox_NuScenes/car_scale_err": 0.1492, "pts_bbox_NuScenes/car_orient_err": 0.0588, "pts_bbox_NuScenes/car_vel_err": 0.3884, "pts_bbox_NuScenes/car_attr_err": 0.1911, "pts_bbox_NuScenes/mATE": 0.3607, "pts_bbox_NuScenes/mASE": 0.2676, "pts_bbox_NuScenes/mAOE": 0.2957, "pts_bbox_NuScenes/mAVE": 0.4157, "pts_bbox_NuScenes/mAAE": 0.1802, "pts_bbox_NuScenes/truck_AP_dist_0.5": 0.3646, "pts_bbox_NuScenes/truck_AP_dist_1.0": 0.61, "pts_bbox_NuScenes/truck_AP_dist_2.0": 0.712, "pts_bbox_NuScenes/truck_AP_dist_4.0": 0.7617, "pts_bbox_NuScenes/truck_trans_err": 0.3801, "pts_bbox_NuScenes/truck_scale_err": 0.2177, "pts_bbox_NuScenes/truck_orient_err": 0.0743, "pts_bbox_NuScenes/truck_vel_err": 0.4098, "pts_bbox_NuScenes/truck_attr_err": 0.2347, "pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5": 0.0147, "pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0": 0.1599, "pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0": 0.4566, "pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0": 0.5274, "pts_bbox_NuScenes/construction_vehicle_trans_err": 0.8262, "pts_bbox_NuScenes/construction_vehicle_scale_err": 0.4809, "pts_bbox_NuScenes/construction_vehicle_orient_err": 0.8635, "pts_bbox_NuScenes/construction_vehicle_vel_err": 0.1189, "pts_bbox_NuScenes/construction_vehicle_attr_err": 0.3106, "pts_bbox_NuScenes/bus_AP_dist_0.5": 0.4222, "pts_bbox_NuScenes/bus_AP_dist_1.0": 0.717, "pts_bbox_NuScenes/bus_AP_dist_2.0": 0.8621, "pts_bbox_NuScenes/bus_AP_dist_4.0": 0.9008, "pts_bbox_NuScenes/bus_trans_err": 0.3931, "pts_bbox_NuScenes/bus_scale_err": 0.1981, "pts_bbox_NuScenes/bus_orient_err": 0.0548, "pts_bbox_NuScenes/bus_vel_err": 0.752, "pts_bbox_NuScenes/bus_attr_err": 0.2383, "pts_bbox_NuScenes/trailer_AP_dist_0.5": 0.1059, "pts_bbox_NuScenes/trailer_AP_dist_1.0": 0.326, "pts_bbox_NuScenes/trailer_AP_dist_2.0": 0.5269, "pts_bbox_NuScenes/trailer_AP_dist_4.0": 0.6684, "pts_bbox_NuScenes/trailer_trans_err": 0.6211, "pts_bbox_NuScenes/trailer_scale_err": 0.2328, "pts_bbox_NuScenes/trailer_orient_err": 0.487, "pts_bbox_NuScenes/trailer_vel_err": 0.2892, "pts_bbox_NuScenes/trailer_attr_err": 0.1543, "pts_bbox_NuScenes/barrier_AP_dist_0.5": 0.5061, "pts_bbox_NuScenes/barrier_AP_dist_1.0": 0.6488, "pts_bbox_NuScenes/barrier_AP_dist_2.0": 0.7304, "pts_bbox_NuScenes/barrier_AP_dist_4.0": 0.7553, "pts_bbox_NuScenes/barrier_trans_err": 0.312, "pts_bbox_NuScenes/barrier_scale_err": 0.2831, "pts_bbox_NuScenes/barrier_orient_err": 0.1443, "pts_bbox_NuScenes/barrier_vel_err": NaN, "pts_bbox_NuScenes/barrier_attr_err": NaN, "pts_bbox_NuScenes/motorcycle_AP_dist_0.5": 0.5843, "pts_bbox_NuScenes/motorcycle_AP_dist_1.0": 0.7565, "pts_bbox_NuScenes/motorcycle_AP_dist_2.0": 0.8102, "pts_bbox_NuScenes/motorcycle_AP_dist_4.0": 0.8221, "pts_bbox_NuScenes/motorcycle_trans_err": 0.2749, "pts_bbox_NuScenes/motorcycle_scale_err": 0.2458, "pts_bbox_NuScenes/motorcycle_orient_err": 0.2697, "pts_bbox_NuScenes/motorcycle_vel_err": 0.8536, "pts_bbox_NuScenes/motorcycle_attr_err": 0.1801, "pts_bbox_NuScenes/bicycle_AP_dist_0.5": 0.59, "pts_bbox_NuScenes/bicycle_AP_dist_1.0": 0.6584, "pts_bbox_NuScenes/bicycle_AP_dist_2.0": 0.6772, "pts_bbox_NuScenes/bicycle_AP_dist_4.0": 0.6876, "pts_bbox_NuScenes/bicycle_trans_err": 0.2055, "pts_bbox_NuScenes/bicycle_scale_err": 0.2672, "pts_bbox_NuScenes/bicycle_orient_err": 0.3848, "pts_bbox_NuScenes/bicycle_vel_err": 0.2544, "pts_bbox_NuScenes/bicycle_attr_err": 0.0122, "pts_bbox_NuScenes/pedestrian_AP_dist_0.5": 0.7616, "pts_bbox_NuScenes/pedestrian_AP_dist_1.0": 0.8358, "pts_bbox_NuScenes/pedestrian_AP_dist_2.0": 0.8702, "pts_bbox_NuScenes/pedestrian_AP_dist_4.0": 0.8875, "pts_bbox_NuScenes/pedestrian_trans_err": 0.1963, "pts_bbox_NuScenes/pedestrian_scale_err": 0.2912, "pts_bbox_NuScenes/pedestrian_orient_err": 0.3242, "pts_bbox_NuScenes/pedestrian_vel_err": 0.2594, "pts_bbox_NuScenes/pedestrian_attr_err": 0.1206, "pts_bbox_NuScenes/traffic_cone_AP_dist_0.5": 0.6814, "pts_bbox_NuScenes/traffic_cone_AP_dist_1.0": 0.7404, "pts_bbox_NuScenes/traffic_cone_AP_dist_2.0": 0.7819, "pts_bbox_NuScenes/traffic_cone_AP_dist_4.0": 0.8161, "pts_bbox_NuScenes/traffic_cone_trans_err": 0.1901, "pts_bbox_NuScenes/traffic_cone_scale_err": 0.3103, "pts_bbox_NuScenes/traffic_cone_orient_err": NaN, "pts_bbox_NuScenes/traffic_cone_vel_err": NaN, "pts_bbox_NuScenes/traffic_cone_attr_err": NaN, "pts_bbox_NuScenes/NDS": 0.67501, "pts_bbox_NuScenes/mAP": 0.65402}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 9e-05, "memory": 4350, "data_time": 0.11316, "loss_cls": 0.14469, "loss_bbox": 0.30992, "d0.loss_cls": 0.23479, "d0.loss_bbox": 0.42124, "d1.loss_cls": 0.17511, "d1.loss_bbox": 0.33246, "d2.loss_cls": 0.15562, "d2.loss_bbox": 0.31117, "d3.loss_cls": 0.1489, "d3.loss_bbox": 0.30862, "d4.loss_cls": 0.14517, "d4.loss_bbox": 0.30808, "loss": 2.99577, "grad_norm": 30.95848, "time": 0.87282}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 9e-05, "memory": 4350, "data_time": 0.02199, "loss_cls": 0.14891, "loss_bbox": 0.3175, "d0.loss_cls": 0.25119, "d0.loss_bbox": 0.42988, "d1.loss_cls": 0.18248, "d1.loss_bbox": 0.33582, "d2.loss_cls": 0.16172, "d2.loss_bbox": 0.31661, "d3.loss_cls": 0.15615, "d3.loss_bbox": 0.31183, "d4.loss_cls": 0.14919, "d4.loss_bbox": 0.31497, "loss": 3.07623, "grad_norm": 34.29314, "time": 0.78165}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 9e-05, "memory": 4350, "data_time": 0.02117, "loss_cls": 0.13603, "loss_bbox": 0.30606, "d0.loss_cls": 0.22783, "d0.loss_bbox": 0.42005, "d1.loss_cls": 0.16754, "d1.loss_bbox": 0.3247, "d2.loss_cls": 0.15038, "d2.loss_bbox": 0.30772, "d3.loss_cls": 0.14443, "d3.loss_bbox": 0.30302, "d4.loss_cls": 0.13711, "d4.loss_bbox": 0.306, "loss": 2.93086, "grad_norm": 27.05881, "time": 0.78477}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 9e-05, "memory": 4350, "data_time": 0.02168, "loss_cls": 0.15383, "loss_bbox": 0.32212, "d0.loss_cls": 0.24551, "d0.loss_bbox": 0.44486, "d1.loss_cls": 0.18967, "d1.loss_bbox": 0.34611, "d2.loss_cls": 0.1675, "d2.loss_bbox": 0.32559, "d3.loss_cls": 0.15973, "d3.loss_bbox": 0.32101, "d4.loss_cls": 0.15483, "d4.loss_bbox": 0.32225, "loss": 3.15301, "grad_norm": 20.51435, "time": 0.78121}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 9e-05, "memory": 4350, "data_time": 0.02156, "loss_cls": 0.14666, "loss_bbox": 0.30927, "d0.loss_cls": 0.23737, "d0.loss_bbox": 0.41755, "d1.loss_cls": 0.17969, "d1.loss_bbox": 0.32753, "d2.loss_cls": 0.16171, "d2.loss_bbox": 0.30866, "d3.loss_cls": 0.15206, "d3.loss_bbox": 0.30699, "d4.loss_cls": 0.1485, "d4.loss_bbox": 0.30851, "loss": 3.00449, "grad_norm": 25.69966, "time": 0.78013}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 9e-05, "memory": 4350, "data_time": 0.02145, "loss_cls": 0.13264, "loss_bbox": 0.30845, "d0.loss_cls": 0.23395, "d0.loss_bbox": 0.41987, "d1.loss_cls": 0.16835, "d1.loss_bbox": 0.32862, "d2.loss_cls": 0.1454, "d2.loss_bbox": 0.31073, "d3.loss_cls": 0.13715, "d3.loss_bbox": 0.3099, "d4.loss_cls": 0.13406, "d4.loss_bbox": 0.30815, "loss": 2.93727, "grad_norm": 28.14085, "time": 0.78531}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 9e-05, "memory": 4350, "data_time": 0.02248, "loss_cls": 0.14502, "loss_bbox": 0.323, "d0.loss_cls": 0.24368, "d0.loss_bbox": 0.43689, "d1.loss_cls": 0.18003, "d1.loss_bbox": 0.3415, "d2.loss_cls": 0.16039, "d2.loss_bbox": 0.32239, "d3.loss_cls": 0.15206, "d3.loss_bbox": 0.3201, "d4.loss_cls": 0.14735, "d4.loss_bbox": 0.32136, "loss": 3.09376, "grad_norm": 16.23633, "time": 0.78358}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 9e-05, "memory": 4350, "data_time": 0.02155, "loss_cls": 0.14307, "loss_bbox": 0.30519, "d0.loss_cls": 0.23802, "d0.loss_bbox": 0.41345, "d1.loss_cls": 0.18055, "d1.loss_bbox": 0.32835, "d2.loss_cls": 0.15706, "d2.loss_bbox": 0.30677, "d3.loss_cls": 0.14759, "d3.loss_bbox": 0.3045, "d4.loss_cls": 0.14489, "d4.loss_bbox": 0.30438, "loss": 2.9738, "grad_norm": 35.95624, "time": 0.7845}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 9e-05, "memory": 4350, "data_time": 0.02167, "loss_cls": 0.15011, "loss_bbox": 0.32013, "d0.loss_cls": 0.24999, "d0.loss_bbox": 0.43764, "d1.loss_cls": 0.1838, "d1.loss_bbox": 0.34339, "d2.loss_cls": 0.16141, "d2.loss_bbox": 0.32213, "d3.loss_cls": 0.15404, "d3.loss_bbox": 0.3187, "d4.loss_cls": 0.15092, "d4.loss_bbox": 0.32033, "loss": 3.11258, "grad_norm": 21.57874, "time": 0.78502}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 9e-05, "memory": 4350, "data_time": 0.02171, "loss_cls": 0.14381, "loss_bbox": 0.30679, "d0.loss_cls": 0.24297, "d0.loss_bbox": 0.41662, "d1.loss_cls": 0.17587, "d1.loss_bbox": 0.32467, "d2.loss_cls": 0.15562, "d2.loss_bbox": 0.30382, "d3.loss_cls": 0.14862, "d3.loss_bbox": 0.30178, "d4.loss_cls": 0.14533, "d4.loss_bbox": 0.30539, "loss": 2.97129, "grad_norm": 46.74843, "time": 0.78522}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 9e-05, "memory": 4350, "data_time": 0.02241, "loss_cls": 0.14813, "loss_bbox": 0.31463, "d0.loss_cls": 0.25052, "d0.loss_bbox": 0.43966, "d1.loss_cls": 0.17865, "d1.loss_bbox": 0.34179, "d2.loss_cls": 0.16204, "d2.loss_bbox": 0.31716, "d3.loss_cls": 0.15398, "d3.loss_bbox": 0.31386, "d4.loss_cls": 0.14923, "d4.loss_bbox": 0.31557, "loss": 3.08522, "grad_norm": 33.33507, "time": 0.78059}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 9e-05, "memory": 4350, "data_time": 0.02093, "loss_cls": 0.14205, "loss_bbox": 0.31425, "d0.loss_cls": 0.24088, "d0.loss_bbox": 0.43084, "d1.loss_cls": 0.17435, "d1.loss_bbox": 0.33479, "d2.loss_cls": 0.15343, "d2.loss_bbox": 0.31771, "d3.loss_cls": 0.14549, "d3.loss_bbox": 0.31474, "d4.loss_cls": 0.143, "d4.loss_bbox": 0.31509, "loss": 3.02662, "grad_norm": 27.90798, "time": 0.78251}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 9e-05, "memory": 4350, "data_time": 0.02204, "loss_cls": 0.15382, "loss_bbox": 0.32165, "d0.loss_cls": 0.24014, "d0.loss_bbox": 0.44151, "d1.loss_cls": 0.17982, "d1.loss_bbox": 0.34419, "d2.loss_cls": 0.16335, "d2.loss_bbox": 0.32328, "d3.loss_cls": 0.15672, "d3.loss_bbox": 0.32144, "d4.loss_cls": 0.15378, "d4.loss_bbox": 0.32306, "loss": 3.12276, "grad_norm": 26.1418, "time": 0.78718}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 9e-05, "memory": 4350, "data_time": 0.02193, "loss_cls": 0.15241, "loss_bbox": 0.32493, "d0.loss_cls": 0.24714, "d0.loss_bbox": 0.44006, "d1.loss_cls": 0.18523, "d1.loss_bbox": 0.34423, "d2.loss_cls": 0.16514, "d2.loss_bbox": 0.32546, "d3.loss_cls": 0.15599, "d3.loss_bbox": 0.3236, "d4.loss_cls": 0.15284, "d4.loss_bbox": 0.32473, "loss": 3.14175, "grad_norm": 21.36386, "time": 0.7803}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 9e-05, "memory": 4350, "data_time": 0.02498, "loss_cls": 0.14839, "loss_bbox": 0.31233, "d0.loss_cls": 0.24869, "d0.loss_bbox": 0.43563, "d1.loss_cls": 0.17845, "d1.loss_bbox": 0.33863, "d2.loss_cls": 0.16094, "d2.loss_bbox": 0.31672, "d3.loss_cls": 0.15266, "d3.loss_bbox": 0.31232, "d4.loss_cls": 0.14907, "d4.loss_bbox": 0.31396, "loss": 3.06779, "grad_norm": 24.25089, "time": 0.78517}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 9e-05, "memory": 4350, "data_time": 0.02117, "loss_cls": 0.1428, "loss_bbox": 0.30136, "d0.loss_cls": 0.23861, "d0.loss_bbox": 0.40932, "d1.loss_cls": 0.17707, "d1.loss_bbox": 0.32564, "d2.loss_cls": 0.15468, "d2.loss_bbox": 0.30485, "d3.loss_cls": 0.14771, "d3.loss_bbox": 0.3011, "d4.loss_cls": 0.1429, "d4.loss_bbox": 0.3027, "loss": 2.94875, "grad_norm": 36.70088, "time": 0.78569}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 9e-05, "memory": 4350, "data_time": 0.02062, "loss_cls": 0.14704, "loss_bbox": 0.30309, "d0.loss_cls": 0.24385, "d0.loss_bbox": 0.41289, "d1.loss_cls": 0.18059, "d1.loss_bbox": 0.32798, "d2.loss_cls": 0.1617, "d2.loss_bbox": 0.30777, "d3.loss_cls": 0.15341, "d3.loss_bbox": 0.30259, "d4.loss_cls": 0.14775, "d4.loss_bbox": 0.30447, "loss": 2.99315, "grad_norm": 25.26088, "time": 0.78244}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 9e-05, "memory": 4350, "data_time": 0.02102, "loss_cls": 0.14271, "loss_bbox": 0.30603, "d0.loss_cls": 0.23843, "d0.loss_bbox": 0.42185, "d1.loss_cls": 0.17794, "d1.loss_bbox": 0.33094, "d2.loss_cls": 0.15755, "d2.loss_bbox": 0.30674, "d3.loss_cls": 0.14909, "d3.loss_bbox": 0.305, "d4.loss_cls": 0.14413, "d4.loss_bbox": 0.30799, "loss": 2.9884, "grad_norm": 19.55366, "time": 0.78284}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 9e-05, "memory": 4350, "data_time": 0.02118, "loss_cls": 0.13804, "loss_bbox": 0.29114, "d0.loss_cls": 0.23829, "d0.loss_bbox": 0.41186, "d1.loss_cls": 0.17273, "d1.loss_bbox": 0.3181, "d2.loss_cls": 0.151, "d2.loss_bbox": 0.29627, "d3.loss_cls": 0.14037, "d3.loss_bbox": 0.29321, "d4.loss_cls": 0.13792, "d4.loss_bbox": 0.29457, "loss": 2.8835, "grad_norm": 30.02251, "time": 0.78595}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 9e-05, "memory": 4350, "data_time": 0.02148, "loss_cls": 0.14329, "loss_bbox": 0.29627, "d0.loss_cls": 0.23397, "d0.loss_bbox": 0.42066, "d1.loss_cls": 0.17303, "d1.loss_bbox": 0.32594, "d2.loss_cls": 0.15634, "d2.loss_bbox": 0.30386, "d3.loss_cls": 0.14618, "d3.loss_bbox": 0.29957, "d4.loss_cls": 0.14446, "d4.loss_bbox": 0.29984, "loss": 2.94342, "grad_norm": 32.57369, "time": 0.78225}
{"mode": "train", "epoch": 2, "iter": 1050, "lr": 9e-05, "memory": 4350, "data_time": 0.02139, "loss_cls": 0.13451, "loss_bbox": 0.29388, "d0.loss_cls": 0.2387, "d0.loss_bbox": 0.41634, "d1.loss_cls": 0.17383, "d1.loss_bbox": 0.32297, "d2.loss_cls": 0.15167, "d2.loss_bbox": 0.3002, "d3.loss_cls": 0.13992, "d3.loss_bbox": 0.29763, "d4.loss_cls": 0.13588, "d4.loss_bbox": 0.29688, "loss": 2.90241, "grad_norm": 23.1596, "time": 0.7848}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 9e-05, "memory": 4350, "data_time": 0.02237, "loss_cls": 0.15409, "loss_bbox": 0.2973, "d0.loss_cls": 0.23882, "d0.loss_bbox": 0.41994, "d1.loss_cls": 0.18395, "d1.loss_bbox": 0.32271, "d2.loss_cls": 0.16342, "d2.loss_bbox": 0.30115, "d3.loss_cls": 0.15923, "d3.loss_bbox": 0.29745, "d4.loss_cls": 0.1548, "d4.loss_bbox": 0.29982, "loss": 2.99267, "grad_norm": 23.44628, "time": 0.78487}
{"mode": "train", "epoch": 2, "iter": 1150, "lr": 9e-05, "memory": 4350, "data_time": 0.02045, "loss_cls": 0.14595, "loss_bbox": 0.29631, "d0.loss_cls": 0.2355, "d0.loss_bbox": 0.41542, "d1.loss_cls": 0.17241, "d1.loss_bbox": 0.32512, "d2.loss_cls": 0.15651, "d2.loss_bbox": 0.30269, "d3.loss_cls": 0.15004, "d3.loss_bbox": 0.29883, "d4.loss_cls": 0.14693, "d4.loss_bbox": 0.29856, "loss": 2.94428, "grad_norm": 43.30389, "time": 0.7853}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 9e-05, "memory": 4350, "data_time": 0.02146, "loss_cls": 0.14517, "loss_bbox": 0.29333, "d0.loss_cls": 0.23514, "d0.loss_bbox": 0.42312, "d1.loss_cls": 0.17823, "d1.loss_bbox": 0.32297, "d2.loss_cls": 0.15738, "d2.loss_bbox": 0.29835, "d3.loss_cls": 0.14997, "d3.loss_bbox": 0.29281, "d4.loss_cls": 0.14785, "d4.loss_bbox": 0.29309, "loss": 2.93741, "grad_norm": 26.2433, "time": 0.78257}
{"mode": "train", "epoch": 2, "iter": 1250, "lr": 9e-05, "memory": 4350, "data_time": 0.02075, "loss_cls": 0.1325, "loss_bbox": 0.29559, "d0.loss_cls": 0.23428, "d0.loss_bbox": 0.4114, "d1.loss_cls": 0.16989, "d1.loss_bbox": 0.31828, "d2.loss_cls": 0.14508, "d2.loss_bbox": 0.29845, "d3.loss_cls": 0.1381, "d3.loss_bbox": 0.2949, "d4.loss_cls": 0.13287, "d4.loss_bbox": 0.29864, "loss": 2.86999, "grad_norm": 36.59943, "time": 0.78377}
{"mode": "train", "epoch": 2, "iter": 1300, "lr": 9e-05, "memory": 4350, "data_time": 0.02346, "loss_cls": 0.13873, "loss_bbox": 0.29347, "d0.loss_cls": 0.2258, "d0.loss_bbox": 0.41403, "d1.loss_cls": 0.17265, "d1.loss_bbox": 0.31507, "d2.loss_cls": 0.15129, "d2.loss_bbox": 0.29469, "d3.loss_cls": 0.1436, "d3.loss_bbox": 0.29112, "d4.loss_cls": 0.139, "d4.loss_bbox": 0.29527, "loss": 2.87471, "grad_norm": 40.43846, "time": 0.78731}
{"mode": "train", "epoch": 2, "iter": 1350, "lr": 9e-05, "memory": 4350, "data_time": 0.02126, "loss_cls": 0.14437, "loss_bbox": 0.29447, "d0.loss_cls": 0.24128, "d0.loss_bbox": 0.41741, "d1.loss_cls": 0.17839, "d1.loss_bbox": 0.32238, "d2.loss_cls": 0.15998, "d2.loss_bbox": 0.29806, "d3.loss_cls": 0.14934, "d3.loss_bbox": 0.2967, "d4.loss_cls": 0.14424, "d4.loss_bbox": 0.29896, "loss": 2.94559, "grad_norm": 39.64823, "time": 0.78433}
{"mode": "train", "epoch": 2, "iter": 1400, "lr": 9e-05, "memory": 4350, "data_time": 0.02005, "loss_cls": 0.14278, "loss_bbox": 0.29986, "d0.loss_cls": 0.24552, "d0.loss_bbox": 0.4195, "d1.loss_cls": 0.18308, "d1.loss_bbox": 0.32647, "d2.loss_cls": 0.15933, "d2.loss_bbox": 0.3011, "d3.loss_cls": 0.1495, "d3.loss_bbox": 0.29981, "d4.loss_cls": 0.14323, "d4.loss_bbox": 0.30355, "loss": 2.97375, "grad_norm": 23.33762, "time": 0.78149}
{"mode": "train", "epoch": 2, "iter": 1450, "lr": 9e-05, "memory": 4350, "data_time": 0.02105, "loss_cls": 0.14259, "loss_bbox": 0.30385, "d0.loss_cls": 0.22952, "d0.loss_bbox": 0.4292, "d1.loss_cls": 0.1754, "d1.loss_bbox": 0.33222, "d2.loss_cls": 0.15766, "d2.loss_bbox": 0.30828, "d3.loss_cls": 0.14772, "d3.loss_bbox": 0.30472, "d4.loss_cls": 0.14215, "d4.loss_bbox": 0.30656, "loss": 2.97986, "grad_norm": 20.38786, "time": 0.78715}
{"mode": "train", "epoch": 2, "iter": 1500, "lr": 9e-05, "memory": 4350, "data_time": 0.02266, "loss_cls": 0.14757, "loss_bbox": 0.3027, "d0.loss_cls": 0.24946, "d0.loss_bbox": 0.43031, "d1.loss_cls": 0.18675, "d1.loss_bbox": 0.33255, "d2.loss_cls": 0.16378, "d2.loss_bbox": 0.30819, "d3.loss_cls": 0.15331, "d3.loss_bbox": 0.30616, "d4.loss_cls": 0.14781, "d4.loss_bbox": 0.3064, "loss": 3.03501, "grad_norm": 33.16117, "time": 0.7868}
