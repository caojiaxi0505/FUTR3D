{"env_info": "sys.platform: linux\nPython: 3.8.20 | packaged by conda-forge | (default, Sep 30 2024, 17:52:49) [GCC 13.3.0]\nCUDA available: True\nGPU 0,1: NVIDIA GeForce RTX 4090 D\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 11.6, V11.6.55\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0\nPyTorch: 1.13.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 9.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2022.1-Product Build 20220311 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.6\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.3.2  (built against CUDA 11.5)\n  - Magma 2.6.1\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.6, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.14.0\nOpenCV: 4.11.0\nMMCV: 1.7.0\nMMCV Compiler: GCC 9.4\nMMCV CUDA Compiler: 11.6\nMMDetection: 2.27.0\nMMSegmentation: 0.30.0\nMMDetection3D: 1.0.0rc6+52a0242\nspconv2.0: True", "config": "point_cloud_range = [-54, -54, -5.0, 54, 54, 3.0]\nclass_names = [\n    'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',\n    'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n]\ndataset_type = 'NuScenesDataset'\ndata_root = 'data/nuscenes/'\ninput_modality = dict(\n    use_lidar=True,\n    use_camera=False,\n    use_radar=False,\n    use_map=False,\n    use_external=False)\nfile_client_args = dict(backend='disk')\ntrain_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=5,\n        use_dim=5,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='LoadPointsFromMultiSweeps',\n        sweeps_num=9,\n        use_dim=[0, 1, 2, 3, 4],\n        file_client_args=dict(backend='disk'),\n        pad_empty_sweeps=True,\n        remove_close=True),\n    dict(type='LoadAnnotations3D', with_bbox_3d=True, with_label_3d=True),\n    dict(\n        type='ObjectSample',\n        db_sampler=dict(\n            data_root='data/nuscenes/',\n            info_path='data/nuscenes/nuscenes_dbinfos_train.pkl',\n            rate=1.0,\n            prepare=dict(\n                filter_by_difficulty=[-1],\n                filter_by_min_points=dict(\n                    car=5,\n                    truck=5,\n                    bus=5,\n                    trailer=5,\n                    construction_vehicle=5,\n                    traffic_cone=5,\n                    barrier=5,\n                    motorcycle=5,\n                    bicycle=5,\n                    pedestrian=5)),\n            classes=[\n                'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                'traffic_cone'\n            ],\n            sample_groups=dict(\n                car=2,\n                truck=3,\n                construction_vehicle=7,\n                bus=4,\n                trailer=6,\n                barrier=2,\n                motorcycle=6,\n                bicycle=6,\n                pedestrian=2,\n                traffic_cone=2),\n            points_loader=dict(\n                type='LoadPointsFromFile',\n                coord_type='LIDAR',\n                load_dim=5,\n                use_dim=[0, 1, 2, 3, 4],\n                file_client_args=dict(backend='disk')))),\n    dict(\n        type='GlobalRotScaleTrans',\n        rot_range=[-0.785, 0.785],\n        scale_ratio_range=[0.9, 1.1],\n        translation_std=[0.5, 0.5, 0.5]),\n    dict(\n        type='RandomFlip3D',\n        sync_2d=False,\n        flip_ratio_bev_horizontal=0.5,\n        flip_ratio_bev_vertical=0.5),\n    dict(\n        type='PointsRangeFilter',\n        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n    dict(\n        type='ObjectRangeFilter',\n        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n    dict(\n        type='ObjectNameFilter',\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ]),\n    dict(type='PointShuffle'),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ]),\n    dict(type='Collect3D', keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])\n]\ntest_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=5,\n        use_dim=5,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='LoadPointsFromMultiSweeps',\n        sweeps_num=9,\n        use_dim=[0, 1, 2, 3, 4],\n        file_client_args=dict(backend='disk'),\n        pad_empty_sweeps=True,\n        remove_close=True),\n    dict(type='LoadAnnotations3D', with_bbox_3d=True, with_label_3d=True),\n    dict(\n        type='MultiScaleFlipAug3D',\n        img_scale=(1333, 800),\n        pts_scale_ratio=1,\n        flip=False,\n        transforms=[\n            dict(\n                type='GlobalRotScaleTrans',\n                rot_range=[0, 0],\n                scale_ratio_range=[1.0, 1.0],\n                translation_std=[0, 0, 0]),\n            dict(type='RandomFlip3D'),\n            dict(\n                type='PointsRangeFilter',\n                point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ],\n                with_label=False),\n            dict(\n                type='Collect3D',\n                keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])\n        ])\n]\neval_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=5,\n        use_dim=5,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='LoadPointsFromMultiSweeps',\n        sweeps_num=9,\n        use_dim=[0, 1, 2, 3, 4],\n        file_client_args=dict(backend='disk'),\n        pad_empty_sweeps=True,\n        remove_close=True),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        with_label=False),\n    dict(type='Collect3D', keys=['points'])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=4,\n    train=dict(\n        type='CBGSDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/nuscenes/nuscenes_infos_train.pkl',\n        pipeline=[\n            dict(\n                type='LoadPointsFromFile',\n                coord_type='LIDAR',\n                load_dim=5,\n                use_dim=5,\n                file_client_args=dict(backend='disk')),\n            dict(\n                type='LoadPointsFromMultiSweeps',\n                sweeps_num=10,\n                file_client_args=dict(backend='disk')),\n            dict(\n                type='LoadAnnotations3D',\n                with_bbox_3d=True,\n                with_label_3d=True),\n            dict(\n                type='GlobalRotScaleTrans',\n                rot_range=[-0.3925, 0.3925],\n                scale_ratio_range=[0.95, 1.05],\n                translation_std=[0, 0, 0]),\n            dict(type='RandomFlip3D', flip_ratio_bev_horizontal=0.5),\n            dict(\n                type='PointsRangeFilter',\n                point_cloud_range=[-50, -50, -5, 50, 50, 3]),\n            dict(\n                type='ObjectRangeFilter',\n                point_cloud_range=[-50, -50, -5, 50, 50, 3]),\n            dict(\n                type='ObjectNameFilter',\n                classes=[\n                    'car', 'truck', 'trailer', 'bus', 'construction_vehicle',\n                    'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone',\n                    'barrier'\n                ]),\n            dict(type='PointShuffle'),\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'car', 'truck', 'trailer', 'bus', 'construction_vehicle',\n                    'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone',\n                    'barrier'\n                ]),\n            dict(\n                type='Collect3D',\n                keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])\n        ],\n        classes=[\n            'car', 'truck', 'trailer', 'bus', 'construction_vehicle',\n            'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier'\n        ],\n        modality=dict(\n            use_lidar=True,\n            use_camera=False,\n            use_radar=False,\n            use_map=False,\n            use_external=False),\n        test_mode=False,\n        box_type_3d='LiDAR',\n        split=14,\n        dataset=dict(\n            type='NuScenesDataset',\n            data_root='data/nuscenes/',\n            ann_file='data/nuscenes/nuscenes_infos_train.pkl',\n            pipeline=[\n                dict(\n                    type='LoadPointsFromFile',\n                    coord_type='LIDAR',\n                    load_dim=5,\n                    use_dim=5,\n                    file_client_args=dict(backend='disk')),\n                dict(\n                    type='LoadPointsFromMultiSweeps',\n                    sweeps_num=9,\n                    use_dim=[0, 1, 2, 3, 4],\n                    file_client_args=dict(backend='disk'),\n                    pad_empty_sweeps=True,\n                    remove_close=True),\n                dict(\n                    type='LoadAnnotations3D',\n                    with_bbox_3d=True,\n                    with_label_3d=True),\n                dict(\n                    type='ObjectSample',\n                    db_sampler=dict(\n                        data_root='data/nuscenes/',\n                        info_path='data/nuscenes/nuscenes_dbinfos_train.pkl',\n                        rate=1.0,\n                        prepare=dict(\n                            filter_by_difficulty=[-1],\n                            filter_by_min_points=dict(\n                                car=5,\n                                truck=5,\n                                bus=5,\n                                trailer=5,\n                                construction_vehicle=5,\n                                traffic_cone=5,\n                                barrier=5,\n                                motorcycle=5,\n                                bicycle=5,\n                                pedestrian=5)),\n                        classes=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        sample_groups=dict(\n                            car=2,\n                            truck=3,\n                            construction_vehicle=7,\n                            bus=4,\n                            trailer=6,\n                            barrier=2,\n                            motorcycle=6,\n                            bicycle=6,\n                            pedestrian=2,\n                            traffic_cone=2),\n                        points_loader=dict(\n                            type='LoadPointsFromFile',\n                            coord_type='LIDAR',\n                            load_dim=5,\n                            use_dim=[0, 1, 2, 3, 4],\n                            file_client_args=dict(backend='disk')))),\n                dict(\n                    type='GlobalRotScaleTrans',\n                    rot_range=[-0.785, 0.785],\n                    scale_ratio_range=[0.9, 1.1],\n                    translation_std=[0.5, 0.5, 0.5]),\n                dict(\n                    type='RandomFlip3D',\n                    sync_2d=False,\n                    flip_ratio_bev_horizontal=0.5,\n                    flip_ratio_bev_vertical=0.5),\n                dict(\n                    type='PointsRangeFilter',\n                    point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n                dict(\n                    type='ObjectRangeFilter',\n                    point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n                dict(\n                    type='ObjectNameFilter',\n                    classes=[\n                        'car', 'truck', 'construction_vehicle', 'bus',\n                        'trailer', 'barrier', 'motorcycle', 'bicycle',\n                        'pedestrian', 'traffic_cone'\n                    ]),\n                dict(type='PointShuffle'),\n                dict(\n                    type='DefaultFormatBundle3D',\n                    class_names=[\n                        'car', 'truck', 'construction_vehicle', 'bus',\n                        'trailer', 'barrier', 'motorcycle', 'bicycle',\n                        'pedestrian', 'traffic_cone'\n                    ]),\n                dict(\n                    type='Collect3D',\n                    keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])\n            ],\n            classes=[\n                'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                'traffic_cone'\n            ],\n            test_mode=False,\n            use_valid_flag=True,\n            box_type_3d='LiDAR')),\n    val=dict(\n        type='NuScenesDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/nuscenes/nuscenes_infos_val.pkl',\n        pipeline=[\n            dict(\n                type='LoadPointsFromFile',\n                coord_type='LIDAR',\n                load_dim=5,\n                use_dim=5,\n                file_client_args=dict(backend='disk')),\n            dict(\n                type='LoadPointsFromMultiSweeps',\n                sweeps_num=9,\n                use_dim=[0, 1, 2, 3, 4],\n                file_client_args=dict(backend='disk'),\n                pad_empty_sweeps=True,\n                remove_close=True),\n            dict(\n                type='LoadAnnotations3D',\n                with_bbox_3d=True,\n                with_label_3d=True),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1333, 800),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='GlobalRotScaleTrans',\n                        rot_range=[0, 0],\n                        scale_ratio_range=[1.0, 1.0],\n                        translation_std=[0, 0, 0]),\n                    dict(type='RandomFlip3D'),\n                    dict(\n                        type='PointsRangeFilter',\n                        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        with_label=False),\n                    dict(\n                        type='Collect3D',\n                        keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=True,\n            use_camera=False,\n            use_radar=False,\n            use_map=False,\n            use_external=False),\n        test_mode=True,\n        box_type_3d='LiDAR'),\n    test=dict(\n        type='NuScenesDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/nuscenes/nuscenes_infos_val.pkl',\n        pipeline=[\n            dict(\n                type='LoadPointsFromFile',\n                coord_type='LIDAR',\n                load_dim=5,\n                use_dim=5,\n                file_client_args=dict(backend='disk')),\n            dict(\n                type='LoadPointsFromMultiSweeps',\n                sweeps_num=9,\n                use_dim=[0, 1, 2, 3, 4],\n                file_client_args=dict(backend='disk'),\n                pad_empty_sweeps=True,\n                remove_close=True),\n            dict(\n                type='LoadAnnotations3D',\n                with_bbox_3d=True,\n                with_label_3d=True),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1333, 800),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='GlobalRotScaleTrans',\n                        rot_range=[0, 0],\n                        scale_ratio_range=[1.0, 1.0],\n                        translation_std=[0, 0, 0]),\n                    dict(type='RandomFlip3D'),\n                    dict(\n                        type='PointsRangeFilter',\n                        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        with_label=False),\n                    dict(\n                        type='Collect3D',\n                        keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=True,\n            use_camera=False,\n            use_radar=False,\n            use_map=False,\n            use_external=False),\n        test_mode=True,\n        box_type_3d='LiDAR'))\nevaluation = dict(\n    interval=5,\n    pipeline=[\n        dict(\n            type='LoadPointsFromFile',\n            coord_type='LIDAR',\n            load_dim=5,\n            use_dim=5,\n            file_client_args=dict(backend='disk')),\n        dict(\n            type='LoadPointsFromMultiSweeps',\n            sweeps_num=10,\n            file_client_args=dict(backend='disk')),\n        dict(\n            type='DefaultFormatBundle3D',\n            class_names=[\n                'car', 'truck', 'trailer', 'bus', 'construction_vehicle',\n                'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone',\n                'barrier'\n            ],\n            with_label=False),\n        dict(type='Collect3D', keys=['points'])\n    ])\noptimizer = dict(type='AdamW', lr=1.25e-05, weight_decay=0.01)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='cyclic',\n    target_ratio=(10, 0.0001),\n    cyclic_times=1,\n    step_ratio_up=0.4)\nmomentum_config = dict(\n    policy='cyclic',\n    target_ratio=(0.8947368421052632, 1),\n    cyclic_times=1,\n    step_ratio_up=0.4)\nrunner = dict(type='EpochBasedRunner', max_epochs=20)\ncheckpoint_config = dict(interval=1, max_keep_ckpts=1)\nlog_config = dict(\n    interval=50,\n    hooks=[dict(type='TextLoggerHook'),\n           dict(type='TensorboardLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nwork_dir = './work_dirs/lidar_0075v_900q_split14_hednetbackbone4_dss0511_num2_nomorton_noconv_noxy_norope_dp03_HUGE_expand2/cls\u589e\u5f3a\uff0cself-attn\u5806\u53e0dss\uff0c\u5c06RMSN\u6362\u4e3aLN'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nplugin = 'plugin/futr3d'\nvoxel_size = [0.075, 0.075, 0.2]\ncenter_head = dict(\n    type='CenterHead',\n    in_channels=512,\n    tasks=[\n        dict(num_class=1, class_names=['car']),\n        dict(num_class=2, class_names=['truck', 'construction_vehicle']),\n        dict(num_class=2, class_names=['bus', 'trailer']),\n        dict(num_class=1, class_names=['barrier']),\n        dict(num_class=2, class_names=['motorcycle', 'bicycle']),\n        dict(num_class=2, class_names=['pedestrian', 'traffic_cone'])\n    ],\n    common_heads=dict(\n        reg=(2, 2), height=(1, 2), dim=(3, 2), rot=(2, 2), vel=(2, 2)),\n    share_conv_channel=64,\n    bbox_coder=dict(\n        type='CenterPointBBoxCoder',\n        pc_range=[-54, -54],\n        post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],\n        max_num=500,\n        score_threshold=0.1,\n        out_size_factor=8,\n        voxel_size=[0.075, 0.075],\n        code_size=9),\n    separate_head=dict(type='SeparateHead', init_bias=-2.19, final_kernel=3),\n    loss_cls=dict(type='GaussianFocalLoss', reduction='mean'),\n    loss_bbox=dict(type='L1Loss', reduction='mean', loss_weight=0.25),\n    norm_bbox=True)\nmodel = dict(\n    type='FUTR3D',\n    aux_weight=0.5,\n    pts_voxel_layer=dict(\n        max_num_points=10,\n        voxel_size=[0.075, 0.075, 0.2],\n        max_voxels=(120000, 160000),\n        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n    pts_voxel_encoder=dict(type='HardSimpleVFE', num_features=5),\n    pts_middle_encoder=dict(\n        type='SparseEncoder',\n        in_channels=5,\n        sparse_shape=[41, 1440, 1440],\n        output_channels=128,\n        order=('conv', 'norm', 'act'),\n        encoder_channels=((16, 16, 32), (32, 32, 64), (64, 64, 128), (128,\n                                                                      128)),\n        encoder_paddings=((0, 0, 1), (0, 0, 1), (0, 0, [0, 1, 1]), (0, 0)),\n        block_type='basicblock'),\n    pts_backbone=dict(\n        type='CascadeDEDBackbone',\n        in_channels=256,\n        model_cfg=dict(\n            USE_SECONDMAMBA=False,\n            FEATURE_DIM=256,\n            NUM_LAYERS=4,\n            NUM_SBB=[2, 1, 1],\n            DOWN_STRIDES=[1, 2, 2])),\n    pts_neck=dict(\n        type='FPN',\n        norm_cfg=dict(type='BN2d', eps=0.001, momentum=0.01),\n        act_cfg=dict(type='ReLU', inplace=False),\n        in_channels=[256],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs=True,\n        num_outs=4,\n        relu_before_extra_convs=True),\n    pts_bbox_head=dict(\n        type='FUTR3DHead',\n        use_dab=True,\n        use_dss=True,\n        use_hybrid=False,\n        dss_drop_prob=0.3,\n        dss_mamba_version='DSSMamba_Huge_EP2',\n        dss_num_layers=2,\n        dss_use_morton=False,\n        dss_use_conv=False,\n        dss_use_xy=False,\n        dss_use_rope=False,\n        anchor_size=3,\n        use_aux=True,\n        aux_head=dict(\n            type='CenterHead',\n            in_channels=512,\n            tasks=[\n                dict(num_class=1, class_names=['car']),\n                dict(\n                    num_class=2, class_names=['truck',\n                                              'construction_vehicle']),\n                dict(num_class=2, class_names=['bus', 'trailer']),\n                dict(num_class=1, class_names=['barrier']),\n                dict(num_class=2, class_names=['motorcycle', 'bicycle']),\n                dict(num_class=2, class_names=['pedestrian', 'traffic_cone'])\n            ],\n            common_heads=dict(\n                reg=(2, 2), height=(1, 2), dim=(3, 2), rot=(2, 2), vel=(2, 2)),\n            share_conv_channel=64,\n            bbox_coder=dict(\n                type='CenterPointBBoxCoder',\n                pc_range=[-54, -54],\n                post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],\n                max_num=500,\n                score_threshold=0.1,\n                out_size_factor=8,\n                voxel_size=[0.075, 0.075],\n                code_size=9),\n            separate_head=dict(\n                type='SeparateHead', init_bias=-2.19, final_kernel=3),\n            loss_cls=dict(type='GaussianFocalLoss', reduction='mean'),\n            loss_bbox=dict(type='L1Loss', reduction='mean', loss_weight=0.25),\n            norm_bbox=True),\n        mix_selection=False,\n        num_query=900,\n        num_classes=10,\n        in_channels=256,\n        pc_range=[-54, -54, -5.0, 54, 54, 3.0],\n        sync_cls_avg_factor=True,\n        with_box_refine=True,\n        as_two_stage=False,\n        code_weights=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2],\n        transformer=dict(\n            type='FUTR3DTransformer',\n            use_dab=True,\n            decoder=dict(\n                type='FUTR3DTransformerDecoder',\n                num_layers=6,\n                use_dab=True,\n                anchor_size=3,\n                return_intermediate=True,\n                transformerlayers=dict(\n                    type='DetrTransformerDecoderLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='MultiheadAttention',\n                            embed_dims=256,\n                            num_heads=8,\n                            dropout=0.1),\n                        dict(type='FUTR3DAttention', embed_dims=256)\n                    ],\n                    feedforward_channels=1024,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm')))),\n        positional_encoding=dict(\n            type='SinePositionalEncoding',\n            num_feats=128,\n            normalize=True,\n            offset=-0.5),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=0.25),\n        loss_iou=dict(type='GIoULoss', loss_weight=0)),\n    train_cfg=dict(\n        pts=dict(\n            point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0],\n            pc_range=[-54, -54, -5.0, 54, 54, 3.0],\n            grid_size=[1440, 1440, 40],\n            voxel_size=[0.075, 0.075, 0.2],\n            out_size_factor=8,\n            dense_reg=1,\n            gaussian_overlap=0.1,\n            max_objs=500,\n            min_radius=2,\n            code_weights=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2],\n            assigner=dict(\n                type='HungarianAssigner3D',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(type='BBox3DL1Cost', weight=0.25),\n                iou_cost=dict(type='IoUCost', weight=0)))),\n    test_cfg=dict(\n        pts=dict(\n            pc_range=[-54, -54],\n            post_center_limit_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],\n            max_per_img=500,\n            max_pool_nms=False,\n            min_radius=[4, 12, 10, 1, 0.85, 0.175],\n            out_size_factor=8,\n            voxel_size=[0.075, 0.075],\n            nms_type='circle',\n            pre_max_size=1000,\n            post_max_size=83,\n            nms_thr=0.2,\n            max_num=300,\n            score_threshold=0,\n            post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0])))\ndb_sampler = dict(\n    data_root='data/nuscenes/',\n    info_path='data/nuscenes/nuscenes_dbinfos_train.pkl',\n    rate=1.0,\n    prepare=dict(\n        filter_by_difficulty=[-1],\n        filter_by_min_points=dict(\n            car=5,\n            truck=5,\n            bus=5,\n            trailer=5,\n            construction_vehicle=5,\n            traffic_cone=5,\n            barrier=5,\n            motorcycle=5,\n            bicycle=5,\n            pedestrian=5)),\n    classes=[\n        'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',\n        'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n    ],\n    sample_groups=dict(\n        car=2,\n        truck=3,\n        construction_vehicle=7,\n        bus=4,\n        trailer=6,\n        barrier=2,\n        motorcycle=6,\n        bicycle=6,\n        pedestrian=2,\n        traffic_cone=2),\n    points_loader=dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=5,\n        use_dim=[0, 1, 2, 3, 4],\n        file_client_args=dict(backend='disk')))\nfind_unused_parameters = True\ncustom_hooks = [dict(type='FadeOjectSampleHook', num_last_epochs=5)]\ngpu_ids = range(0, 2)\n", "seed": 0, "exp_name": "lidar_0075v_900q_split14_hednetbackbone4_dss0511_num2_nomorton_noconv_noxy_norope_dp03_HUGE_expand2.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 1e-05, "memory": 12270, "data_time": 0.07721, "loss_cls": 2.06631, "loss_bbox": 2.23736, "d0.loss_cls": 2.2065, "d0.loss_bbox": 4.37953, "d1.loss_cls": 2.1665, "d1.loss_bbox": 2.24916, "d2.loss_cls": 2.13395, "d2.loss_bbox": 2.24549, "d3.loss_cls": 2.07881, "d3.loss_bbox": 2.24282, "d4.loss_cls": 2.05697, "d4.loss_bbox": 2.23988, "aux_task0.loss_heatmap": 301.84174, "aux_task0.loss_bbox": 0.87874, "aux_task1.loss_heatmap": 675.18617, "aux_task1.loss_bbox": 1.02903, "aux_task2.loss_heatmap": 838.01955, "aux_task2.loss_bbox": 1.16543, "aux_task3.loss_heatmap": 791.78377, "aux_task3.loss_bbox": 0.86037, "aux_task4.loss_heatmap": 622.17379, "aux_task4.loss_bbox": 0.78783, "aux_task5.loss_heatmap": 756.95269, "aux_task5.loss_bbox": 0.76541, "loss": 4019.74778, "grad_norm": 19310.87523, "time": 1.21812}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 12271, "data_time": 0.00755, "loss_cls": 1.61091, "loss_bbox": 2.13168, "d0.loss_cls": 1.90227, "d0.loss_bbox": 4.22142, "d1.loss_cls": 1.77432, "d1.loss_bbox": 2.18871, "d2.loss_cls": 1.71784, "d2.loss_bbox": 2.17469, "d3.loss_cls": 1.67528, "d3.loss_bbox": 2.16188, "d4.loss_cls": 1.663, "d4.loss_bbox": 2.14649, "aux_task0.loss_heatmap": 192.62846, "aux_task0.loss_bbox": 0.75794, "aux_task1.loss_heatmap": 446.40307, "aux_task1.loss_bbox": 0.90481, "aux_task2.loss_heatmap": 545.49503, "aux_task2.loss_bbox": 1.01754, "aux_task3.loss_heatmap": 327.24783, "aux_task3.loss_bbox": 0.67023, "aux_task4.loss_heatmap": 399.08637, "aux_task4.loss_bbox": 0.65674, "aux_task5.loss_heatmap": 435.8987, "aux_task5.loss_bbox": 0.64963, "loss": 2376.78486, "grad_norm": 11718.86722, "time": 0.98494}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 1e-05, "memory": 12271, "data_time": 0.00581, "loss_cls": 1.23383, "loss_bbox": 1.91526, "d0.loss_cls": 1.3795, "d0.loss_bbox": 3.98636, "d1.loss_cls": 1.30962, "d1.loss_bbox": 2.07498, "d2.loss_cls": 1.2888, "d2.loss_bbox": 2.03064, "d3.loss_cls": 1.28645, "d3.loss_bbox": 1.98952, "d4.loss_cls": 1.26956, "d4.loss_bbox": 1.94753, "aux_task0.loss_heatmap": 103.14303, "aux_task0.loss_bbox": 0.63722, "aux_task1.loss_heatmap": 223.26371, "aux_task1.loss_bbox": 0.74441, "aux_task2.loss_heatmap": 300.61153, "aux_task2.loss_bbox": 0.87395, "aux_task3.loss_heatmap": 210.27861, "aux_task3.loss_bbox": 0.59624, "aux_task4.loss_heatmap": 236.62522, "aux_task4.loss_bbox": 0.55262, "aux_task5.loss_heatmap": 274.07168, "aux_task5.loss_bbox": 0.55805, "loss": 1373.66834, "grad_norm": 7892.55966, "time": 0.98159}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 1e-05, "memory": 12300, "data_time": 0.006, "loss_cls": 1.17033, "loss_bbox": 1.86616, "d0.loss_cls": 1.19261, "d0.loss_bbox": 3.12058, "d1.loss_cls": 1.176, "d1.loss_bbox": 1.85798, "d2.loss_cls": 1.18094, "d2.loss_bbox": 1.81948, "d3.loss_cls": 1.18219, "d3.loss_bbox": 1.81604, "d4.loss_cls": 1.18206, "d4.loss_bbox": 1.83348, "aux_task0.loss_heatmap": 68.67157, "aux_task0.loss_bbox": 0.54572, "aux_task1.loss_heatmap": 139.74113, "aux_task1.loss_bbox": 0.68001, "aux_task2.loss_heatmap": 165.34004, "aux_task2.loss_bbox": 0.78429, "aux_task3.loss_heatmap": 115.03075, "aux_task3.loss_bbox": 0.50679, "aux_task4.loss_heatmap": 142.5108, "aux_task4.loss_bbox": 0.49775, "aux_task5.loss_heatmap": 170.17133, "aux_task5.loss_bbox": 0.53626, "loss": 824.41426, "grad_norm": 5341.60963, "time": 0.97899}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 1e-05, "memory": 12300, "data_time": 0.00632, "loss_cls": 1.10371, "loss_bbox": 1.92781, "d0.loss_cls": 1.15086, "d0.loss_bbox": 2.03532, "d1.loss_cls": 1.14478, "d1.loss_bbox": 1.75966, "d2.loss_cls": 1.14429, "d2.loss_bbox": 1.80056, "d3.loss_cls": 1.13505, "d3.loss_bbox": 1.84696, "d4.loss_cls": 1.12844, "d4.loss_bbox": 1.88852, "aux_task0.loss_heatmap": 30.68345, "aux_task0.loss_bbox": 0.51202, "aux_task1.loss_heatmap": 88.06208, "aux_task1.loss_bbox": 0.6137, "aux_task2.loss_heatmap": 108.59656, "aux_task2.loss_bbox": 0.71845, "aux_task3.loss_heatmap": 56.90708, "aux_task3.loss_bbox": 0.50355, "aux_task4.loss_heatmap": 96.84366, "aux_task4.loss_bbox": 0.46798, "aux_task5.loss_heatmap": 93.02499, "aux_task5.loss_bbox": 0.51886, "loss": 495.51836, "grad_norm": 3366.30251, "time": 0.9809}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 1e-05, "memory": 12300, "data_time": 0.00672, "loss_cls": 1.0758, "loss_bbox": 1.82036, "d0.loss_cls": 1.15262, "d0.loss_bbox": 1.75379, "d1.loss_cls": 1.14556, "d1.loss_bbox": 1.74908, "d2.loss_cls": 1.12657, "d2.loss_bbox": 1.7788, "d3.loss_cls": 1.09004, "d3.loss_bbox": 1.80851, "d4.loss_cls": 1.08426, "d4.loss_bbox": 1.81695, "aux_task0.loss_heatmap": 20.81032, "aux_task0.loss_bbox": 0.47285, "aux_task1.loss_heatmap": 59.19456, "aux_task1.loss_bbox": 0.57472, "aux_task2.loss_heatmap": 71.14186, "aux_task2.loss_bbox": 0.64496, "aux_task3.loss_heatmap": 43.2885, "aux_task3.loss_bbox": 0.46764, "aux_task4.loss_heatmap": 62.23835, "aux_task4.loss_bbox": 0.45178, "aux_task5.loss_heatmap": 72.23122, "aux_task5.loss_bbox": 0.4872, "loss": 349.40633, "grad_norm": 2463.10069, "time": 0.98205}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 1e-05, "memory": 12300, "data_time": 0.0066, "loss_cls": 1.12122, "loss_bbox": 1.76138, "d0.loss_cls": 1.16504, "d0.loss_bbox": 1.73439, "d1.loss_cls": 1.15645, "d1.loss_bbox": 1.73905, "d2.loss_cls": 1.13445, "d2.loss_bbox": 1.76204, "d3.loss_cls": 1.11454, "d3.loss_bbox": 1.77475, "d4.loss_cls": 1.11696, "d4.loss_bbox": 1.76953, "aux_task0.loss_heatmap": 19.37487, "aux_task0.loss_bbox": 0.46974, "aux_task1.loss_heatmap": 39.88709, "aux_task1.loss_bbox": 0.55123, "aux_task2.loss_heatmap": 51.40371, "aux_task2.loss_bbox": 0.59277, "aux_task3.loss_heatmap": 31.26652, "aux_task3.loss_bbox": 0.44393, "aux_task4.loss_heatmap": 43.39311, "aux_task4.loss_bbox": 0.4435, "aux_task5.loss_heatmap": 49.54703, "aux_task5.loss_bbox": 0.47962, "loss": 255.20291, "grad_norm": 1831.5007, "time": 0.9832}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 1e-05, "memory": 12300, "data_time": 0.0065, "loss_cls": 1.11048, "loss_bbox": 1.73485, "d0.loss_cls": 1.13799, "d0.loss_bbox": 1.73547, "d1.loss_cls": 1.12207, "d1.loss_bbox": 1.73635, "d2.loss_cls": 1.11351, "d2.loss_bbox": 1.74425, "d3.loss_cls": 1.10345, "d3.loss_bbox": 1.74516, "d4.loss_cls": 1.1071, "d4.loss_bbox": 1.73773, "aux_task0.loss_heatmap": 10.38004, "aux_task0.loss_bbox": 0.45374, "aux_task1.loss_heatmap": 27.64662, "aux_task1.loss_bbox": 0.55453, "aux_task2.loss_heatmap": 35.34413, "aux_task2.loss_bbox": 0.5742, "aux_task3.loss_heatmap": 23.09406, "aux_task3.loss_bbox": 0.45127, "aux_task4.loss_heatmap": 30.35475, "aux_task4.loss_bbox": 0.44311, "aux_task5.loss_heatmap": 32.14161, "aux_task5.loss_bbox": 0.48234, "loss": 179.04882, "grad_norm": 1285.84699, "time": 0.97966}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 1e-05, "memory": 12300, "data_time": 0.00658, "loss_cls": 1.0989, "loss_bbox": 1.71823, "d0.loss_cls": 1.13426, "d0.loss_bbox": 1.74623, "d1.loss_cls": 1.12019, "d1.loss_bbox": 1.73985, "d2.loss_cls": 1.11994, "d2.loss_bbox": 1.74287, "d3.loss_cls": 1.10521, "d3.loss_bbox": 1.74151, "d4.loss_cls": 1.10087, "d4.loss_bbox": 1.72838, "aux_task0.loss_heatmap": 10.17941, "aux_task0.loss_bbox": 0.43761, "aux_task1.loss_heatmap": 18.20786, "aux_task1.loss_bbox": 0.51972, "aux_task2.loss_heatmap": 22.18755, "aux_task2.loss_bbox": 0.54371, "aux_task3.loss_heatmap": 13.20535, "aux_task3.loss_bbox": 0.43169, "aux_task4.loss_heatmap": 20.5418, "aux_task4.loss_bbox": 0.4431, "aux_task5.loss_heatmap": 21.24461, "aux_task5.loss_bbox": 0.47001, "loss": 125.50883, "grad_norm": 858.49534, "time": 0.99068}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 1e-05, "memory": 12300, "data_time": 0.0065, "loss_cls": 1.06537, "loss_bbox": 1.70462, "d0.loss_cls": 1.12612, "d0.loss_bbox": 1.73818, "d1.loss_cls": 1.09437, "d1.loss_bbox": 1.74976, "d2.loss_cls": 1.09909, "d2.loss_bbox": 1.73738, "d3.loss_cls": 1.07623, "d3.loss_bbox": 1.72414, "d4.loss_cls": 1.07073, "d4.loss_bbox": 1.70648, "aux_task0.loss_heatmap": 6.1394, "aux_task0.loss_bbox": 0.45203, "aux_task1.loss_heatmap": 12.44386, "aux_task1.loss_bbox": 0.5155, "aux_task2.loss_heatmap": 17.3101, "aux_task2.loss_bbox": 0.53786, "aux_task3.loss_heatmap": 9.42072, "aux_task3.loss_bbox": 0.42297, "aux_task4.loss_heatmap": 13.94865, "aux_task4.loss_bbox": 0.43993, "aux_task5.loss_heatmap": 15.46524, "aux_task5.loss_bbox": 0.48277, "loss": 94.47151, "grad_norm": 621.90375, "time": 0.97951}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 1e-05, "memory": 12300, "data_time": 0.00671, "loss_cls": 1.04381, "loss_bbox": 1.71063, "d0.loss_cls": 1.10425, "d0.loss_bbox": 1.75174, "d1.loss_cls": 1.0765, "d1.loss_bbox": 1.74227, "d2.loss_cls": 1.07372, "d2.loss_bbox": 1.72383, "d3.loss_cls": 1.04642, "d3.loss_bbox": 1.71017, "d4.loss_cls": 1.04275, "d4.loss_bbox": 1.71175, "aux_task0.loss_heatmap": 5.0299, "aux_task0.loss_bbox": 0.45485, "aux_task1.loss_heatmap": 8.03565, "aux_task1.loss_bbox": 0.50588, "aux_task2.loss_heatmap": 10.4878, "aux_task2.loss_bbox": 0.53237, "aux_task3.loss_heatmap": 7.14309, "aux_task3.loss_bbox": 0.42675, "aux_task4.loss_heatmap": 9.825, "aux_task4.loss_bbox": 0.42434, "aux_task5.loss_heatmap": 10.25701, "aux_task5.loss_bbox": 0.47594, "loss": 70.33644, "grad_norm": 422.05522, "time": 0.98045}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 1e-05, "memory": 12359, "data_time": 0.00625, "loss_cls": 1.05488, "loss_bbox": 1.69243, "d0.loss_cls": 1.11042, "d0.loss_bbox": 1.75181, "d1.loss_cls": 1.08483, "d1.loss_bbox": 1.74137, "d2.loss_cls": 1.0691, "d2.loss_bbox": 1.71111, "d3.loss_cls": 1.05113, "d3.loss_bbox": 1.70107, "d4.loss_cls": 1.05221, "d4.loss_bbox": 1.69497, "aux_task0.loss_heatmap": 3.99929, "aux_task0.loss_bbox": 0.45799, "aux_task1.loss_heatmap": 5.71214, "aux_task1.loss_bbox": 0.50268, "aux_task2.loss_heatmap": 7.24597, "aux_task2.loss_bbox": 0.53142, "aux_task3.loss_heatmap": 6.18118, "aux_task3.loss_bbox": 0.42357, "aux_task4.loss_heatmap": 6.84235, "aux_task4.loss_bbox": 0.43135, "aux_task5.loss_heatmap": 7.5444, "aux_task5.loss_bbox": 0.47024, "loss": 57.05788, "grad_norm": 303.11876, "time": 1.01632}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 1e-05, "memory": 12359, "data_time": 0.00683, "loss_cls": 1.04347, "loss_bbox": 1.70587, "d0.loss_cls": 1.09711, "d0.loss_bbox": 1.77045, "d1.loss_cls": 1.06246, "d1.loss_bbox": 1.74597, "d2.loss_cls": 1.04934, "d2.loss_bbox": 1.72858, "d3.loss_cls": 1.03859, "d3.loss_bbox": 1.72023, "d4.loss_cls": 1.039, "d4.loss_bbox": 1.71411, "aux_task0.loss_heatmap": 3.26673, "aux_task0.loss_bbox": 0.46664, "aux_task1.loss_heatmap": 4.20517, "aux_task1.loss_bbox": 0.51658, "aux_task2.loss_heatmap": 5.07336, "aux_task2.loss_bbox": 0.52651, "aux_task3.loss_heatmap": 4.10482, "aux_task3.loss_bbox": 0.43487, "aux_task4.loss_heatmap": 4.87246, "aux_task4.loss_bbox": 0.4373, "aux_task5.loss_heatmap": 5.27115, "aux_task5.loss_bbox": 0.47398, "loss": 46.36476, "grad_norm": 199.00034, "time": 0.97809}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 1e-05, "memory": 12359, "data_time": 0.00641, "loss_cls": 1.0403, "loss_bbox": 1.66856, "d0.loss_cls": 1.08981, "d0.loss_bbox": 1.7497, "d1.loss_cls": 1.04242, "d1.loss_bbox": 1.72649, "d2.loss_cls": 1.03428, "d2.loss_bbox": 1.699, "d3.loss_cls": 1.03379, "d3.loss_bbox": 1.68554, "d4.loss_cls": 1.03609, "d4.loss_bbox": 1.67889, "aux_task0.loss_heatmap": 2.4788, "aux_task0.loss_bbox": 0.4579, "aux_task1.loss_heatmap": 3.19105, "aux_task1.loss_bbox": 0.51484, "aux_task2.loss_heatmap": 3.9424, "aux_task2.loss_bbox": 0.49922, "aux_task3.loss_heatmap": 3.46284, "aux_task3.loss_bbox": 0.41933, "aux_task4.loss_heatmap": 3.66996, "aux_task4.loss_bbox": 0.43321, "aux_task5.loss_heatmap": 3.79284, "aux_task5.loss_bbox": 0.47015, "loss": 39.81738, "grad_norm": 139.83135, "time": 0.97819}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 1e-05, "memory": 12359, "data_time": 0.0063, "loss_cls": 1.03571, "loss_bbox": 1.67196, "d0.loss_cls": 1.08373, "d0.loss_bbox": 1.75106, "d1.loss_cls": 1.02843, "d1.loss_bbox": 1.7197, "d2.loss_cls": 1.02567, "d2.loss_bbox": 1.69882, "d3.loss_cls": 1.02265, "d3.loss_bbox": 1.68584, "d4.loss_cls": 1.02797, "d4.loss_bbox": 1.67998, "aux_task0.loss_heatmap": 2.15971, "aux_task0.loss_bbox": 0.44895, "aux_task1.loss_heatmap": 2.55106, "aux_task1.loss_bbox": 0.50236, "aux_task2.loss_heatmap": 3.00364, "aux_task2.loss_bbox": 0.48849, "aux_task3.loss_heatmap": 2.46689, "aux_task3.loss_bbox": 0.42154, "aux_task4.loss_heatmap": 2.79973, "aux_task4.loss_bbox": 0.44084, "aux_task5.loss_heatmap": 2.96669, "aux_task5.loss_bbox": 0.46964, "loss": 35.15108, "grad_norm": 89.74457, "time": 0.98271}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 1e-05, "memory": 12359, "data_time": 0.00622, "loss_cls": 1.02136, "loss_bbox": 1.64267, "d0.loss_cls": 1.07348, "d0.loss_bbox": 1.71548, "d1.loss_cls": 1.00273, "d1.loss_bbox": 1.68443, "d2.loss_cls": 1.0064, "d2.loss_bbox": 1.65963, "d3.loss_cls": 1.0129, "d3.loss_bbox": 1.64537, "d4.loss_cls": 1.01574, "d4.loss_bbox": 1.64535, "aux_task0.loss_heatmap": 1.79738, "aux_task0.loss_bbox": 0.45858, "aux_task1.loss_heatmap": 2.14042, "aux_task1.loss_bbox": 0.49067, "aux_task2.loss_heatmap": 2.49967, "aux_task2.loss_bbox": 0.49266, "aux_task3.loss_heatmap": 2.32043, "aux_task3.loss_bbox": 0.41023, "aux_task4.loss_heatmap": 2.32105, "aux_task4.loss_bbox": 0.42773, "aux_task5.loss_heatmap": 2.39306, "aux_task5.loss_bbox": 0.46264, "loss": 32.34006, "grad_norm": 68.07281, "time": 0.9819}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 1e-05, "memory": 12359, "data_time": 0.00628, "loss_cls": 1.03603, "loss_bbox": 1.65417, "d0.loss_cls": 1.08284, "d0.loss_bbox": 1.73491, "d1.loss_cls": 1.01315, "d1.loss_bbox": 1.69438, "d2.loss_cls": 1.02646, "d2.loss_bbox": 1.66291, "d3.loss_cls": 1.03344, "d3.loss_bbox": 1.65428, "d4.loss_cls": 1.03237, "d4.loss_bbox": 1.65902, "aux_task0.loss_heatmap": 1.7159, "aux_task0.loss_bbox": 0.4401, "aux_task1.loss_heatmap": 1.94602, "aux_task1.loss_bbox": 0.50276, "aux_task2.loss_heatmap": 2.13758, "aux_task2.loss_bbox": 0.50478, "aux_task3.loss_heatmap": 1.94841, "aux_task3.loss_bbox": 0.41147, "aux_task4.loss_heatmap": 1.99302, "aux_task4.loss_bbox": 0.43131, "aux_task5.loss_heatmap": 2.14713, "aux_task5.loss_bbox": 0.46563, "loss": 30.92805, "grad_norm": 51.59435, "time": 0.98439}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 1e-05, "memory": 12359, "data_time": 0.0062, "loss_cls": 1.03048, "loss_bbox": 1.65948, "d0.loss_cls": 1.07649, "d0.loss_bbox": 1.7473, "d1.loss_cls": 1.01687, "d1.loss_bbox": 1.69727, "d2.loss_cls": 1.02227, "d2.loss_bbox": 1.6762, "d3.loss_cls": 1.02622, "d3.loss_bbox": 1.66976, "d4.loss_cls": 1.0262, "d4.loss_bbox": 1.6651, "aux_task0.loss_heatmap": 1.58226, "aux_task0.loss_bbox": 0.44939, "aux_task1.loss_heatmap": 1.82533, "aux_task1.loss_bbox": 0.50302, "aux_task2.loss_heatmap": 2.00208, "aux_task2.loss_bbox": 0.50515, "aux_task3.loss_heatmap": 1.82704, "aux_task3.loss_bbox": 0.41077, "aux_task4.loss_heatmap": 1.78355, "aux_task4.loss_bbox": 0.43088, "aux_task5.loss_heatmap": 1.82804, "aux_task5.loss_bbox": 0.46805, "loss": 29.92921, "grad_norm": 43.96203, "time": 0.98117}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 1e-05, "memory": 12369, "data_time": 0.00639, "loss_cls": 0.99988, "loss_bbox": 1.66585, "d0.loss_cls": 1.05152, "d0.loss_bbox": 1.75128, "d1.loss_cls": 0.99137, "d1.loss_bbox": 1.67197, "d2.loss_cls": 0.9932, "d2.loss_bbox": 1.67088, "d3.loss_cls": 0.99512, "d3.loss_bbox": 1.6707, "d4.loss_cls": 0.99832, "d4.loss_bbox": 1.66624, "aux_task0.loss_heatmap": 1.51649, "aux_task0.loss_bbox": 0.45946, "aux_task1.loss_heatmap": 1.71964, "aux_task1.loss_bbox": 0.50227, "aux_task2.loss_heatmap": 1.83383, "aux_task2.loss_bbox": 0.47496, "aux_task3.loss_heatmap": 1.64292, "aux_task3.loss_bbox": 0.40864, "aux_task4.loss_heatmap": 1.61723, "aux_task4.loss_bbox": 0.42615, "aux_task5.loss_heatmap": 1.6396, "aux_task5.loss_bbox": 0.4562, "loss": 28.82373, "grad_norm": 37.39306, "time": 0.98311}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 1e-05, "memory": 12369, "data_time": 0.00597, "loss_cls": 0.98958, "loss_bbox": 1.62663, "d0.loss_cls": 1.06475, "d0.loss_bbox": 1.70723, "d1.loss_cls": 0.9919, "d1.loss_bbox": 1.65381, "d2.loss_cls": 0.98357, "d2.loss_bbox": 1.63955, "d3.loss_cls": 0.98885, "d3.loss_bbox": 1.63452, "d4.loss_cls": 0.98978, "d4.loss_bbox": 1.63333, "aux_task0.loss_heatmap": 1.51726, "aux_task0.loss_bbox": 0.45775, "aux_task1.loss_heatmap": 1.63497, "aux_task1.loss_bbox": 0.48283, "aux_task2.loss_heatmap": 1.84901, "aux_task2.loss_bbox": 0.4884, "aux_task3.loss_heatmap": 1.6388, "aux_task3.loss_bbox": 0.42367, "aux_task4.loss_heatmap": 1.50594, "aux_task4.loss_bbox": 0.42532, "aux_task5.loss_heatmap": 1.62505, "aux_task5.loss_bbox": 0.4652, "loss": 28.41773, "grad_norm": 39.7818, "time": 0.98269}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 1e-05, "memory": 12369, "data_time": 0.0056, "loss_cls": 0.96263, "loss_bbox": 1.66147, "d0.loss_cls": 1.04388, "d0.loss_bbox": 1.7498, "d1.loss_cls": 0.96886, "d1.loss_bbox": 1.68922, "d2.loss_cls": 0.96022, "d2.loss_bbox": 1.67684, "d3.loss_cls": 0.9645, "d3.loss_bbox": 1.67436, "d4.loss_cls": 0.96408, "d4.loss_bbox": 1.67383, "aux_task0.loss_heatmap": 1.42059, "aux_task0.loss_bbox": 0.45271, "aux_task1.loss_heatmap": 1.57928, "aux_task1.loss_bbox": 0.4893, "aux_task2.loss_heatmap": 1.77421, "aux_task2.loss_bbox": 0.49738, "aux_task3.loss_heatmap": 1.5325, "aux_task3.loss_bbox": 0.4189, "aux_task4.loss_heatmap": 1.42632, "aux_task4.loss_bbox": 0.43176, "aux_task5.loss_heatmap": 1.55383, "aux_task5.loss_bbox": 0.46387, "loss": 28.03034, "grad_norm": 36.63999, "time": 0.98331}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 1e-05, "memory": 12369, "data_time": 0.00648, "loss_cls": 0.94081, "loss_bbox": 1.64844, "d0.loss_cls": 1.02861, "d0.loss_bbox": 1.73446, "d1.loss_cls": 0.95138, "d1.loss_bbox": 1.66924, "d2.loss_cls": 0.94077, "d2.loss_bbox": 1.65959, "d3.loss_cls": 0.94025, "d3.loss_bbox": 1.65507, "d4.loss_cls": 0.93927, "d4.loss_bbox": 1.64703, "aux_task0.loss_heatmap": 1.4003, "aux_task0.loss_bbox": 0.44913, "aux_task1.loss_heatmap": 1.57193, "aux_task1.loss_bbox": 0.49643, "aux_task2.loss_heatmap": 1.78691, "aux_task2.loss_bbox": 0.49374, "aux_task3.loss_heatmap": 1.4819, "aux_task3.loss_bbox": 0.41697, "aux_task4.loss_heatmap": 1.31003, "aux_task4.loss_bbox": 0.42564, "aux_task5.loss_heatmap": 1.46254, "aux_task5.loss_bbox": 0.45719, "loss": 27.50765, "grad_norm": 35.06589, "time": 0.98086}
{"mode": "train", "epoch": 1, "iter": 1150, "lr": 1e-05, "memory": 12369, "data_time": 0.00623, "loss_cls": 0.93369, "loss_bbox": 1.63234, "d0.loss_cls": 1.01472, "d0.loss_bbox": 1.72344, "d1.loss_cls": 0.94698, "d1.loss_bbox": 1.65675, "d2.loss_cls": 0.93542, "d2.loss_bbox": 1.65335, "d3.loss_cls": 0.93719, "d3.loss_bbox": 1.64333, "d4.loss_cls": 0.93511, "d4.loss_bbox": 1.63734, "aux_task0.loss_heatmap": 1.36719, "aux_task0.loss_bbox": 0.43059, "aux_task1.loss_heatmap": 1.55378, "aux_task1.loss_bbox": 0.47587, "aux_task2.loss_heatmap": 1.75615, "aux_task2.loss_bbox": 0.4993, "aux_task3.loss_heatmap": 1.46037, "aux_task3.loss_bbox": 0.41342, "aux_task4.loss_heatmap": 1.25602, "aux_task4.loss_bbox": 0.41926, "aux_task5.loss_heatmap": 1.44824, "aux_task5.loss_bbox": 0.44861, "loss": 27.17848, "grad_norm": 34.87049, "time": 0.98277}
{"mode": "train", "epoch": 1, "iter": 1200, "lr": 1e-05, "memory": 12369, "data_time": 0.00665, "loss_cls": 0.92419, "loss_bbox": 1.60396, "d0.loss_cls": 1.00148, "d0.loss_bbox": 1.71038, "d1.loss_cls": 0.93187, "d1.loss_bbox": 1.63932, "d2.loss_cls": 0.92164, "d2.loss_bbox": 1.63043, "d3.loss_cls": 0.92335, "d3.loss_bbox": 1.61716, "d4.loss_cls": 0.92191, "d4.loss_bbox": 1.61107, "aux_task0.loss_heatmap": 1.32154, "aux_task0.loss_bbox": 0.42057, "aux_task1.loss_heatmap": 1.54806, "aux_task1.loss_bbox": 0.45937, "aux_task2.loss_heatmap": 1.73752, "aux_task2.loss_bbox": 0.48775, "aux_task3.loss_heatmap": 1.4536, "aux_task3.loss_bbox": 0.40113, "aux_task4.loss_heatmap": 1.19273, "aux_task4.loss_bbox": 0.41158, "aux_task5.loss_heatmap": 1.41507, "aux_task5.loss_bbox": 0.44705, "loss": 26.73273, "grad_norm": 34.65567, "time": 1.02151}
{"mode": "train", "epoch": 1, "iter": 1250, "lr": 1e-05, "memory": 12369, "data_time": 0.00643, "loss_cls": 0.93389, "loss_bbox": 1.61612, "d0.loss_cls": 1.00904, "d0.loss_bbox": 1.71644, "d1.loss_cls": 0.94343, "d1.loss_bbox": 1.65358, "d2.loss_cls": 0.93273, "d2.loss_bbox": 1.64247, "d3.loss_cls": 0.93074, "d3.loss_bbox": 1.62935, "d4.loss_cls": 0.92878, "d4.loss_bbox": 1.62437, "aux_task0.loss_heatmap": 1.41113, "aux_task0.loss_bbox": 0.43292, "aux_task1.loss_heatmap": 1.49027, "aux_task1.loss_bbox": 0.45431, "aux_task2.loss_heatmap": 1.72809, "aux_task2.loss_bbox": 0.4868, "aux_task3.loss_heatmap": 1.44497, "aux_task3.loss_bbox": 0.38859, "aux_task4.loss_heatmap": 1.18951, "aux_task4.loss_bbox": 0.41459, "aux_task5.loss_heatmap": 1.40399, "aux_task5.loss_bbox": 0.43708, "loss": 26.84319, "grad_norm": 35.60179, "time": 0.98646}
{"mode": "train", "epoch": 1, "iter": 1300, "lr": 1e-05, "memory": 12369, "data_time": 0.00694, "loss_cls": 0.92114, "loss_bbox": 1.57901, "d0.loss_cls": 0.9855, "d0.loss_bbox": 1.69864, "d1.loss_cls": 0.92621, "d1.loss_bbox": 1.63735, "d2.loss_cls": 0.91396, "d2.loss_bbox": 1.62472, "d3.loss_cls": 0.91292, "d3.loss_bbox": 1.60633, "d4.loss_cls": 0.91585, "d4.loss_bbox": 1.59386, "aux_task0.loss_heatmap": 1.33321, "aux_task0.loss_bbox": 0.41187, "aux_task1.loss_heatmap": 1.48723, "aux_task1.loss_bbox": 0.45416, "aux_task2.loss_heatmap": 1.73217, "aux_task2.loss_bbox": 0.49237, "aux_task3.loss_heatmap": 1.47363, "aux_task3.loss_bbox": 0.38257, "aux_task4.loss_heatmap": 1.1667, "aux_task4.loss_bbox": 0.39566, "aux_task5.loss_heatmap": 1.36522, "aux_task5.loss_bbox": 0.42746, "loss": 26.43773, "grad_norm": 40.92235, "time": 0.97934}
{"mode": "train", "epoch": 1, "iter": 1350, "lr": 1e-05, "memory": 12369, "data_time": 0.00646, "loss_cls": 0.90641, "loss_bbox": 1.57374, "d0.loss_cls": 0.97139, "d0.loss_bbox": 1.69877, "d1.loss_cls": 0.91335, "d1.loss_bbox": 1.63662, "d2.loss_cls": 0.90486, "d2.loss_bbox": 1.61494, "d3.loss_cls": 0.90806, "d3.loss_bbox": 1.59084, "d4.loss_cls": 0.90533, "d4.loss_bbox": 1.58043, "aux_task0.loss_heatmap": 1.30665, "aux_task0.loss_bbox": 0.41632, "aux_task1.loss_heatmap": 1.47455, "aux_task1.loss_bbox": 0.44511, "aux_task2.loss_heatmap": 1.70321, "aux_task2.loss_bbox": 0.48702, "aux_task3.loss_heatmap": 1.37943, "aux_task3.loss_bbox": 0.38359, "aux_task4.loss_heatmap": 1.10434, "aux_task4.loss_bbox": 0.38516, "aux_task5.loss_heatmap": 1.31755, "aux_task5.loss_bbox": 0.41812, "loss": 26.02579, "grad_norm": 33.03671, "time": 0.98306}
{"mode": "train", "epoch": 1, "iter": 1400, "lr": 1e-05, "memory": 12369, "data_time": 0.00627, "loss_cls": 0.91914, "loss_bbox": 1.55312, "d0.loss_cls": 0.96844, "d0.loss_bbox": 1.69584, "d1.loss_cls": 0.91847, "d1.loss_bbox": 1.6308, "d2.loss_cls": 0.91509, "d2.loss_bbox": 1.60599, "d3.loss_cls": 0.91486, "d3.loss_bbox": 1.57806, "d4.loss_cls": 0.91467, "d4.loss_bbox": 1.56456, "aux_task0.loss_heatmap": 1.33303, "aux_task0.loss_bbox": 0.40633, "aux_task1.loss_heatmap": 1.45853, "aux_task1.loss_bbox": 0.42647, "aux_task2.loss_heatmap": 1.70198, "aux_task2.loss_bbox": 0.4661, "aux_task3.loss_heatmap": 1.38893, "aux_task3.loss_bbox": 0.37356, "aux_task4.loss_heatmap": 1.08905, "aux_task4.loss_bbox": 0.38749, "aux_task5.loss_heatmap": 1.28636, "aux_task5.loss_bbox": 0.40129, "loss": 25.89816, "grad_norm": 34.9882, "time": 0.98693}
{"mode": "train", "epoch": 1, "iter": 1450, "lr": 1e-05, "memory": 12369, "data_time": 0.0063, "loss_cls": 0.90502, "loss_bbox": 1.53783, "d0.loss_cls": 0.96018, "d0.loss_bbox": 1.68224, "d1.loss_cls": 0.90882, "d1.loss_bbox": 1.61818, "d2.loss_cls": 0.90487, "d2.loss_bbox": 1.58522, "d3.loss_cls": 0.90524, "d3.loss_bbox": 1.55972, "d4.loss_cls": 0.90436, "d4.loss_bbox": 1.54638, "aux_task0.loss_heatmap": 1.29136, "aux_task0.loss_bbox": 0.39701, "aux_task1.loss_heatmap": 1.47079, "aux_task1.loss_bbox": 0.42897, "aux_task2.loss_heatmap": 1.69073, "aux_task2.loss_bbox": 0.47764, "aux_task3.loss_heatmap": 1.33908, "aux_task3.loss_bbox": 0.36033, "aux_task4.loss_heatmap": 1.07348, "aux_task4.loss_bbox": 0.38583, "aux_task5.loss_heatmap": 1.28644, "aux_task5.loss_bbox": 0.40729, "loss": 25.627, "grad_norm": 35.32607, "time": 0.98076}
{"mode": "train", "epoch": 1, "iter": 1500, "lr": 1e-05, "memory": 12375, "data_time": 0.00663, "loss_cls": 0.90371, "loss_bbox": 1.51609, "d0.loss_cls": 0.95108, "d0.loss_bbox": 1.67258, "d1.loss_cls": 0.90422, "d1.loss_bbox": 1.6148, "d2.loss_cls": 0.89897, "d2.loss_bbox": 1.57611, "d3.loss_cls": 0.89964, "d3.loss_bbox": 1.54568, "d4.loss_cls": 0.89952, "d4.loss_bbox": 1.52861, "aux_task0.loss_heatmap": 1.29876, "aux_task0.loss_bbox": 0.38207, "aux_task1.loss_heatmap": 1.44984, "aux_task1.loss_bbox": 0.42823, "aux_task2.loss_heatmap": 1.70987, "aux_task2.loss_bbox": 0.45415, "aux_task3.loss_heatmap": 1.3423, "aux_task3.loss_bbox": 0.36753, "aux_task4.loss_heatmap": 1.06994, "aux_task4.loss_bbox": 0.38605, "aux_task5.loss_heatmap": 1.30953, "aux_task5.loss_bbox": 0.40125, "loss": 25.51055, "grad_norm": 36.19099, "time": 0.98589}
{"mode": "train", "epoch": 1, "iter": 1550, "lr": 1e-05, "memory": 12375, "data_time": 0.00701, "loss_cls": 0.90404, "loss_bbox": 1.48706, "d0.loss_cls": 0.94422, "d0.loss_bbox": 1.67248, "d1.loss_cls": 0.89863, "d1.loss_bbox": 1.60389, "d2.loss_cls": 0.89599, "d2.loss_bbox": 1.55045, "d3.loss_cls": 0.89803, "d3.loss_bbox": 1.5179, "d4.loss_cls": 0.90042, "d4.loss_bbox": 1.49642, "aux_task0.loss_heatmap": 1.24536, "aux_task0.loss_bbox": 0.38776, "aux_task1.loss_heatmap": 1.45825, "aux_task1.loss_bbox": 0.41919, "aux_task2.loss_heatmap": 1.70194, "aux_task2.loss_bbox": 0.45924, "aux_task3.loss_heatmap": 1.30829, "aux_task3.loss_bbox": 0.35601, "aux_task4.loss_heatmap": 1.0123, "aux_task4.loss_bbox": 0.36686, "aux_task5.loss_heatmap": 1.2361, "aux_task5.loss_bbox": 0.38601, "loss": 25.10684, "grad_norm": 36.08518, "time": 0.97886}
{"mode": "train", "epoch": 1, "iter": 1600, "lr": 1e-05, "memory": 12375, "data_time": 0.00613, "loss_cls": 0.89968, "loss_bbox": 1.45154, "d0.loss_cls": 0.93801, "d0.loss_bbox": 1.65134, "d1.loss_cls": 0.89706, "d1.loss_bbox": 1.5826, "d2.loss_cls": 0.89425, "d2.loss_bbox": 1.51956, "d3.loss_cls": 0.89422, "d3.loss_bbox": 1.48515, "d4.loss_cls": 0.89725, "d4.loss_bbox": 1.46341, "aux_task0.loss_heatmap": 1.23298, "aux_task0.loss_bbox": 0.39167, "aux_task1.loss_heatmap": 1.43539, "aux_task1.loss_bbox": 0.4149, "aux_task2.loss_heatmap": 1.67874, "aux_task2.loss_bbox": 0.4487, "aux_task3.loss_heatmap": 1.3072, "aux_task3.loss_bbox": 0.35188, "aux_task4.loss_heatmap": 1.02977, "aux_task4.loss_bbox": 0.37352, "aux_task5.loss_heatmap": 1.21029, "aux_task5.loss_bbox": 0.38957, "loss": 24.83867, "grad_norm": 36.68255, "time": 0.98206}
{"mode": "train", "epoch": 1, "iter": 1650, "lr": 1e-05, "memory": 12375, "data_time": 0.00645, "loss_cls": 0.9113, "loss_bbox": 1.43925, "d0.loss_cls": 0.94011, "d0.loss_bbox": 1.64456, "d1.loss_cls": 0.90313, "d1.loss_bbox": 1.57516, "d2.loss_cls": 0.90352, "d2.loss_bbox": 1.49977, "d3.loss_cls": 0.90788, "d3.loss_bbox": 1.46768, "d4.loss_cls": 0.90777, "d4.loss_bbox": 1.44962, "aux_task0.loss_heatmap": 1.20071, "aux_task0.loss_bbox": 0.37659, "aux_task1.loss_heatmap": 1.42549, "aux_task1.loss_bbox": 0.42205, "aux_task2.loss_heatmap": 1.66371, "aux_task2.loss_bbox": 0.45365, "aux_task3.loss_heatmap": 1.35693, "aux_task3.loss_bbox": 0.35353, "aux_task4.loss_heatmap": 0.99374, "aux_task4.loss_bbox": 0.373, "aux_task5.loss_heatmap": 1.20955, "aux_task5.loss_bbox": 0.38519, "loss": 24.76389, "grad_norm": 39.19715, "time": 0.98035}
{"mode": "train", "epoch": 1, "iter": 1700, "lr": 2e-05, "memory": 12375, "data_time": 0.00628, "loss_cls": 0.89999, "loss_bbox": 1.42963, "d0.loss_cls": 0.92898, "d0.loss_bbox": 1.6384, "d1.loss_cls": 0.89195, "d1.loss_bbox": 1.57367, "d2.loss_cls": 0.89233, "d2.loss_bbox": 1.49408, "d3.loss_cls": 0.89425, "d3.loss_bbox": 1.46024, "d4.loss_cls": 0.89714, "d4.loss_bbox": 1.43906, "aux_task0.loss_heatmap": 1.2139, "aux_task0.loss_bbox": 0.37693, "aux_task1.loss_heatmap": 1.42068, "aux_task1.loss_bbox": 0.41808, "aux_task2.loss_heatmap": 1.66143, "aux_task2.loss_bbox": 0.45622, "aux_task3.loss_heatmap": 1.32025, "aux_task3.loss_bbox": 0.34979, "aux_task4.loss_heatmap": 0.97468, "aux_task4.loss_bbox": 0.36099, "aux_task5.loss_heatmap": 1.19619, "aux_task5.loss_bbox": 0.38382, "loss": 24.57268, "grad_norm": 38.77592, "time": 0.97971}
{"mode": "train", "epoch": 1, "iter": 1750, "lr": 2e-05, "memory": 12441, "data_time": 0.00609, "loss_cls": 0.89801, "loss_bbox": 1.41112, "d0.loss_cls": 0.92743, "d0.loss_bbox": 1.63483, "d1.loss_cls": 0.89375, "d1.loss_bbox": 1.55944, "d2.loss_cls": 0.8917, "d2.loss_bbox": 1.47549, "d3.loss_cls": 0.89261, "d3.loss_bbox": 1.44218, "d4.loss_cls": 0.89601, "d4.loss_bbox": 1.42163, "aux_task0.loss_heatmap": 1.18977, "aux_task0.loss_bbox": 0.37535, "aux_task1.loss_heatmap": 1.42988, "aux_task1.loss_bbox": 0.40766, "aux_task2.loss_heatmap": 1.66027, "aux_task2.loss_bbox": 0.45895, "aux_task3.loss_heatmap": 1.28966, "aux_task3.loss_bbox": 0.35812, "aux_task4.loss_heatmap": 0.97861, "aux_task4.loss_bbox": 0.36504, "aux_task5.loss_heatmap": 1.21086, "aux_task5.loss_bbox": 0.38813, "loss": 24.45649, "grad_norm": 39.08939, "time": 0.98639}
{"mode": "train", "epoch": 1, "iter": 1800, "lr": 2e-05, "memory": 12441, "data_time": 0.00603, "loss_cls": 0.90327, "loss_bbox": 1.40125, "d0.loss_cls": 0.93599, "d0.loss_bbox": 1.62884, "d1.loss_cls": 0.89945, "d1.loss_bbox": 1.54389, "d2.loss_cls": 0.8984, "d2.loss_bbox": 1.46149, "d3.loss_cls": 0.89934, "d3.loss_bbox": 1.43009, "d4.loss_cls": 0.90026, "d4.loss_bbox": 1.41091, "aux_task0.loss_heatmap": 1.21836, "aux_task0.loss_bbox": 0.38185, "aux_task1.loss_heatmap": 1.39375, "aux_task1.loss_bbox": 0.41287, "aux_task2.loss_heatmap": 1.64923, "aux_task2.loss_bbox": 0.45922, "aux_task3.loss_heatmap": 1.30655, "aux_task3.loss_bbox": 0.35513, "aux_task4.loss_heatmap": 0.99879, "aux_task4.loss_bbox": 0.36732, "aux_task5.loss_heatmap": 1.1949, "aux_task5.loss_bbox": 0.38473, "loss": 24.4359, "grad_norm": 39.31767, "time": 0.98055}
{"mode": "train", "epoch": 1, "iter": 1850, "lr": 2e-05, "memory": 12441, "data_time": 0.00631, "loss_cls": 0.88808, "loss_bbox": 1.37933, "d0.loss_cls": 0.92008, "d0.loss_bbox": 1.62409, "d1.loss_cls": 0.88109, "d1.loss_bbox": 1.53495, "d2.loss_cls": 0.88074, "d2.loss_bbox": 1.44979, "d3.loss_cls": 0.88319, "d3.loss_bbox": 1.41348, "d4.loss_cls": 0.88631, "d4.loss_bbox": 1.38955, "aux_task0.loss_heatmap": 1.16804, "aux_task0.loss_bbox": 0.38317, "aux_task1.loss_heatmap": 1.42072, "aux_task1.loss_bbox": 0.40973, "aux_task2.loss_heatmap": 1.65405, "aux_task2.loss_bbox": 0.44641, "aux_task3.loss_heatmap": 1.2643, "aux_task3.loss_bbox": 0.34598, "aux_task4.loss_heatmap": 0.94115, "aux_task4.loss_bbox": 0.36722, "aux_task5.loss_heatmap": 1.16243, "aux_task5.loss_bbox": 0.37808, "loss": 24.07195, "grad_norm": 38.71703, "time": 0.97927}
{"mode": "train", "epoch": 1, "iter": 1900, "lr": 2e-05, "memory": 12441, "data_time": 0.00627, "loss_cls": 0.88723, "loss_bbox": 1.33182, "d0.loss_cls": 0.91553, "d0.loss_bbox": 1.6017, "d1.loss_cls": 0.88271, "d1.loss_bbox": 1.49009, "d2.loss_cls": 0.87979, "d2.loss_bbox": 1.40827, "d3.loss_cls": 0.88364, "d3.loss_bbox": 1.3654, "d4.loss_cls": 0.88344, "d4.loss_bbox": 1.343, "aux_task0.loss_heatmap": 1.17255, "aux_task0.loss_bbox": 0.37905, "aux_task1.loss_heatmap": 1.38144, "aux_task1.loss_bbox": 0.40532, "aux_task2.loss_heatmap": 1.64719, "aux_task2.loss_bbox": 0.44585, "aux_task3.loss_heatmap": 1.25587, "aux_task3.loss_bbox": 0.35445, "aux_task4.loss_heatmap": 0.93294, "aux_task4.loss_bbox": 0.36019, "aux_task5.loss_heatmap": 1.16691, "aux_task5.loss_bbox": 0.37286, "loss": 23.74724, "grad_norm": 41.15776, "time": 0.97757}
{"mode": "train", "epoch": 1, "iter": 1950, "lr": 2e-05, "memory": 12441, "data_time": 0.00613, "loss_cls": 0.87958, "loss_bbox": 1.33462, "d0.loss_cls": 0.91177, "d0.loss_bbox": 1.61381, "d1.loss_cls": 0.87871, "d1.loss_bbox": 1.49627, "d2.loss_cls": 0.87432, "d2.loss_bbox": 1.41207, "d3.loss_cls": 0.87795, "d3.loss_bbox": 1.36865, "d4.loss_cls": 0.87669, "d4.loss_bbox": 1.34632, "aux_task0.loss_heatmap": 1.15426, "aux_task0.loss_bbox": 0.37648, "aux_task1.loss_heatmap": 1.36517, "aux_task1.loss_bbox": 0.40688, "aux_task2.loss_heatmap": 1.6554, "aux_task2.loss_bbox": 0.44922, "aux_task3.loss_heatmap": 1.25989, "aux_task3.loss_bbox": 0.34727, "aux_task4.loss_heatmap": 0.93989, "aux_task4.loss_bbox": 0.36538, "aux_task5.loss_heatmap": 1.13275, "aux_task5.loss_bbox": 0.37243, "loss": 23.69576, "grad_norm": 40.3771, "time": 0.97986}
{"mode": "train", "epoch": 1, "iter": 2000, "lr": 2e-05, "memory": 12441, "data_time": 0.00636, "loss_cls": 0.87441, "loss_bbox": 1.31576, "d0.loss_cls": 0.89665, "d0.loss_bbox": 1.595, "d1.loss_cls": 0.87162, "d1.loss_bbox": 1.465, "d2.loss_cls": 0.86637, "d2.loss_bbox": 1.3862, "d3.loss_cls": 0.86977, "d3.loss_bbox": 1.34543, "d4.loss_cls": 0.86974, "d4.loss_bbox": 1.32561, "aux_task0.loss_heatmap": 1.15138, "aux_task0.loss_bbox": 0.37303, "aux_task1.loss_heatmap": 1.37787, "aux_task1.loss_bbox": 0.41098, "aux_task2.loss_heatmap": 1.59603, "aux_task2.loss_bbox": 0.44549, "aux_task3.loss_heatmap": 1.22868, "aux_task3.loss_bbox": 0.34425, "aux_task4.loss_heatmap": 0.92493, "aux_task4.loss_bbox": 0.36765, "aux_task5.loss_heatmap": 1.1129, "aux_task5.loss_bbox": 0.37308, "loss": 23.38783, "grad_norm": 40.43633, "time": 0.9823}
{"mode": "train", "epoch": 1, "iter": 2050, "lr": 2e-05, "memory": 12441, "data_time": 0.00692, "loss_cls": 0.85665, "loss_bbox": 1.26329, "d0.loss_cls": 0.88027, "d0.loss_bbox": 1.55843, "d1.loss_cls": 0.85492, "d1.loss_bbox": 1.42648, "d2.loss_cls": 0.84725, "d2.loss_bbox": 1.34057, "d3.loss_cls": 0.8499, "d3.loss_bbox": 1.29384, "d4.loss_cls": 0.85112, "d4.loss_bbox": 1.27139, "aux_task0.loss_heatmap": 1.10815, "aux_task0.loss_bbox": 0.3535, "aux_task1.loss_heatmap": 1.35604, "aux_task1.loss_bbox": 0.39998, "aux_task2.loss_heatmap": 1.62744, "aux_task2.loss_bbox": 0.44058, "aux_task3.loss_heatmap": 1.24836, "aux_task3.loss_bbox": 0.34051, "aux_task4.loss_heatmap": 0.90246, "aux_task4.loss_bbox": 0.35358, "aux_task5.loss_heatmap": 1.114, "aux_task5.loss_bbox": 0.36621, "loss": 22.90495, "grad_norm": 40.81065, "time": 1.01157}
{"mode": "train", "epoch": 1, "iter": 2100, "lr": 2e-05, "memory": 12441, "data_time": 0.0071, "loss_cls": 0.85621, "loss_bbox": 1.28267, "d0.loss_cls": 0.87544, "d0.loss_bbox": 1.58786, "d1.loss_cls": 0.85213, "d1.loss_bbox": 1.44467, "d2.loss_cls": 0.84709, "d2.loss_bbox": 1.35506, "d3.loss_cls": 0.84988, "d3.loss_bbox": 1.31088, "d4.loss_cls": 0.85153, "d4.loss_bbox": 1.29151, "aux_task0.loss_heatmap": 1.10529, "aux_task0.loss_bbox": 0.3785, "aux_task1.loss_heatmap": 1.36363, "aux_task1.loss_bbox": 0.41379, "aux_task2.loss_heatmap": 1.60062, "aux_task2.loss_bbox": 0.4302, "aux_task3.loss_heatmap": 1.22302, "aux_task3.loss_bbox": 0.34085, "aux_task4.loss_heatmap": 0.92988, "aux_task4.loss_bbox": 0.3632, "aux_task5.loss_heatmap": 1.08369, "aux_task5.loss_bbox": 0.36182, "loss": 22.99942, "grad_norm": 38.89547, "time": 0.98289}
{"mode": "train", "epoch": 1, "iter": 2150, "lr": 2e-05, "memory": 12441, "data_time": 0.0064, "loss_cls": 0.86488, "loss_bbox": 1.29619, "d0.loss_cls": 0.88152, "d0.loss_bbox": 1.59281, "d1.loss_cls": 0.85891, "d1.loss_bbox": 1.45464, "d2.loss_cls": 0.85588, "d2.loss_bbox": 1.35742, "d3.loss_cls": 0.86116, "d3.loss_bbox": 1.31901, "d4.loss_cls": 0.86061, "d4.loss_bbox": 1.3034, "aux_task0.loss_heatmap": 1.12326, "aux_task0.loss_bbox": 0.37337, "aux_task1.loss_heatmap": 1.34989, "aux_task1.loss_bbox": 0.40831, "aux_task2.loss_heatmap": 1.61249, "aux_task2.loss_bbox": 0.44122, "aux_task3.loss_heatmap": 1.2162, "aux_task3.loss_bbox": 0.34065, "aux_task4.loss_heatmap": 0.89593, "aux_task4.loss_bbox": 0.36379, "aux_task5.loss_heatmap": 1.08083, "aux_task5.loss_bbox": 0.36485, "loss": 23.0772, "grad_norm": 43.40811, "time": 0.9865}
{"mode": "train", "epoch": 1, "iter": 2200, "lr": 2e-05, "memory": 12441, "data_time": 0.00669, "loss_cls": 0.86644, "loss_bbox": 1.29202, "d0.loss_cls": 0.88429, "d0.loss_bbox": 1.58618, "d1.loss_cls": 0.85989, "d1.loss_bbox": 1.44411, "d2.loss_cls": 0.85627, "d2.loss_bbox": 1.34307, "d3.loss_cls": 0.8591, "d3.loss_bbox": 1.31189, "d4.loss_cls": 0.86023, "d4.loss_bbox": 1.29694, "aux_task0.loss_heatmap": 1.15019, "aux_task0.loss_bbox": 0.37135, "aux_task1.loss_heatmap": 1.35196, "aux_task1.loss_bbox": 0.40452, "aux_task2.loss_heatmap": 1.60061, "aux_task2.loss_bbox": 0.44403, "aux_task3.loss_heatmap": 1.19225, "aux_task3.loss_bbox": 0.33928, "aux_task4.loss_heatmap": 0.95351, "aux_task4.loss_bbox": 0.36966, "aux_task5.loss_heatmap": 1.07183, "aux_task5.loss_bbox": 0.36451, "loss": 23.07414, "grad_norm": 45.09578, "time": 0.9854}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 2e-05, "memory": 12441, "data_time": 0.0724, "loss_cls": 0.86352, "loss_bbox": 1.25818, "d0.loss_cls": 0.87636, "d0.loss_bbox": 1.56184, "d1.loss_cls": 0.85515, "d1.loss_bbox": 1.407, "d2.loss_cls": 0.85295, "d2.loss_bbox": 1.30747, "d3.loss_cls": 0.85498, "d3.loss_bbox": 1.27745, "d4.loss_cls": 0.85819, "d4.loss_bbox": 1.26479, "aux_task0.loss_heatmap": 1.09874, "aux_task0.loss_bbox": 0.35803, "aux_task1.loss_heatmap": 1.33614, "aux_task1.loss_bbox": 0.40307, "aux_task2.loss_heatmap": 1.61951, "aux_task2.loss_bbox": 0.44015, "aux_task3.loss_heatmap": 1.18456, "aux_task3.loss_bbox": 0.33952, "aux_task4.loss_heatmap": 0.90607, "aux_task4.loss_bbox": 0.36192, "aux_task5.loss_heatmap": 1.0638, "aux_task5.loss_bbox": 0.37026, "loss": 22.71965, "grad_norm": 46.56462, "time": 1.04921}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 2e-05, "memory": 12441, "data_time": 0.01151, "loss_cls": 0.86623, "loss_bbox": 1.23426, "d0.loss_cls": 0.87594, "d0.loss_bbox": 1.53278, "d1.loss_cls": 0.85986, "d1.loss_bbox": 1.38775, "d2.loss_cls": 0.85583, "d2.loss_bbox": 1.2888, "d3.loss_cls": 0.85896, "d3.loss_bbox": 1.25692, "d4.loss_cls": 0.86085, "d4.loss_bbox": 1.24015, "aux_task0.loss_heatmap": 1.10189, "aux_task0.loss_bbox": 0.35888, "aux_task1.loss_heatmap": 1.33188, "aux_task1.loss_bbox": 0.39876, "aux_task2.loss_heatmap": 1.59368, "aux_task2.loss_bbox": 0.44841, "aux_task3.loss_heatmap": 1.17349, "aux_task3.loss_bbox": 0.33475, "aux_task4.loss_heatmap": 0.93228, "aux_task4.loss_bbox": 0.36131, "aux_task5.loss_heatmap": 1.06969, "aux_task5.loss_bbox": 0.362, "loss": 22.58536, "grad_norm": 43.71896, "time": 0.98765}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 2e-05, "memory": 12441, "data_time": 0.00619, "loss_cls": 0.86524, "loss_bbox": 1.22881, "d0.loss_cls": 0.86919, "d0.loss_bbox": 1.51858, "d1.loss_cls": 0.85421, "d1.loss_bbox": 1.37296, "d2.loss_cls": 0.85265, "d2.loss_bbox": 1.27456, "d3.loss_cls": 0.8544, "d3.loss_bbox": 1.25094, "d4.loss_cls": 0.8569, "d4.loss_bbox": 1.23531, "aux_task0.loss_heatmap": 1.07146, "aux_task0.loss_bbox": 0.36407, "aux_task1.loss_heatmap": 1.32856, "aux_task1.loss_bbox": 0.39388, "aux_task2.loss_heatmap": 1.57518, "aux_task2.loss_bbox": 0.41926, "aux_task3.loss_heatmap": 1.20307, "aux_task3.loss_bbox": 0.3377, "aux_task4.loss_heatmap": 0.89642, "aux_task4.loss_bbox": 0.35982, "aux_task5.loss_heatmap": 1.08275, "aux_task5.loss_bbox": 0.36894, "loss": 22.43486, "grad_norm": 48.35505, "time": 0.98553}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 2e-05, "memory": 12441, "data_time": 0.0066, "loss_cls": 0.8519, "loss_bbox": 1.25475, "d0.loss_cls": 0.86411, "d0.loss_bbox": 1.54444, "d1.loss_cls": 0.84493, "d1.loss_bbox": 1.39891, "d2.loss_cls": 0.84341, "d2.loss_bbox": 1.29618, "d3.loss_cls": 0.84418, "d3.loss_bbox": 1.2732, "d4.loss_cls": 0.84588, "d4.loss_bbox": 1.25693, "aux_task0.loss_heatmap": 1.11942, "aux_task0.loss_bbox": 0.37252, "aux_task1.loss_heatmap": 1.34462, "aux_task1.loss_bbox": 0.39856, "aux_task2.loss_heatmap": 1.59846, "aux_task2.loss_bbox": 0.44022, "aux_task3.loss_heatmap": 1.18448, "aux_task3.loss_bbox": 0.34531, "aux_task4.loss_heatmap": 0.87429, "aux_task4.loss_bbox": 0.3621, "aux_task5.loss_heatmap": 1.05476, "aux_task5.loss_bbox": 0.35848, "loss": 22.57202, "grad_norm": 44.65356, "time": 0.98152}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 2e-05, "memory": 12441, "data_time": 0.00642, "loss_cls": 0.84947, "loss_bbox": 1.23442, "d0.loss_cls": 0.86567, "d0.loss_bbox": 1.5137, "d1.loss_cls": 0.8464, "d1.loss_bbox": 1.37425, "d2.loss_cls": 0.84376, "d2.loss_bbox": 1.28283, "d3.loss_cls": 0.84384, "d3.loss_bbox": 1.25713, "d4.loss_cls": 0.84647, "d4.loss_bbox": 1.23849, "aux_task0.loss_heatmap": 1.11874, "aux_task0.loss_bbox": 0.36243, "aux_task1.loss_heatmap": 1.30673, "aux_task1.loss_bbox": 0.40842, "aux_task2.loss_heatmap": 1.58196, "aux_task2.loss_bbox": 0.42465, "aux_task3.loss_heatmap": 1.17804, "aux_task3.loss_bbox": 0.34549, "aux_task4.loss_heatmap": 0.89565, "aux_task4.loss_bbox": 0.36173, "aux_task5.loss_heatmap": 1.04204, "aux_task5.loss_bbox": 0.35667, "loss": 22.37899, "grad_norm": 44.75128, "time": 0.984}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 2e-05, "memory": 12441, "data_time": 0.00731, "loss_cls": 0.83675, "loss_bbox": 1.23432, "d0.loss_cls": 0.84925, "d0.loss_bbox": 1.49736, "d1.loss_cls": 0.83086, "d1.loss_bbox": 1.36047, "d2.loss_cls": 0.82656, "d2.loss_bbox": 1.27336, "d3.loss_cls": 0.82788, "d3.loss_bbox": 1.25241, "d4.loss_cls": 0.83124, "d4.loss_bbox": 1.23878, "aux_task0.loss_heatmap": 1.06851, "aux_task0.loss_bbox": 0.35886, "aux_task1.loss_heatmap": 1.32658, "aux_task1.loss_bbox": 0.39927, "aux_task2.loss_heatmap": 1.57161, "aux_task2.loss_bbox": 0.43568, "aux_task3.loss_heatmap": 1.16378, "aux_task3.loss_bbox": 0.34074, "aux_task4.loss_heatmap": 0.86953, "aux_task4.loss_bbox": 0.35147, "aux_task5.loss_heatmap": 1.01808, "aux_task5.loss_bbox": 0.36436, "loss": 22.12772, "grad_norm": 46.43287, "time": 0.98108}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 2e-05, "memory": 12441, "data_time": 0.00632, "loss_cls": 0.85047, "loss_bbox": 1.21553, "d0.loss_cls": 0.86004, "d0.loss_bbox": 1.48687, "d1.loss_cls": 0.84456, "d1.loss_bbox": 1.34388, "d2.loss_cls": 0.84152, "d2.loss_bbox": 1.25489, "d3.loss_cls": 0.84282, "d3.loss_bbox": 1.23429, "d4.loss_cls": 0.84807, "d4.loss_bbox": 1.21785, "aux_task0.loss_heatmap": 1.0835, "aux_task0.loss_bbox": 0.36252, "aux_task1.loss_heatmap": 1.29306, "aux_task1.loss_bbox": 0.39317, "aux_task2.loss_heatmap": 1.57194, "aux_task2.loss_bbox": 0.42358, "aux_task3.loss_heatmap": 1.22083, "aux_task3.loss_bbox": 0.33707, "aux_task4.loss_heatmap": 0.87767, "aux_task4.loss_bbox": 0.3472, "aux_task5.loss_heatmap": 1.0226, "aux_task5.loss_bbox": 0.35873, "loss": 22.13266, "grad_norm": 48.53769, "time": 0.9814}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 2e-05, "memory": 12441, "data_time": 0.00668, "loss_cls": 0.85215, "loss_bbox": 1.23694, "d0.loss_cls": 0.86553, "d0.loss_bbox": 1.5092, "d1.loss_cls": 0.84846, "d1.loss_bbox": 1.36597, "d2.loss_cls": 0.84831, "d2.loss_bbox": 1.28001, "d3.loss_cls": 0.84674, "d3.loss_bbox": 1.26367, "d4.loss_cls": 0.84921, "d4.loss_bbox": 1.24221, "aux_task0.loss_heatmap": 1.08491, "aux_task0.loss_bbox": 0.36013, "aux_task1.loss_heatmap": 1.29786, "aux_task1.loss_bbox": 0.40735, "aux_task2.loss_heatmap": 1.57564, "aux_task2.loss_bbox": 0.44335, "aux_task3.loss_heatmap": 1.16758, "aux_task3.loss_bbox": 0.33687, "aux_task4.loss_heatmap": 0.86352, "aux_task4.loss_bbox": 0.35501, "aux_task5.loss_heatmap": 1.06432, "aux_task5.loss_bbox": 0.36859, "loss": 22.33352, "grad_norm": 48.22861, "time": 0.97924}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 2e-05, "memory": 12441, "data_time": 0.00621, "loss_cls": 0.84435, "loss_bbox": 1.23349, "d0.loss_cls": 0.85911, "d0.loss_bbox": 1.48306, "d1.loss_cls": 0.84208, "d1.loss_bbox": 1.3476, "d2.loss_cls": 0.84007, "d2.loss_bbox": 1.26505, "d3.loss_cls": 0.84017, "d3.loss_bbox": 1.24848, "d4.loss_cls": 0.84159, "d4.loss_bbox": 1.23186, "aux_task0.loss_heatmap": 1.08702, "aux_task0.loss_bbox": 0.36882, "aux_task1.loss_heatmap": 1.29412, "aux_task1.loss_bbox": 0.40346, "aux_task2.loss_heatmap": 1.5545, "aux_task2.loss_bbox": 0.42456, "aux_task3.loss_heatmap": 1.13879, "aux_task3.loss_bbox": 0.33057, "aux_task4.loss_heatmap": 0.88578, "aux_task4.loss_bbox": 0.359, "aux_task5.loss_heatmap": 1.05542, "aux_task5.loss_bbox": 0.35706, "loss": 22.13602, "grad_norm": 51.1943, "time": 0.97777}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 2e-05, "memory": 12441, "data_time": 0.00622, "loss_cls": 0.83552, "loss_bbox": 1.21511, "d0.loss_cls": 0.85014, "d0.loss_bbox": 1.48116, "d1.loss_cls": 0.82873, "d1.loss_bbox": 1.33125, "d2.loss_cls": 0.82888, "d2.loss_bbox": 1.25144, "d3.loss_cls": 0.82963, "d3.loss_bbox": 1.23439, "d4.loss_cls": 0.83331, "d4.loss_bbox": 1.21734, "aux_task0.loss_heatmap": 1.0889, "aux_task0.loss_bbox": 0.35553, "aux_task1.loss_heatmap": 1.32317, "aux_task1.loss_bbox": 0.40458, "aux_task2.loss_heatmap": 1.5887, "aux_task2.loss_bbox": 0.43853, "aux_task3.loss_heatmap": 1.15302, "aux_task3.loss_bbox": 0.34002, "aux_task4.loss_heatmap": 0.85838, "aux_task4.loss_bbox": 0.35821, "aux_task5.loss_heatmap": 1.02908, "aux_task5.loss_bbox": 0.35963, "loss": 22.03465, "grad_norm": 47.3529, "time": 0.97637}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 2e-05, "memory": 12441, "data_time": 0.00654, "loss_cls": 0.83678, "loss_bbox": 1.22548, "d0.loss_cls": 0.85132, "d0.loss_bbox": 1.47301, "d1.loss_cls": 0.83242, "d1.loss_bbox": 1.33749, "d2.loss_cls": 0.82938, "d2.loss_bbox": 1.25963, "d3.loss_cls": 0.83071, "d3.loss_bbox": 1.24237, "d4.loss_cls": 0.83105, "d4.loss_bbox": 1.22748, "aux_task0.loss_heatmap": 1.06158, "aux_task0.loss_bbox": 0.37073, "aux_task1.loss_heatmap": 1.29906, "aux_task1.loss_bbox": 0.39271, "aux_task2.loss_heatmap": 1.59569, "aux_task2.loss_bbox": 0.44048, "aux_task3.loss_heatmap": 1.12431, "aux_task3.loss_bbox": 0.32508, "aux_task4.loss_heatmap": 0.86063, "aux_task4.loss_bbox": 0.34308, "aux_task5.loss_heatmap": 1.00601, "aux_task5.loss_bbox": 0.3527, "loss": 21.9492, "grad_norm": 51.4663, "time": 0.98129}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 2e-05, "memory": 12441, "data_time": 0.00609, "loss_cls": 0.83085, "loss_bbox": 1.19336, "d0.loss_cls": 0.84242, "d0.loss_bbox": 1.45203, "d1.loss_cls": 0.82705, "d1.loss_bbox": 1.31192, "d2.loss_cls": 0.82489, "d2.loss_bbox": 1.23599, "d3.loss_cls": 0.82698, "d3.loss_bbox": 1.21592, "d4.loss_cls": 0.83141, "d4.loss_bbox": 1.19698, "aux_task0.loss_heatmap": 1.0227, "aux_task0.loss_bbox": 0.36005, "aux_task1.loss_heatmap": 1.314, "aux_task1.loss_bbox": 0.39229, "aux_task2.loss_heatmap": 1.52694, "aux_task2.loss_bbox": 0.43321, "aux_task3.loss_heatmap": 1.17158, "aux_task3.loss_bbox": 0.34554, "aux_task4.loss_heatmap": 0.8577, "aux_task4.loss_bbox": 0.34844, "aux_task5.loss_heatmap": 0.99141, "aux_task5.loss_bbox": 0.3634, "loss": 21.71707, "grad_norm": 45.85882, "time": 0.98477}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 2e-05, "memory": 12441, "data_time": 0.0064, "loss_cls": 0.82323, "loss_bbox": 1.20185, "d0.loss_cls": 0.83845, "d0.loss_bbox": 1.45425, "d1.loss_cls": 0.82065, "d1.loss_bbox": 1.31844, "d2.loss_cls": 0.81886, "d2.loss_bbox": 1.24282, "d3.loss_cls": 0.81915, "d3.loss_bbox": 1.22247, "d4.loss_cls": 0.82196, "d4.loss_bbox": 1.2046, "aux_task0.loss_heatmap": 1.03011, "aux_task0.loss_bbox": 0.3526, "aux_task1.loss_heatmap": 1.33162, "aux_task1.loss_bbox": 0.39839, "aux_task2.loss_heatmap": 1.54806, "aux_task2.loss_bbox": 0.4404, "aux_task3.loss_heatmap": 1.15982, "aux_task3.loss_bbox": 0.33528, "aux_task4.loss_heatmap": 0.84999, "aux_task4.loss_bbox": 0.35204, "aux_task5.loss_heatmap": 1.00116, "aux_task5.loss_bbox": 0.35131, "loss": 21.7375, "grad_norm": 52.17103, "time": 0.97636}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 2e-05, "memory": 12441, "data_time": 0.00677, "loss_cls": 0.84156, "loss_bbox": 1.20356, "d0.loss_cls": 0.85451, "d0.loss_bbox": 1.44605, "d1.loss_cls": 0.83389, "d1.loss_bbox": 1.31816, "d2.loss_cls": 0.83549, "d2.loss_bbox": 1.2397, "d3.loss_cls": 0.83728, "d3.loss_bbox": 1.22303, "d4.loss_cls": 0.84039, "d4.loss_bbox": 1.20422, "aux_task0.loss_heatmap": 1.07508, "aux_task0.loss_bbox": 0.36198, "aux_task1.loss_heatmap": 1.26805, "aux_task1.loss_bbox": 0.39299, "aux_task2.loss_heatmap": 1.55826, "aux_task2.loss_bbox": 0.42356, "aux_task3.loss_heatmap": 1.15561, "aux_task3.loss_bbox": 0.34564, "aux_task4.loss_heatmap": 0.86676, "aux_task4.loss_bbox": 0.3504, "aux_task5.loss_heatmap": 0.99062, "aux_task5.loss_bbox": 0.35248, "loss": 21.81927, "grad_norm": 47.25228, "time": 0.98185}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 2e-05, "memory": 12441, "data_time": 0.00629, "loss_cls": 0.82371, "loss_bbox": 1.17996, "d0.loss_cls": 0.84277, "d0.loss_bbox": 1.42365, "d1.loss_cls": 0.81986, "d1.loss_bbox": 1.29494, "d2.loss_cls": 0.81699, "d2.loss_bbox": 1.22154, "d3.loss_cls": 0.81715, "d3.loss_bbox": 1.2025, "d4.loss_cls": 0.8223, "d4.loss_bbox": 1.1835, "aux_task0.loss_heatmap": 1.05835, "aux_task0.loss_bbox": 0.36968, "aux_task1.loss_heatmap": 1.28368, "aux_task1.loss_bbox": 0.39416, "aux_task2.loss_heatmap": 1.562, "aux_task2.loss_bbox": 0.42099, "aux_task3.loss_heatmap": 1.14242, "aux_task3.loss_bbox": 0.34095, "aux_task4.loss_heatmap": 0.85275, "aux_task4.loss_bbox": 0.35161, "aux_task5.loss_heatmap": 0.96761, "aux_task5.loss_bbox": 0.35297, "loss": 21.54602, "grad_norm": 49.14795, "time": 0.99238}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 2e-05, "memory": 12441, "data_time": 0.00624, "loss_cls": 0.82837, "loss_bbox": 1.18038, "d0.loss_cls": 0.84823, "d0.loss_bbox": 1.42073, "d1.loss_cls": 0.82541, "d1.loss_bbox": 1.29012, "d2.loss_cls": 0.82381, "d2.loss_bbox": 1.22142, "d3.loss_cls": 0.82434, "d3.loss_bbox": 1.2038, "d4.loss_cls": 0.82753, "d4.loss_bbox": 1.18414, "aux_task0.loss_heatmap": 1.03559, "aux_task0.loss_bbox": 0.36963, "aux_task1.loss_heatmap": 1.25877, "aux_task1.loss_bbox": 0.39723, "aux_task2.loss_heatmap": 1.53834, "aux_task2.loss_bbox": 0.42565, "aux_task3.loss_heatmap": 1.10917, "aux_task3.loss_bbox": 0.33833, "aux_task4.loss_heatmap": 0.82149, "aux_task4.loss_bbox": 0.34832, "aux_task5.loss_heatmap": 0.99534, "aux_task5.loss_bbox": 0.35762, "loss": 21.47378, "grad_norm": 49.97956, "time": 0.98171}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 2e-05, "memory": 12441, "data_time": 0.00632, "loss_cls": 0.81901, "loss_bbox": 1.18691, "d0.loss_cls": 0.84113, "d0.loss_bbox": 1.41084, "d1.loss_cls": 0.81795, "d1.loss_bbox": 1.28707, "d2.loss_cls": 0.80933, "d2.loss_bbox": 1.22735, "d3.loss_cls": 0.81146, "d3.loss_bbox": 1.20834, "d4.loss_cls": 0.81399, "d4.loss_bbox": 1.18969, "aux_task0.loss_heatmap": 1.02797, "aux_task0.loss_bbox": 0.35463, "aux_task1.loss_heatmap": 1.26783, "aux_task1.loss_bbox": 0.39424, "aux_task2.loss_heatmap": 1.52323, "aux_task2.loss_bbox": 0.42253, "aux_task3.loss_heatmap": 1.14594, "aux_task3.loss_bbox": 0.3436, "aux_task4.loss_heatmap": 0.85668, "aux_task4.loss_bbox": 0.35016, "aux_task5.loss_heatmap": 0.98706, "aux_task5.loss_bbox": 0.35785, "loss": 21.45477, "grad_norm": 50.52369, "time": 0.98245}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 2e-05, "memory": 12441, "data_time": 0.00656, "loss_cls": 0.82198, "loss_bbox": 1.18191, "d0.loss_cls": 0.84178, "d0.loss_bbox": 1.4152, "d1.loss_cls": 0.82046, "d1.loss_bbox": 1.28758, "d2.loss_cls": 0.81462, "d2.loss_bbox": 1.22406, "d3.loss_cls": 0.81246, "d3.loss_bbox": 1.20549, "d4.loss_cls": 0.81721, "d4.loss_bbox": 1.1872, "aux_task0.loss_heatmap": 1.04331, "aux_task0.loss_bbox": 0.35884, "aux_task1.loss_heatmap": 1.26457, "aux_task1.loss_bbox": 0.38986, "aux_task2.loss_heatmap": 1.53721, "aux_task2.loss_bbox": 0.42845, "aux_task3.loss_heatmap": 1.10374, "aux_task3.loss_bbox": 0.33075, "aux_task4.loss_heatmap": 0.86759, "aux_task4.loss_bbox": 0.35671, "aux_task5.loss_heatmap": 0.98881, "aux_task5.loss_bbox": 0.35124, "loss": 21.45102, "grad_norm": 47.3615, "time": 0.98376}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 2e-05, "memory": 12441, "data_time": 0.0068, "loss_cls": 0.81452, "loss_bbox": 1.16517, "d0.loss_cls": 0.83652, "d0.loss_bbox": 1.40466, "d1.loss_cls": 0.8118, "d1.loss_bbox": 1.28018, "d2.loss_cls": 0.80874, "d2.loss_bbox": 1.21278, "d3.loss_cls": 0.80848, "d3.loss_bbox": 1.19182, "d4.loss_cls": 0.81241, "d4.loss_bbox": 1.1716, "aux_task0.loss_heatmap": 1.06075, "aux_task0.loss_bbox": 0.36104, "aux_task1.loss_heatmap": 1.29287, "aux_task1.loss_bbox": 0.39847, "aux_task2.loss_heatmap": 1.48411, "aux_task2.loss_bbox": 0.41572, "aux_task3.loss_heatmap": 1.13854, "aux_task3.loss_bbox": 0.32936, "aux_task4.loss_heatmap": 0.81274, "aux_task4.loss_bbox": 0.34788, "aux_task5.loss_heatmap": 0.96298, "aux_task5.loss_bbox": 0.35197, "loss": 21.2751, "grad_norm": 49.49463, "time": 0.98122}
{"mode": "train", "epoch": 2, "iter": 1000, "lr": 2e-05, "memory": 12441, "data_time": 0.00631, "loss_cls": 0.80404, "loss_bbox": 1.15058, "d0.loss_cls": 0.82645, "d0.loss_bbox": 1.37718, "d1.loss_cls": 0.80534, "d1.loss_bbox": 1.25021, "d2.loss_cls": 0.79994, "d2.loss_bbox": 1.1907, "d3.loss_cls": 0.79801, "d3.loss_bbox": 1.17353, "d4.loss_cls": 0.80113, "d4.loss_bbox": 1.15488, "aux_task0.loss_heatmap": 1.0284, "aux_task0.loss_bbox": 0.35234, "aux_task1.loss_heatmap": 1.24214, "aux_task1.loss_bbox": 0.38524, "aux_task2.loss_heatmap": 1.50592, "aux_task2.loss_bbox": 0.42218, "aux_task3.loss_heatmap": 1.11149, "aux_task3.loss_bbox": 0.32775, "aux_task4.loss_heatmap": 0.82994, "aux_task4.loss_bbox": 0.35077, "aux_task5.loss_heatmap": 0.92702, "aux_task5.loss_bbox": 0.34669, "loss": 20.96187, "grad_norm": 49.03823, "time": 0.98036}
{"mode": "train", "epoch": 2, "iter": 1050, "lr": 2e-05, "memory": 12441, "data_time": 0.00697, "loss_cls": 0.80752, "loss_bbox": 1.17786, "d0.loss_cls": 0.82559, "d0.loss_bbox": 1.40085, "d1.loss_cls": 0.80597, "d1.loss_bbox": 1.27646, "d2.loss_cls": 0.80333, "d2.loss_bbox": 1.21692, "d3.loss_cls": 0.80426, "d3.loss_bbox": 1.19888, "d4.loss_cls": 0.80597, "d4.loss_bbox": 1.18054, "aux_task0.loss_heatmap": 1.04521, "aux_task0.loss_bbox": 0.36299, "aux_task1.loss_heatmap": 1.22982, "aux_task1.loss_bbox": 0.39105, "aux_task2.loss_heatmap": 1.52331, "aux_task2.loss_bbox": 0.42088, "aux_task3.loss_heatmap": 1.13948, "aux_task3.loss_bbox": 0.32469, "aux_task4.loss_heatmap": 0.83113, "aux_task4.loss_bbox": 0.35303, "aux_task5.loss_heatmap": 0.96381, "aux_task5.loss_bbox": 0.35317, "loss": 21.24272, "grad_norm": 52.55777, "time": 0.98121}
{"mode": "train", "epoch": 2, "iter": 1100, "lr": 2e-05, "memory": 12441, "data_time": 0.00662, "loss_cls": 0.79625, "loss_bbox": 1.16046, "d0.loss_cls": 0.8201, "d0.loss_bbox": 1.38015, "d1.loss_cls": 0.7946, "d1.loss_bbox": 1.25469, "d2.loss_cls": 0.79213, "d2.loss_bbox": 1.20277, "d3.loss_cls": 0.79096, "d3.loss_bbox": 1.18497, "d4.loss_cls": 0.79294, "d4.loss_bbox": 1.16354, "aux_task0.loss_heatmap": 1.02421, "aux_task0.loss_bbox": 0.359, "aux_task1.loss_heatmap": 1.23971, "aux_task1.loss_bbox": 0.39111, "aux_task2.loss_heatmap": 1.50878, "aux_task2.loss_bbox": 0.43068, "aux_task3.loss_heatmap": 1.17885, "aux_task3.loss_bbox": 0.32931, "aux_task4.loss_heatmap": 0.77895, "aux_task4.loss_bbox": 0.34756, "aux_task5.loss_heatmap": 0.93281, "aux_task5.loss_bbox": 0.34764, "loss": 21.00217, "grad_norm": 51.48606, "time": 0.9769}
{"mode": "train", "epoch": 2, "iter": 1150, "lr": 2e-05, "memory": 12441, "data_time": 0.00911, "loss_cls": 0.79417, "loss_bbox": 1.1405, "d0.loss_cls": 0.81752, "d0.loss_bbox": 1.37159, "d1.loss_cls": 0.79407, "d1.loss_bbox": 1.24755, "d2.loss_cls": 0.79183, "d2.loss_bbox": 1.18507, "d3.loss_cls": 0.79088, "d3.loss_bbox": 1.165, "d4.loss_cls": 0.79386, "d4.loss_bbox": 1.1465, "aux_task0.loss_heatmap": 1.02224, "aux_task0.loss_bbox": 0.35114, "aux_task1.loss_heatmap": 1.24547, "aux_task1.loss_bbox": 0.39139, "aux_task2.loss_heatmap": 1.51783, "aux_task2.loss_bbox": 0.43224, "aux_task3.loss_heatmap": 1.11484, "aux_task3.loss_bbox": 0.33192, "aux_task4.loss_heatmap": 0.79609, "aux_task4.loss_bbox": 0.34498, "aux_task5.loss_heatmap": 0.95153, "aux_task5.loss_bbox": 0.35244, "loss": 20.89065, "grad_norm": 52.09216, "time": 0.98255}
{"mode": "train", "epoch": 2, "iter": 1200, "lr": 2e-05, "memory": 12441, "data_time": 0.00691, "loss_cls": 0.79028, "loss_bbox": 1.14636, "d0.loss_cls": 0.81471, "d0.loss_bbox": 1.36427, "d1.loss_cls": 0.78769, "d1.loss_bbox": 1.24054, "d2.loss_cls": 0.7845, "d2.loss_bbox": 1.189, "d3.loss_cls": 0.78598, "d3.loss_bbox": 1.17021, "d4.loss_cls": 0.78794, "d4.loss_bbox": 1.15113, "aux_task0.loss_heatmap": 1.03336, "aux_task0.loss_bbox": 0.35385, "aux_task1.loss_heatmap": 1.26392, "aux_task1.loss_bbox": 0.39293, "aux_task2.loss_heatmap": 1.48273, "aux_task2.loss_bbox": 0.42971, "aux_task3.loss_heatmap": 1.073, "aux_task3.loss_bbox": 0.33829, "aux_task4.loss_heatmap": 0.796, "aux_task4.loss_bbox": 0.34203, "aux_task5.loss_heatmap": 0.91334, "aux_task5.loss_bbox": 0.34873, "loss": 20.78049, "grad_norm": 53.98179, "time": 0.98475}
{"mode": "train", "epoch": 2, "iter": 1250, "lr": 2e-05, "memory": 12441, "data_time": 0.00585, "loss_cls": 0.79188, "loss_bbox": 1.14958, "d0.loss_cls": 0.81671, "d0.loss_bbox": 1.36776, "d1.loss_cls": 0.79102, "d1.loss_bbox": 1.25151, "d2.loss_cls": 0.78816, "d2.loss_bbox": 1.19479, "d3.loss_cls": 0.78565, "d3.loss_bbox": 1.17441, "d4.loss_cls": 0.78937, "d4.loss_bbox": 1.15459, "aux_task0.loss_heatmap": 1.00467, "aux_task0.loss_bbox": 0.34982, "aux_task1.loss_heatmap": 1.18994, "aux_task1.loss_bbox": 0.38737, "aux_task2.loss_heatmap": 1.5113, "aux_task2.loss_bbox": 0.43249, "aux_task3.loss_heatmap": 1.17773, "aux_task3.loss_bbox": 0.33035, "aux_task4.loss_heatmap": 0.86541, "aux_task4.loss_bbox": 0.3507, "aux_task5.loss_heatmap": 0.91391, "aux_task5.loss_bbox": 0.34716, "loss": 20.91629, "grad_norm": 47.57666, "time": 0.98477}
{"mode": "train", "epoch": 2, "iter": 1300, "lr": 2e-05, "memory": 12441, "data_time": 0.00753, "loss_cls": 0.79115, "loss_bbox": 1.1609, "d0.loss_cls": 0.8151, "d0.loss_bbox": 1.37352, "d1.loss_cls": 0.79173, "d1.loss_bbox": 1.26235, "d2.loss_cls": 0.78734, "d2.loss_bbox": 1.20811, "d3.loss_cls": 0.78479, "d3.loss_bbox": 1.18753, "d4.loss_cls": 0.78885, "d4.loss_bbox": 1.16688, "aux_task0.loss_heatmap": 1.02946, "aux_task0.loss_bbox": 0.36611, "aux_task1.loss_heatmap": 1.20656, "aux_task1.loss_bbox": 0.39981, "aux_task2.loss_heatmap": 1.52508, "aux_task2.loss_bbox": 0.43778, "aux_task3.loss_heatmap": 1.16046, "aux_task3.loss_bbox": 0.33266, "aux_task4.loss_heatmap": 0.84361, "aux_task4.loss_bbox": 0.34912, "aux_task5.loss_heatmap": 0.94304, "aux_task5.loss_bbox": 0.34489, "loss": 21.05685, "grad_norm": 46.66101, "time": 1.01967}
{"mode": "train", "epoch": 2, "iter": 1350, "lr": 2e-05, "memory": 12441, "data_time": 0.00637, "loss_cls": 0.78583, "loss_bbox": 1.12516, "d0.loss_cls": 0.80612, "d0.loss_bbox": 1.33504, "d1.loss_cls": 0.78244, "d1.loss_bbox": 1.21655, "d2.loss_cls": 0.77888, "d2.loss_bbox": 1.16212, "d3.loss_cls": 0.778, "d3.loss_bbox": 1.14642, "d4.loss_cls": 0.78379, "d4.loss_bbox": 1.12562, "aux_task0.loss_heatmap": 0.97475, "aux_task0.loss_bbox": 0.34676, "aux_task1.loss_heatmap": 1.22481, "aux_task1.loss_bbox": 0.39347, "aux_task2.loss_heatmap": 1.4753, "aux_task2.loss_bbox": 0.42088, "aux_task3.loss_heatmap": 1.19483, "aux_task3.loss_bbox": 0.33297, "aux_task4.loss_heatmap": 0.8093, "aux_task4.loss_bbox": 0.34513, "aux_task5.loss_heatmap": 0.91655, "aux_task5.loss_bbox": 0.344, "loss": 20.60473, "grad_norm": 52.49166, "time": 0.9846}
{"mode": "train", "epoch": 2, "iter": 1400, "lr": 2e-05, "memory": 12441, "data_time": 0.00949, "loss_cls": 0.77486, "loss_bbox": 1.13174, "d0.loss_cls": 0.80462, "d0.loss_bbox": 1.33179, "d1.loss_cls": 0.77217, "d1.loss_bbox": 1.22851, "d2.loss_cls": 0.76948, "d2.loss_bbox": 1.17561, "d3.loss_cls": 0.76954, "d3.loss_bbox": 1.15708, "d4.loss_cls": 0.7723, "d4.loss_bbox": 1.1383, "aux_task0.loss_heatmap": 1.00231, "aux_task0.loss_bbox": 0.34662, "aux_task1.loss_heatmap": 1.20797, "aux_task1.loss_bbox": 0.37691, "aux_task2.loss_heatmap": 1.4514, "aux_task2.loss_bbox": 0.42079, "aux_task3.loss_heatmap": 1.09411, "aux_task3.loss_bbox": 0.33132, "aux_task4.loss_heatmap": 0.78933, "aux_task4.loss_bbox": 0.34665, "aux_task5.loss_heatmap": 0.92067, "aux_task5.loss_bbox": 0.34123, "loss": 20.45532, "grad_norm": 50.26977, "time": 0.99089}
{"mode": "train", "epoch": 2, "iter": 1450, "lr": 2e-05, "memory": 12441, "data_time": 0.00649, "loss_cls": 0.77946, "loss_bbox": 1.12508, "d0.loss_cls": 0.80034, "d0.loss_bbox": 1.3177, "d1.loss_cls": 0.7756, "d1.loss_bbox": 1.21369, "d2.loss_cls": 0.77244, "d2.loss_bbox": 1.16441, "d3.loss_cls": 0.77332, "d3.loss_bbox": 1.14639, "d4.loss_cls": 0.77613, "d4.loss_bbox": 1.12909, "aux_task0.loss_heatmap": 0.9843, "aux_task0.loss_bbox": 0.3407, "aux_task1.loss_heatmap": 1.24658, "aux_task1.loss_bbox": 0.38525, "aux_task2.loss_heatmap": 1.47498, "aux_task2.loss_bbox": 0.4278, "aux_task3.loss_heatmap": 1.09628, "aux_task3.loss_bbox": 0.33084, "aux_task4.loss_heatmap": 0.79154, "aux_task4.loss_bbox": 0.34729, "aux_task5.loss_heatmap": 0.88033, "aux_task5.loss_bbox": 0.33943, "loss": 20.41897, "grad_norm": 46.85868, "time": 0.98517}
