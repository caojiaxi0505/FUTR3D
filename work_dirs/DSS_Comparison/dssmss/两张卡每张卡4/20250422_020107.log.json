{"env_info": "sys.platform: linux\nPython: 3.8.20 | packaged by conda-forge | (default, Sep 30 2024, 17:52:49) [GCC 13.3.0]\nCUDA available: True\nGPU 0,1: NVIDIA GeForce RTX 4090 D\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 11.6, V11.6.55\nGCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0\nPyTorch: 1.13.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 9.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2022.1-Product Build 20220311 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.6\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.3.2  (built against CUDA 11.5)\n  - Magma 2.6.1\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.6, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.14.0\nOpenCV: 4.11.0\nMMCV: 1.7.0\nMMCV Compiler: GCC 9.4\nMMCV CUDA Compiler: 11.6\nMMDetection: 2.27.0\nMMSegmentation: 0.30.0\nMMDetection3D: 1.0.0rc6+637e2ea\nspconv2.0: True", "config": "point_cloud_range = [-54, -54, -5.0, 54, 54, 3.0]\nclass_names = [\n    'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',\n    'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n]\ndataset_type = 'NuScenesDataset'\ndata_root = 'data/nuscenes/'\ninput_modality = dict(\n    use_lidar=True,\n    use_camera=False,\n    use_radar=False,\n    use_map=False,\n    use_external=False)\nfile_client_args = dict(backend='disk')\ntrain_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=5,\n        use_dim=5,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='LoadPointsFromMultiSweeps',\n        sweeps_num=9,\n        use_dim=[0, 1, 2, 3, 4],\n        file_client_args=dict(backend='disk'),\n        pad_empty_sweeps=True,\n        remove_close=True),\n    dict(type='LoadAnnotations3D', with_bbox_3d=True, with_label_3d=True),\n    dict(\n        type='ObjectSample',\n        db_sampler=dict(\n            data_root='data/nuscenes/',\n            info_path='data/nuscenes/nuscenes_dbinfos_train.pkl',\n            rate=1.0,\n            prepare=dict(\n                filter_by_difficulty=[-1],\n                filter_by_min_points=dict(\n                    car=5,\n                    truck=5,\n                    bus=5,\n                    trailer=5,\n                    construction_vehicle=5,\n                    traffic_cone=5,\n                    barrier=5,\n                    motorcycle=5,\n                    bicycle=5,\n                    pedestrian=5)),\n            classes=[\n                'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                'traffic_cone'\n            ],\n            sample_groups=dict(\n                car=2,\n                truck=3,\n                construction_vehicle=7,\n                bus=4,\n                trailer=6,\n                barrier=2,\n                motorcycle=6,\n                bicycle=6,\n                pedestrian=2,\n                traffic_cone=2),\n            points_loader=dict(\n                type='LoadPointsFromFile',\n                coord_type='LIDAR',\n                load_dim=5,\n                use_dim=[0, 1, 2, 3, 4],\n                file_client_args=dict(backend='disk')))),\n    dict(\n        type='GlobalRotScaleTrans',\n        rot_range=[-0.785, 0.785],\n        scale_ratio_range=[0.9, 1.1],\n        translation_std=[0.5, 0.5, 0.5]),\n    dict(\n        type='RandomFlip3D',\n        sync_2d=False,\n        flip_ratio_bev_horizontal=0.5,\n        flip_ratio_bev_vertical=0.5),\n    dict(\n        type='PointsRangeFilter',\n        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n    dict(\n        type='ObjectRangeFilter',\n        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n    dict(\n        type='ObjectNameFilter',\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ]),\n    dict(type='PointShuffle'),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ]),\n    dict(type='Collect3D', keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])\n]\ntest_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=5,\n        use_dim=5,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='LoadPointsFromMultiSweeps',\n        sweeps_num=9,\n        use_dim=[0, 1, 2, 3, 4],\n        file_client_args=dict(backend='disk'),\n        pad_empty_sweeps=True,\n        remove_close=True),\n    dict(\n        type='MultiScaleFlipAug3D',\n        img_scale=(1333, 800),\n        pts_scale_ratio=1,\n        flip=False,\n        transforms=[\n            dict(\n                type='GlobalRotScaleTrans',\n                rot_range=[0, 0],\n                scale_ratio_range=[1.0, 1.0],\n                translation_std=[0, 0, 0]),\n            dict(type='RandomFlip3D'),\n            dict(\n                type='PointsRangeFilter',\n                point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                    'traffic_cone'\n                ],\n                with_label=False),\n            dict(type='Collect3D', keys=['points'])\n        ])\n]\neval_pipeline = [\n    dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=5,\n        use_dim=5,\n        file_client_args=dict(backend='disk')),\n    dict(\n        type='LoadPointsFromMultiSweeps',\n        sweeps_num=9,\n        use_dim=[0, 1, 2, 3, 4],\n        file_client_args=dict(backend='disk'),\n        pad_empty_sweeps=True,\n        remove_close=True),\n    dict(\n        type='DefaultFormatBundle3D',\n        class_names=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        with_label=False),\n    dict(type='Collect3D', keys=['points'])\n]\ndata = dict(\n    samples_per_gpu=4,\n    workers_per_gpu=4,\n    train=dict(\n        type='CBGSDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/nuscenes/nuscenes_infos_train.pkl',\n        pipeline=[\n            dict(\n                type='LoadPointsFromFile',\n                coord_type='LIDAR',\n                load_dim=5,\n                use_dim=5,\n                file_client_args=dict(backend='disk')),\n            dict(\n                type='LoadPointsFromMultiSweeps',\n                sweeps_num=10,\n                file_client_args=dict(backend='disk')),\n            dict(\n                type='LoadAnnotations3D',\n                with_bbox_3d=True,\n                with_label_3d=True),\n            dict(\n                type='GlobalRotScaleTrans',\n                rot_range=[-0.3925, 0.3925],\n                scale_ratio_range=[0.95, 1.05],\n                translation_std=[0, 0, 0]),\n            dict(type='RandomFlip3D', flip_ratio_bev_horizontal=0.5),\n            dict(\n                type='PointsRangeFilter',\n                point_cloud_range=[-50, -50, -5, 50, 50, 3]),\n            dict(\n                type='ObjectRangeFilter',\n                point_cloud_range=[-50, -50, -5, 50, 50, 3]),\n            dict(\n                type='ObjectNameFilter',\n                classes=[\n                    'car', 'truck', 'trailer', 'bus', 'construction_vehicle',\n                    'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone',\n                    'barrier'\n                ]),\n            dict(type='PointShuffle'),\n            dict(\n                type='DefaultFormatBundle3D',\n                class_names=[\n                    'car', 'truck', 'trailer', 'bus', 'construction_vehicle',\n                    'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone',\n                    'barrier'\n                ]),\n            dict(\n                type='Collect3D',\n                keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])\n        ],\n        classes=[\n            'car', 'truck', 'trailer', 'bus', 'construction_vehicle',\n            'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier'\n        ],\n        modality=dict(\n            use_lidar=True,\n            use_camera=False,\n            use_radar=False,\n            use_map=False,\n            use_external=False),\n        test_mode=False,\n        box_type_3d='LiDAR',\n        split=14,\n        dataset=dict(\n            type='NuScenesDataset',\n            data_root='data/nuscenes/',\n            ann_file='data/nuscenes/nuscenes_infos_train.pkl',\n            pipeline=[\n                dict(\n                    type='LoadPointsFromFile',\n                    coord_type='LIDAR',\n                    load_dim=5,\n                    use_dim=5,\n                    file_client_args=dict(backend='disk')),\n                dict(\n                    type='LoadPointsFromMultiSweeps',\n                    sweeps_num=9,\n                    use_dim=[0, 1, 2, 3, 4],\n                    file_client_args=dict(backend='disk'),\n                    pad_empty_sweeps=True,\n                    remove_close=True),\n                dict(\n                    type='LoadAnnotations3D',\n                    with_bbox_3d=True,\n                    with_label_3d=True),\n                dict(\n                    type='ObjectSample',\n                    db_sampler=dict(\n                        data_root='data/nuscenes/',\n                        info_path='data/nuscenes/nuscenes_dbinfos_train.pkl',\n                        rate=1.0,\n                        prepare=dict(\n                            filter_by_difficulty=[-1],\n                            filter_by_min_points=dict(\n                                car=5,\n                                truck=5,\n                                bus=5,\n                                trailer=5,\n                                construction_vehicle=5,\n                                traffic_cone=5,\n                                barrier=5,\n                                motorcycle=5,\n                                bicycle=5,\n                                pedestrian=5)),\n                        classes=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        sample_groups=dict(\n                            car=2,\n                            truck=3,\n                            construction_vehicle=7,\n                            bus=4,\n                            trailer=6,\n                            barrier=2,\n                            motorcycle=6,\n                            bicycle=6,\n                            pedestrian=2,\n                            traffic_cone=2),\n                        points_loader=dict(\n                            type='LoadPointsFromFile',\n                            coord_type='LIDAR',\n                            load_dim=5,\n                            use_dim=[0, 1, 2, 3, 4],\n                            file_client_args=dict(backend='disk')))),\n                dict(\n                    type='GlobalRotScaleTrans',\n                    rot_range=[-0.785, 0.785],\n                    scale_ratio_range=[0.9, 1.1],\n                    translation_std=[0.5, 0.5, 0.5]),\n                dict(\n                    type='RandomFlip3D',\n                    sync_2d=False,\n                    flip_ratio_bev_horizontal=0.5,\n                    flip_ratio_bev_vertical=0.5),\n                dict(\n                    type='PointsRangeFilter',\n                    point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n                dict(\n                    type='ObjectRangeFilter',\n                    point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n                dict(\n                    type='ObjectNameFilter',\n                    classes=[\n                        'car', 'truck', 'construction_vehicle', 'bus',\n                        'trailer', 'barrier', 'motorcycle', 'bicycle',\n                        'pedestrian', 'traffic_cone'\n                    ]),\n                dict(type='PointShuffle'),\n                dict(\n                    type='DefaultFormatBundle3D',\n                    class_names=[\n                        'car', 'truck', 'construction_vehicle', 'bus',\n                        'trailer', 'barrier', 'motorcycle', 'bicycle',\n                        'pedestrian', 'traffic_cone'\n                    ]),\n                dict(\n                    type='Collect3D',\n                    keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])\n            ],\n            classes=[\n                'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n                'barrier', 'motorcycle', 'bicycle', 'pedestrian',\n                'traffic_cone'\n            ],\n            test_mode=False,\n            use_valid_flag=True,\n            box_type_3d='LiDAR')),\n    val=dict(\n        type='NuScenesDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/nuscenes/nuscenes_infos_val.pkl',\n        pipeline=[\n            dict(\n                type='LoadPointsFromFile',\n                coord_type='LIDAR',\n                load_dim=5,\n                use_dim=5,\n                file_client_args=dict(backend='disk')),\n            dict(\n                type='LoadPointsFromMultiSweeps',\n                sweeps_num=9,\n                use_dim=[0, 1, 2, 3, 4],\n                file_client_args=dict(backend='disk'),\n                pad_empty_sweeps=True,\n                remove_close=True),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1333, 800),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='GlobalRotScaleTrans',\n                        rot_range=[0, 0],\n                        scale_ratio_range=[1.0, 1.0],\n                        translation_std=[0, 0, 0]),\n                    dict(type='RandomFlip3D'),\n                    dict(\n                        type='PointsRangeFilter',\n                        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        with_label=False),\n                    dict(type='Collect3D', keys=['points'])\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=True,\n            use_camera=False,\n            use_radar=False,\n            use_map=False,\n            use_external=False),\n        test_mode=True,\n        box_type_3d='LiDAR'),\n    test=dict(\n        type='NuScenesDataset',\n        data_root='data/nuscenes/',\n        ann_file='data/nuscenes/nuscenes_infos_val.pkl',\n        pipeline=[\n            dict(\n                type='LoadPointsFromFile',\n                coord_type='LIDAR',\n                load_dim=5,\n                use_dim=5,\n                file_client_args=dict(backend='disk')),\n            dict(\n                type='LoadPointsFromMultiSweeps',\n                sweeps_num=9,\n                use_dim=[0, 1, 2, 3, 4],\n                file_client_args=dict(backend='disk'),\n                pad_empty_sweeps=True,\n                remove_close=True),\n            dict(\n                type='MultiScaleFlipAug3D',\n                img_scale=(1333, 800),\n                pts_scale_ratio=1,\n                flip=False,\n                transforms=[\n                    dict(\n                        type='GlobalRotScaleTrans',\n                        rot_range=[0, 0],\n                        scale_ratio_range=[1.0, 1.0],\n                        translation_std=[0, 0, 0]),\n                    dict(type='RandomFlip3D'),\n                    dict(\n                        type='PointsRangeFilter',\n                        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n                    dict(\n                        type='DefaultFormatBundle3D',\n                        class_names=[\n                            'car', 'truck', 'construction_vehicle', 'bus',\n                            'trailer', 'barrier', 'motorcycle', 'bicycle',\n                            'pedestrian', 'traffic_cone'\n                        ],\n                        with_label=False),\n                    dict(type='Collect3D', keys=['points'])\n                ])\n        ],\n        classes=[\n            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',\n            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n        ],\n        modality=dict(\n            use_lidar=True,\n            use_camera=False,\n            use_radar=False,\n            use_map=False,\n            use_external=False),\n        test_mode=True,\n        box_type_3d='LiDAR'))\nevaluation = dict(\n    interval=1,\n    pipeline=[\n        dict(\n            type='LoadPointsFromFile',\n            coord_type='LIDAR',\n            load_dim=5,\n            use_dim=5,\n            file_client_args=dict(backend='disk')),\n        dict(\n            type='LoadPointsFromMultiSweeps',\n            sweeps_num=10,\n            file_client_args=dict(backend='disk')),\n        dict(\n            type='DefaultFormatBundle3D',\n            class_names=[\n                'car', 'truck', 'trailer', 'bus', 'construction_vehicle',\n                'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone',\n                'barrier'\n            ],\n            with_label=False),\n        dict(type='Collect3D', keys=['points'])\n    ])\noptimizer = dict(type='AdamW', lr=2.5e-05, weight_decay=0.01)\noptimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))\nlr_config = dict(\n    policy='cyclic',\n    target_ratio=(10, 0.0001),\n    cyclic_times=1,\n    step_ratio_up=0.4)\nmomentum_config = dict(\n    policy='cyclic',\n    target_ratio=(0.8947368421052632, 1),\n    cyclic_times=1,\n    step_ratio_up=0.4)\nrunner = dict(type='EpochBasedRunner', max_epochs=20)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(\n    interval=50,\n    hooks=[dict(type='TextLoggerHook'),\n           dict(type='TensorboardLoggerHook')])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nwork_dir = './work_dirs/dssmss/\u4e24\u5f20\u5361\u6bcf\u5f20\u53614'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nplugin = 'plugin/futr3d'\nvoxel_size = [0.075, 0.075, 0.2]\ncenter_head = dict(\n    type='CenterHead',\n    in_channels=512,\n    tasks=[\n        dict(num_class=1, class_names=['car']),\n        dict(num_class=2, class_names=['truck', 'construction_vehicle']),\n        dict(num_class=2, class_names=['bus', 'trailer']),\n        dict(num_class=1, class_names=['barrier']),\n        dict(num_class=2, class_names=['motorcycle', 'bicycle']),\n        dict(num_class=2, class_names=['pedestrian', 'traffic_cone'])\n    ],\n    common_heads=dict(\n        reg=(2, 2), height=(1, 2), dim=(3, 2), rot=(2, 2), vel=(2, 2)),\n    share_conv_channel=64,\n    bbox_coder=dict(\n        type='CenterPointBBoxCoder',\n        pc_range=[-54, -54],\n        post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],\n        max_num=500,\n        score_threshold=0.1,\n        out_size_factor=8,\n        voxel_size=[0.075, 0.075],\n        code_size=9),\n    separate_head=dict(type='SeparateHead', init_bias=-2.19, final_kernel=3),\n    loss_cls=dict(type='GaussianFocalLoss', reduction='mean'),\n    loss_bbox=dict(type='L1Loss', reduction='mean', loss_weight=0.25),\n    norm_bbox=True)\nmodel = dict(\n    type='FUTR3D',\n    aux_weight=0.5,\n    pts_voxel_layer=dict(\n        max_num_points=10,\n        voxel_size=[0.075, 0.075, 0.2],\n        max_voxels=(120000, 160000),\n        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),\n    pts_voxel_encoder=dict(type='HardSimpleVFE', num_features=5),\n    pts_middle_encoder=dict(\n        type='SparseEncoder',\n        in_channels=5,\n        sparse_shape=[41, 1440, 1440],\n        output_channels=128,\n        order=('conv', 'norm', 'act'),\n        encoder_channels=((16, 16, 32), (32, 32, 64), (64, 64, 128), (128,\n                                                                      128)),\n        encoder_paddings=((0, 0, 1), (0, 0, 1), (0, 0, [0, 1, 1]), (0, 0)),\n        block_type='basicblock'),\n    pts_backbone=dict(\n        type='SECOND',\n        in_channels=256,\n        out_channels=[128, 256],\n        layer_nums=[5, 5],\n        layer_strides=[1, 2],\n        norm_cfg=dict(type='BN', eps=0.001, momentum=0.01),\n        conv_cfg=dict(type='Conv2d', bias=False)),\n    pts_neck=dict(\n        type='FPN',\n        norm_cfg=dict(type='BN2d', eps=0.001, momentum=0.01),\n        act_cfg=dict(type='ReLU', inplace=False),\n        in_channels=[128, 256],\n        out_channels=256,\n        start_level=0,\n        add_extra_convs=True,\n        num_outs=4,\n        relu_before_extra_convs=True),\n    pts_bbox_head=dict(\n        type='FUTR3DHead',\n        use_dab=True,\n        use_dss=True,\n        dss_batch_first=False,\n        dss_drop_prob=0.1,\n        dss_mamba_prenorm=False,\n        dss_mamba_cfg=dict(),\n        dss_mamba_version='DSSMamba_Tiny',\n        dss_num_layers=2,\n        dss_rope=False,\n        dss_morton_rearrange=True,\n        dss_conv_path=False,\n        dss_xy=True,\n        use_mss=True,\n        mss_num_scales=4,\n        mss_fore_pred_net_in_channels=256,\n        mss_fore_pred_net_intermediate_channels=64,\n        mss_fore_pred_net_out_channels=1,\n        mss_dstate=4,\n        anchor_size=3,\n        use_aux=True,\n        aux_head=dict(\n            type='CenterHead',\n            in_channels=512,\n            tasks=[\n                dict(num_class=1, class_names=['car']),\n                dict(\n                    num_class=2, class_names=['truck',\n                                              'construction_vehicle']),\n                dict(num_class=2, class_names=['bus', 'trailer']),\n                dict(num_class=1, class_names=['barrier']),\n                dict(num_class=2, class_names=['motorcycle', 'bicycle']),\n                dict(num_class=2, class_names=['pedestrian', 'traffic_cone'])\n            ],\n            common_heads=dict(\n                reg=(2, 2), height=(1, 2), dim=(3, 2), rot=(2, 2), vel=(2, 2)),\n            share_conv_channel=64,\n            bbox_coder=dict(\n                type='CenterPointBBoxCoder',\n                pc_range=[-54, -54],\n                post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],\n                max_num=500,\n                score_threshold=0.1,\n                out_size_factor=8,\n                voxel_size=[0.075, 0.075],\n                code_size=9),\n            separate_head=dict(\n                type='SeparateHead', init_bias=-2.19, final_kernel=3),\n            loss_cls=dict(type='GaussianFocalLoss', reduction='mean'),\n            loss_bbox=dict(type='L1Loss', reduction='mean', loss_weight=0.25),\n            norm_bbox=True),\n        mix_selection=False,\n        num_query=900,\n        num_classes=10,\n        in_channels=256,\n        pc_range=[-54, -54, -5.0, 54, 54, 3.0],\n        sync_cls_avg_factor=True,\n        with_box_refine=True,\n        as_two_stage=False,\n        code_weights=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2],\n        transformer=dict(\n            type='FUTR3DTransformer',\n            use_dab=True,\n            decoder=dict(\n                type='FUTR3DTransformerDecoder',\n                num_layers=6,\n                use_dab=True,\n                anchor_size=3,\n                return_intermediate=True,\n                transformerlayers=dict(\n                    type='DetrTransformerDecoderLayer',\n                    attn_cfgs=[\n                        dict(\n                            type='MultiheadAttention',\n                            embed_dims=256,\n                            num_heads=8,\n                            dropout=0.1),\n                        dict(type='FUTR3DAttention', embed_dims=256)\n                    ],\n                    feedforward_channels=1024,\n                    ffn_dropout=0.1,\n                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',\n                                     'ffn', 'norm')))),\n        positional_encoding=dict(\n            type='SinePositionalEncoding',\n            num_feats=128,\n            normalize=True,\n            offset=-0.5),\n        loss_cls=dict(\n            type='FocalLoss',\n            use_sigmoid=True,\n            gamma=2.0,\n            alpha=0.25,\n            loss_weight=2.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=0.25),\n        loss_iou=dict(type='GIoULoss', loss_weight=0)),\n    train_cfg=dict(\n        pts=dict(\n            point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0],\n            pc_range=[-54, -54, -5.0, 54, 54, 3.0],\n            grid_size=[1440, 1440, 40],\n            voxel_size=[0.075, 0.075, 0.2],\n            out_size_factor=8,\n            dense_reg=1,\n            gaussian_overlap=0.1,\n            max_objs=500,\n            min_radius=2,\n            code_weights=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2],\n            assigner=dict(\n                type='HungarianAssigner3D',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(type='BBox3DL1Cost', weight=0.25),\n                iou_cost=dict(type='IoUCost', weight=0)))),\n    test_cfg=dict(\n        pts=dict(\n            pc_range=[-54, -54],\n            post_center_limit_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],\n            max_per_img=500,\n            max_pool_nms=False,\n            min_radius=[4, 12, 10, 1, 0.85, 0.175],\n            out_size_factor=8,\n            voxel_size=[0.075, 0.075],\n            nms_type='circle',\n            pre_max_size=1000,\n            post_max_size=83,\n            nms_thr=0.2,\n            max_num=300,\n            score_threshold=0,\n            post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0])))\ndb_sampler = dict(\n    data_root='data/nuscenes/',\n    info_path='data/nuscenes/nuscenes_dbinfos_train.pkl',\n    rate=1.0,\n    prepare=dict(\n        filter_by_difficulty=[-1],\n        filter_by_min_points=dict(\n            car=5,\n            truck=5,\n            bus=5,\n            trailer=5,\n            construction_vehicle=5,\n            traffic_cone=5,\n            barrier=5,\n            motorcycle=5,\n            bicycle=5,\n            pedestrian=5)),\n    classes=[\n        'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',\n        'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'\n    ],\n    sample_groups=dict(\n        car=2,\n        truck=3,\n        construction_vehicle=7,\n        bus=4,\n        trailer=6,\n        barrier=2,\n        motorcycle=6,\n        bicycle=6,\n        pedestrian=2,\n        traffic_cone=2),\n    points_loader=dict(\n        type='LoadPointsFromFile',\n        coord_type='LIDAR',\n        load_dim=5,\n        use_dim=[0, 1, 2, 3, 4],\n        file_client_args=dict(backend='disk')))\nfind_unused_parameters = True\ncustom_hooks = [dict(type='FadeOjectSampleHook', num_last_epochs=5)]\ngpu_ids = range(0, 2)\n", "seed": 0, "exp_name": "dssmss.py"}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 3e-05, "memory": 19139, "data_time": 0.109, "loss_cls": 1.31237, "loss_bbox": 2.21143, "d0.loss_cls": 1.70498, "d0.loss_bbox": 4.39723, "d1.loss_cls": 1.49648, "d1.loss_bbox": 2.26437, "d2.loss_cls": 1.42834, "d2.loss_bbox": 2.24793, "d3.loss_cls": 1.37135, "d3.loss_bbox": 2.23195, "d4.loss_cls": 1.3315, "d4.loss_bbox": 2.21864, "fore_pred_0": 0.01456, "fore_pred_1": 0.01105, "fore_pred_2": 0.012, "fore_pred_3": 0.01449, "aux_task0.loss_heatmap": 205.3093, "aux_task0.loss_bbox": 0.85356, "aux_task1.loss_heatmap": 681.21219, "aux_task1.loss_bbox": 0.87735, "aux_task2.loss_heatmap": 639.23257, "aux_task2.loss_bbox": 1.11479, "aux_task3.loss_heatmap": 374.19905, "aux_task3.loss_bbox": 0.76992, "aux_task4.loss_heatmap": 430.07732, "aux_task4.loss_bbox": 0.73765, "aux_task5.loss_heatmap": 582.03488, "aux_task5.loss_bbox": 0.76545, "loss": 2941.40063, "grad_norm": 11551.22626, "time": 1.48826}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 3e-05, "memory": 19139, "data_time": 0.01148, "loss_cls": 1.16638, "loss_bbox": 1.91931, "d0.loss_cls": 1.25577, "d0.loss_bbox": 3.99024, "d1.loss_cls": 1.17255, "d1.loss_bbox": 2.06163, "d2.loss_cls": 1.17218, "d2.loss_bbox": 1.99733, "d3.loss_cls": 1.16867, "d3.loss_bbox": 1.95442, "d4.loss_cls": 1.1688, "d4.loss_bbox": 1.92734, "fore_pred_0": 0.01449, "fore_pred_1": 0.01063, "fore_pred_2": 0.01208, "fore_pred_3": 0.01471, "aux_task0.loss_heatmap": 73.82874, "aux_task0.loss_bbox": 0.62087, "aux_task1.loss_heatmap": 267.31933, "aux_task1.loss_bbox": 0.62125, "aux_task2.loss_heatmap": 211.04822, "aux_task2.loss_bbox": 0.86793, "aux_task3.loss_heatmap": 92.13997, "aux_task3.loss_bbox": 0.52162, "aux_task4.loss_heatmap": 162.3663, "aux_task4.loss_bbox": 0.51713, "aux_task5.loss_heatmap": 267.5549, "aux_task5.loss_bbox": 0.54856, "loss": 1098.90943, "grad_norm": 5932.85617, "time": 1.11173}
{"mode": "train", "epoch": 1, "iter": 150, "lr": 3e-05, "memory": 19139, "data_time": 0.00901, "loss_cls": 1.14462, "loss_bbox": 1.99291, "d0.loss_cls": 1.15992, "d0.loss_bbox": 2.26015, "d1.loss_cls": 1.15355, "d1.loss_bbox": 1.80592, "d2.loss_cls": 1.15109, "d2.loss_bbox": 1.84457, "d3.loss_cls": 1.14628, "d3.loss_bbox": 1.89877, "d4.loss_cls": 1.1496, "d4.loss_bbox": 1.95019, "fore_pred_0": 0.01482, "fore_pred_1": 0.01039, "fore_pred_2": 0.01188, "fore_pred_3": 0.015, "aux_task0.loss_heatmap": 29.79821, "aux_task0.loss_bbox": 0.49865, "aux_task1.loss_heatmap": 113.9856, "aux_task1.loss_bbox": 0.56378, "aux_task2.loss_heatmap": 82.32261, "aux_task2.loss_bbox": 0.69313, "aux_task3.loss_heatmap": 34.51966, "aux_task3.loss_bbox": 0.45663, "aux_task4.loss_heatmap": 70.8585, "aux_task4.loss_bbox": 0.45979, "aux_task5.loss_heatmap": 111.06657, "aux_task5.loss_bbox": 0.49662, "loss": 464.37733, "grad_norm": 2931.0353, "time": 1.11443}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 3e-05, "memory": 19427, "data_time": 0.00866, "loss_cls": 1.13362, "loss_bbox": 1.76723, "d0.loss_cls": 1.15381, "d0.loss_bbox": 1.76079, "d1.loss_cls": 1.14412, "d1.loss_bbox": 1.75774, "d2.loss_cls": 1.13864, "d2.loss_bbox": 1.77507, "d3.loss_cls": 1.13412, "d3.loss_bbox": 1.77695, "d4.loss_cls": 1.13613, "d4.loss_bbox": 1.7761, "fore_pred_0": 0.0151, "fore_pred_1": 0.01028, "fore_pred_2": 0.01194, "fore_pred_3": 0.01514, "aux_task0.loss_heatmap": 13.67654, "aux_task0.loss_bbox": 0.47762, "aux_task1.loss_heatmap": 55.85691, "aux_task1.loss_bbox": 0.53249, "aux_task2.loss_heatmap": 39.98114, "aux_task2.loss_bbox": 0.58156, "aux_task3.loss_heatmap": 14.19368, "aux_task3.loss_bbox": 0.41932, "aux_task4.loss_heatmap": 33.31237, "aux_task4.loss_bbox": 0.43946, "aux_task5.loss_heatmap": 57.90859, "aux_task5.loss_bbox": 0.4714, "loss": 235.30537, "grad_norm": 1613.96376, "time": 1.11926}
{"mode": "train", "epoch": 1, "iter": 250, "lr": 3e-05, "memory": 19427, "data_time": 0.01034, "loss_cls": 1.12922, "loss_bbox": 1.72231, "d0.loss_cls": 1.14878, "d0.loss_bbox": 1.72586, "d1.loss_cls": 1.1451, "d1.loss_bbox": 1.72619, "d2.loss_cls": 1.13881, "d2.loss_bbox": 1.72285, "d3.loss_cls": 1.12872, "d3.loss_bbox": 1.72229, "d4.loss_cls": 1.13292, "d4.loss_bbox": 1.71993, "fore_pred_0": 0.01519, "fore_pred_1": 0.01025, "fore_pred_2": 0.01212, "fore_pred_3": 0.01558, "aux_task0.loss_heatmap": 6.8354, "aux_task0.loss_bbox": 0.44667, "aux_task1.loss_heatmap": 26.18086, "aux_task1.loss_bbox": 0.51212, "aux_task2.loss_heatmap": 18.6814, "aux_task2.loss_bbox": 0.52808, "aux_task3.loss_heatmap": 9.05364, "aux_task3.loss_bbox": 0.41771, "aux_task4.loss_heatmap": 16.15086, "aux_task4.loss_bbox": 0.43841, "aux_task5.loss_heatmap": 28.17649, "aux_task5.loss_bbox": 0.46841, "loss": 125.05302, "grad_norm": 840.57656, "time": 1.12177}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 3e-05, "memory": 19427, "data_time": 0.00899, "loss_cls": 1.0853, "loss_bbox": 1.71204, "d0.loss_cls": 1.1473, "d0.loss_bbox": 1.72786, "d1.loss_cls": 1.14084, "d1.loss_bbox": 1.72015, "d2.loss_cls": 1.13082, "d2.loss_bbox": 1.71539, "d3.loss_cls": 1.10648, "d3.loss_bbox": 1.71872, "d4.loss_cls": 1.10125, "d4.loss_bbox": 1.71296, "fore_pred_0": 0.01522, "fore_pred_1": 0.01027, "fore_pred_2": 0.01213, "fore_pred_3": 0.01515, "aux_task0.loss_heatmap": 3.56487, "aux_task0.loss_bbox": 0.4371, "aux_task1.loss_heatmap": 12.98599, "aux_task1.loss_bbox": 0.49043, "aux_task2.loss_heatmap": 9.2002, "aux_task2.loss_bbox": 0.53063, "aux_task3.loss_heatmap": 5.16233, "aux_task3.loss_bbox": 0.41348, "aux_task4.loss_heatmap": 8.10638, "aux_task4.loss_bbox": 0.42341, "aux_task5.loss_heatmap": 13.17687, "aux_task5.loss_bbox": 0.46503, "loss": 71.97583, "grad_norm": 418.75868, "time": 1.11964}
{"mode": "train", "epoch": 1, "iter": 350, "lr": 3e-05, "memory": 19427, "data_time": 0.04583, "loss_cls": 1.05227, "loss_bbox": 1.69408, "d0.loss_cls": 1.14944, "d0.loss_bbox": 1.73041, "d1.loss_cls": 1.14008, "d1.loss_bbox": 1.71978, "d2.loss_cls": 1.12091, "d2.loss_bbox": 1.71619, "d3.loss_cls": 1.07853, "d3.loss_bbox": 1.70521, "d4.loss_cls": 1.06055, "d4.loss_bbox": 1.69566, "fore_pred_0": 0.01522, "fore_pred_1": 0.01023, "fore_pred_2": 0.01255, "fore_pred_3": 0.01488, "aux_task0.loss_heatmap": 2.41097, "aux_task0.loss_bbox": 0.43657, "aux_task1.loss_heatmap": 6.25299, "aux_task1.loss_bbox": 0.49239, "aux_task2.loss_heatmap": 4.7632, "aux_task2.loss_bbox": 0.50833, "aux_task3.loss_heatmap": 2.80896, "aux_task3.loss_bbox": 0.40957, "aux_task4.loss_heatmap": 4.17426, "aux_task4.loss_bbox": 0.43138, "aux_task5.loss_heatmap": 6.11436, "aux_task5.loss_bbox": 0.46701, "loss": 46.13312, "grad_norm": 186.81174, "time": 1.15739}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 3e-05, "memory": 19427, "data_time": 0.01161, "loss_cls": 1.03719, "loss_bbox": 1.64267, "d0.loss_cls": 1.12938, "d0.loss_bbox": 1.711, "d1.loss_cls": 1.1129, "d1.loss_bbox": 1.69552, "d2.loss_cls": 1.08078, "d2.loss_bbox": 1.6733, "d3.loss_cls": 1.04135, "d3.loss_bbox": 1.667, "d4.loss_cls": 1.03547, "d4.loss_bbox": 1.65365, "fore_pred_0": 0.01517, "fore_pred_1": 0.01018, "fore_pred_2": 0.01214, "fore_pred_3": 0.01476, "aux_task0.loss_heatmap": 1.72892, "aux_task0.loss_bbox": 0.4295, "aux_task1.loss_heatmap": 3.29987, "aux_task1.loss_bbox": 0.48393, "aux_task2.loss_heatmap": 2.82457, "aux_task2.loss_bbox": 0.47535, "aux_task3.loss_heatmap": 2.01968, "aux_task3.loss_bbox": 0.40961, "aux_task4.loss_heatmap": 2.45966, "aux_task4.loss_bbox": 0.42838, "aux_task5.loss_heatmap": 3.12125, "aux_task5.loss_bbox": 0.4606, "loss": 34.62153, "grad_norm": 79.00491, "time": 1.1259}
{"mode": "train", "epoch": 1, "iter": 450, "lr": 3e-05, "memory": 19427, "data_time": 0.01195, "loss_cls": 1.0284, "loss_bbox": 1.64209, "d0.loss_cls": 1.10791, "d0.loss_bbox": 1.73692, "d1.loss_cls": 1.07126, "d1.loss_bbox": 1.71707, "d2.loss_cls": 1.02856, "d2.loss_bbox": 1.6835, "d3.loss_cls": 1.01747, "d3.loss_bbox": 1.66773, "d4.loss_cls": 1.02174, "d4.loss_bbox": 1.64331, "fore_pred_0": 0.01502, "fore_pred_1": 0.01013, "fore_pred_2": 0.01151, "fore_pred_3": 0.01513, "aux_task0.loss_heatmap": 1.52889, "aux_task0.loss_bbox": 0.42731, "aux_task1.loss_heatmap": 2.1828, "aux_task1.loss_bbox": 0.47547, "aux_task2.loss_heatmap": 2.05273, "aux_task2.loss_bbox": 0.48296, "aux_task3.loss_heatmap": 1.62654, "aux_task3.loss_bbox": 0.3994, "aux_task4.loss_heatmap": 1.79395, "aux_task4.loss_bbox": 0.42531, "aux_task5.loss_heatmap": 1.94305, "aux_task5.loss_bbox": 0.45796, "loss": 30.16231, "grad_norm": 37.88136, "time": 1.11787}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 3e-05, "memory": 19427, "data_time": 0.02521, "loss_cls": 1.01478, "loss_bbox": 1.62142, "d0.loss_cls": 1.09658, "d0.loss_bbox": 1.72521, "d1.loss_cls": 1.02578, "d1.loss_bbox": 1.66906, "d2.loss_cls": 1.00804, "d2.loss_bbox": 1.64066, "d3.loss_cls": 1.00431, "d3.loss_bbox": 1.626, "d4.loss_cls": 1.01063, "d4.loss_bbox": 1.6232, "fore_pred_0": 0.01496, "fore_pred_1": 0.01006, "fore_pred_2": 0.01138, "fore_pred_3": 0.015, "aux_task0.loss_heatmap": 1.41346, "aux_task0.loss_bbox": 0.41882, "aux_task1.loss_heatmap": 1.799, "aux_task1.loss_bbox": 0.45873, "aux_task2.loss_heatmap": 1.81218, "aux_task2.loss_bbox": 0.47081, "aux_task3.loss_heatmap": 1.53288, "aux_task3.loss_bbox": 0.39653, "aux_task4.loss_heatmap": 1.52125, "aux_task4.loss_bbox": 0.41458, "aux_task5.loss_heatmap": 1.66217, "aux_task5.loss_bbox": 0.44492, "loss": 28.41102, "grad_norm": 25.548, "time": 1.12017}
{"mode": "train", "epoch": 1, "iter": 550, "lr": 3e-05, "memory": 19427, "data_time": 0.0083, "loss_cls": 0.97891, "loss_bbox": 1.589, "d0.loss_cls": 1.06099, "d0.loss_bbox": 1.71609, "d1.loss_cls": 0.97834, "d1.loss_bbox": 1.63905, "d2.loss_cls": 0.97309, "d2.loss_bbox": 1.61915, "d3.loss_cls": 0.97168, "d3.loss_bbox": 1.60788, "d4.loss_cls": 0.97668, "d4.loss_bbox": 1.59721, "fore_pred_0": 0.01505, "fore_pred_1": 0.01003, "fore_pred_2": 0.01118, "fore_pred_3": 0.01503, "aux_task0.loss_heatmap": 1.35523, "aux_task0.loss_bbox": 0.40557, "aux_task1.loss_heatmap": 1.62952, "aux_task1.loss_bbox": 0.45296, "aux_task2.loss_heatmap": 1.76658, "aux_task2.loss_bbox": 0.47692, "aux_task3.loss_heatmap": 1.43751, "aux_task3.loss_bbox": 0.39015, "aux_task4.loss_heatmap": 1.34597, "aux_task4.loss_bbox": 0.41163, "aux_task5.loss_heatmap": 1.50799, "aux_task5.loss_bbox": 0.43476, "loss": 27.32286, "grad_norm": 22.2562, "time": 1.10225}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 3e-05, "memory": 19427, "data_time": 0.00843, "loss_cls": 0.95689, "loss_bbox": 1.57853, "d0.loss_cls": 1.04487, "d0.loss_bbox": 1.71784, "d1.loss_cls": 0.95545, "d1.loss_bbox": 1.62672, "d2.loss_cls": 0.95598, "d2.loss_bbox": 1.60843, "d3.loss_cls": 0.9529, "d3.loss_bbox": 1.59839, "d4.loss_cls": 0.95693, "d4.loss_bbox": 1.5843, "fore_pred_0": 0.0152, "fore_pred_1": 0.01004, "fore_pred_2": 0.01106, "fore_pred_3": 0.01487, "aux_task0.loss_heatmap": 1.33998, "aux_task0.loss_bbox": 0.39602, "aux_task1.loss_heatmap": 1.60655, "aux_task1.loss_bbox": 0.43595, "aux_task2.loss_heatmap": 1.74779, "aux_task2.loss_bbox": 0.47139, "aux_task3.loss_heatmap": 1.3544, "aux_task3.loss_bbox": 0.36744, "aux_task4.loss_heatmap": 1.21102, "aux_task4.loss_bbox": 0.39108, "aux_task5.loss_heatmap": 1.42043, "aux_task5.loss_bbox": 0.41336, "loss": 26.69263, "grad_norm": 22.75883, "time": 1.14903}
{"mode": "train", "epoch": 1, "iter": 650, "lr": 3e-05, "memory": 19427, "data_time": 0.0077, "loss_cls": 0.93634, "loss_bbox": 1.54247, "d0.loss_cls": 1.01873, "d0.loss_bbox": 1.71646, "d1.loss_cls": 0.93428, "d1.loss_bbox": 1.61105, "d2.loss_cls": 0.93511, "d2.loss_bbox": 1.57478, "d3.loss_cls": 0.93334, "d3.loss_bbox": 1.55517, "d4.loss_cls": 0.93671, "d4.loss_bbox": 1.54317, "fore_pred_0": 0.01523, "fore_pred_1": 0.01004, "fore_pred_2": 0.01107, "fore_pred_3": 0.01474, "aux_task0.loss_heatmap": 1.28102, "aux_task0.loss_bbox": 0.37913, "aux_task1.loss_heatmap": 1.53122, "aux_task1.loss_bbox": 0.4266, "aux_task2.loss_heatmap": 1.72986, "aux_task2.loss_bbox": 0.46339, "aux_task3.loss_heatmap": 1.36165, "aux_task3.loss_bbox": 0.36636, "aux_task4.loss_heatmap": 1.16621, "aux_task4.loss_bbox": 0.38478, "aux_task5.loss_heatmap": 1.33389, "aux_task5.loss_bbox": 0.39285, "loss": 26.05458, "grad_norm": 22.08927, "time": 1.11228}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 3e-05, "memory": 19427, "data_time": 0.00782, "loss_cls": 0.92914, "loss_bbox": 1.49792, "d0.loss_cls": 1.00213, "d0.loss_bbox": 1.70323, "d1.loss_cls": 0.92578, "d1.loss_bbox": 1.57068, "d2.loss_cls": 0.92783, "d2.loss_bbox": 1.52753, "d3.loss_cls": 0.92385, "d3.loss_bbox": 1.51026, "d4.loss_cls": 0.92805, "d4.loss_bbox": 1.50212, "fore_pred_0": 0.01515, "fore_pred_1": 0.01005, "fore_pred_2": 0.01114, "fore_pred_3": 0.01469, "aux_task0.loss_heatmap": 1.26928, "aux_task0.loss_bbox": 0.37944, "aux_task1.loss_heatmap": 1.50018, "aux_task1.loss_bbox": 0.41542, "aux_task2.loss_heatmap": 1.71752, "aux_task2.loss_bbox": 0.45434, "aux_task3.loss_heatmap": 1.23839, "aux_task3.loss_bbox": 0.35665, "aux_task4.loss_heatmap": 1.06772, "aux_task4.loss_bbox": 0.37362, "aux_task5.loss_heatmap": 1.29053, "aux_task5.loss_bbox": 0.39032, "loss": 25.40194, "grad_norm": 24.0542, "time": 1.11058}
{"mode": "train", "epoch": 1, "iter": 750, "lr": 3e-05, "memory": 19427, "data_time": 0.01, "loss_cls": 0.92258, "loss_bbox": 1.44282, "d0.loss_cls": 0.9878, "d0.loss_bbox": 1.67622, "d1.loss_cls": 0.9264, "d1.loss_bbox": 1.51159, "d2.loss_cls": 0.92488, "d2.loss_bbox": 1.46623, "d3.loss_cls": 0.92107, "d3.loss_bbox": 1.45125, "d4.loss_cls": 0.92307, "d4.loss_bbox": 1.44716, "fore_pred_0": 0.01505, "fore_pred_1": 0.01004, "fore_pred_2": 0.01108, "fore_pred_3": 0.01444, "aux_task0.loss_heatmap": 1.24464, "aux_task0.loss_bbox": 0.37053, "aux_task1.loss_heatmap": 1.49364, "aux_task1.loss_bbox": 0.41731, "aux_task2.loss_heatmap": 1.71295, "aux_task2.loss_bbox": 0.44639, "aux_task3.loss_heatmap": 1.22625, "aux_task3.loss_bbox": 0.34451, "aux_task4.loss_heatmap": 1.03962, "aux_task4.loss_bbox": 0.37407, "aux_task5.loss_heatmap": 1.25235, "aux_task5.loss_bbox": 0.38333, "loss": 24.90665, "grad_norm": 24.65697, "time": 1.1141}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 3e-05, "memory": 19427, "data_time": 0.00807, "loss_cls": 0.92167, "loss_bbox": 1.41858, "d0.loss_cls": 0.98058, "d0.loss_bbox": 1.66251, "d1.loss_cls": 0.92356, "d1.loss_bbox": 1.47995, "d2.loss_cls": 0.92026, "d2.loss_bbox": 1.4371, "d3.loss_cls": 0.9194, "d3.loss_bbox": 1.42586, "d4.loss_cls": 0.91985, "d4.loss_bbox": 1.42313, "fore_pred_0": 0.015, "fore_pred_1": 0.00997, "fore_pred_2": 0.01107, "fore_pred_3": 0.01434, "aux_task0.loss_heatmap": 1.19123, "aux_task0.loss_bbox": 0.36565, "aux_task1.loss_heatmap": 1.46541, "aux_task1.loss_bbox": 0.41165, "aux_task2.loss_heatmap": 1.69363, "aux_task2.loss_bbox": 0.44537, "aux_task3.loss_heatmap": 1.28728, "aux_task3.loss_bbox": 0.35146, "aux_task4.loss_heatmap": 0.9985, "aux_task4.loss_bbox": 0.36087, "aux_task5.loss_heatmap": 1.23867, "aux_task5.loss_bbox": 0.37625, "loss": 24.61842, "grad_norm": 28.36849, "time": 1.10009}
{"mode": "train", "epoch": 1, "iter": 850, "lr": 3e-05, "memory": 19427, "data_time": 0.00808, "loss_cls": 0.90608, "loss_bbox": 1.37823, "d0.loss_cls": 0.97229, "d0.loss_bbox": 1.62895, "d1.loss_cls": 0.91614, "d1.loss_bbox": 1.45676, "d2.loss_cls": 0.90949, "d2.loss_bbox": 1.40856, "d3.loss_cls": 0.90538, "d3.loss_bbox": 1.38918, "d4.loss_cls": 0.90706, "d4.loss_bbox": 1.38412, "fore_pred_0": 0.01498, "fore_pred_1": 0.00996, "fore_pred_2": 0.01094, "fore_pred_3": 0.01445, "aux_task0.loss_heatmap": 1.17841, "aux_task0.loss_bbox": 0.36506, "aux_task1.loss_heatmap": 1.43479, "aux_task1.loss_bbox": 0.4099, "aux_task2.loss_heatmap": 1.679, "aux_task2.loss_bbox": 0.45491, "aux_task3.loss_heatmap": 1.24243, "aux_task3.loss_bbox": 0.34768, "aux_task4.loss_heatmap": 0.96566, "aux_task4.loss_bbox": 0.35958, "aux_task5.loss_heatmap": 1.19809, "aux_task5.loss_bbox": 0.37438, "loss": 24.17214, "grad_norm": 27.95236, "time": 1.10207}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 3e-05, "memory": 19427, "data_time": 0.00831, "loss_cls": 0.89556, "loss_bbox": 1.3305, "d0.loss_cls": 0.95753, "d0.loss_bbox": 1.59693, "d1.loss_cls": 0.90309, "d1.loss_bbox": 1.42174, "d2.loss_cls": 0.89522, "d2.loss_bbox": 1.36839, "d3.loss_cls": 0.89387, "d3.loss_bbox": 1.34491, "d4.loss_cls": 0.89527, "d4.loss_bbox": 1.33762, "fore_pred_0": 0.01502, "fore_pred_1": 0.00992, "fore_pred_2": 0.0108, "fore_pred_3": 0.0146, "aux_task0.loss_heatmap": 1.14974, "aux_task0.loss_bbox": 0.36102, "aux_task1.loss_heatmap": 1.41522, "aux_task1.loss_bbox": 0.40454, "aux_task2.loss_heatmap": 1.6564, "aux_task2.loss_bbox": 0.45011, "aux_task3.loss_heatmap": 1.21189, "aux_task3.loss_bbox": 0.34468, "aux_task4.loss_heatmap": 0.94111, "aux_task4.loss_bbox": 0.35686, "aux_task5.loss_heatmap": 1.16018, "aux_task5.loss_bbox": 0.37644, "loss": 23.66883, "grad_norm": 28.08408, "time": 1.10858}
{"mode": "train", "epoch": 1, "iter": 950, "lr": 3e-05, "memory": 19427, "data_time": 0.0078, "loss_cls": 0.88815, "loss_bbox": 1.30616, "d0.loss_cls": 0.94358, "d0.loss_bbox": 1.57031, "d1.loss_cls": 0.89586, "d1.loss_bbox": 1.39739, "d2.loss_cls": 0.88912, "d2.loss_bbox": 1.33695, "d3.loss_cls": 0.88517, "d3.loss_bbox": 1.31439, "d4.loss_cls": 0.88632, "d4.loss_bbox": 1.31171, "fore_pred_0": 0.01499, "fore_pred_1": 0.00993, "fore_pred_2": 0.01076, "fore_pred_3": 0.01452, "aux_task0.loss_heatmap": 1.14232, "aux_task0.loss_bbox": 0.37082, "aux_task1.loss_heatmap": 1.40164, "aux_task1.loss_bbox": 0.40259, "aux_task2.loss_heatmap": 1.65867, "aux_task2.loss_bbox": 0.43979, "aux_task3.loss_heatmap": 1.16109, "aux_task3.loss_bbox": 0.34184, "aux_task4.loss_heatmap": 0.91507, "aux_task4.loss_bbox": 0.35886, "aux_task5.loss_heatmap": 1.11178, "aux_task5.loss_bbox": 0.36258, "loss": 23.29217, "grad_norm": 30.33038, "time": 1.103}
{"mode": "train", "epoch": 1, "iter": 1000, "lr": 3e-05, "memory": 19427, "data_time": 0.01003, "loss_cls": 0.88742, "loss_bbox": 1.28004, "d0.loss_cls": 0.93634, "d0.loss_bbox": 1.54331, "d1.loss_cls": 0.89478, "d1.loss_bbox": 1.37153, "d2.loss_cls": 0.88686, "d2.loss_bbox": 1.31387, "d3.loss_cls": 0.88313, "d3.loss_bbox": 1.29181, "d4.loss_cls": 0.88484, "d4.loss_bbox": 1.28576, "fore_pred_0": 0.01502, "fore_pred_1": 0.00992, "fore_pred_2": 0.01076, "fore_pred_3": 0.01452, "aux_task0.loss_heatmap": 1.14231, "aux_task0.loss_bbox": 0.36962, "aux_task1.loss_heatmap": 1.38615, "aux_task1.loss_bbox": 0.40355, "aux_task2.loss_heatmap": 1.64431, "aux_task2.loss_bbox": 0.43951, "aux_task3.loss_heatmap": 1.17116, "aux_task3.loss_bbox": 0.34175, "aux_task4.loss_heatmap": 0.88964, "aux_task4.loss_bbox": 0.35672, "aux_task5.loss_heatmap": 1.10839, "aux_task5.loss_bbox": 0.36861, "loss": 23.08141, "grad_norm": 30.01284, "time": 1.10344}
{"mode": "train", "epoch": 1, "iter": 1050, "lr": 3e-05, "memory": 19427, "data_time": 0.00888, "loss_cls": 0.87911, "loss_bbox": 1.26586, "d0.loss_cls": 0.9232, "d0.loss_bbox": 1.52251, "d1.loss_cls": 0.88774, "d1.loss_bbox": 1.35307, "d2.loss_cls": 0.8783, "d2.loss_bbox": 1.29784, "d3.loss_cls": 0.87562, "d3.loss_bbox": 1.27612, "d4.loss_cls": 0.87644, "d4.loss_bbox": 1.2708, "fore_pred_0": 0.01495, "fore_pred_1": 0.00989, "fore_pred_2": 0.01071, "fore_pred_3": 0.01443, "aux_task0.loss_heatmap": 1.1227, "aux_task0.loss_bbox": 0.36589, "aux_task1.loss_heatmap": 1.36927, "aux_task1.loss_bbox": 0.407, "aux_task2.loss_heatmap": 1.63851, "aux_task2.loss_bbox": 0.43891, "aux_task3.loss_heatmap": 1.16675, "aux_task3.loss_bbox": 0.3397, "aux_task4.loss_heatmap": 0.90633, "aux_task4.loss_bbox": 0.35686, "aux_task5.loss_heatmap": 1.07863, "aux_task5.loss_bbox": 0.36478, "loss": 22.86193, "grad_norm": 29.71158, "time": 1.09391}
{"mode": "train", "epoch": 1, "iter": 1100, "lr": 3e-05, "memory": 19427, "data_time": 0.00808, "loss_cls": 0.8513, "loss_bbox": 1.25419, "d0.loss_cls": 0.895, "d0.loss_bbox": 1.50719, "d1.loss_cls": 0.86154, "d1.loss_bbox": 1.33636, "d2.loss_cls": 0.85055, "d2.loss_bbox": 1.28347, "d3.loss_cls": 0.84659, "d3.loss_bbox": 1.2644, "d4.loss_cls": 0.84849, "d4.loss_bbox": 1.25998, "fore_pred_0": 0.01494, "fore_pred_1": 0.00992, "fore_pred_2": 0.01067, "fore_pred_3": 0.01438, "aux_task0.loss_heatmap": 1.08368, "aux_task0.loss_bbox": 0.35833, "aux_task1.loss_heatmap": 1.3565, "aux_task1.loss_bbox": 0.40267, "aux_task2.loss_heatmap": 1.62296, "aux_task2.loss_bbox": 0.44209, "aux_task3.loss_heatmap": 1.1289, "aux_task3.loss_bbox": 0.33621, "aux_task4.loss_heatmap": 0.8877, "aux_task4.loss_bbox": 0.36135, "aux_task5.loss_heatmap": 1.06902, "aux_task5.loss_bbox": 0.35911, "loss": 22.46758, "grad_norm": 32.6434, "time": 1.10691}
{"mode": "val", "epoch": 1, "iter": 3010, "lr": 3e-05, "pts_bbox_NuScenes/car_AP_dist_0.5": 0.0, "pts_bbox_NuScenes/car_AP_dist_1.0": 0.0002, "pts_bbox_NuScenes/car_AP_dist_2.0": 0.046, "pts_bbox_NuScenes/car_AP_dist_4.0": 0.1006, "pts_bbox_NuScenes/car_trans_err": 1.2021, "pts_bbox_NuScenes/car_scale_err": 0.2572, "pts_bbox_NuScenes/car_orient_err": 1.7128, "pts_bbox_NuScenes/car_vel_err": 1.579, "pts_bbox_NuScenes/car_attr_err": 0.4523, "pts_bbox_NuScenes/mATE": 0.9182, "pts_bbox_NuScenes/mASE": 0.6422, "pts_bbox_NuScenes/mAOE": 1.3418, "pts_bbox_NuScenes/mAVE": 0.9308, "pts_bbox_NuScenes/mAAE": 0.6052, "pts_bbox_NuScenes/truck_AP_dist_0.5": 0.0, "pts_bbox_NuScenes/truck_AP_dist_1.0": 0.0, "pts_bbox_NuScenes/truck_AP_dist_2.0": 0.0, "pts_bbox_NuScenes/truck_AP_dist_4.0": 0.0004, "pts_bbox_NuScenes/truck_trans_err": 1.3186, "pts_bbox_NuScenes/truck_scale_err": 0.4156, "pts_bbox_NuScenes/truck_orient_err": 1.5518, "pts_bbox_NuScenes/truck_vel_err": 1.1684, "pts_bbox_NuScenes/truck_attr_err": 0.3766, "pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5": 0.0, "pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0": 0.0, "pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0": 0.0, "pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0": 0.0, "pts_bbox_NuScenes/construction_vehicle_trans_err": 1.3275, "pts_bbox_NuScenes/construction_vehicle_scale_err": 0.6036, "pts_bbox_NuScenes/construction_vehicle_orient_err": 1.6238, "pts_bbox_NuScenes/construction_vehicle_vel_err": 0.1561, "pts_bbox_NuScenes/construction_vehicle_attr_err": 0.4005, "pts_bbox_NuScenes/bus_AP_dist_0.5": 0.0, "pts_bbox_NuScenes/bus_AP_dist_1.0": 0.0, "pts_bbox_NuScenes/bus_AP_dist_2.0": 0.0, "pts_bbox_NuScenes/bus_AP_dist_4.0": 0.0, "pts_bbox_NuScenes/bus_trans_err": 1.0, "pts_bbox_NuScenes/bus_scale_err": 1.0, "pts_bbox_NuScenes/bus_orient_err": 1.0, "pts_bbox_NuScenes/bus_vel_err": 1.0, "pts_bbox_NuScenes/bus_attr_err": 1.0, "pts_bbox_NuScenes/trailer_AP_dist_0.5": 0.0, "pts_bbox_NuScenes/trailer_AP_dist_1.0": 0.0, "pts_bbox_NuScenes/trailer_AP_dist_2.0": 0.0, "pts_bbox_NuScenes/trailer_AP_dist_4.0": 0.0, "pts_bbox_NuScenes/trailer_trans_err": 1.0, "pts_bbox_NuScenes/trailer_scale_err": 1.0, "pts_bbox_NuScenes/trailer_orient_err": 1.0, "pts_bbox_NuScenes/trailer_vel_err": 1.0, "pts_bbox_NuScenes/trailer_attr_err": 1.0, "pts_bbox_NuScenes/barrier_AP_dist_0.5": 0.0, "pts_bbox_NuScenes/barrier_AP_dist_1.0": 0.0015, "pts_bbox_NuScenes/barrier_AP_dist_2.0": 0.0223, "pts_bbox_NuScenes/barrier_AP_dist_4.0": 0.0471, "pts_bbox_NuScenes/barrier_trans_err": 0.9497, "pts_bbox_NuScenes/barrier_scale_err": 0.7898, "pts_bbox_NuScenes/barrier_orient_err": 0.8967, "pts_bbox_NuScenes/barrier_vel_err": NaN, "pts_bbox_NuScenes/barrier_attr_err": NaN, "pts_bbox_NuScenes/motorcycle_AP_dist_0.5": 0.0, "pts_bbox_NuScenes/motorcycle_AP_dist_1.0": 0.0, "pts_bbox_NuScenes/motorcycle_AP_dist_2.0": 0.0, "pts_bbox_NuScenes/motorcycle_AP_dist_4.0": 0.0, "pts_bbox_NuScenes/motorcycle_trans_err": 0.4666, "pts_bbox_NuScenes/motorcycle_scale_err": 0.6191, "pts_bbox_NuScenes/motorcycle_orient_err": 1.4756, "pts_bbox_NuScenes/motorcycle_vel_err": 1.0915, "pts_bbox_NuScenes/motorcycle_attr_err": 0.5887, "pts_bbox_NuScenes/bicycle_AP_dist_0.5": 0.0, "pts_bbox_NuScenes/bicycle_AP_dist_1.0": 0.0, "pts_bbox_NuScenes/bicycle_AP_dist_2.0": 0.0, "pts_bbox_NuScenes/bicycle_AP_dist_4.0": 0.0, "pts_bbox_NuScenes/bicycle_trans_err": 0.7936, "pts_bbox_NuScenes/bicycle_scale_err": 0.6109, "pts_bbox_NuScenes/bicycle_orient_err": 1.3253, "pts_bbox_NuScenes/bicycle_vel_err": 0.3494, "pts_bbox_NuScenes/bicycle_attr_err": 0.1418, "pts_bbox_NuScenes/pedestrian_AP_dist_0.5": 0.0, "pts_bbox_NuScenes/pedestrian_AP_dist_1.0": 0.0006, "pts_bbox_NuScenes/pedestrian_AP_dist_2.0": 0.0016, "pts_bbox_NuScenes/pedestrian_AP_dist_4.0": 0.0049, "pts_bbox_NuScenes/pedestrian_trans_err": 0.4811, "pts_bbox_NuScenes/pedestrian_scale_err": 0.4834, "pts_bbox_NuScenes/pedestrian_orient_err": 1.4904, "pts_bbox_NuScenes/pedestrian_vel_err": 1.102, "pts_bbox_NuScenes/pedestrian_attr_err": 0.8815, "pts_bbox_NuScenes/traffic_cone_AP_dist_0.5": 0.0, "pts_bbox_NuScenes/traffic_cone_AP_dist_1.0": 0.0018, "pts_bbox_NuScenes/traffic_cone_AP_dist_2.0": 0.0062, "pts_bbox_NuScenes/traffic_cone_AP_dist_4.0": 0.0228, "pts_bbox_NuScenes/traffic_cone_trans_err": 0.6424, "pts_bbox_NuScenes/traffic_cone_scale_err": 0.6422, "pts_bbox_NuScenes/traffic_cone_orient_err": NaN, "pts_bbox_NuScenes/traffic_cone_vel_err": NaN, "pts_bbox_NuScenes/traffic_cone_attr_err": NaN, "pts_bbox_NuScenes/NDS": 0.09357, "pts_bbox_NuScenes/mAP": 0.0064}
{"mode": "train", "epoch": 2, "iter": 50, "lr": 3e-05, "memory": 19427, "data_time": 0.08272, "loss_cls": 0.84356, "loss_bbox": 1.22951, "d0.loss_cls": 0.88807, "d0.loss_bbox": 1.46021, "d1.loss_cls": 0.85224, "d1.loss_bbox": 1.29656, "d2.loss_cls": 0.84088, "d2.loss_bbox": 1.2505, "d3.loss_cls": 0.83799, "d3.loss_bbox": 1.23339, "d4.loss_cls": 0.84, "d4.loss_bbox": 1.23215, "fore_pred_0": 0.01495, "fore_pred_1": 0.0099, "fore_pred_2": 0.01054, "fore_pred_3": 0.01429, "aux_task0.loss_heatmap": 1.05652, "aux_task0.loss_bbox": 0.35417, "aux_task1.loss_heatmap": 1.33793, "aux_task1.loss_bbox": 0.39955, "aux_task2.loss_heatmap": 1.61724, "aux_task2.loss_bbox": 0.43988, "aux_task3.loss_heatmap": 1.10555, "aux_task3.loss_bbox": 0.33746, "aux_task4.loss_heatmap": 0.8768, "aux_task4.loss_bbox": 0.35413, "aux_task5.loss_heatmap": 1.02731, "aux_task5.loss_bbox": 0.35844, "loss": 22.07001, "grad_norm": 35.18552, "time": 1.17299}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 4e-05, "memory": 19427, "data_time": 0.00813, "loss_cls": 0.83739, "loss_bbox": 1.21096, "d0.loss_cls": 0.87914, "d0.loss_bbox": 1.44822, "d1.loss_cls": 0.84599, "d1.loss_bbox": 1.28572, "d2.loss_cls": 0.83481, "d2.loss_bbox": 1.23958, "d3.loss_cls": 0.83294, "d3.loss_bbox": 1.22249, "d4.loss_cls": 0.83486, "d4.loss_bbox": 1.21614, "fore_pred_0": 0.01494, "fore_pred_1": 0.00989, "fore_pred_2": 0.01046, "fore_pred_3": 0.01437, "aux_task0.loss_heatmap": 1.0622, "aux_task0.loss_bbox": 0.35141, "aux_task1.loss_heatmap": 1.34769, "aux_task1.loss_bbox": 0.39628, "aux_task2.loss_heatmap": 1.61353, "aux_task2.loss_bbox": 0.43232, "aux_task3.loss_heatmap": 1.12509, "aux_task3.loss_bbox": 0.33342, "aux_task4.loss_heatmap": 0.85036, "aux_task4.loss_bbox": 0.35557, "aux_task5.loss_heatmap": 1.00396, "aux_task5.loss_bbox": 0.35534, "loss": 21.9154, "grad_norm": 31.93223, "time": 1.0943}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 4e-05, "memory": 19427, "data_time": 0.00842, "loss_cls": 0.82821, "loss_bbox": 1.20507, "d0.loss_cls": 0.87422, "d0.loss_bbox": 1.43412, "d1.loss_cls": 0.83943, "d1.loss_bbox": 1.27859, "d2.loss_cls": 0.82874, "d2.loss_bbox": 1.23313, "d3.loss_cls": 0.82567, "d3.loss_bbox": 1.21417, "d4.loss_cls": 0.82461, "d4.loss_bbox": 1.21091, "fore_pred_0": 0.01502, "fore_pred_1": 0.00983, "fore_pred_2": 0.01048, "fore_pred_3": 0.01428, "aux_task0.loss_heatmap": 1.08365, "aux_task0.loss_bbox": 0.36567, "aux_task1.loss_heatmap": 1.30904, "aux_task1.loss_bbox": 0.39391, "aux_task2.loss_heatmap": 1.58252, "aux_task2.loss_bbox": 0.43104, "aux_task3.loss_heatmap": 1.09653, "aux_task3.loss_bbox": 0.33929, "aux_task4.loss_heatmap": 0.83399, "aux_task4.loss_bbox": 0.35161, "aux_task5.loss_heatmap": 0.98016, "aux_task5.loss_bbox": 0.35958, "loss": 21.72386, "grad_norm": 32.6031, "time": 1.10697}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 4e-05, "memory": 19427, "data_time": 0.00843, "loss_cls": 0.82634, "loss_bbox": 1.19914, "d0.loss_cls": 0.86612, "d0.loss_bbox": 1.42786, "d1.loss_cls": 0.83308, "d1.loss_bbox": 1.2766, "d2.loss_cls": 0.8247, "d2.loss_bbox": 1.23018, "d3.loss_cls": 0.82299, "d3.loss_bbox": 1.2115, "d4.loss_cls": 0.82317, "d4.loss_bbox": 1.20424, "fore_pred_0": 0.01492, "fore_pred_1": 0.00982, "fore_pred_2": 0.01045, "fore_pred_3": 0.01436, "aux_task0.loss_heatmap": 1.065, "aux_task0.loss_bbox": 0.35753, "aux_task1.loss_heatmap": 1.30218, "aux_task1.loss_bbox": 0.39466, "aux_task2.loss_heatmap": 1.57539, "aux_task2.loss_bbox": 0.43065, "aux_task3.loss_heatmap": 1.07427, "aux_task3.loss_bbox": 0.33333, "aux_task4.loss_heatmap": 0.82397, "aux_task4.loss_bbox": 0.35151, "aux_task5.loss_heatmap": 1.00865, "aux_task5.loss_bbox": 0.36031, "loss": 21.62338, "grad_norm": 33.72493, "time": 1.09682}
{"mode": "train", "epoch": 2, "iter": 250, "lr": 4e-05, "memory": 19427, "data_time": 0.00826, "loss_cls": 0.81144, "loss_bbox": 1.17383, "d0.loss_cls": 0.855, "d0.loss_bbox": 1.39428, "d1.loss_cls": 0.8205, "d1.loss_bbox": 1.24088, "d2.loss_cls": 0.81068, "d2.loss_bbox": 1.19932, "d3.loss_cls": 0.80584, "d3.loss_bbox": 1.18414, "d4.loss_cls": 0.80845, "d4.loss_bbox": 1.17764, "fore_pred_0": 0.01491, "fore_pred_1": 0.00987, "fore_pred_2": 0.01056, "fore_pred_3": 0.01446, "aux_task0.loss_heatmap": 1.0343, "aux_task0.loss_bbox": 0.34631, "aux_task1.loss_heatmap": 1.28075, "aux_task1.loss_bbox": 0.39606, "aux_task2.loss_heatmap": 1.55639, "aux_task2.loss_bbox": 0.42451, "aux_task3.loss_heatmap": 1.06103, "aux_task3.loss_bbox": 0.32936, "aux_task4.loss_heatmap": 0.83719, "aux_task4.loss_bbox": 0.35268, "aux_task5.loss_heatmap": 0.95748, "aux_task5.loss_bbox": 0.35152, "loss": 21.2096, "grad_norm": 34.91988, "time": 1.09628}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 4e-05, "memory": 19427, "data_time": 0.00859, "loss_cls": 0.80434, "loss_bbox": 1.17965, "d0.loss_cls": 0.85101, "d0.loss_bbox": 1.39619, "d1.loss_cls": 0.81872, "d1.loss_bbox": 1.24964, "d2.loss_cls": 0.80763, "d2.loss_bbox": 1.20592, "d3.loss_cls": 0.80327, "d3.loss_bbox": 1.1902, "d4.loss_cls": 0.80297, "d4.loss_bbox": 1.18498, "fore_pred_0": 0.01497, "fore_pred_1": 0.00978, "fore_pred_2": 0.01058, "fore_pred_3": 0.0145, "aux_task0.loss_heatmap": 1.01911, "aux_task0.loss_bbox": 0.35944, "aux_task1.loss_heatmap": 1.30145, "aux_task1.loss_bbox": 0.3939, "aux_task2.loss_heatmap": 1.5601, "aux_task2.loss_bbox": 0.44199, "aux_task3.loss_heatmap": 1.08638, "aux_task3.loss_bbox": 0.33461, "aux_task4.loss_heatmap": 0.82775, "aux_task4.loss_bbox": 0.34097, "aux_task5.loss_heatmap": 0.91984, "aux_task5.loss_bbox": 0.35188, "loss": 21.23195, "grad_norm": 34.36212, "time": 1.10318}
{"mode": "train", "epoch": 2, "iter": 350, "lr": 4e-05, "memory": 19427, "data_time": 0.00793, "loss_cls": 0.79528, "loss_bbox": 1.16729, "d0.loss_cls": 0.84119, "d0.loss_bbox": 1.35859, "d1.loss_cls": 0.80305, "d1.loss_bbox": 1.22749, "d2.loss_cls": 0.79391, "d2.loss_bbox": 1.18913, "d3.loss_cls": 0.79188, "d3.loss_bbox": 1.17387, "d4.loss_cls": 0.7921, "d4.loss_bbox": 1.16935, "fore_pred_0": 0.0149, "fore_pred_1": 0.00976, "fore_pred_2": 0.01062, "fore_pred_3": 0.01441, "aux_task0.loss_heatmap": 1.01678, "aux_task0.loss_bbox": 0.34997, "aux_task1.loss_heatmap": 1.29267, "aux_task1.loss_bbox": 0.3965, "aux_task2.loss_heatmap": 1.54385, "aux_task2.loss_bbox": 0.42711, "aux_task3.loss_heatmap": 1.08264, "aux_task3.loss_bbox": 0.33777, "aux_task4.loss_heatmap": 0.8276, "aux_task4.loss_bbox": 0.35037, "aux_task5.loss_heatmap": 0.92267, "aux_task5.loss_bbox": 0.35144, "loss": 21.00249, "grad_norm": 33.54068, "time": 1.09531}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 4e-05, "memory": 19427, "data_time": 0.0084, "loss_cls": 0.78325, "loss_bbox": 1.14565, "d0.loss_cls": 0.8316, "d0.loss_bbox": 1.34367, "d1.loss_cls": 0.79451, "d1.loss_bbox": 1.21206, "d2.loss_cls": 0.78586, "d2.loss_bbox": 1.17266, "d3.loss_cls": 0.78193, "d3.loss_bbox": 1.15629, "d4.loss_cls": 0.78119, "d4.loss_bbox": 1.15065, "fore_pred_0": 0.0149, "fore_pred_1": 0.0097, "fore_pred_2": 0.0106, "fore_pred_3": 0.01434, "aux_task0.loss_heatmap": 1.00341, "aux_task0.loss_bbox": 0.34945, "aux_task1.loss_heatmap": 1.26466, "aux_task1.loss_bbox": 0.39123, "aux_task2.loss_heatmap": 1.55627, "aux_task2.loss_bbox": 0.42079, "aux_task3.loss_heatmap": 1.05889, "aux_task3.loss_bbox": 0.33631, "aux_task4.loss_heatmap": 0.80291, "aux_task4.loss_bbox": 0.34893, "aux_task5.loss_heatmap": 0.88243, "aux_task5.loss_bbox": 0.34972, "loss": 20.70429, "grad_norm": 32.67919, "time": 1.10023}
{"mode": "train", "epoch": 2, "iter": 450, "lr": 4e-05, "memory": 19427, "data_time": 0.00845, "loss_cls": 0.77681, "loss_bbox": 1.14765, "d0.loss_cls": 0.8251, "d0.loss_bbox": 1.34034, "d1.loss_cls": 0.79048, "d1.loss_bbox": 1.21363, "d2.loss_cls": 0.77803, "d2.loss_bbox": 1.17391, "d3.loss_cls": 0.77513, "d3.loss_bbox": 1.15862, "d4.loss_cls": 0.77606, "d4.loss_bbox": 1.15284, "fore_pred_0": 0.01501, "fore_pred_1": 0.00969, "fore_pred_2": 0.01071, "fore_pred_3": 0.01428, "aux_task0.loss_heatmap": 1.01222, "aux_task0.loss_bbox": 0.34625, "aux_task1.loss_heatmap": 1.25633, "aux_task1.loss_bbox": 0.39114, "aux_task2.loss_heatmap": 1.51719, "aux_task2.loss_bbox": 0.42788, "aux_task3.loss_heatmap": 1.03824, "aux_task3.loss_bbox": 0.3353, "aux_task4.loss_heatmap": 0.82313, "aux_task4.loss_bbox": 0.34954, "aux_task5.loss_heatmap": 0.86677, "aux_task5.loss_bbox": 0.34863, "loss": 20.62122, "grad_norm": 32.36735, "time": 1.09907}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 4e-05, "memory": 19427, "data_time": 0.00841, "loss_cls": 0.76093, "loss_bbox": 1.13357, "d0.loss_cls": 0.81263, "d0.loss_bbox": 1.32355, "d1.loss_cls": 0.77592, "d1.loss_bbox": 1.19401, "d2.loss_cls": 0.7643, "d2.loss_bbox": 1.15916, "d3.loss_cls": 0.75913, "d3.loss_bbox": 1.14603, "d4.loss_cls": 0.75805, "d4.loss_bbox": 1.1402, "fore_pred_0": 0.01502, "fore_pred_1": 0.00972, "fore_pred_2": 0.01071, "fore_pred_3": 0.01436, "aux_task0.loss_heatmap": 0.98465, "aux_task0.loss_bbox": 0.34883, "aux_task1.loss_heatmap": 1.27574, "aux_task1.loss_bbox": 0.38771, "aux_task2.loss_heatmap": 1.48859, "aux_task2.loss_bbox": 0.41955, "aux_task3.loss_heatmap": 1.10386, "aux_task3.loss_bbox": 0.33579, "aux_task4.loss_heatmap": 0.78831, "aux_task4.loss_bbox": 0.34391, "aux_task5.loss_heatmap": 0.85573, "aux_task5.loss_bbox": 0.34546, "loss": 20.40563, "grad_norm": 34.69986, "time": 1.0974}
{"mode": "train", "epoch": 2, "iter": 550, "lr": 4e-05, "memory": 19427, "data_time": 0.00822, "loss_cls": 0.77328, "loss_bbox": 1.12688, "d0.loss_cls": 0.81762, "d0.loss_bbox": 1.32105, "d1.loss_cls": 0.78114, "d1.loss_bbox": 1.19222, "d2.loss_cls": 0.7733, "d2.loss_bbox": 1.15567, "d3.loss_cls": 0.77076, "d3.loss_bbox": 1.13902, "d4.loss_cls": 0.76986, "d4.loss_bbox": 1.13345, "fore_pred_0": 0.01507, "fore_pred_1": 0.00971, "fore_pred_2": 0.01067, "fore_pred_3": 0.01443, "aux_task0.loss_heatmap": 0.99049, "aux_task0.loss_bbox": 0.35142, "aux_task1.loss_heatmap": 1.23033, "aux_task1.loss_bbox": 0.38624, "aux_task2.loss_heatmap": 1.50949, "aux_task2.loss_bbox": 0.42806, "aux_task3.loss_heatmap": 1.02259, "aux_task3.loss_bbox": 0.32601, "aux_task4.loss_heatmap": 0.7787, "aux_task4.loss_bbox": 0.34794, "aux_task5.loss_heatmap": 0.86932, "aux_task5.loss_bbox": 0.34676, "loss": 20.34159, "grad_norm": 36.21998, "time": 1.09688}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 5e-05, "memory": 19427, "data_time": 0.00854, "loss_cls": 0.75012, "loss_bbox": 1.12744, "d0.loss_cls": 0.79527, "d0.loss_bbox": 1.30595, "d1.loss_cls": 0.75823, "d1.loss_bbox": 1.18342, "d2.loss_cls": 0.74973, "d2.loss_bbox": 1.14664, "d3.loss_cls": 0.74608, "d3.loss_bbox": 1.13516, "d4.loss_cls": 0.74783, "d4.loss_bbox": 1.13173, "fore_pred_0": 0.01505, "fore_pred_1": 0.00978, "fore_pred_2": 0.01063, "fore_pred_3": 0.01446, "aux_task0.loss_heatmap": 0.96618, "aux_task0.loss_bbox": 0.34156, "aux_task1.loss_heatmap": 1.24437, "aux_task1.loss_bbox": 0.38532, "aux_task2.loss_heatmap": 1.48841, "aux_task2.loss_bbox": 0.43041, "aux_task3.loss_heatmap": 1.03167, "aux_task3.loss_bbox": 0.32996, "aux_task4.loss_heatmap": 0.76039, "aux_task4.loss_bbox": 0.34388, "aux_task5.loss_heatmap": 0.82919, "aux_task5.loss_bbox": 0.3461, "loss": 20.07503, "grad_norm": 38.96472, "time": 1.10499}
{"mode": "train", "epoch": 2, "iter": 650, "lr": 5e-05, "memory": 19427, "data_time": 0.00853, "loss_cls": 0.75273, "loss_bbox": 1.10852, "d0.loss_cls": 0.79769, "d0.loss_bbox": 1.29326, "d1.loss_cls": 0.76128, "d1.loss_bbox": 1.17252, "d2.loss_cls": 0.75364, "d2.loss_bbox": 1.13632, "d3.loss_cls": 0.75039, "d3.loss_bbox": 1.12101, "d4.loss_cls": 0.75027, "d4.loss_bbox": 1.11425, "fore_pred_0": 0.01501, "fore_pred_1": 0.00975, "fore_pred_2": 0.01075, "fore_pred_3": 0.0143, "aux_task0.loss_heatmap": 0.9522, "aux_task0.loss_bbox": 0.33653, "aux_task1.loss_heatmap": 1.19262, "aux_task1.loss_bbox": 0.38674, "aux_task2.loss_heatmap": 1.50077, "aux_task2.loss_bbox": 0.42555, "aux_task3.loss_heatmap": 1.0633, "aux_task3.loss_bbox": 0.32988, "aux_task4.loss_heatmap": 0.80352, "aux_task4.loss_bbox": 0.34394, "aux_task5.loss_heatmap": 0.81462, "aux_task5.loss_bbox": 0.34049, "loss": 20.00204, "grad_norm": 37.55322, "time": 1.10693}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 5e-05, "memory": 19427, "data_time": 0.00875, "loss_cls": 0.73938, "loss_bbox": 1.10019, "d0.loss_cls": 0.79185, "d0.loss_bbox": 1.28048, "d1.loss_cls": 0.75332, "d1.loss_bbox": 1.16076, "d2.loss_cls": 0.74418, "d2.loss_bbox": 1.12793, "d3.loss_cls": 0.7398, "d3.loss_bbox": 1.11323, "d4.loss_cls": 0.73768, "d4.loss_bbox": 1.10542, "fore_pred_0": 0.01497, "fore_pred_1": 0.00974, "fore_pred_2": 0.01079, "fore_pred_3": 0.01445, "aux_task0.loss_heatmap": 0.97942, "aux_task0.loss_bbox": 0.34092, "aux_task1.loss_heatmap": 1.20537, "aux_task1.loss_bbox": 0.38735, "aux_task2.loss_heatmap": 1.49103, "aux_task2.loss_bbox": 0.42618, "aux_task3.loss_heatmap": 1.00038, "aux_task3.loss_bbox": 0.32488, "aux_task4.loss_heatmap": 0.7659, "aux_task4.loss_bbox": 0.34467, "aux_task5.loss_heatmap": 0.79044, "aux_task5.loss_bbox": 0.33622, "loss": 19.787, "grad_norm": 37.07843, "time": 1.1077}
{"mode": "train", "epoch": 2, "iter": 750, "lr": 5e-05, "memory": 19427, "data_time": 0.00894, "loss_cls": 0.73267, "loss_bbox": 1.10222, "d0.loss_cls": 0.78305, "d0.loss_bbox": 1.27734, "d1.loss_cls": 0.74678, "d1.loss_bbox": 1.15975, "d2.loss_cls": 0.73824, "d2.loss_bbox": 1.12502, "d3.loss_cls": 0.73244, "d3.loss_bbox": 1.11301, "d4.loss_cls": 0.72903, "d4.loss_bbox": 1.10913, "fore_pred_0": 0.01502, "fore_pred_1": 0.00972, "fore_pred_2": 0.01087, "fore_pred_3": 0.01433, "aux_task0.loss_heatmap": 0.95002, "aux_task0.loss_bbox": 0.34398, "aux_task1.loss_heatmap": 1.21187, "aux_task1.loss_bbox": 0.38272, "aux_task2.loss_heatmap": 1.44332, "aux_task2.loss_bbox": 0.42137, "aux_task3.loss_heatmap": 1.02402, "aux_task3.loss_bbox": 0.32327, "aux_task4.loss_heatmap": 0.75879, "aux_task4.loss_bbox": 0.34541, "aux_task5.loss_heatmap": 0.79175, "aux_task5.loss_bbox": 0.33479, "loss": 19.67999, "grad_norm": 39.97798, "time": 1.09954}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 5e-05, "memory": 19427, "data_time": 0.00869, "loss_cls": 0.73062, "loss_bbox": 1.09313, "d0.loss_cls": 0.78265, "d0.loss_bbox": 1.26966, "d1.loss_cls": 0.74455, "d1.loss_bbox": 1.15301, "d2.loss_cls": 0.7351, "d2.loss_bbox": 1.11599, "d3.loss_cls": 0.72854, "d3.loss_bbox": 1.10316, "d4.loss_cls": 0.72901, "d4.loss_bbox": 1.0944, "fore_pred_0": 0.01507, "fore_pred_1": 0.00977, "fore_pred_2": 0.01081, "fore_pred_3": 0.01428, "aux_task0.loss_heatmap": 0.94206, "aux_task0.loss_bbox": 0.34, "aux_task1.loss_heatmap": 1.20321, "aux_task1.loss_bbox": 0.38353, "aux_task2.loss_heatmap": 1.45096, "aux_task2.loss_bbox": 0.41832, "aux_task3.loss_heatmap": 1.01074, "aux_task3.loss_bbox": 0.32836, "aux_task4.loss_heatmap": 0.7763, "aux_task4.loss_bbox": 0.33721, "aux_task5.loss_heatmap": 0.77849, "aux_task5.loss_bbox": 0.33722, "loss": 19.58621, "grad_norm": 33.60417, "time": 1.09967}
{"mode": "train", "epoch": 2, "iter": 850, "lr": 5e-05, "memory": 19427, "data_time": 0.00905, "loss_cls": 0.70933, "loss_bbox": 1.07285, "d0.loss_cls": 0.76452, "d0.loss_bbox": 1.25307, "d1.loss_cls": 0.72437, "d1.loss_bbox": 1.13058, "d2.loss_cls": 0.71323, "d2.loss_bbox": 1.09262, "d3.loss_cls": 0.70757, "d3.loss_bbox": 1.08203, "d4.loss_cls": 0.70634, "d4.loss_bbox": 1.07626, "fore_pred_0": 0.01511, "fore_pred_1": 0.00965, "fore_pred_2": 0.01076, "fore_pred_3": 0.01426, "aux_task0.loss_heatmap": 0.90478, "aux_task0.loss_bbox": 0.33892, "aux_task1.loss_heatmap": 1.20258, "aux_task1.loss_bbox": 0.38472, "aux_task2.loss_heatmap": 1.43631, "aux_task2.loss_bbox": 0.41751, "aux_task3.loss_heatmap": 0.97173, "aux_task3.loss_bbox": 0.32301, "aux_task4.loss_heatmap": 0.75933, "aux_task4.loss_bbox": 0.33534, "aux_task5.loss_heatmap": 0.72777, "aux_task5.loss_bbox": 0.33235, "loss": 19.16711, "grad_norm": 40.47013, "time": 1.10215}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 5e-05, "memory": 19427, "data_time": 0.01159, "loss_cls": 0.72509, "loss_bbox": 1.09328, "d0.loss_cls": 0.77674, "d0.loss_bbox": 1.26658, "d1.loss_cls": 0.74063, "d1.loss_bbox": 1.15371, "d2.loss_cls": 0.73109, "d2.loss_bbox": 1.11692, "d3.loss_cls": 0.72275, "d3.loss_bbox": 1.10536, "d4.loss_cls": 0.7224, "d4.loss_bbox": 1.09495, "fore_pred_0": 0.01505, "fore_pred_1": 0.00973, "fore_pred_2": 0.01077, "fore_pred_3": 0.01424, "aux_task0.loss_heatmap": 0.9289, "aux_task0.loss_bbox": 0.33504, "aux_task1.loss_heatmap": 1.22429, "aux_task1.loss_bbox": 0.38315, "aux_task2.loss_heatmap": 1.43037, "aux_task2.loss_bbox": 0.42154, "aux_task3.loss_heatmap": 0.97198, "aux_task3.loss_bbox": 0.3261, "aux_task4.loss_heatmap": 0.77426, "aux_task4.loss_bbox": 0.33544, "aux_task5.loss_heatmap": 0.7729, "aux_task5.loss_bbox": 0.33426, "loss": 19.48773, "grad_norm": 39.03826, "time": 1.10721}
{"mode": "train", "epoch": 2, "iter": 950, "lr": 5e-05, "memory": 19427, "data_time": 0.00937, "loss_cls": 0.70866, "loss_bbox": 1.08741, "d0.loss_cls": 0.76148, "d0.loss_bbox": 1.26131, "d1.loss_cls": 0.72565, "d1.loss_bbox": 1.14844, "d2.loss_cls": 0.71455, "d2.loss_bbox": 1.11366, "d3.loss_cls": 0.7084, "d3.loss_bbox": 1.1008, "d4.loss_cls": 0.7062, "d4.loss_bbox": 1.08842, "fore_pred_0": 0.01507, "fore_pred_1": 0.00969, "fore_pred_2": 0.01087, "fore_pred_3": 0.01441, "aux_task0.loss_heatmap": 0.93866, "aux_task0.loss_bbox": 0.3437, "aux_task1.loss_heatmap": 1.20328, "aux_task1.loss_bbox": 0.38243, "aux_task2.loss_heatmap": 1.42795, "aux_task2.loss_bbox": 0.41436, "aux_task3.loss_heatmap": 0.93658, "aux_task3.loss_bbox": 0.32208, "aux_task4.loss_heatmap": 0.73505, "aux_task4.loss_bbox": 0.33931, "aux_task5.loss_heatmap": 0.76592, "aux_task5.loss_bbox": 0.33648, "loss": 19.27079, "grad_norm": 36.02426, "time": 1.15176}
