2025-04-16 13:03:42,030 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.20 | packaged by conda-forge | (default, Sep 30 2024, 17:52:49) [GCC 13.3.0]
CUDA available: True
GPU 0,1: NVIDIA GeForce RTX 4090 D
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.6, V11.6.55
GCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
PyTorch: 1.13.0
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2022.1-Product Build 20220311 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.6
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.6, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.14.0
OpenCV: 4.11.0
MMCV: 1.7.0
MMCV Compiler: GCC 9.4
MMCV CUDA Compiler: 11.6
MMDetection: 2.27.0
MMSegmentation: 0.30.0
MMDetection3D: 1.0.0rc6+9130d71
spconv2.0: True
------------------------------------------------------------

2025-04-16 13:03:42,877 - mmdet - INFO - Distributed training: True
2025-04-16 13:03:43,690 - mmdet - INFO - Config:
point_cloud_range = [-54, -54, -5.0, 54, 54, 3.0]
class_names = [
    'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',
    'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
]
dataset_type = 'NuScenesDataset'
data_root = 'data/nuscenes/'
input_modality = dict(
    use_lidar=True,
    use_camera=False,
    use_radar=False,
    use_map=False,
    use_external=False)
file_client_args = dict(backend='disk')
train_pipeline = [
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=5,
        file_client_args=dict(backend='disk')),
    dict(
        type='LoadPointsFromMultiSweeps',
        sweeps_num=9,
        use_dim=[0, 1, 2, 3, 4],
        file_client_args=dict(backend='disk'),
        pad_empty_sweeps=True,
        remove_close=True),
    dict(type='LoadAnnotations3D', with_bbox_3d=True, with_label_3d=True),
    dict(
        type='ObjectSample',
        db_sampler=dict(
            data_root='data/nuscenes/',
            info_path='data/nuscenes/nuscenes_dbinfos_train.pkl',
            rate=1.0,
            prepare=dict(
                filter_by_difficulty=[-1],
                filter_by_min_points=dict(
                    car=5,
                    truck=5,
                    bus=5,
                    trailer=5,
                    construction_vehicle=5,
                    traffic_cone=5,
                    barrier=5,
                    motorcycle=5,
                    bicycle=5,
                    pedestrian=5)),
            classes=[
                'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                'traffic_cone'
            ],
            sample_groups=dict(
                car=2,
                truck=3,
                construction_vehicle=7,
                bus=4,
                trailer=6,
                barrier=2,
                motorcycle=6,
                bicycle=6,
                pedestrian=2,
                traffic_cone=2),
            points_loader=dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=[0, 1, 2, 3, 4],
                file_client_args=dict(backend='disk')))),
    dict(
        type='GlobalRotScaleTrans',
        rot_range=[-0.785, 0.785],
        scale_ratio_range=[0.9, 1.1],
        translation_std=[0.5, 0.5, 0.5]),
    dict(
        type='RandomFlip3D',
        sync_2d=False,
        flip_ratio_bev_horizontal=0.5,
        flip_ratio_bev_vertical=0.5),
    dict(
        type='PointsRangeFilter',
        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
    dict(
        type='ObjectRangeFilter',
        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
    dict(
        type='ObjectNameFilter',
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ]),
    dict(type='PointShuffle'),
    dict(
        type='DefaultFormatBundle3D',
        class_names=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ]),
    dict(type='Collect3D', keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])
]
test_pipeline = [
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=5,
        file_client_args=dict(backend='disk')),
    dict(
        type='LoadPointsFromMultiSweeps',
        sweeps_num=9,
        use_dim=[0, 1, 2, 3, 4],
        file_client_args=dict(backend='disk'),
        pad_empty_sweeps=True,
        remove_close=True),
    dict(
        type='MultiScaleFlipAug3D',
        img_scale=(1333, 800),
        pts_scale_ratio=1,
        flip=False,
        transforms=[
            dict(
                type='GlobalRotScaleTrans',
                rot_range=[0, 0],
                scale_ratio_range=[1.0, 1.0],
                translation_std=[0, 0, 0]),
            dict(type='RandomFlip3D'),
            dict(
                type='PointsRangeFilter',
                point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
            dict(
                type='DefaultFormatBundle3D',
                class_names=[
                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                    'traffic_cone'
                ],
                with_label=False),
            dict(type='Collect3D', keys=['points'])
        ])
]
eval_pipeline = [
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=5,
        file_client_args=dict(backend='disk')),
    dict(
        type='LoadPointsFromMultiSweeps',
        sweeps_num=9,
        use_dim=[0, 1, 2, 3, 4],
        file_client_args=dict(backend='disk'),
        pad_empty_sweeps=True,
        remove_close=True),
    dict(
        type='DefaultFormatBundle3D',
        class_names=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ],
        with_label=False),
    dict(type='Collect3D', keys=['points'])
]
data = dict(
    samples_per_gpu=4,
    workers_per_gpu=4,
    train=dict(
        type='CBGSDataset',
        data_root='data/nuscenes/',
        ann_file='data/nuscenes/nuscenes_infos_train.pkl',
        pipeline=[
            dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                file_client_args=dict(backend='disk')),
            dict(
                type='LoadPointsFromMultiSweeps',
                sweeps_num=10,
                file_client_args=dict(backend='disk')),
            dict(
                type='LoadAnnotations3D',
                with_bbox_3d=True,
                with_label_3d=True),
            dict(
                type='GlobalRotScaleTrans',
                rot_range=[-0.3925, 0.3925],
                scale_ratio_range=[0.95, 1.05],
                translation_std=[0, 0, 0]),
            dict(type='RandomFlip3D', flip_ratio_bev_horizontal=0.5),
            dict(
                type='PointsRangeFilter',
                point_cloud_range=[-50, -50, -5, 50, 50, 3]),
            dict(
                type='ObjectRangeFilter',
                point_cloud_range=[-50, -50, -5, 50, 50, 3]),
            dict(
                type='ObjectNameFilter',
                classes=[
                    'car', 'truck', 'trailer', 'bus', 'construction_vehicle',
                    'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone',
                    'barrier'
                ]),
            dict(type='PointShuffle'),
            dict(
                type='DefaultFormatBundle3D',
                class_names=[
                    'car', 'truck', 'trailer', 'bus', 'construction_vehicle',
                    'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone',
                    'barrier'
                ]),
            dict(
                type='Collect3D',
                keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])
        ],
        classes=[
            'car', 'truck', 'trailer', 'bus', 'construction_vehicle',
            'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier'
        ],
        modality=dict(
            use_lidar=True,
            use_camera=False,
            use_radar=False,
            use_map=False,
            use_external=False),
        test_mode=False,
        box_type_3d='LiDAR',
        split=14,
        dataset=dict(
            type='NuScenesDataset',
            data_root='data/nuscenes/',
            ann_file='data/nuscenes/nuscenes_infos_train.pkl',
            pipeline=[
                dict(
                    type='LoadPointsFromFile',
                    coord_type='LIDAR',
                    load_dim=5,
                    use_dim=5,
                    file_client_args=dict(backend='disk')),
                dict(
                    type='LoadPointsFromMultiSweeps',
                    sweeps_num=9,
                    use_dim=[0, 1, 2, 3, 4],
                    file_client_args=dict(backend='disk'),
                    pad_empty_sweeps=True,
                    remove_close=True),
                dict(
                    type='LoadAnnotations3D',
                    with_bbox_3d=True,
                    with_label_3d=True),
                dict(
                    type='ObjectSample',
                    db_sampler=dict(
                        data_root='data/nuscenes/',
                        info_path='data/nuscenes/nuscenes_dbinfos_train.pkl',
                        rate=1.0,
                        prepare=dict(
                            filter_by_difficulty=[-1],
                            filter_by_min_points=dict(
                                car=5,
                                truck=5,
                                bus=5,
                                trailer=5,
                                construction_vehicle=5,
                                traffic_cone=5,
                                barrier=5,
                                motorcycle=5,
                                bicycle=5,
                                pedestrian=5)),
                        classes=[
                            'car', 'truck', 'construction_vehicle', 'bus',
                            'trailer', 'barrier', 'motorcycle', 'bicycle',
                            'pedestrian', 'traffic_cone'
                        ],
                        sample_groups=dict(
                            car=2,
                            truck=3,
                            construction_vehicle=7,
                            bus=4,
                            trailer=6,
                            barrier=2,
                            motorcycle=6,
                            bicycle=6,
                            pedestrian=2,
                            traffic_cone=2),
                        points_loader=dict(
                            type='LoadPointsFromFile',
                            coord_type='LIDAR',
                            load_dim=5,
                            use_dim=[0, 1, 2, 3, 4],
                            file_client_args=dict(backend='disk')))),
                dict(
                    type='GlobalRotScaleTrans',
                    rot_range=[-0.785, 0.785],
                    scale_ratio_range=[0.9, 1.1],
                    translation_std=[0.5, 0.5, 0.5]),
                dict(
                    type='RandomFlip3D',
                    sync_2d=False,
                    flip_ratio_bev_horizontal=0.5,
                    flip_ratio_bev_vertical=0.5),
                dict(
                    type='PointsRangeFilter',
                    point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
                dict(
                    type='ObjectRangeFilter',
                    point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
                dict(
                    type='ObjectNameFilter',
                    classes=[
                        'car', 'truck', 'construction_vehicle', 'bus',
                        'trailer', 'barrier', 'motorcycle', 'bicycle',
                        'pedestrian', 'traffic_cone'
                    ]),
                dict(type='PointShuffle'),
                dict(
                    type='DefaultFormatBundle3D',
                    class_names=[
                        'car', 'truck', 'construction_vehicle', 'bus',
                        'trailer', 'barrier', 'motorcycle', 'bicycle',
                        'pedestrian', 'traffic_cone'
                    ]),
                dict(
                    type='Collect3D',
                    keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])
            ],
            classes=[
                'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                'traffic_cone'
            ],
            test_mode=False,
            use_valid_flag=True,
            box_type_3d='LiDAR')),
    val=dict(
        type='NuScenesDataset',
        data_root='data/nuscenes/',
        ann_file='data/nuscenes/nuscenes_infos_val.pkl',
        pipeline=[
            dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                file_client_args=dict(backend='disk')),
            dict(
                type='LoadPointsFromMultiSweeps',
                sweeps_num=9,
                use_dim=[0, 1, 2, 3, 4],
                file_client_args=dict(backend='disk'),
                pad_empty_sweeps=True,
                remove_close=True),
            dict(
                type='MultiScaleFlipAug3D',
                img_scale=(1333, 800),
                pts_scale_ratio=1,
                flip=False,
                transforms=[
                    dict(
                        type='GlobalRotScaleTrans',
                        rot_range=[0, 0],
                        scale_ratio_range=[1.0, 1.0],
                        translation_std=[0, 0, 0]),
                    dict(type='RandomFlip3D'),
                    dict(
                        type='PointsRangeFilter',
                        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
                    dict(
                        type='DefaultFormatBundle3D',
                        class_names=[
                            'car', 'truck', 'construction_vehicle', 'bus',
                            'trailer', 'barrier', 'motorcycle', 'bicycle',
                            'pedestrian', 'traffic_cone'
                        ],
                        with_label=False),
                    dict(type='Collect3D', keys=['points'])
                ])
        ],
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ],
        modality=dict(
            use_lidar=True,
            use_camera=False,
            use_radar=False,
            use_map=False,
            use_external=False),
        test_mode=True,
        box_type_3d='LiDAR'),
    test=dict(
        type='NuScenesDataset',
        data_root='data/nuscenes/',
        ann_file='data/nuscenes/nuscenes_infos_val.pkl',
        pipeline=[
            dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                file_client_args=dict(backend='disk')),
            dict(
                type='LoadPointsFromMultiSweeps',
                sweeps_num=9,
                use_dim=[0, 1, 2, 3, 4],
                file_client_args=dict(backend='disk'),
                pad_empty_sweeps=True,
                remove_close=True),
            dict(
                type='MultiScaleFlipAug3D',
                img_scale=(1333, 800),
                pts_scale_ratio=1,
                flip=False,
                transforms=[
                    dict(
                        type='GlobalRotScaleTrans',
                        rot_range=[0, 0],
                        scale_ratio_range=[1.0, 1.0],
                        translation_std=[0, 0, 0]),
                    dict(type='RandomFlip3D'),
                    dict(
                        type='PointsRangeFilter',
                        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
                    dict(
                        type='DefaultFormatBundle3D',
                        class_names=[
                            'car', 'truck', 'construction_vehicle', 'bus',
                            'trailer', 'barrier', 'motorcycle', 'bicycle',
                            'pedestrian', 'traffic_cone'
                        ],
                        with_label=False),
                    dict(type='Collect3D', keys=['points'])
                ])
        ],
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ],
        modality=dict(
            use_lidar=True,
            use_camera=False,
            use_radar=False,
            use_map=False,
            use_external=False),
        test_mode=True,
        box_type_3d='LiDAR'))
evaluation = dict(
    interval=1,
    pipeline=[
        dict(
            type='LoadPointsFromFile',
            coord_type='LIDAR',
            load_dim=5,
            use_dim=5,
            file_client_args=dict(backend='disk')),
        dict(
            type='LoadPointsFromMultiSweeps',
            sweeps_num=10,
            file_client_args=dict(backend='disk')),
        dict(
            type='DefaultFormatBundle3D',
            class_names=[
                'car', 'truck', 'trailer', 'bus', 'construction_vehicle',
                'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone',
                'barrier'
            ],
            with_label=False),
        dict(type='Collect3D', keys=['points'])
    ])
optimizer = dict(type='AdamW', lr=2.5e-05, weight_decay=0.01)
optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))
lr_config = dict(
    policy='cyclic',
    target_ratio=(10, 0.0001),
    cyclic_times=1,
    step_ratio_up=0.4)
momentum_config = dict(
    policy='cyclic',
    target_ratio=(0.8947368421052632, 1),
    cyclic_times=1,
    step_ratio_up=0.4)
runner = dict(type='EpochBasedRunner', max_epochs=20)
checkpoint_config = dict(interval=1)
log_config = dict(
    interval=50,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
work_dir = './work_dirs/DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01/两张卡每张卡4'
load_from = None
resume_from = None
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
plugin = 'plugin/futr3d'
voxel_size = [0.075, 0.075, 0.2]
center_head = dict(
    type='CenterHead',
    in_channels=512,
    tasks=[
        dict(num_class=1, class_names=['car']),
        dict(num_class=2, class_names=['truck', 'construction_vehicle']),
        dict(num_class=2, class_names=['bus', 'trailer']),
        dict(num_class=1, class_names=['barrier']),
        dict(num_class=2, class_names=['motorcycle', 'bicycle']),
        dict(num_class=2, class_names=['pedestrian', 'traffic_cone'])
    ],
    common_heads=dict(
        reg=(2, 2), height=(1, 2), dim=(3, 2), rot=(2, 2), vel=(2, 2)),
    share_conv_channel=64,
    bbox_coder=dict(
        type='CenterPointBBoxCoder',
        pc_range=[-54, -54],
        post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],
        max_num=500,
        score_threshold=0.1,
        out_size_factor=8,
        voxel_size=[0.075, 0.075],
        code_size=9),
    separate_head=dict(type='SeparateHead', init_bias=-2.19, final_kernel=3),
    loss_cls=dict(type='GaussianFocalLoss', reduction='mean'),
    loss_bbox=dict(type='L1Loss', reduction='mean', loss_weight=0.25),
    norm_bbox=True)
model = dict(
    type='FUTR3D',
    aux_weight=0.5,
    pts_voxel_layer=dict(
        max_num_points=10,
        voxel_size=[0.075, 0.075, 0.2],
        max_voxels=(120000, 160000),
        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
    pts_voxel_encoder=dict(type='HardSimpleVFE', num_features=5),
    pts_middle_encoder=dict(
        type='SparseEncoder',
        in_channels=5,
        sparse_shape=[41, 1440, 1440],
        output_channels=128,
        order=('conv', 'norm', 'act'),
        encoder_channels=((16, 16, 32), (32, 32, 64), (64, 64, 128), (128,
                                                                      128)),
        encoder_paddings=((0, 0, 1), (0, 0, 1), (0, 0, [0, 1, 1]), (0, 0)),
        block_type='basicblock'),
    pts_backbone=dict(
        type='SECOND',
        in_channels=256,
        out_channels=[128, 256],
        layer_nums=[5, 5],
        layer_strides=[1, 2],
        norm_cfg=dict(type='BN', eps=0.001, momentum=0.01),
        conv_cfg=dict(type='Conv2d', bias=False)),
    pts_neck=dict(
        type='FPN',
        norm_cfg=dict(type='BN2d', eps=0.001, momentum=0.01),
        act_cfg=dict(type='ReLU', inplace=False),
        in_channels=[128, 256],
        out_channels=256,
        start_level=0,
        add_extra_convs=True,
        num_outs=4,
        relu_before_extra_convs=True),
    pts_bbox_head=dict(
        type='FUTR3DHead',
        use_dab=True,
        use_dss=True,
        use_hybrid=True,
        hybrid=[1, 2, 3, 4, 5],
        dss_batch_first=False,
        dss_drop_prob=0.1,
        dss_mamba_prenorm=False,
        dss_mamba_cfg=dict(),
        dss_mamba_version='DSSMamba_Gigantic',
        dss_num_layers=3,
        dss_rope=False,
        dss_morton_rearrange=True,
        dss_conv_path=False,
        dss_xy=True,
        anchor_size=3,
        use_aux=True,
        aux_head=dict(
            type='CenterHead',
            in_channels=512,
            tasks=[
                dict(num_class=1, class_names=['car']),
                dict(
                    num_class=2, class_names=['truck',
                                              'construction_vehicle']),
                dict(num_class=2, class_names=['bus', 'trailer']),
                dict(num_class=1, class_names=['barrier']),
                dict(num_class=2, class_names=['motorcycle', 'bicycle']),
                dict(num_class=2, class_names=['pedestrian', 'traffic_cone'])
            ],
            common_heads=dict(
                reg=(2, 2), height=(1, 2), dim=(3, 2), rot=(2, 2), vel=(2, 2)),
            share_conv_channel=64,
            bbox_coder=dict(
                type='CenterPointBBoxCoder',
                pc_range=[-54, -54],
                post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],
                max_num=500,
                score_threshold=0.1,
                out_size_factor=8,
                voxel_size=[0.075, 0.075],
                code_size=9),
            separate_head=dict(
                type='SeparateHead', init_bias=-2.19, final_kernel=3),
            loss_cls=dict(type='GaussianFocalLoss', reduction='mean'),
            loss_bbox=dict(type='L1Loss', reduction='mean', loss_weight=0.25),
            norm_bbox=True),
        mix_selection=False,
        num_query=900,
        num_classes=10,
        in_channels=256,
        pc_range=[-54, -54, -5.0, 54, 54, 3.0],
        sync_cls_avg_factor=True,
        with_box_refine=True,
        as_two_stage=False,
        code_weights=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2],
        transformer=dict(
            type='FUTR3DTransformer',
            use_dab=True,
            decoder=dict(
                type='FUTR3DTransformerDecoder',
                num_layers=6,
                use_dab=True,
                anchor_size=3,
                return_intermediate=True,
                transformerlayers=dict(
                    type='DetrTransformerDecoderLayer',
                    attn_cfgs=[
                        dict(
                            type='MultiheadAttention',
                            embed_dims=256,
                            num_heads=8,
                            dropout=0.1),
                        dict(type='FUTR3DAttention', embed_dims=256)
                    ],
                    feedforward_channels=1024,
                    ffn_dropout=0.1,
                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',
                                     'ffn', 'norm')))),
        positional_encoding=dict(
            type='SinePositionalEncoding',
            num_feats=128,
            normalize=True,
            offset=-0.5),
        loss_cls=dict(
            type='FocalLoss',
            use_sigmoid=True,
            gamma=2.0,
            alpha=0.25,
            loss_weight=2.0),
        loss_bbox=dict(type='L1Loss', loss_weight=0.25),
        loss_iou=dict(type='GIoULoss', loss_weight=0)),
    train_cfg=dict(
        pts=dict(
            point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0],
            pc_range=[-54, -54, -5.0, 54, 54, 3.0],
            grid_size=[1440, 1440, 40],
            voxel_size=[0.075, 0.075, 0.2],
            out_size_factor=8,
            dense_reg=1,
            gaussian_overlap=0.1,
            max_objs=500,
            min_radius=2,
            code_weights=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2],
            assigner=dict(
                type='HungarianAssigner3D',
                cls_cost=dict(type='FocalLossCost', weight=2.0),
                reg_cost=dict(type='BBox3DL1Cost', weight=0.25),
                iou_cost=dict(type='IoUCost', weight=0)))),
    test_cfg=dict(
        pts=dict(
            pc_range=[-54, -54],
            post_center_limit_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],
            max_per_img=500,
            max_pool_nms=False,
            min_radius=[4, 12, 10, 1, 0.85, 0.175],
            out_size_factor=8,
            voxel_size=[0.075, 0.075],
            nms_type='circle',
            pre_max_size=1000,
            post_max_size=83,
            nms_thr=0.2,
            max_num=300,
            score_threshold=0,
            post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0])))
db_sampler = dict(
    data_root='data/nuscenes/',
    info_path='data/nuscenes/nuscenes_dbinfos_train.pkl',
    rate=1.0,
    prepare=dict(
        filter_by_difficulty=[-1],
        filter_by_min_points=dict(
            car=5,
            truck=5,
            bus=5,
            trailer=5,
            construction_vehicle=5,
            traffic_cone=5,
            barrier=5,
            motorcycle=5,
            bicycle=5,
            pedestrian=5)),
    classes=[
        'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',
        'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
    ],
    sample_groups=dict(
        car=2,
        truck=3,
        construction_vehicle=7,
        bus=4,
        trailer=6,
        barrier=2,
        motorcycle=6,
        bicycle=6,
        pedestrian=2,
        traffic_cone=2),
    points_loader=dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=[0, 1, 2, 3, 4],
        file_client_args=dict(backend='disk')))
find_unused_parameters = True
custom_hooks = [dict(type='FadeOjectSampleHook', num_last_epochs=5)]
gpu_ids = range(0, 2)

2025-04-16 13:03:43,690 - mmdet - INFO - Set random seed to 0, deterministic: False
2025-04-16 13:03:43,835 - mmdet - INFO - initialize SECOND with init_cfg {'type': 'Kaiming', 'layer': 'Conv2d'}
2025-04-16 13:03:43,845 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
Name of parameter - Initialization information

pts_middle_encoder.conv_input.0.weight - torch.Size([16, 3, 3, 3, 5]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.conv_input.1.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.conv_input.1.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.0.conv1.weight - torch.Size([16, 3, 3, 3, 16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.0.bn1.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.0.bn1.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.0.conv2.weight - torch.Size([16, 3, 3, 3, 16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.0.bn2.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.0.bn2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.1.conv1.weight - torch.Size([16, 3, 3, 3, 16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.1.bn1.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.1.bn1.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.1.conv2.weight - torch.Size([16, 3, 3, 3, 16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.1.bn2.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.1.bn2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.2.0.weight - torch.Size([32, 3, 3, 3, 16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.2.1.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.2.1.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.0.conv1.weight - torch.Size([32, 3, 3, 3, 32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.0.bn1.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.0.bn1.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.0.conv2.weight - torch.Size([32, 3, 3, 3, 32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.0.bn2.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.0.bn2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.1.conv1.weight - torch.Size([32, 3, 3, 3, 32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.1.bn1.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.1.bn1.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.1.conv2.weight - torch.Size([32, 3, 3, 3, 32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.1.bn2.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.1.bn2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.2.0.weight - torch.Size([64, 3, 3, 3, 32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.2.1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.2.1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.0.conv1.weight - torch.Size([64, 3, 3, 3, 64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.0.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.0.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.0.conv2.weight - torch.Size([64, 3, 3, 3, 64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.0.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.0.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.1.conv1.weight - torch.Size([64, 3, 3, 3, 64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.1.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.1.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.1.conv2.weight - torch.Size([64, 3, 3, 3, 64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.1.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.1.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.2.0.weight - torch.Size([128, 3, 3, 3, 64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.2.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.2.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.0.conv1.weight - torch.Size([128, 3, 3, 3, 128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.0.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.0.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.0.conv2.weight - torch.Size([128, 3, 3, 3, 128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.0.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.0.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.1.conv1.weight - torch.Size([128, 3, 3, 3, 128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.1.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.1.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.1.conv2.weight - torch.Size([128, 3, 3, 3, 128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.1.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.1.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.conv_out.0.weight - torch.Size([128, 3, 1, 1, 128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.conv_out.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.conv_out.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.0.weight - torch.Size([128, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.0.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.3.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.0.4.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.4.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.6.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.0.7.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.7.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.9.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.0.10.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.10.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.12.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.0.13.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.13.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.15.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.0.16.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.16.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.0.weight - torch.Size([256, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.1.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.3.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.1.4.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.4.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.6.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.1.7.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.7.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.9.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.1.10.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.10.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.12.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.1.13.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.13.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.15.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.1.16.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.16.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.lateral_convs.0.conv.weight - torch.Size([256, 128, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

pts_neck.lateral_convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.lateral_convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.lateral_convs.1.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

pts_neck.lateral_convs.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.lateral_convs.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

pts_neck.fpn_convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

pts_neck.fpn_convs.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

pts_neck.fpn_convs.2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

pts_neck.fpn_convs.3.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.level_embeds - torch.Size([4, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.attentions.0.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.attentions.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.attentions.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.attentions.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.ffns.0.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.ffns.0.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.ffns.0.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.ffns.0.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.ffns.0.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.ffns.0.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.ffns.0.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.ffns.0.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.ffns.0.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.ffns.0.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.ffns.0.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.ffns.0.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.ffns.0.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.ffns.0.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.ffns.0.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.ffns.0.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.ffns.0.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.ffns.0.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.query_scale.layers.0.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.query_scale.layers.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.query_scale.layers.1.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.query_scale.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.ref_point_head.layers.0.weight - torch.Size([256, 384]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.ref_point_head.layers.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.ref_point_head.layers.1.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.ref_point_head.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.cls_branches.0.weight - torch.Size([10, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.cls_branches.0.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.cls_branches.1.weight - torch.Size([10, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.cls_branches.1.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.cls_branches.2.weight - torch.Size([10, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.cls_branches.2.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.cls_branches.3.weight - torch.Size([10, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.cls_branches.3.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.cls_branches.4.weight - torch.Size([10, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.cls_branches.4.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.cls_branches.5.weight - torch.Size([10, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.cls_branches.5.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.0.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.0.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.0.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.0.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.0.4.weight - torch.Size([10, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.0.4.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.1.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.1.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.1.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.1.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.1.4.weight - torch.Size([10, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.1.4.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.2.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.2.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.2.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.2.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.2.4.weight - torch.Size([10, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.2.4.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.3.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.3.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.3.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.3.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.3.4.weight - torch.Size([10, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.3.4.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.4.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.4.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.4.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.4.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.4.4.weight - torch.Size([10, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.4.4.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.5.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.5.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.5.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.5.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.5.4.weight - torch.Size([10, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.5.4.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.tgt_embed.weight - torch.Size([900, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.refpoint_embed.weight - torch.Size([900, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.shared_conv.conv.weight - torch.Size([64, 512, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.shared_conv.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.shared_conv.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.reg.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.reg.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.reg.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.reg.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.reg.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.height.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.height.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.height.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.height.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.height.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.dim.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.dim.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.dim.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.dim.1.weight - torch.Size([3, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.dim.1.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.rot.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.rot.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.rot.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.rot.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.rot.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.vel.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.vel.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.vel.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.vel.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.vel.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.heatmap.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.heatmap.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.heatmap.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.heatmap.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.heatmap.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.reg.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.reg.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.reg.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.reg.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.reg.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.height.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.height.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.height.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.height.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.height.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.dim.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.dim.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.dim.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.dim.1.weight - torch.Size([3, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.dim.1.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.rot.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.rot.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.rot.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.rot.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.rot.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.vel.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.vel.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.vel.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.vel.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.vel.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.heatmap.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.heatmap.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.heatmap.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.heatmap.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.heatmap.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.reg.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.reg.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.reg.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.reg.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.reg.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.height.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.height.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.height.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.height.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.height.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.dim.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.dim.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.dim.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.dim.1.weight - torch.Size([3, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.dim.1.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.rot.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.rot.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.rot.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.rot.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.rot.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.vel.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.vel.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.vel.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.vel.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.vel.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.heatmap.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.heatmap.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.heatmap.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.heatmap.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.heatmap.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.reg.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.reg.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.reg.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.reg.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.reg.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.height.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.height.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.height.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.height.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.height.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.dim.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.dim.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.dim.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.dim.1.weight - torch.Size([3, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.dim.1.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.rot.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.rot.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.rot.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.rot.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.rot.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.vel.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.vel.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.vel.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.vel.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.vel.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.heatmap.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.heatmap.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.heatmap.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.heatmap.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.heatmap.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.reg.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.reg.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.reg.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.reg.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.reg.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.height.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.height.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.height.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.height.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.height.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.dim.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.dim.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.dim.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.dim.1.weight - torch.Size([3, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.dim.1.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.rot.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.rot.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.rot.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.rot.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.rot.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.vel.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.vel.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.vel.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.vel.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.vel.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.heatmap.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.heatmap.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.heatmap.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.heatmap.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.heatmap.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.reg.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.reg.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.reg.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.reg.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.reg.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.height.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.height.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.height.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.height.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.height.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.dim.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.dim.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.dim.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.dim.1.weight - torch.Size([3, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.dim.1.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.rot.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.rot.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.rot.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.rot.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.rot.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.vel.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.vel.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.vel.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.vel.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.vel.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.heatmap.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.heatmap.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.heatmap.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.heatmap.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.heatmap.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  
2025-04-16 13:03:43,916 - mmdet - INFO - Model:
FUTR3D(
  (pts_voxel_layer): Voxelization(voxel_size=[0.075, 0.075, 0.2], point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0], max_num_points=10, max_voxels=(120000, 160000), deterministic=True)
  (pts_voxel_encoder): HardSimpleVFE()
  (pts_middle_encoder): SparseEncoder(
    (conv_input): SparseSequential(
      (0): SubMConv3d(5, 16, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
      (1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (encoder_layers): SparseSequential(
      (encoder_layer1): SparseSequential(
        (0): SparseBasicBlock(
          (conv1): SubMConv3d(16, 16, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(16, 16, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): SparseBasicBlock(
          (conv1): SubMConv3d(16, 16, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(16, 16, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): SparseSequential(
          (0): SparseConv3d(16, 32, kernel_size=[3, 3, 3], stride=[2, 2, 2], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (encoder_layer2): SparseSequential(
        (0): SparseBasicBlock(
          (conv1): SubMConv3d(32, 32, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(32, 32, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): SparseBasicBlock(
          (conv1): SubMConv3d(32, 32, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(32, 32, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): SparseSequential(
          (0): SparseConv3d(32, 64, kernel_size=[3, 3, 3], stride=[2, 2, 2], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (encoder_layer3): SparseSequential(
        (0): SparseBasicBlock(
          (conv1): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): SparseBasicBlock(
          (conv1): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): SparseSequential(
          (0): SparseConv3d(64, 128, kernel_size=[3, 3, 3], stride=[2, 2, 2], padding=[0, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (encoder_layer4): SparseSequential(
        (0): SparseBasicBlock(
          (conv1): SubMConv3d(128, 128, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(128, 128, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): SparseBasicBlock(
          (conv1): SubMConv3d(128, 128, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(128, 128, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (conv_out): SparseSequential(
      (0): SparseConv3d(128, 128, kernel_size=[3, 1, 1], stride=[2, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
      (1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (pts_backbone): SECOND(
    (blocks): ModuleList(
      (0): Sequential(
        (0): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (7): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
        (9): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (10): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (11): ReLU(inplace=True)
        (12): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (13): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (14): ReLU(inplace=True)
        (15): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (16): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (17): ReLU(inplace=True)
      )
      (1): Sequential(
        (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (7): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (10): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (11): ReLU(inplace=True)
        (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (13): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (14): ReLU(inplace=True)
        (15): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (16): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (17): ReLU(inplace=True)
      )
    )
  )
  init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
  (pts_neck): FPN(
    (lateral_convs): ModuleList(
      (0): ConvModule(
        (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
      (1): ConvModule(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
    )
    (fpn_convs): ModuleList(
      (0): ConvModule(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
      (1): ConvModule(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
      (2): ConvModule(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
      (3): ConvModule(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
    )
  )
  init_cfg={'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
  (pts_bbox_head): FUTR3DHead(
    (loss_cls): FocalLoss()
    (loss_bbox): L1Loss()
    (loss_iou): GIoULoss()
    (activate): ReLU(inplace=True)
    (positional_encoding): SinePositionalEncoding(num_feats=128, temperature=10000, normalize=True, scale=6.283185307179586, eps=1e-06)
    (transformer): FUTR3DTransformer(
      (decoder): FUTR3DTransformerDecoder(
        (layers): ModuleList(
          (0): DetrTransformerDecoderLayer(
            (attentions): ModuleList(
              (0): MultiheadAttention(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.0, inplace=False)
                (dropout_layer): Dropout(p=0.1, inplace=False)
              )
              (1): FUTR3DAttention(
                (dropout): Dropout(p=0.1, inplace=False)
                (sampling_offsets): Linear(in_features=256, out_features=256, bias=True)
                (attention_weights): Linear(in_features=256, out_features=128, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
            )
            (ffns): ModuleList(
              (0): FFN(
                (activate): ReLU(inplace=True)
                (layers): Sequential(
                  (0): Sequential(
                    (0): Linear(in_features=256, out_features=1024, bias=True)
                    (1): ReLU(inplace=True)
                    (2): Dropout(p=0.1, inplace=False)
                  )
                  (1): Linear(in_features=1024, out_features=256, bias=True)
                  (2): Dropout(p=0.1, inplace=False)
                )
                (dropout_layer): Identity()
              )
            )
            (norms): ModuleList(
              (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (1): DetrTransformerDecoderLayer(
            (attentions): ModuleList(
              (0): DSS(
                (layers): ModuleList(
                  (0): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): Identity()
                    (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  )
                  (1): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): DropPath(drop_prob=0.050)
                    (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  )
                  (2): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): DropPath(drop_prob=0.100)
                    (norm): Identity()
                  )
                )
              )
              (1): FUTR3DAttention(
                (dropout): Dropout(p=0.1, inplace=False)
                (sampling_offsets): Linear(in_features=256, out_features=256, bias=True)
                (attention_weights): Linear(in_features=256, out_features=128, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
            )
            (ffns): ModuleList(
              (0): FFN(
                (activate): ReLU(inplace=True)
                (layers): Sequential(
                  (0): Sequential(
                    (0): Linear(in_features=256, out_features=1024, bias=True)
                    (1): ReLU(inplace=True)
                    (2): Dropout(p=0.1, inplace=False)
                  )
                  (1): Linear(in_features=1024, out_features=256, bias=True)
                  (2): Dropout(p=0.1, inplace=False)
                )
                (dropout_layer): Identity()
              )
            )
            (norms): ModuleList(
              (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (2): DetrTransformerDecoderLayer(
            (attentions): ModuleList(
              (0): DSS(
                (layers): ModuleList(
                  (0): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): Identity()
                    (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  )
                  (1): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): DropPath(drop_prob=0.050)
                    (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  )
                  (2): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): DropPath(drop_prob=0.100)
                    (norm): Identity()
                  )
                )
              )
              (1): FUTR3DAttention(
                (dropout): Dropout(p=0.1, inplace=False)
                (sampling_offsets): Linear(in_features=256, out_features=256, bias=True)
                (attention_weights): Linear(in_features=256, out_features=128, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
            )
            (ffns): ModuleList(
              (0): FFN(
                (activate): ReLU(inplace=True)
                (layers): Sequential(
                  (0): Sequential(
                    (0): Linear(in_features=256, out_features=1024, bias=True)
                    (1): ReLU(inplace=True)
                    (2): Dropout(p=0.1, inplace=False)
                  )
                  (1): Linear(in_features=1024, out_features=256, bias=True)
                  (2): Dropout(p=0.1, inplace=False)
                )
                (dropout_layer): Identity()
              )
            )
            (norms): ModuleList(
              (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (3): DetrTransformerDecoderLayer(
            (attentions): ModuleList(
              (0): DSS(
                (layers): ModuleList(
                  (0): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): Identity()
                    (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  )
                  (1): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): DropPath(drop_prob=0.050)
                    (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  )
                  (2): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): DropPath(drop_prob=0.100)
                    (norm): Identity()
                  )
                )
              )
              (1): FUTR3DAttention(
                (dropout): Dropout(p=0.1, inplace=False)
                (sampling_offsets): Linear(in_features=256, out_features=256, bias=True)
                (attention_weights): Linear(in_features=256, out_features=128, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
            )
            (ffns): ModuleList(
              (0): FFN(
                (activate): ReLU(inplace=True)
                (layers): Sequential(
                  (0): Sequential(
                    (0): Linear(in_features=256, out_features=1024, bias=True)
                    (1): ReLU(inplace=True)
                    (2): Dropout(p=0.1, inplace=False)
                  )
                  (1): Linear(in_features=1024, out_features=256, bias=True)
                  (2): Dropout(p=0.1, inplace=False)
                )
                (dropout_layer): Identity()
              )
            )
            (norms): ModuleList(
              (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (4): DetrTransformerDecoderLayer(
            (attentions): ModuleList(
              (0): DSS(
                (layers): ModuleList(
                  (0): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): Identity()
                    (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  )
                  (1): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): DropPath(drop_prob=0.050)
                    (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  )
                  (2): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): DropPath(drop_prob=0.100)
                    (norm): Identity()
                  )
                )
              )
              (1): FUTR3DAttention(
                (dropout): Dropout(p=0.1, inplace=False)
                (sampling_offsets): Linear(in_features=256, out_features=256, bias=True)
                (attention_weights): Linear(in_features=256, out_features=128, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
            )
            (ffns): ModuleList(
              (0): FFN(
                (activate): ReLU(inplace=True)
                (layers): Sequential(
                  (0): Sequential(
                    (0): Linear(in_features=256, out_features=1024, bias=True)
                    (1): ReLU(inplace=True)
                    (2): Dropout(p=0.1, inplace=False)
                  )
                  (1): Linear(in_features=1024, out_features=256, bias=True)
                  (2): Dropout(p=0.1, inplace=False)
                )
                (dropout_layer): Identity()
              )
            )
            (norms): ModuleList(
              (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (5): DetrTransformerDecoderLayer(
            (attentions): ModuleList(
              (0): DSS(
                (layers): ModuleList(
                  (0): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): Identity()
                    (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  )
                  (1): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): DropPath(drop_prob=0.050)
                    (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  )
                  (2): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): DropPath(drop_prob=0.100)
                    (norm): Identity()
                  )
                )
              )
              (1): FUTR3DAttention(
                (dropout): Dropout(p=0.1, inplace=False)
                (sampling_offsets): Linear(in_features=256, out_features=256, bias=True)
                (attention_weights): Linear(in_features=256, out_features=128, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
            )
            (ffns): ModuleList(
              (0): FFN(
                (activate): ReLU(inplace=True)
                (layers): Sequential(
                  (0): Sequential(
                    (0): Linear(in_features=256, out_features=1024, bias=True)
                    (1): ReLU(inplace=True)
                    (2): Dropout(p=0.1, inplace=False)
                  )
                  (1): Linear(in_features=1024, out_features=256, bias=True)
                  (2): Dropout(p=0.1, inplace=False)
                )
                (dropout_layer): Identity()
              )
            )
            (norms): ModuleList(
              (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
        (query_scale): MLP(
          (layers): ModuleList(
            (0): Linear(in_features=256, out_features=256, bias=True)
            (1): Linear(in_features=256, out_features=256, bias=True)
          )
        )
        (ref_point_head): MLP(
          (layers): ModuleList(
            (0): Linear(in_features=384, out_features=256, bias=True)
            (1): Linear(in_features=256, out_features=256, bias=True)
          )
        )
      )
    )
    (cls_branches): ModuleList(
      (0): Linear(in_features=256, out_features=10, bias=True)
      (1): Linear(in_features=256, out_features=10, bias=True)
      (2): Linear(in_features=256, out_features=10, bias=True)
      (3): Linear(in_features=256, out_features=10, bias=True)
      (4): Linear(in_features=256, out_features=10, bias=True)
      (5): Linear(in_features=256, out_features=10, bias=True)
    )
    (reg_branches): ModuleList(
      (0): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (1): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (2): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (3): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (4): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (5): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
    )
    (tgt_embed): Embedding(900, 256)
    (refpoint_embed): Embedding(900, 3)
    (aux_head): CenterHead(
      (loss_cls): GaussianFocalLoss()
      (loss_bbox): L1Loss()
      (shared_conv): ConvModule(
        (conv): Conv2d(512, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
      (task_heads): ModuleList(
        (0): SeparateHead(
          (reg): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (height): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (dim): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (rot): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (vel): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (heatmap): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
        (1): SeparateHead(
          (reg): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (height): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (dim): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (rot): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (vel): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (heatmap): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
        (2): SeparateHead(
          (reg): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (height): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (dim): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (rot): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (vel): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (heatmap): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
        (3): SeparateHead(
          (reg): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (height): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (dim): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (rot): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (vel): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (heatmap): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
        (4): SeparateHead(
          (reg): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (height): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (dim): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (rot): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (vel): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (heatmap): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
        (5): SeparateHead(
          (reg): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (height): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (dim): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (rot): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (vel): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (heatmap): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
      )
    )
  )
)
2025-04-16 13:04:11,212 - mmdet - INFO - Start running, host: ubuntu@ubuntu, work_dir: /home/ubuntu/jxcao/hdd/jxc/FUTR3D/work_dirs/DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01/两张卡每张卡4
2025-04-16 13:04:11,212 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) CyclicLrUpdaterHook                
(HIGH        ) CyclicMomentumUpdaterHook          
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) CyclicLrUpdaterHook                
(HIGH        ) CyclicMomentumUpdaterHook          
(NORMAL      ) FadeOjectSampleHook                
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) CyclicLrUpdaterHook                
(HIGH        ) CyclicMomentumUpdaterHook          
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2025-04-16 13:04:11,212 - mmdet - INFO - workflow: [('train', 1)], max: 20 epochs
2025-04-16 13:04:11,212 - mmdet - INFO - Checkpoints will be saved to /home/ubuntu/jxcao/hdd/jxc/FUTR3D/work_dirs/DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01/两张卡每张卡4 by HardDiskBackend.
2025-04-16 13:05:22,676 - mmdet - INFO - Epoch [1][50/1104]	lr: 2.502e-05, eta: 8:44:06, time: 1.427, data_time: 0.150, memory: 13665, loss_cls: 1.4090, loss_bbox: 2.2238, d0.loss_cls: 1.6887, d0.loss_bbox: 4.4078, d1.loss_cls: 1.5298, d1.loss_bbox: 2.2748, d2.loss_cls: 1.4444, d2.loss_bbox: 2.2583, d3.loss_cls: 1.4330, d3.loss_bbox: 2.2446, d4.loss_cls: 1.4358, d4.loss_bbox: 2.2304, aux_task0.loss_heatmap: 196.0682, aux_task0.loss_bbox: 0.8553, aux_task1.loss_heatmap: 691.2129, aux_task1.loss_bbox: 0.8852, aux_task2.loss_heatmap: 646.0074, aux_task2.loss_bbox: 1.1413, aux_task3.loss_heatmap: 350.0127, aux_task3.loss_bbox: 0.7651, aux_task4.loss_heatmap: 446.9969, aux_task4.loss_bbox: 0.7204, aux_task5.loss_heatmap: 612.1929, aux_task5.loss_bbox: 0.7606, loss: 2972.1996, grad_norm: 11655.3315
2025-04-16 13:06:13,440 - mmdet - INFO - Epoch [1][100/1104]	lr: 2.507e-05, eta: 7:27:25, time: 1.015, data_time: 0.008, memory: 13665, loss_cls: 1.1496, loss_bbox: 1.9266, d0.loss_cls: 1.2736, d0.loss_bbox: 4.0401, d1.loss_cls: 1.1662, d1.loss_bbox: 2.0733, d2.loss_cls: 1.1626, d2.loss_bbox: 2.0100, d3.loss_cls: 1.1585, d3.loss_bbox: 1.9705, d4.loss_cls: 1.1533, d4.loss_bbox: 1.9422, aux_task0.loss_heatmap: 71.0316, aux_task0.loss_bbox: 0.6373, aux_task1.loss_heatmap: 273.6320, aux_task1.loss_bbox: 0.6580, aux_task2.loss_heatmap: 242.4870, aux_task2.loss_bbox: 0.9288, aux_task3.loss_heatmap: 87.6233, aux_task3.loss_bbox: 0.5056, aux_task4.loss_heatmap: 170.3084, aux_task4.loss_bbox: 0.5169, aux_task5.loss_heatmap: 282.8215, aux_task5.loss_bbox: 0.5545, loss: 1152.7315, grad_norm: 6139.2053
2025-04-16 13:07:05,710 - mmdet - INFO - Epoch [1][150/1104]	lr: 2.516e-05, eta: 7:04:57, time: 1.045, data_time: 0.008, memory: 13665, loss_cls: 1.1224, loss_bbox: 1.9784, d0.loss_cls: 1.1522, d0.loss_bbox: 2.4072, d1.loss_cls: 1.1490, d1.loss_bbox: 1.8124, d2.loss_cls: 1.1422, d2.loss_bbox: 1.8398, d3.loss_cls: 1.1392, d3.loss_bbox: 1.8899, d4.loss_cls: 1.1276, d4.loss_bbox: 1.9370, aux_task0.loss_heatmap: 29.1096, aux_task0.loss_bbox: 0.4975, aux_task1.loss_heatmap: 117.9860, aux_task1.loss_bbox: 0.5596, aux_task2.loss_heatmap: 96.8639, aux_task2.loss_bbox: 0.7400, aux_task3.loss_heatmap: 35.9372, aux_task3.loss_bbox: 0.4535, aux_task4.loss_heatmap: 73.6400, aux_task4.loss_bbox: 0.4588, aux_task5.loss_heatmap: 117.6037, aux_task5.loss_bbox: 0.4958, loss: 493.0430, grad_norm: 3111.2910
2025-04-16 13:07:56,172 - mmdet - INFO - Epoch [1][200/1104]	lr: 2.528e-05, eta: 6:50:00, time: 1.009, data_time: 0.009, memory: 13885, loss_cls: 1.0920, loss_bbox: 1.7870, d0.loss_cls: 1.1499, d0.loss_bbox: 1.7990, d1.loss_cls: 1.1347, d1.loss_bbox: 1.7646, d2.loss_cls: 1.1224, d2.loss_bbox: 1.7805, d3.loss_cls: 1.1143, d3.loss_bbox: 1.7856, d4.loss_cls: 1.0980, d4.loss_bbox: 1.7923, aux_task0.loss_heatmap: 13.4003, aux_task0.loss_bbox: 0.4775, aux_task1.loss_heatmap: 58.6854, aux_task1.loss_bbox: 0.5261, aux_task2.loss_heatmap: 42.1710, aux_task2.loss_bbox: 0.5996, aux_task3.loss_heatmap: 15.1325, aux_task3.loss_bbox: 0.4202, aux_task4.loss_heatmap: 33.9139, aux_task4.loss_bbox: 0.4410, aux_task5.loss_heatmap: 60.3016, aux_task5.loss_bbox: 0.4766, loss: 243.9658, grad_norm: 1688.0916
2025-04-16 13:08:46,778 - mmdet - INFO - Epoch [1][250/1104]	lr: 2.544e-05, eta: 6:40:54, time: 1.012, data_time: 0.010, memory: 13885, loss_cls: 1.0750, loss_bbox: 1.7137, d0.loss_cls: 1.1477, d0.loss_bbox: 1.7612, d1.loss_cls: 1.1211, d1.loss_bbox: 1.7253, d2.loss_cls: 1.0984, d2.loss_bbox: 1.7310, d3.loss_cls: 1.0892, d3.loss_bbox: 1.7264, d4.loss_cls: 1.0837, d4.loss_bbox: 1.7189, aux_task0.loss_heatmap: 6.8289, aux_task0.loss_bbox: 0.4487, aux_task1.loss_heatmap: 27.9694, aux_task1.loss_bbox: 0.5082, aux_task2.loss_heatmap: 20.0273, aux_task2.loss_bbox: 0.5249, aux_task3.loss_heatmap: 9.4327, aux_task3.loss_bbox: 0.4176, aux_task4.loss_heatmap: 16.2273, aux_task4.loss_bbox: 0.4407, aux_task5.loss_heatmap: 29.0697, aux_task5.loss_bbox: 0.4720, loss: 129.3593, grad_norm: 874.7716
2025-04-16 13:09:39,102 - mmdet - INFO - Epoch [1][300/1104]	lr: 2.564e-05, eta: 6:36:37, time: 1.046, data_time: 0.011, memory: 13885, loss_cls: 1.0442, loss_bbox: 1.7033, d0.loss_cls: 1.1469, d0.loss_bbox: 1.7483, d1.loss_cls: 1.1041, d1.loss_bbox: 1.7239, d2.loss_cls: 1.0720, d2.loss_bbox: 1.7198, d3.loss_cls: 1.0588, d3.loss_bbox: 1.7090, d4.loss_cls: 1.0491, d4.loss_bbox: 1.7037, aux_task0.loss_heatmap: 3.5759, aux_task0.loss_bbox: 0.4401, aux_task1.loss_heatmap: 13.5680, aux_task1.loss_bbox: 0.4864, aux_task2.loss_heatmap: 9.9962, aux_task2.loss_bbox: 0.5191, aux_task3.loss_heatmap: 5.2841, aux_task3.loss_bbox: 0.4124, aux_task4.loss_heatmap: 8.0938, aux_task4.loss_bbox: 0.4260, aux_task5.loss_heatmap: 13.5843, aux_task5.loss_bbox: 0.4671, loss: 73.6364, grad_norm: 434.7287
2025-04-16 13:10:29,539 - mmdet - INFO - Epoch [1][350/1104]	lr: 2.587e-05, eta: 6:31:22, time: 1.009, data_time: 0.007, memory: 13885, loss_cls: 1.0368, loss_bbox: 1.6836, d0.loss_cls: 1.1432, d0.loss_bbox: 1.7478, d1.loss_cls: 1.0926, d1.loss_bbox: 1.7247, d2.loss_cls: 1.0438, d2.loss_bbox: 1.7109, d3.loss_cls: 1.0350, d3.loss_bbox: 1.6984, d4.loss_cls: 1.0353, d4.loss_bbox: 1.6889, aux_task0.loss_heatmap: 2.3888, aux_task0.loss_bbox: 0.4405, aux_task1.loss_heatmap: 6.4284, aux_task1.loss_bbox: 0.4941, aux_task2.loss_heatmap: 5.0763, aux_task2.loss_bbox: 0.4979, aux_task3.loss_heatmap: 2.8352, aux_task3.loss_bbox: 0.4120, aux_task4.loss_heatmap: 4.1846, aux_task4.loss_bbox: 0.4332, aux_task5.loss_heatmap: 6.2785, aux_task5.loss_bbox: 0.4694, loss: 46.5797, grad_norm: 191.4034
2025-04-16 13:11:20,396 - mmdet - INFO - Epoch [1][400/1104]	lr: 2.613e-05, eta: 6:27:36, time: 1.017, data_time: 0.008, memory: 13885, loss_cls: 1.0259, loss_bbox: 1.6470, d0.loss_cls: 1.1341, d0.loss_bbox: 1.7231, d1.loss_cls: 1.0603, d1.loss_bbox: 1.6868, d2.loss_cls: 1.0210, d2.loss_bbox: 1.6679, d3.loss_cls: 1.0208, d3.loss_bbox: 1.6535, d4.loss_cls: 1.0201, d4.loss_bbox: 1.6485, aux_task0.loss_heatmap: 1.7299, aux_task0.loss_bbox: 0.4320, aux_task1.loss_heatmap: 3.3029, aux_task1.loss_bbox: 0.4845, aux_task2.loss_heatmap: 2.8879, aux_task2.loss_bbox: 0.4763, aux_task3.loss_heatmap: 2.0366, aux_task3.loss_bbox: 0.4117, aux_task4.loss_heatmap: 2.4937, aux_task4.loss_bbox: 0.4295, aux_task5.loss_heatmap: 3.1978, aux_task5.loss_bbox: 0.4603, loss: 34.6522, grad_norm: 81.5547
2025-04-16 13:12:11,187 - mmdet - INFO - Epoch [1][450/1104]	lr: 2.643e-05, eta: 6:24:26, time: 1.016, data_time: 0.008, memory: 13885, loss_cls: 1.0170, loss_bbox: 1.6502, d0.loss_cls: 1.1226, d0.loss_bbox: 1.7383, d1.loss_cls: 1.0334, d1.loss_bbox: 1.6853, d2.loss_cls: 1.0116, d2.loss_bbox: 1.6575, d3.loss_cls: 1.0120, d3.loss_bbox: 1.6511, d4.loss_cls: 1.0129, d4.loss_bbox: 1.6515, aux_task0.loss_heatmap: 1.5317, aux_task0.loss_bbox: 0.4344, aux_task1.loss_heatmap: 2.1700, aux_task1.loss_bbox: 0.4798, aux_task2.loss_heatmap: 2.0621, aux_task2.loss_bbox: 0.4891, aux_task3.loss_heatmap: 1.6391, aux_task3.loss_bbox: 0.4056, aux_task4.loss_heatmap: 1.7908, aux_task4.loss_bbox: 0.4299, aux_task5.loss_heatmap: 2.0034, aux_task5.loss_bbox: 0.4654, loss: 30.1446, grad_norm: 37.2905
2025-04-16 13:13:01,689 - mmdet - INFO - Epoch [1][500/1104]	lr: 2.677e-05, eta: 6:21:31, time: 1.010, data_time: 0.009, memory: 13885, loss_cls: 1.0141, loss_bbox: 1.6143, d0.loss_cls: 1.1245, d0.loss_bbox: 1.7280, d1.loss_cls: 1.0223, d1.loss_bbox: 1.6427, d2.loss_cls: 1.0076, d2.loss_bbox: 1.6283, d3.loss_cls: 1.0085, d3.loss_bbox: 1.6278, d4.loss_cls: 1.0096, d4.loss_bbox: 1.6222, aux_task0.loss_heatmap: 1.4167, aux_task0.loss_bbox: 0.4251, aux_task1.loss_heatmap: 1.7896, aux_task1.loss_bbox: 0.4651, aux_task2.loss_heatmap: 1.8148, aux_task2.loss_bbox: 0.4730, aux_task3.loss_heatmap: 1.5399, aux_task3.loss_bbox: 0.4004, aux_task4.loss_heatmap: 1.5190, aux_task4.loss_bbox: 0.4172, aux_task5.loss_heatmap: 1.7004, aux_task5.loss_bbox: 0.4506, loss: 28.4616, grad_norm: 25.9519
2025-04-16 13:13:51,938 - mmdet - INFO - Epoch [1][550/1104]	lr: 2.714e-05, eta: 6:18:49, time: 1.005, data_time: 0.009, memory: 13885, loss_cls: 0.9775, loss_bbox: 1.5911, d0.loss_cls: 1.1101, d0.loss_bbox: 1.7181, d1.loss_cls: 0.9861, d1.loss_bbox: 1.6271, d2.loss_cls: 0.9752, d2.loss_bbox: 1.6122, d3.loss_cls: 0.9739, d3.loss_bbox: 1.6100, d4.loss_cls: 0.9758, d4.loss_bbox: 1.5979, aux_task0.loss_heatmap: 1.3589, aux_task0.loss_bbox: 0.4160, aux_task1.loss_heatmap: 1.6351, aux_task1.loss_bbox: 0.4561, aux_task2.loss_heatmap: 1.7636, aux_task2.loss_bbox: 0.4820, aux_task3.loss_heatmap: 1.4465, aux_task3.loss_bbox: 0.3953, aux_task4.loss_heatmap: 1.3666, aux_task4.loss_bbox: 0.4184, aux_task5.loss_heatmap: 1.5358, aux_task5.loss_bbox: 0.4395, loss: 27.4687, grad_norm: 22.2452
2025-04-16 13:14:42,695 - mmdet - INFO - Epoch [1][600/1104]	lr: 2.754e-05, eta: 6:16:43, time: 1.015, data_time: 0.009, memory: 13885, loss_cls: 0.9509, loss_bbox: 1.5793, d0.loss_cls: 1.1088, d0.loss_bbox: 1.7201, d1.loss_cls: 0.9641, d1.loss_bbox: 1.6138, d2.loss_cls: 0.9516, d2.loss_bbox: 1.5995, d3.loss_cls: 0.9500, d3.loss_bbox: 1.5920, d4.loss_cls: 0.9509, d4.loss_bbox: 1.5814, aux_task0.loss_heatmap: 1.3480, aux_task0.loss_bbox: 0.4036, aux_task1.loss_heatmap: 1.6071, aux_task1.loss_bbox: 0.4350, aux_task2.loss_heatmap: 1.7386, aux_task2.loss_bbox: 0.4719, aux_task3.loss_heatmap: 1.3682, aux_task3.loss_bbox: 0.3729, aux_task4.loss_heatmap: 1.2428, aux_task4.loss_bbox: 0.3982, aux_task5.loss_heatmap: 1.4379, aux_task5.loss_bbox: 0.4181, loss: 26.8047, grad_norm: 22.8148
2025-04-16 13:15:33,513 - mmdet - INFO - Epoch [1][650/1104]	lr: 2.798e-05, eta: 6:14:51, time: 1.016, data_time: 0.010, memory: 13970, loss_cls: 0.9352, loss_bbox: 1.5435, d0.loss_cls: 1.0992, d0.loss_bbox: 1.7206, d1.loss_cls: 0.9461, d1.loss_bbox: 1.5832, d2.loss_cls: 0.9367, d2.loss_bbox: 1.5576, d3.loss_cls: 0.9341, d3.loss_bbox: 1.5452, d4.loss_cls: 0.9321, d4.loss_bbox: 1.5408, aux_task0.loss_heatmap: 1.2890, aux_task0.loss_bbox: 0.3806, aux_task1.loss_heatmap: 1.5317, aux_task1.loss_bbox: 0.4246, aux_task2.loss_heatmap: 1.7211, aux_task2.loss_bbox: 0.4694, aux_task3.loss_heatmap: 1.3619, aux_task3.loss_bbox: 0.3727, aux_task4.loss_heatmap: 1.1908, aux_task4.loss_bbox: 0.3894, aux_task5.loss_heatmap: 1.3445, aux_task5.loss_bbox: 0.3964, loss: 26.1465, grad_norm: 24.9189
2025-04-16 13:16:24,192 - mmdet - INFO - Epoch [1][700/1104]	lr: 2.846e-05, eta: 6:13:04, time: 1.014, data_time: 0.008, memory: 13970, loss_cls: 0.9282, loss_bbox: 1.4928, d0.loss_cls: 1.0889, d0.loss_bbox: 1.7086, d1.loss_cls: 0.9392, d1.loss_bbox: 1.5368, d2.loss_cls: 0.9286, d2.loss_bbox: 1.5117, d3.loss_cls: 0.9259, d3.loss_bbox: 1.5001, d4.loss_cls: 0.9237, d4.loss_bbox: 1.4930, aux_task0.loss_heatmap: 1.2858, aux_task0.loss_bbox: 0.3795, aux_task1.loss_heatmap: 1.4983, aux_task1.loss_bbox: 0.4152, aux_task2.loss_heatmap: 1.7016, aux_task2.loss_bbox: 0.4573, aux_task3.loss_heatmap: 1.2440, aux_task3.loss_bbox: 0.3628, aux_task4.loss_heatmap: 1.0991, aux_task4.loss_bbox: 0.3783, aux_task5.loss_heatmap: 1.2949, aux_task5.loss_bbox: 0.3910, loss: 25.4853, grad_norm: 24.1807
2025-04-16 13:17:15,014 - mmdet - INFO - Epoch [1][750/1104]	lr: 2.897e-05, eta: 6:11:28, time: 1.016, data_time: 0.008, memory: 13970, loss_cls: 0.9146, loss_bbox: 1.4336, d0.loss_cls: 1.0817, d0.loss_bbox: 1.6927, d1.loss_cls: 0.9282, d1.loss_bbox: 1.4862, d2.loss_cls: 0.9185, d2.loss_bbox: 1.4553, d3.loss_cls: 0.9140, d3.loss_bbox: 1.4445, d4.loss_cls: 0.9133, d4.loss_bbox: 1.4353, aux_task0.loss_heatmap: 1.2434, aux_task0.loss_bbox: 0.3708, aux_task1.loss_heatmap: 1.4849, aux_task1.loss_bbox: 0.4144, aux_task2.loss_heatmap: 1.6937, aux_task2.loss_bbox: 0.4463, aux_task3.loss_heatmap: 1.2296, aux_task3.loss_bbox: 0.3517, aux_task4.loss_heatmap: 1.0600, aux_task4.loss_bbox: 0.3799, aux_task5.loss_heatmap: 1.2522, aux_task5.loss_bbox: 0.3836, loss: 24.9282, grad_norm: 23.2730
2025-04-16 13:18:05,263 - mmdet - INFO - Epoch [1][800/1104]	lr: 2.951e-05, eta: 6:09:43, time: 1.005, data_time: 0.008, memory: 13970, loss_cls: 0.9145, loss_bbox: 1.4119, d0.loss_cls: 1.0876, d0.loss_bbox: 1.6917, d1.loss_cls: 0.9302, d1.loss_bbox: 1.4679, d2.loss_cls: 0.9173, d2.loss_bbox: 1.4343, d3.loss_cls: 0.9139, d3.loss_bbox: 1.4234, d4.loss_cls: 0.9157, d4.loss_bbox: 1.4125, aux_task0.loss_heatmap: 1.1982, aux_task0.loss_bbox: 0.3663, aux_task1.loss_heatmap: 1.4565, aux_task1.loss_bbox: 0.4107, aux_task2.loss_heatmap: 1.6849, aux_task2.loss_bbox: 0.4487, aux_task3.loss_heatmap: 1.2762, aux_task3.loss_bbox: 0.3575, aux_task4.loss_heatmap: 1.0139, aux_task4.loss_bbox: 0.3652, aux_task5.loss_heatmap: 1.2316, aux_task5.loss_bbox: 0.3806, loss: 24.7113, grad_norm: 25.2285
2025-04-16 13:18:55,833 - mmdet - INFO - Epoch [1][850/1104]	lr: 3.009e-05, eta: 6:08:12, time: 1.011, data_time: 0.010, memory: 13970, loss_cls: 0.9068, loss_bbox: 1.3892, d0.loss_cls: 1.0725, d0.loss_bbox: 1.6878, d1.loss_cls: 0.9205, d1.loss_bbox: 1.4452, d2.loss_cls: 0.9087, d2.loss_bbox: 1.4077, d3.loss_cls: 0.9048, d3.loss_bbox: 1.3930, d4.loss_cls: 0.9047, d4.loss_bbox: 1.3843, aux_task0.loss_heatmap: 1.1790, aux_task0.loss_bbox: 0.3653, aux_task1.loss_heatmap: 1.4255, aux_task1.loss_bbox: 0.4069, aux_task2.loss_heatmap: 1.6640, aux_task2.loss_bbox: 0.4522, aux_task3.loss_heatmap: 1.2435, aux_task3.loss_bbox: 0.3463, aux_task4.loss_heatmap: 0.9807, aux_task4.loss_bbox: 0.3628, aux_task5.loss_heatmap: 1.1912, aux_task5.loss_bbox: 0.3754, loss: 24.3178, grad_norm: 28.0090
2025-04-16 13:19:46,478 - mmdet - INFO - Epoch [1][900/1104]	lr: 3.070e-05, eta: 6:06:47, time: 1.013, data_time: 0.007, memory: 13970, loss_cls: 0.8941, loss_bbox: 1.3368, d0.loss_cls: 1.0578, d0.loss_bbox: 1.6724, d1.loss_cls: 0.9077, d1.loss_bbox: 1.4102, d2.loss_cls: 0.8939, d2.loss_bbox: 1.3700, d3.loss_cls: 0.8945, d3.loss_bbox: 1.3463, d4.loss_cls: 0.8919, d4.loss_bbox: 1.3352, aux_task0.loss_heatmap: 1.1520, aux_task0.loss_bbox: 0.3597, aux_task1.loss_heatmap: 1.4024, aux_task1.loss_bbox: 0.4041, aux_task2.loss_heatmap: 1.6447, aux_task2.loss_bbox: 0.4488, aux_task3.loss_heatmap: 1.2021, aux_task3.loss_bbox: 0.3442, aux_task4.loss_heatmap: 0.9522, aux_task4.loss_bbox: 0.3583, aux_task5.loss_heatmap: 1.1507, aux_task5.loss_bbox: 0.3763, loss: 23.8064, grad_norm: 26.1167
2025-04-16 13:20:37,069 - mmdet - INFO - Epoch [1][950/1104]	lr: 3.135e-05, eta: 6:05:25, time: 1.012, data_time: 0.008, memory: 13970, loss_cls: 0.8848, loss_bbox: 1.3107, d0.loss_cls: 1.0469, d0.loss_bbox: 1.6780, d1.loss_cls: 0.9010, d1.loss_bbox: 1.3935, d2.loss_cls: 0.8844, d2.loss_bbox: 1.3435, d3.loss_cls: 0.8838, d3.loss_bbox: 1.3187, d4.loss_cls: 0.8817, d4.loss_bbox: 1.3076, aux_task0.loss_heatmap: 1.1546, aux_task0.loss_bbox: 0.3692, aux_task1.loss_heatmap: 1.3914, aux_task1.loss_bbox: 0.4008, aux_task2.loss_heatmap: 1.6422, aux_task2.loss_bbox: 0.4385, aux_task3.loss_heatmap: 1.1630, aux_task3.loss_bbox: 0.3422, aux_task4.loss_heatmap: 0.9220, aux_task4.loss_bbox: 0.3587, aux_task5.loss_heatmap: 1.1061, aux_task5.loss_bbox: 0.3647, loss: 23.4880, grad_norm: 27.5842
2025-04-16 13:21:27,799 - mmdet - INFO - Exp name: DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01.py
2025-04-16 13:21:27,799 - mmdet - INFO - Epoch [1][1000/1104]	lr: 3.203e-05, eta: 6:04:09, time: 1.015, data_time: 0.009, memory: 13970, loss_cls: 0.8838, loss_bbox: 1.2869, d0.loss_cls: 1.0456, d0.loss_bbox: 1.6687, d1.loss_cls: 0.9039, d1.loss_bbox: 1.3737, d2.loss_cls: 0.8884, d2.loss_bbox: 1.3147, d3.loss_cls: 0.8858, d3.loss_bbox: 1.2913, d4.loss_cls: 0.8821, d4.loss_bbox: 1.2840, aux_task0.loss_heatmap: 1.1461, aux_task0.loss_bbox: 0.3691, aux_task1.loss_heatmap: 1.3802, aux_task1.loss_bbox: 0.4051, aux_task2.loss_heatmap: 1.6403, aux_task2.loss_bbox: 0.4388, aux_task3.loss_heatmap: 1.1727, aux_task3.loss_bbox: 0.3465, aux_task4.loss_heatmap: 0.8975, aux_task4.loss_bbox: 0.3579, aux_task5.loss_heatmap: 1.1016, aux_task5.loss_bbox: 0.3659, loss: 23.3305, grad_norm: 30.2392
2025-04-16 13:22:18,216 - mmdet - INFO - Epoch [1][1050/1104]	lr: 3.274e-05, eta: 6:02:49, time: 1.008, data_time: 0.009, memory: 13970, loss_cls: 0.8772, loss_bbox: 1.2632, d0.loss_cls: 1.0352, d0.loss_bbox: 1.6575, d1.loss_cls: 0.8978, d1.loss_bbox: 1.3611, d2.loss_cls: 0.8803, d2.loss_bbox: 1.2995, d3.loss_cls: 0.8764, d3.loss_bbox: 1.2744, d4.loss_cls: 0.8737, d4.loss_bbox: 1.2635, aux_task0.loss_heatmap: 1.1290, aux_task0.loss_bbox: 0.3621, aux_task1.loss_heatmap: 1.3655, aux_task1.loss_bbox: 0.4036, aux_task2.loss_heatmap: 1.6316, aux_task2.loss_bbox: 0.4400, aux_task3.loss_heatmap: 1.1536, aux_task3.loss_bbox: 0.3393, aux_task4.loss_heatmap: 0.9107, aux_task4.loss_bbox: 0.3558, aux_task5.loss_heatmap: 1.0740, aux_task5.loss_bbox: 0.3648, loss: 23.0898, grad_norm: 27.8969
2025-04-16 13:23:09,228 - mmdet - INFO - Epoch [1][1100/1104]	lr: 3.349e-05, eta: 6:01:43, time: 1.020, data_time: 0.008, memory: 13970, loss_cls: 0.8549, loss_bbox: 1.2460, d0.loss_cls: 1.0155, d0.loss_bbox: 1.6582, d1.loss_cls: 0.8770, d1.loss_bbox: 1.3481, d2.loss_cls: 0.8602, d2.loss_bbox: 1.2825, d3.loss_cls: 0.8574, d3.loss_bbox: 1.2561, d4.loss_cls: 0.8528, d4.loss_bbox: 1.2454, aux_task0.loss_heatmap: 1.0929, aux_task0.loss_bbox: 0.3555, aux_task1.loss_heatmap: 1.3551, aux_task1.loss_bbox: 0.4012, aux_task2.loss_heatmap: 1.6100, aux_task2.loss_bbox: 0.4404, aux_task3.loss_heatmap: 1.1174, aux_task3.loss_bbox: 0.3359, aux_task4.loss_heatmap: 0.8955, aux_task4.loss_bbox: 0.3631, aux_task5.loss_heatmap: 1.0698, aux_task5.loss_bbox: 0.3589, loss: 22.7498, grad_norm: 29.3596
2025-04-16 13:23:13,578 - mmdet - INFO - Saving checkpoint at 1 epochs
2025-04-16 13:34:37,229 - mmdet - INFO - Exp name: DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01.py
2025-04-16 13:34:37,229 - mmdet - INFO - Epoch(val) [1][3010]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/car_AP_dist_1.0: 0.0175, pts_bbox_NuScenes/car_AP_dist_2.0: 0.0610, pts_bbox_NuScenes/car_AP_dist_4.0: 0.0971, pts_bbox_NuScenes/car_trans_err: 0.9534, pts_bbox_NuScenes/car_scale_err: 0.2329, pts_bbox_NuScenes/car_orient_err: 1.6750, pts_bbox_NuScenes/car_vel_err: 1.5793, pts_bbox_NuScenes/car_attr_err: 0.4521, pts_bbox_NuScenes/mATE: 0.8515, pts_bbox_NuScenes/mASE: 0.6337, pts_bbox_NuScenes/mAOE: 1.3636, pts_bbox_NuScenes/mAVE: 0.8941, pts_bbox_NuScenes/mAAE: 0.5990, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.0000, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.0000, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.0002, pts_bbox_NuScenes/truck_trans_err: 1.1577, pts_bbox_NuScenes/truck_scale_err: 0.4156, pts_bbox_NuScenes/truck_orient_err: 1.7248, pts_bbox_NuScenes/truck_vel_err: 0.9840, pts_bbox_NuScenes/truck_attr_err: 0.3685, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0000, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.0000, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.0000, pts_bbox_NuScenes/construction_vehicle_trans_err: 1.0510, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.6103, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.5874, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1559, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.3379, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.0000, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.0000, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.0000, pts_bbox_NuScenes/bus_trans_err: 1.0000, pts_bbox_NuScenes/bus_scale_err: 1.0000, pts_bbox_NuScenes/bus_orient_err: 1.0000, pts_bbox_NuScenes/bus_vel_err: 1.0000, pts_bbox_NuScenes/bus_attr_err: 1.0000, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.0000, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.0000, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.0000, pts_bbox_NuScenes/trailer_trans_err: 1.0000, pts_bbox_NuScenes/trailer_scale_err: 1.0000, pts_bbox_NuScenes/trailer_orient_err: 1.0000, pts_bbox_NuScenes/trailer_vel_err: 1.0000, pts_bbox_NuScenes/trailer_attr_err: 1.0000, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.0001, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.0083, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.0231, pts_bbox_NuScenes/barrier_trans_err: 0.9206, pts_bbox_NuScenes/barrier_scale_err: 0.7822, pts_bbox_NuScenes/barrier_orient_err: 1.0308, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.0000, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.0000, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.0000, pts_bbox_NuScenes/motorcycle_trans_err: 0.4784, pts_bbox_NuScenes/motorcycle_scale_err: 0.5549, pts_bbox_NuScenes/motorcycle_orient_err: 1.3098, pts_bbox_NuScenes/motorcycle_vel_err: 1.0690, pts_bbox_NuScenes/motorcycle_attr_err: 0.6282, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.0000, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.0000, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.0000, pts_bbox_NuScenes/bicycle_trans_err: 0.7879, pts_bbox_NuScenes/bicycle_scale_err: 0.5969, pts_bbox_NuScenes/bicycle_orient_err: 1.3835, pts_bbox_NuScenes/bicycle_vel_err: 0.2930, pts_bbox_NuScenes/bicycle_attr_err: 0.1240, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.0061, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.0089, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.0179, pts_bbox_NuScenes/pedestrian_trans_err: 0.5032, pts_bbox_NuScenes/pedestrian_scale_err: 0.4862, pts_bbox_NuScenes/pedestrian_orient_err: 1.5610, pts_bbox_NuScenes/pedestrian_vel_err: 1.0719, pts_bbox_NuScenes/pedestrian_attr_err: 0.8816, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.0000, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.0002, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.0061, pts_bbox_NuScenes/traffic_cone_trans_err: 0.6623, pts_bbox_NuScenes/traffic_cone_scale_err: 0.6577, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.1053, pts_bbox_NuScenes/mAP: 0.0062
2025-04-16 13:35:42,214 - mmdet - INFO - Epoch [2][50/1104]	lr: 3.433e-05, eta: 6:03:17, time: 1.283, data_time: 0.280, memory: 13970, loss_cls: 0.8510, loss_bbox: 1.2179, d0.loss_cls: 1.0034, d0.loss_bbox: 1.6240, d1.loss_cls: 0.8679, d1.loss_bbox: 1.3164, d2.loss_cls: 0.8503, d2.loss_bbox: 1.2523, d3.loss_cls: 0.8485, d3.loss_bbox: 1.2273, d4.loss_cls: 0.8475, d4.loss_bbox: 1.2172, aux_task0.loss_heatmap: 1.0611, aux_task0.loss_bbox: 0.3525, aux_task1.loss_heatmap: 1.3361, aux_task1.loss_bbox: 0.3979, aux_task2.loss_heatmap: 1.6087, aux_task2.loss_bbox: 0.4414, aux_task3.loss_heatmap: 1.1179, aux_task3.loss_bbox: 0.3353, aux_task4.loss_heatmap: 0.8841, aux_task4.loss_bbox: 0.3549, aux_task5.loss_heatmap: 1.0358, aux_task5.loss_bbox: 0.3558, loss: 22.4051, grad_norm: 29.6066
2025-04-16 13:36:32,580 - mmdet - INFO - Epoch [2][100/1104]	lr: 3.514e-05, eta: 6:01:55, time: 1.007, data_time: 0.009, memory: 13970, loss_cls: 0.8412, loss_bbox: 1.1965, d0.loss_cls: 0.9921, d0.loss_bbox: 1.6120, d1.loss_cls: 0.8616, d1.loss_bbox: 1.3018, d2.loss_cls: 0.8481, d2.loss_bbox: 1.2370, d3.loss_cls: 0.8437, d3.loss_bbox: 1.2117, d4.loss_cls: 0.8391, d4.loss_bbox: 1.1997, aux_task0.loss_heatmap: 1.0639, aux_task0.loss_bbox: 0.3482, aux_task1.loss_heatmap: 1.3433, aux_task1.loss_bbox: 0.3951, aux_task2.loss_heatmap: 1.6102, aux_task2.loss_bbox: 0.4294, aux_task3.loss_heatmap: 1.1218, aux_task3.loss_bbox: 0.3309, aux_task4.loss_heatmap: 0.8598, aux_task4.loss_bbox: 0.3554, aux_task5.loss_heatmap: 1.0059, aux_task5.loss_bbox: 0.3527, loss: 22.2012, grad_norm: 29.6968
2025-04-16 13:37:28,926 - mmdet - INFO - Epoch [2][150/1104]	lr: 3.599e-05, eta: 6:02:15, time: 1.127, data_time: 0.008, memory: 14036, loss_cls: 0.8348, loss_bbox: 1.1944, d0.loss_cls: 0.9839, d0.loss_bbox: 1.6111, d1.loss_cls: 0.8570, d1.loss_bbox: 1.2998, d2.loss_cls: 0.8416, d2.loss_bbox: 1.2335, d3.loss_cls: 0.8370, d3.loss_bbox: 1.2100, d4.loss_cls: 0.8335, d4.loss_bbox: 1.1979, aux_task0.loss_heatmap: 1.0857, aux_task0.loss_bbox: 0.3649, aux_task1.loss_heatmap: 1.3094, aux_task1.loss_bbox: 0.3951, aux_task2.loss_heatmap: 1.5750, aux_task2.loss_bbox: 0.4280, aux_task3.loss_heatmap: 1.0906, aux_task3.loss_bbox: 0.3397, aux_task4.loss_heatmap: 0.8466, aux_task4.loss_bbox: 0.3540, aux_task5.loss_heatmap: 0.9872, aux_task5.loss_bbox: 0.3584, loss: 22.0691, grad_norm: 29.8637
2025-04-16 13:38:19,299 - mmdet - INFO - Epoch [2][200/1104]	lr: 3.687e-05, eta: 6:00:54, time: 1.007, data_time: 0.008, memory: 14036, loss_cls: 0.8348, loss_bbox: 1.1930, d0.loss_cls: 0.9724, d0.loss_bbox: 1.6006, d1.loss_cls: 0.8541, d1.loss_bbox: 1.2957, d2.loss_cls: 0.8403, d2.loss_bbox: 1.2282, d3.loss_cls: 0.8364, d3.loss_bbox: 1.2046, d4.loss_cls: 0.8349, d4.loss_bbox: 1.1941, aux_task0.loss_heatmap: 1.0665, aux_task0.loss_bbox: 0.3555, aux_task1.loss_heatmap: 1.2950, aux_task1.loss_bbox: 0.3948, aux_task2.loss_heatmap: 1.5730, aux_task2.loss_bbox: 0.4295, aux_task3.loss_heatmap: 1.0780, aux_task3.loss_bbox: 0.3328, aux_task4.loss_heatmap: 0.8314, aux_task4.loss_bbox: 0.3524, aux_task5.loss_heatmap: 1.0160, aux_task5.loss_bbox: 0.3589, loss: 21.9728, grad_norm: 33.3854
2025-04-16 13:39:09,636 - mmdet - INFO - Epoch [2][250/1104]	lr: 3.778e-05, eta: 5:59:35, time: 1.007, data_time: 0.008, memory: 14036, loss_cls: 0.8176, loss_bbox: 1.1630, d0.loss_cls: 0.9583, d0.loss_bbox: 1.5655, d1.loss_cls: 0.8395, d1.loss_bbox: 1.2584, d2.loss_cls: 0.8240, d2.loss_bbox: 1.1953, d3.loss_cls: 0.8208, d3.loss_bbox: 1.1740, d4.loss_cls: 0.8169, d4.loss_bbox: 1.1621, aux_task0.loss_heatmap: 1.0260, aux_task0.loss_bbox: 0.3431, aux_task1.loss_heatmap: 1.2730, aux_task1.loss_bbox: 0.3963, aux_task2.loss_heatmap: 1.5454, aux_task2.loss_bbox: 0.4248, aux_task3.loss_heatmap: 1.0527, aux_task3.loss_bbox: 0.3278, aux_task4.loss_heatmap: 0.8393, aux_task4.loss_bbox: 0.3522, aux_task5.loss_heatmap: 0.9670, aux_task5.loss_bbox: 0.3489, loss: 21.4918, grad_norm: 33.1448
2025-04-16 13:40:00,406 - mmdet - INFO - Epoch [2][300/1104]	lr: 3.872e-05, eta: 5:58:24, time: 1.015, data_time: 0.010, memory: 14036, loss_cls: 0.8190, loss_bbox: 1.1677, d0.loss_cls: 0.9507, d0.loss_bbox: 1.5684, d1.loss_cls: 0.8416, d1.loss_bbox: 1.2675, d2.loss_cls: 0.8247, d2.loss_bbox: 1.2007, d3.loss_cls: 0.8213, d3.loss_bbox: 1.1827, d4.loss_cls: 0.8171, d4.loss_bbox: 1.1702, aux_task0.loss_heatmap: 1.0200, aux_task0.loss_bbox: 0.3569, aux_task1.loss_heatmap: 1.2964, aux_task1.loss_bbox: 0.3948, aux_task2.loss_heatmap: 1.5442, aux_task2.loss_bbox: 0.4411, aux_task3.loss_heatmap: 1.0856, aux_task3.loss_bbox: 0.3346, aux_task4.loss_heatmap: 0.8349, aux_task4.loss_bbox: 0.3413, aux_task5.loss_heatmap: 0.9328, aux_task5.loss_bbox: 0.3496, loss: 21.5639, grad_norm: 31.2407
2025-04-16 13:40:50,795 - mmdet - INFO - Epoch [2][350/1104]	lr: 3.969e-05, eta: 5:57:09, time: 1.008, data_time: 0.009, memory: 14036, loss_cls: 0.8071, loss_bbox: 1.1491, d0.loss_cls: 0.9398, d0.loss_bbox: 1.5310, d1.loss_cls: 0.8266, d1.loss_bbox: 1.2428, d2.loss_cls: 0.8102, d2.loss_bbox: 1.1831, d3.loss_cls: 0.8072, d3.loss_bbox: 1.1647, d4.loss_cls: 0.8042, d4.loss_bbox: 1.1524, aux_task0.loss_heatmap: 1.0183, aux_task0.loss_bbox: 0.3502, aux_task1.loss_heatmap: 1.2862, aux_task1.loss_bbox: 0.3965, aux_task2.loss_heatmap: 1.5300, aux_task2.loss_bbox: 0.4273, aux_task3.loss_heatmap: 1.0778, aux_task3.loss_bbox: 0.3347, aux_task4.loss_heatmap: 0.8350, aux_task4.loss_bbox: 0.3518, aux_task5.loss_heatmap: 0.9311, aux_task5.loss_bbox: 0.3497, loss: 21.3067, grad_norm: 32.1047
2025-04-16 13:41:41,247 - mmdet - INFO - Epoch [2][400/1104]	lr: 4.070e-05, eta: 5:55:56, time: 1.009, data_time: 0.007, memory: 14036, loss_cls: 0.7981, loss_bbox: 1.1369, d0.loss_cls: 0.9256, d0.loss_bbox: 1.5210, d1.loss_cls: 0.8224, d1.loss_bbox: 1.2305, d2.loss_cls: 0.8030, d2.loss_bbox: 1.1684, d3.loss_cls: 0.7982, d3.loss_bbox: 1.1504, d4.loss_cls: 0.7974, d4.loss_bbox: 1.1383, aux_task0.loss_heatmap: 1.0021, aux_task0.loss_bbox: 0.3479, aux_task1.loss_heatmap: 1.2580, aux_task1.loss_bbox: 0.3908, aux_task2.loss_heatmap: 1.5412, aux_task2.loss_bbox: 0.4187, aux_task3.loss_heatmap: 1.0581, aux_task3.loss_bbox: 0.3357, aux_task4.loss_heatmap: 0.8117, aux_task4.loss_bbox: 0.3505, aux_task5.loss_heatmap: 0.8941, aux_task5.loss_bbox: 0.3496, loss: 21.0485, grad_norm: 30.5756
2025-04-16 13:42:31,668 - mmdet - INFO - Epoch [2][450/1104]	lr: 4.173e-05, eta: 5:54:45, time: 1.008, data_time: 0.008, memory: 14036, loss_cls: 0.7895, loss_bbox: 1.1360, d0.loss_cls: 0.9163, d0.loss_bbox: 1.5121, d1.loss_cls: 0.8140, d1.loss_bbox: 1.2279, d2.loss_cls: 0.7970, d2.loss_bbox: 1.1654, d3.loss_cls: 0.7904, d3.loss_bbox: 1.1480, d4.loss_cls: 0.7884, d4.loss_bbox: 1.1375, aux_task0.loss_heatmap: 1.0043, aux_task0.loss_bbox: 0.3462, aux_task1.loss_heatmap: 1.2533, aux_task1.loss_bbox: 0.3914, aux_task2.loss_heatmap: 1.5000, aux_task2.loss_bbox: 0.4282, aux_task3.loss_heatmap: 1.0338, aux_task3.loss_bbox: 0.3378, aux_task4.loss_heatmap: 0.8338, aux_task4.loss_bbox: 0.3495, aux_task5.loss_heatmap: 0.8806, aux_task5.loss_bbox: 0.3478, loss: 20.9293, grad_norm: 34.2633
2025-04-16 13:43:24,014 - mmdet - INFO - Epoch [2][500/1104]	lr: 4.280e-05, eta: 5:53:59, time: 1.047, data_time: 0.008, memory: 14036, loss_cls: 0.7769, loss_bbox: 1.1166, d0.loss_cls: 0.9042, d0.loss_bbox: 1.4902, d1.loss_cls: 0.8081, d1.loss_bbox: 1.2052, d2.loss_cls: 0.7854, d2.loss_bbox: 1.1442, d3.loss_cls: 0.7780, d3.loss_bbox: 1.1295, d4.loss_cls: 0.7758, d4.loss_bbox: 1.1174, aux_task0.loss_heatmap: 0.9821, aux_task0.loss_bbox: 0.3465, aux_task1.loss_heatmap: 1.2659, aux_task1.loss_bbox: 0.3874, aux_task2.loss_heatmap: 1.4648, aux_task2.loss_bbox: 0.4190, aux_task3.loss_heatmap: 1.0993, aux_task3.loss_bbox: 0.3339, aux_task4.loss_heatmap: 0.7982, aux_task4.loss_bbox: 0.3447, aux_task5.loss_heatmap: 0.8651, aux_task5.loss_bbox: 0.3442, loss: 20.6826, grad_norm: 33.0342
2025-04-16 13:44:14,475 - mmdet - INFO - Epoch [2][550/1104]	lr: 4.389e-05, eta: 5:52:50, time: 1.009, data_time: 0.009, memory: 14036, loss_cls: 0.7825, loss_bbox: 1.1170, d0.loss_cls: 0.9057, d0.loss_bbox: 1.4902, d1.loss_cls: 0.8102, d1.loss_bbox: 1.2118, d2.loss_cls: 0.7906, d2.loss_bbox: 1.1471, d3.loss_cls: 0.7840, d3.loss_bbox: 1.1291, d4.loss_cls: 0.7827, d4.loss_bbox: 1.1184, aux_task0.loss_heatmap: 0.9859, aux_task0.loss_bbox: 0.3522, aux_task1.loss_heatmap: 1.2215, aux_task1.loss_bbox: 0.3864, aux_task2.loss_heatmap: 1.4889, aux_task2.loss_bbox: 0.4279, aux_task3.loss_heatmap: 1.0196, aux_task3.loss_bbox: 0.3280, aux_task4.loss_heatmap: 0.7866, aux_task4.loss_bbox: 0.3492, aux_task5.loss_heatmap: 0.8720, aux_task5.loss_bbox: 0.3449, loss: 20.6324, grad_norm: 33.0126
2025-04-16 13:45:05,163 - mmdet - INFO - Epoch [2][600/1104]	lr: 4.502e-05, eta: 5:51:45, time: 1.014, data_time: 0.008, memory: 14036, loss_cls: 0.7651, loss_bbox: 1.1079, d0.loss_cls: 0.8863, d0.loss_bbox: 1.4781, d1.loss_cls: 0.7889, d1.loss_bbox: 1.1961, d2.loss_cls: 0.7712, d2.loss_bbox: 1.1357, d3.loss_cls: 0.7668, d3.loss_bbox: 1.1194, d4.loss_cls: 0.7650, d4.loss_bbox: 1.1093, aux_task0.loss_heatmap: 0.9692, aux_task0.loss_bbox: 0.3440, aux_task1.loss_heatmap: 1.2382, aux_task1.loss_bbox: 0.3855, aux_task2.loss_heatmap: 1.4631, aux_task2.loss_bbox: 0.4300, aux_task3.loss_heatmap: 1.0480, aux_task3.loss_bbox: 0.3294, aux_task4.loss_heatmap: 0.7709, aux_task4.loss_bbox: 0.3453, aux_task5.loss_heatmap: 0.8478, aux_task5.loss_bbox: 0.3464, loss: 20.4079, grad_norm: 33.6340
2025-04-16 13:45:55,937 - mmdet - INFO - Epoch [2][650/1104]	lr: 4.617e-05, eta: 5:50:41, time: 1.015, data_time: 0.008, memory: 14036, loss_cls: 0.7660, loss_bbox: 1.1083, d0.loss_cls: 0.8858, d0.loss_bbox: 1.4593, d1.loss_cls: 0.7944, d1.loss_bbox: 1.1907, d2.loss_cls: 0.7728, d2.loss_bbox: 1.1345, d3.loss_cls: 0.7679, d3.loss_bbox: 1.1178, d4.loss_cls: 0.7659, d4.loss_bbox: 1.1095, aux_task0.loss_heatmap: 0.9518, aux_task0.loss_bbox: 0.3369, aux_task1.loss_heatmap: 1.1891, aux_task1.loss_bbox: 0.3858, aux_task2.loss_heatmap: 1.4759, aux_task2.loss_bbox: 0.4239, aux_task3.loss_heatmap: 1.0757, aux_task3.loss_bbox: 0.3315, aux_task4.loss_heatmap: 0.8129, aux_task4.loss_bbox: 0.3459, aux_task5.loss_heatmap: 0.8290, aux_task5.loss_bbox: 0.3407, loss: 20.3719, grad_norm: 33.8789
2025-04-16 13:46:46,593 - mmdet - INFO - Epoch [2][700/1104]	lr: 4.735e-05, eta: 5:49:37, time: 1.013, data_time: 0.007, memory: 14036, loss_cls: 0.7557, loss_bbox: 1.0936, d0.loss_cls: 0.8700, d0.loss_bbox: 1.4506, d1.loss_cls: 0.7867, d1.loss_bbox: 1.1774, d2.loss_cls: 0.7642, d2.loss_bbox: 1.1204, d3.loss_cls: 0.7553, d3.loss_bbox: 1.1044, d4.loss_cls: 0.7549, d4.loss_bbox: 1.0948, aux_task0.loss_heatmap: 0.9790, aux_task0.loss_bbox: 0.3410, aux_task1.loss_heatmap: 1.1958, aux_task1.loss_bbox: 0.3881, aux_task2.loss_heatmap: 1.4575, aux_task2.loss_bbox: 0.4249, aux_task3.loss_heatmap: 1.0030, aux_task3.loss_bbox: 0.3269, aux_task4.loss_heatmap: 0.7735, aux_task4.loss_bbox: 0.3454, aux_task5.loss_heatmap: 0.7959, aux_task5.loss_bbox: 0.3366, loss: 20.0954, grad_norm: 32.1307
2025-04-16 13:47:36,944 - mmdet - INFO - Epoch [2][750/1104]	lr: 4.857e-05, eta: 5:48:30, time: 1.007, data_time: 0.008, memory: 14036, loss_cls: 0.7462, loss_bbox: 1.0978, d0.loss_cls: 0.8649, d0.loss_bbox: 1.4386, d1.loss_cls: 0.7761, d1.loss_bbox: 1.1735, d2.loss_cls: 0.7564, d2.loss_bbox: 1.1188, d3.loss_cls: 0.7502, d3.loss_bbox: 1.1059, d4.loss_cls: 0.7486, d4.loss_bbox: 1.0978, aux_task0.loss_heatmap: 0.9459, aux_task0.loss_bbox: 0.3445, aux_task1.loss_heatmap: 1.1963, aux_task1.loss_bbox: 0.3820, aux_task2.loss_heatmap: 1.4104, aux_task2.loss_bbox: 0.4212, aux_task3.loss_heatmap: 1.0319, aux_task3.loss_bbox: 0.3247, aux_task4.loss_heatmap: 0.7651, aux_task4.loss_bbox: 0.3457, aux_task5.loss_heatmap: 0.8037, aux_task5.loss_bbox: 0.3363, loss: 19.9823, grad_norm: 39.0264
2025-04-16 13:48:27,348 - mmdet - INFO - Epoch [2][800/1104]	lr: 4.980e-05, eta: 5:47:25, time: 1.008, data_time: 0.009, memory: 14036, loss_cls: 0.7385, loss_bbox: 1.0818, d0.loss_cls: 0.8564, d0.loss_bbox: 1.4223, d1.loss_cls: 0.7747, d1.loss_bbox: 1.1693, d2.loss_cls: 0.7505, d2.loss_bbox: 1.1129, d3.loss_cls: 0.7424, d3.loss_bbox: 1.0979, d4.loss_cls: 0.7418, d4.loss_bbox: 1.0854, aux_task0.loss_heatmap: 0.9329, aux_task0.loss_bbox: 0.3372, aux_task1.loss_heatmap: 1.1959, aux_task1.loss_bbox: 0.3816, aux_task2.loss_heatmap: 1.4257, aux_task2.loss_bbox: 0.4156, aux_task3.loss_heatmap: 1.0254, aux_task3.loss_bbox: 0.3266, aux_task4.loss_heatmap: 0.7776, aux_task4.loss_bbox: 0.3372, aux_task5.loss_heatmap: 0.7892, aux_task5.loss_bbox: 0.3338, loss: 19.8524, grad_norm: 35.1521
2025-04-16 13:49:17,795 - mmdet - INFO - Epoch [2][850/1104]	lr: 5.107e-05, eta: 5:46:21, time: 1.009, data_time: 0.009, memory: 14036, loss_cls: 0.7228, loss_bbox: 1.0711, d0.loss_cls: 0.8388, d0.loss_bbox: 1.3958, d1.loss_cls: 0.7576, d1.loss_bbox: 1.1569, d2.loss_cls: 0.7322, d2.loss_bbox: 1.0981, d3.loss_cls: 0.7247, d3.loss_bbox: 1.0824, d4.loss_cls: 0.7246, d4.loss_bbox: 1.0718, aux_task0.loss_heatmap: 0.9018, aux_task0.loss_bbox: 0.3402, aux_task1.loss_heatmap: 1.1947, aux_task1.loss_bbox: 0.3845, aux_task2.loss_heatmap: 1.4104, aux_task2.loss_bbox: 0.4168, aux_task3.loss_heatmap: 0.9753, aux_task3.loss_bbox: 0.3222, aux_task4.loss_heatmap: 0.7663, aux_task4.loss_bbox: 0.3371, aux_task5.loss_heatmap: 0.7358, aux_task5.loss_bbox: 0.3343, loss: 19.4962, grad_norm: 34.8386
2025-04-16 13:50:08,634 - mmdet - INFO - Epoch [2][900/1104]	lr: 5.237e-05, eta: 5:45:21, time: 1.017, data_time: 0.010, memory: 14036, loss_cls: 0.7367, loss_bbox: 1.0800, d0.loss_cls: 0.8474, d0.loss_bbox: 1.3919, d1.loss_cls: 0.7744, d1.loss_bbox: 1.1692, d2.loss_cls: 0.7483, d2.loss_bbox: 1.1148, d3.loss_cls: 0.7402, d3.loss_bbox: 1.0975, d4.loss_cls: 0.7393, d4.loss_bbox: 1.0845, aux_task0.loss_heatmap: 0.9270, aux_task0.loss_bbox: 0.3345, aux_task1.loss_heatmap: 1.2159, aux_task1.loss_bbox: 0.3829, aux_task2.loss_heatmap: 1.4044, aux_task2.loss_bbox: 0.4198, aux_task3.loss_heatmap: 0.9810, aux_task3.loss_bbox: 0.3274, aux_task4.loss_heatmap: 0.7787, aux_task4.loss_bbox: 0.3363, aux_task5.loss_heatmap: 0.7833, aux_task5.loss_bbox: 0.3318, loss: 19.7474, grad_norm: 35.3651
2025-04-16 13:50:59,475 - mmdet - INFO - Epoch [2][950/1104]	lr: 5.369e-05, eta: 5:44:22, time: 1.017, data_time: 0.008, memory: 14036, loss_cls: 0.7188, loss_bbox: 1.0720, d0.loss_cls: 0.8312, d0.loss_bbox: 1.3837, d1.loss_cls: 0.7574, d1.loss_bbox: 1.1665, d2.loss_cls: 0.7331, d2.loss_bbox: 1.1099, d3.loss_cls: 0.7232, d3.loss_bbox: 1.0940, d4.loss_cls: 0.7222, d4.loss_bbox: 1.0786, aux_task0.loss_heatmap: 0.9339, aux_task0.loss_bbox: 0.3432, aux_task1.loss_heatmap: 1.1969, aux_task1.loss_bbox: 0.3834, aux_task2.loss_heatmap: 1.3925, aux_task2.loss_bbox: 0.4141, aux_task3.loss_heatmap: 0.9395, aux_task3.loss_bbox: 0.3227, aux_task4.loss_heatmap: 0.7386, aux_task4.loss_bbox: 0.3390, aux_task5.loss_heatmap: 0.7821, aux_task5.loss_bbox: 0.3342, loss: 19.5111, grad_norm: 34.4025
2025-04-16 13:51:49,745 - mmdet - INFO - Epoch [2][1000/1104]	lr: 5.504e-05, eta: 5:43:18, time: 1.005, data_time: 0.011, memory: 14036, loss_cls: 0.7180, loss_bbox: 1.0714, d0.loss_cls: 0.8235, d0.loss_bbox: 1.3648, d1.loss_cls: 0.7545, d1.loss_bbox: 1.1635, d2.loss_cls: 0.7318, d2.loss_bbox: 1.1096, d3.loss_cls: 0.7221, d3.loss_bbox: 1.0918, d4.loss_cls: 0.7196, d4.loss_bbox: 1.0777, aux_task0.loss_heatmap: 0.9090, aux_task0.loss_bbox: 0.3376, aux_task1.loss_heatmap: 1.1953, aux_task1.loss_bbox: 0.3819, aux_task2.loss_heatmap: 1.3739, aux_task2.loss_bbox: 0.4148, aux_task3.loss_heatmap: 0.9770, aux_task3.loss_bbox: 0.3274, aux_task4.loss_heatmap: 0.7303, aux_task4.loss_bbox: 0.3409, aux_task5.loss_heatmap: 0.7639, aux_task5.loss_bbox: 0.3403, loss: 19.4407, grad_norm: 31.9821
2025-04-16 13:52:40,323 - mmdet - INFO - Epoch [2][1050/1104]	lr: 5.641e-05, eta: 5:42:17, time: 1.012, data_time: 0.007, memory: 14036, loss_cls: 0.7089, loss_bbox: 1.0540, d0.loss_cls: 0.8084, d0.loss_bbox: 1.3470, d1.loss_cls: 0.7462, d1.loss_bbox: 1.1494, d2.loss_cls: 0.7247, d2.loss_bbox: 1.0913, d3.loss_cls: 0.7141, d3.loss_bbox: 1.0751, d4.loss_cls: 0.7134, d4.loss_bbox: 1.0578, aux_task0.loss_heatmap: 0.9035, aux_task0.loss_bbox: 0.3362, aux_task1.loss_heatmap: 1.1676, aux_task1.loss_bbox: 0.3868, aux_task2.loss_heatmap: 1.3548, aux_task2.loss_bbox: 0.4107, aux_task3.loss_heatmap: 0.9332, aux_task3.loss_bbox: 0.3200, aux_task4.loss_heatmap: 0.7496, aux_task4.loss_bbox: 0.3381, aux_task5.loss_heatmap: 0.7349, aux_task5.loss_bbox: 0.3295, loss: 19.1551, grad_norm: 36.2933
2025-04-16 13:53:30,978 - mmdet - INFO - Epoch [2][1100/1104]	lr: 5.781e-05, eta: 5:41:18, time: 1.013, data_time: 0.009, memory: 14036, loss_cls: 0.6951, loss_bbox: 1.0472, d0.loss_cls: 0.7966, d0.loss_bbox: 1.3346, d1.loss_cls: 0.7379, d1.loss_bbox: 1.1366, d2.loss_cls: 0.7147, d2.loss_bbox: 1.0819, d3.loss_cls: 0.7035, d3.loss_bbox: 1.0674, d4.loss_cls: 0.7004, d4.loss_bbox: 1.0506, aux_task0.loss_heatmap: 0.8833, aux_task0.loss_bbox: 0.3302, aux_task1.loss_heatmap: 1.1778, aux_task1.loss_bbox: 0.3830, aux_task2.loss_heatmap: 1.3641, aux_task2.loss_bbox: 0.4229, aux_task3.loss_heatmap: 0.9213, aux_task3.loss_bbox: 0.3247, aux_task4.loss_heatmap: 0.7468, aux_task4.loss_bbox: 0.3430, aux_task5.loss_heatmap: 0.7100, aux_task5.loss_bbox: 0.3275, loss: 19.0011, grad_norm: 32.9178
2025-04-16 13:53:35,451 - mmdet - INFO - Saving checkpoint at 2 epochs
2025-04-16 14:04:49,417 - mmdet - INFO - Exp name: DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01.py
2025-04-16 14:04:49,418 - mmdet - INFO - Epoch(val) [2][3010]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.0470, pts_bbox_NuScenes/car_AP_dist_1.0: 0.2052, pts_bbox_NuScenes/car_AP_dist_2.0: 0.3498, pts_bbox_NuScenes/car_AP_dist_4.0: 0.4475, pts_bbox_NuScenes/car_trans_err: 0.6693, pts_bbox_NuScenes/car_scale_err: 0.2434, pts_bbox_NuScenes/car_orient_err: 1.4533, pts_bbox_NuScenes/car_vel_err: 1.3165, pts_bbox_NuScenes/car_attr_err: 0.4126, pts_bbox_NuScenes/mATE: 0.7707, pts_bbox_NuScenes/mASE: 0.3705, pts_bbox_NuScenes/mAOE: 1.4818, pts_bbox_NuScenes/mAVE: 1.0895, pts_bbox_NuScenes/mAAE: 0.4585, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.0006, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.0178, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.0546, pts_bbox_NuScenes/truck_trans_err: 0.8993, pts_bbox_NuScenes/truck_scale_err: 0.3092, pts_bbox_NuScenes/truck_orient_err: 1.5352, pts_bbox_NuScenes/truck_vel_err: 0.7796, pts_bbox_NuScenes/truck_attr_err: 0.3394, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0000, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.0000, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.0000, pts_bbox_NuScenes/construction_vehicle_trans_err: 0.8839, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.5508, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.6845, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1454, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.4569, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.0000, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.0048, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.0358, pts_bbox_NuScenes/bus_trans_err: 1.0982, pts_bbox_NuScenes/bus_scale_err: 0.2861, pts_bbox_NuScenes/bus_orient_err: 1.7684, pts_bbox_NuScenes/bus_vel_err: 2.7011, pts_bbox_NuScenes/bus_attr_err: 0.6166, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.0000, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.0000, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.0000, pts_bbox_NuScenes/trailer_trans_err: 1.1311, pts_bbox_NuScenes/trailer_scale_err: 0.3130, pts_bbox_NuScenes/trailer_orient_err: 1.7471, pts_bbox_NuScenes/trailer_vel_err: 0.7271, pts_bbox_NuScenes/trailer_attr_err: 0.3123, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.0025, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.0470, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.1147, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.1777, pts_bbox_NuScenes/barrier_trans_err: 0.9377, pts_bbox_NuScenes/barrier_scale_err: 0.3940, pts_bbox_NuScenes/barrier_orient_err: 0.5197, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.0019, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.0044, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.0052, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.0056, pts_bbox_NuScenes/motorcycle_trans_err: 0.3874, pts_bbox_NuScenes/motorcycle_scale_err: 0.3173, pts_bbox_NuScenes/motorcycle_orient_err: 1.6988, pts_bbox_NuScenes/motorcycle_vel_err: 1.5920, pts_bbox_NuScenes/motorcycle_attr_err: 0.6039, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.0000, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.0000, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.0000, pts_bbox_NuScenes/bicycle_trans_err: 0.5317, pts_bbox_NuScenes/bicycle_scale_err: 0.3873, pts_bbox_NuScenes/bicycle_orient_err: 1.5322, pts_bbox_NuScenes/bicycle_vel_err: 0.5564, pts_bbox_NuScenes/bicycle_attr_err: 0.1485, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.0790, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.2737, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.3375, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.3810, pts_bbox_NuScenes/pedestrian_trans_err: 0.5637, pts_bbox_NuScenes/pedestrian_scale_err: 0.3552, pts_bbox_NuScenes/pedestrian_orient_err: 1.3972, pts_bbox_NuScenes/pedestrian_vel_err: 0.8975, pts_bbox_NuScenes/pedestrian_attr_err: 0.7777, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.0126, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.0406, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.0661, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.1265, pts_bbox_NuScenes/traffic_cone_trans_err: 0.6046, pts_bbox_NuScenes/traffic_cone_scale_err: 0.5492, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.1755, pts_bbox_NuScenes/mAP: 0.0710
2025-04-16 14:05:45,302 - mmdet - INFO - Epoch [3][50/1104]	lr: 5.935e-05, eta: 5:40:14, time: 1.094, data_time: 0.087, memory: 14036, loss_cls: 0.7014, loss_bbox: 1.0479, d0.loss_cls: 0.8010, d0.loss_bbox: 1.3261, d1.loss_cls: 0.7443, d1.loss_bbox: 1.1318, d2.loss_cls: 0.7214, d2.loss_bbox: 1.0777, d3.loss_cls: 0.7088, d3.loss_bbox: 1.0623, d4.loss_cls: 0.7062, d4.loss_bbox: 1.0466, aux_task0.loss_heatmap: 0.9150, aux_task0.loss_bbox: 0.3346, aux_task1.loss_heatmap: 1.1551, aux_task1.loss_bbox: 0.3761, aux_task2.loss_heatmap: 1.3682, aux_task2.loss_bbox: 0.4145, aux_task3.loss_heatmap: 0.9283, aux_task3.loss_bbox: 0.3250, aux_task4.loss_heatmap: 0.7343, aux_task4.loss_bbox: 0.3364, aux_task5.loss_heatmap: 0.7298, aux_task5.loss_bbox: 0.3316, loss: 19.0245, grad_norm: 36.0495
2025-04-16 14:06:35,630 - mmdet - INFO - Epoch [3][100/1104]	lr: 6.080e-05, eta: 5:39:13, time: 1.007, data_time: 0.007, memory: 14036, loss_cls: 0.6892, loss_bbox: 1.0354, d0.loss_cls: 0.7897, d0.loss_bbox: 1.3191, d1.loss_cls: 0.7337, d1.loss_bbox: 1.1215, d2.loss_cls: 0.7082, d2.loss_bbox: 1.0656, d3.loss_cls: 0.6961, d3.loss_bbox: 1.0500, d4.loss_cls: 0.6933, d4.loss_bbox: 1.0365, aux_task0.loss_heatmap: 0.8887, aux_task0.loss_bbox: 0.3372, aux_task1.loss_heatmap: 1.1749, aux_task1.loss_bbox: 0.3772, aux_task2.loss_heatmap: 1.3273, aux_task2.loss_bbox: 0.4098, aux_task3.loss_heatmap: 0.9206, aux_task3.loss_bbox: 0.3267, aux_task4.loss_heatmap: 0.7150, aux_task4.loss_bbox: 0.3379, aux_task5.loss_heatmap: 0.6968, aux_task5.loss_bbox: 0.3254, loss: 18.7756, grad_norm: 37.9505
2025-04-16 14:07:25,946 - mmdet - INFO - Epoch [3][150/1104]	lr: 6.228e-05, eta: 5:38:11, time: 1.006, data_time: 0.009, memory: 14036, loss_cls: 0.6771, loss_bbox: 1.0235, d0.loss_cls: 0.7805, d0.loss_bbox: 1.2866, d1.loss_cls: 0.7224, d1.loss_bbox: 1.1040, d2.loss_cls: 0.6983, d2.loss_bbox: 1.0477, d3.loss_cls: 0.6850, d3.loss_bbox: 1.0313, d4.loss_cls: 0.6823, d4.loss_bbox: 1.0223, aux_task0.loss_heatmap: 0.8666, aux_task0.loss_bbox: 0.3343, aux_task1.loss_heatmap: 1.1311, aux_task1.loss_bbox: 0.3739, aux_task2.loss_heatmap: 1.3222, aux_task2.loss_bbox: 0.4094, aux_task3.loss_heatmap: 0.9096, aux_task3.loss_bbox: 0.3298, aux_task4.loss_heatmap: 0.7039, aux_task4.loss_bbox: 0.3332, aux_task5.loss_heatmap: 0.6837, aux_task5.loss_bbox: 0.3297, loss: 18.4884, grad_norm: 36.2593
2025-04-16 14:08:16,523 - mmdet - INFO - Epoch [3][200/1104]	lr: 6.378e-05, eta: 5:37:13, time: 1.012, data_time: 0.009, memory: 14036, loss_cls: 0.6960, loss_bbox: 1.0361, d0.loss_cls: 0.7881, d0.loss_bbox: 1.3195, d1.loss_cls: 0.7355, d1.loss_bbox: 1.1275, d2.loss_cls: 0.7130, d2.loss_bbox: 1.0652, d3.loss_cls: 0.7005, d3.loss_bbox: 1.0493, d4.loss_cls: 0.6996, d4.loss_bbox: 1.0396, aux_task0.loss_heatmap: 0.8875, aux_task0.loss_bbox: 0.3420, aux_task1.loss_heatmap: 1.1334, aux_task1.loss_bbox: 0.3805, aux_task2.loss_heatmap: 1.2962, aux_task2.loss_bbox: 0.4177, aux_task3.loss_heatmap: 0.9440, aux_task3.loss_bbox: 0.3230, aux_task4.loss_heatmap: 0.7112, aux_task4.loss_bbox: 0.3335, aux_task5.loss_heatmap: 0.7055, aux_task5.loss_bbox: 0.3301, loss: 18.7745, grad_norm: 34.5667
2025-04-16 14:09:07,080 - mmdet - INFO - Epoch [3][250/1104]	lr: 6.530e-05, eta: 5:36:14, time: 1.011, data_time: 0.008, memory: 14036, loss_cls: 0.6843, loss_bbox: 1.0215, d0.loss_cls: 0.7745, d0.loss_bbox: 1.2937, d1.loss_cls: 0.7229, d1.loss_bbox: 1.1067, d2.loss_cls: 0.7024, d2.loss_bbox: 1.0461, d3.loss_cls: 0.6889, d3.loss_bbox: 1.0326, d4.loss_cls: 0.6888, d4.loss_bbox: 1.0228, aux_task0.loss_heatmap: 0.8939, aux_task0.loss_bbox: 0.3329, aux_task1.loss_heatmap: 1.1196, aux_task1.loss_bbox: 0.3801, aux_task2.loss_heatmap: 1.3174, aux_task2.loss_bbox: 0.4116, aux_task3.loss_heatmap: 0.8905, aux_task3.loss_bbox: 0.3216, aux_task4.loss_heatmap: 0.7294, aux_task4.loss_bbox: 0.3367, aux_task5.loss_heatmap: 0.6993, aux_task5.loss_bbox: 0.3275, loss: 18.5459, grad_norm: 33.5355
2025-04-16 14:09:57,854 - mmdet - INFO - Epoch [3][300/1104]	lr: 6.684e-05, eta: 5:35:18, time: 1.015, data_time: 0.010, memory: 14036, loss_cls: 0.6753, loss_bbox: 1.0157, d0.loss_cls: 0.7757, d0.loss_bbox: 1.2788, d1.loss_cls: 0.7252, d1.loss_bbox: 1.0941, d2.loss_cls: 0.6971, d2.loss_bbox: 1.0386, d3.loss_cls: 0.6836, d3.loss_bbox: 1.0257, d4.loss_cls: 0.6821, d4.loss_bbox: 1.0166, aux_task0.loss_heatmap: 0.8360, aux_task0.loss_bbox: 0.3244, aux_task1.loss_heatmap: 1.1370, aux_task1.loss_bbox: 0.3751, aux_task2.loss_heatmap: 1.2835, aux_task2.loss_bbox: 0.4111, aux_task3.loss_heatmap: 0.9412, aux_task3.loss_bbox: 0.3164, aux_task4.loss_heatmap: 0.7163, aux_task4.loss_bbox: 0.3251, aux_task5.loss_heatmap: 0.6978, aux_task5.loss_bbox: 0.3231, loss: 18.3952, grad_norm: 38.3400
2025-04-16 14:10:48,087 - mmdet - INFO - Epoch [3][350/1104]	lr: 6.841e-05, eta: 5:34:18, time: 1.005, data_time: 0.008, memory: 14036, loss_cls: 0.6824, loss_bbox: 1.0132, d0.loss_cls: 0.7787, d0.loss_bbox: 1.2769, d1.loss_cls: 0.7291, d1.loss_bbox: 1.0890, d2.loss_cls: 0.7051, d2.loss_bbox: 1.0324, d3.loss_cls: 0.6911, d3.loss_bbox: 1.0207, d4.loss_cls: 0.6895, d4.loss_bbox: 1.0129, aux_task0.loss_heatmap: 0.8618, aux_task0.loss_bbox: 0.3276, aux_task1.loss_heatmap: 1.1360, aux_task1.loss_bbox: 0.3769, aux_task2.loss_heatmap: 1.3178, aux_task2.loss_bbox: 0.4152, aux_task3.loss_heatmap: 0.9150, aux_task3.loss_bbox: 0.3169, aux_task4.loss_heatmap: 0.7175, aux_task4.loss_bbox: 0.3345, aux_task5.loss_heatmap: 0.6758, aux_task5.loss_bbox: 0.3196, loss: 18.4357, grad_norm: 37.1199
2025-04-16 14:11:38,613 - mmdet - INFO - Epoch [3][400/1104]	lr: 7.000e-05, eta: 5:33:20, time: 1.011, data_time: 0.010, memory: 14036, loss_cls: 0.6723, loss_bbox: 1.0089, d0.loss_cls: 0.7658, d0.loss_bbox: 1.2640, d1.loss_cls: 0.7171, d1.loss_bbox: 1.0871, d2.loss_cls: 0.6917, d2.loss_bbox: 1.0295, d3.loss_cls: 0.6788, d3.loss_bbox: 1.0176, d4.loss_cls: 0.6780, d4.loss_bbox: 1.0096, aux_task0.loss_heatmap: 0.8489, aux_task0.loss_bbox: 0.3265, aux_task1.loss_heatmap: 1.1108, aux_task1.loss_bbox: 0.3727, aux_task2.loss_heatmap: 1.3022, aux_task2.loss_bbox: 0.3954, aux_task3.loss_heatmap: 0.8828, aux_task3.loss_bbox: 0.3202, aux_task4.loss_heatmap: 0.6860, aux_task4.loss_bbox: 0.3339, aux_task5.loss_heatmap: 0.6997, aux_task5.loss_bbox: 0.3214, loss: 18.2211, grad_norm: 36.3693
2025-04-16 14:12:29,054 - mmdet - INFO - Epoch [3][450/1104]	lr: 7.161e-05, eta: 5:32:22, time: 1.009, data_time: 0.008, memory: 14036, loss_cls: 0.6655, loss_bbox: 1.0014, d0.loss_cls: 0.7584, d0.loss_bbox: 1.2535, d1.loss_cls: 0.7161, d1.loss_bbox: 1.0786, d2.loss_cls: 0.6923, d2.loss_bbox: 1.0217, d3.loss_cls: 0.6753, d3.loss_bbox: 1.0094, d4.loss_cls: 0.6736, d4.loss_bbox: 1.0006, aux_task0.loss_heatmap: 0.8546, aux_task0.loss_bbox: 0.3287, aux_task1.loss_heatmap: 1.1152, aux_task1.loss_bbox: 0.3748, aux_task2.loss_heatmap: 1.2957, aux_task2.loss_bbox: 0.4067, aux_task3.loss_heatmap: 0.8838, aux_task3.loss_bbox: 0.3088, aux_task4.loss_heatmap: 0.7241, aux_task4.loss_bbox: 0.3315, aux_task5.loss_heatmap: 0.6806, aux_task5.loss_bbox: 0.3245, loss: 18.1755, grad_norm: 35.4008
2025-04-16 14:13:19,694 - mmdet - INFO - Epoch [3][500/1104]	lr: 7.325e-05, eta: 5:31:26, time: 1.013, data_time: 0.007, memory: 14036, loss_cls: 0.6604, loss_bbox: 0.9977, d0.loss_cls: 0.7514, d0.loss_bbox: 1.2496, d1.loss_cls: 0.7076, d1.loss_bbox: 1.0733, d2.loss_cls: 0.6836, d2.loss_bbox: 1.0182, d3.loss_cls: 0.6684, d3.loss_bbox: 1.0047, d4.loss_cls: 0.6648, d4.loss_bbox: 0.9977, aux_task0.loss_heatmap: 0.8633, aux_task0.loss_bbox: 0.3237, aux_task1.loss_heatmap: 1.1158, aux_task1.loss_bbox: 0.3726, aux_task2.loss_heatmap: 1.2370, aux_task2.loss_bbox: 0.3971, aux_task3.loss_heatmap: 0.8815, aux_task3.loss_bbox: 0.3164, aux_task4.loss_heatmap: 0.6897, aux_task4.loss_bbox: 0.3303, aux_task5.loss_heatmap: 0.6599, aux_task5.loss_bbox: 0.3264, loss: 17.9911, grad_norm: 38.5204
2025-04-16 14:14:10,275 - mmdet - INFO - Epoch [3][550/1104]	lr: 7.490e-05, eta: 5:30:29, time: 1.012, data_time: 0.007, memory: 14036, loss_cls: 0.6464, loss_bbox: 0.9962, d0.loss_cls: 0.7389, d0.loss_bbox: 1.2503, d1.loss_cls: 0.6961, d1.loss_bbox: 1.0710, d2.loss_cls: 0.6720, d2.loss_bbox: 1.0168, d3.loss_cls: 0.6552, d3.loss_bbox: 1.0055, d4.loss_cls: 0.6508, d4.loss_bbox: 0.9990, aux_task0.loss_heatmap: 0.8620, aux_task0.loss_bbox: 0.3282, aux_task1.loss_heatmap: 1.0822, aux_task1.loss_bbox: 0.3721, aux_task2.loss_heatmap: 1.2892, aux_task2.loss_bbox: 0.4034, aux_task3.loss_heatmap: 0.8352, aux_task3.loss_bbox: 0.3171, aux_task4.loss_heatmap: 0.6832, aux_task4.loss_bbox: 0.3328, aux_task5.loss_heatmap: 0.6417, aux_task5.loss_bbox: 0.3233, loss: 17.8686, grad_norm: 34.4054
2025-04-16 14:15:00,607 - mmdet - INFO - Epoch [3][600/1104]	lr: 7.657e-05, eta: 5:29:31, time: 1.007, data_time: 0.009, memory: 14036, loss_cls: 0.6480, loss_bbox: 0.9922, d0.loss_cls: 0.7381, d0.loss_bbox: 1.2360, d1.loss_cls: 0.6962, d1.loss_bbox: 1.0649, d2.loss_cls: 0.6727, d2.loss_bbox: 1.0123, d3.loss_cls: 0.6567, d3.loss_bbox: 0.9999, d4.loss_cls: 0.6526, d4.loss_bbox: 0.9941, aux_task0.loss_heatmap: 0.8260, aux_task0.loss_bbox: 0.3216, aux_task1.loss_heatmap: 1.0995, aux_task1.loss_bbox: 0.3702, aux_task2.loss_heatmap: 1.2428, aux_task2.loss_bbox: 0.4090, aux_task3.loss_heatmap: 0.8950, aux_task3.loss_bbox: 0.3134, aux_task4.loss_heatmap: 0.6599, aux_task4.loss_bbox: 0.3262, aux_task5.loss_heatmap: 0.6641, aux_task5.loss_bbox: 0.3207, loss: 17.8122, grad_norm: 38.2542
2025-04-16 14:15:50,927 - mmdet - INFO - Epoch [3][650/1104]	lr: 7.826e-05, eta: 5:28:33, time: 1.006, data_time: 0.007, memory: 14036, loss_cls: 0.6628, loss_bbox: 0.9982, d0.loss_cls: 0.7536, d0.loss_bbox: 1.2328, d1.loss_cls: 0.7138, d1.loss_bbox: 1.0638, d2.loss_cls: 0.6875, d2.loss_bbox: 1.0158, d3.loss_cls: 0.6712, d3.loss_bbox: 1.0050, d4.loss_cls: 0.6688, d4.loss_bbox: 0.9985, aux_task0.loss_heatmap: 0.8298, aux_task0.loss_bbox: 0.3292, aux_task1.loss_heatmap: 1.0582, aux_task1.loss_bbox: 0.3704, aux_task2.loss_heatmap: 1.3041, aux_task2.loss_bbox: 0.4096, aux_task3.loss_heatmap: 0.9557, aux_task3.loss_bbox: 0.3166, aux_task4.loss_heatmap: 0.7224, aux_task4.loss_bbox: 0.3308, aux_task5.loss_heatmap: 0.6723, aux_task5.loss_bbox: 0.3208, loss: 18.0918, grad_norm: 35.0149
2025-04-16 14:16:41,700 - mmdet - INFO - Epoch [3][700/1104]	lr: 7.997e-05, eta: 5:27:39, time: 1.015, data_time: 0.007, memory: 14036, loss_cls: 0.6464, loss_bbox: 0.9776, d0.loss_cls: 0.7327, d0.loss_bbox: 1.2199, d1.loss_cls: 0.6929, d1.loss_bbox: 1.0444, d2.loss_cls: 0.6709, d2.loss_bbox: 0.9959, d3.loss_cls: 0.6527, d3.loss_bbox: 0.9857, d4.loss_cls: 0.6513, d4.loss_bbox: 0.9784, aux_task0.loss_heatmap: 0.8399, aux_task0.loss_bbox: 0.3274, aux_task1.loss_heatmap: 1.0719, aux_task1.loss_bbox: 0.3712, aux_task2.loss_heatmap: 1.2570, aux_task2.loss_bbox: 0.4017, aux_task3.loss_heatmap: 0.8711, aux_task3.loss_bbox: 0.3153, aux_task4.loss_heatmap: 0.6656, aux_task4.loss_bbox: 0.3271, aux_task5.loss_heatmap: 0.6658, aux_task5.loss_bbox: 0.3194, loss: 17.6823, grad_norm: 35.1013
2025-04-16 14:17:32,229 - mmdet - INFO - Epoch [3][750/1104]	lr: 8.170e-05, eta: 5:26:43, time: 1.011, data_time: 0.007, memory: 14036, loss_cls: 0.6446, loss_bbox: 0.9788, d0.loss_cls: 0.7262, d0.loss_bbox: 1.2189, d1.loss_cls: 0.6951, d1.loss_bbox: 1.0480, d2.loss_cls: 0.6713, d2.loss_bbox: 0.9997, d3.loss_cls: 0.6521, d3.loss_bbox: 0.9888, d4.loss_cls: 0.6501, d4.loss_bbox: 0.9810, aux_task0.loss_heatmap: 0.8261, aux_task0.loss_bbox: 0.3210, aux_task1.loss_heatmap: 1.0748, aux_task1.loss_bbox: 0.3676, aux_task2.loss_heatmap: 1.2417, aux_task2.loss_bbox: 0.4028, aux_task3.loss_heatmap: 0.8709, aux_task3.loss_bbox: 0.3062, aux_task4.loss_heatmap: 0.6777, aux_task4.loss_bbox: 0.3311, aux_task5.loss_heatmap: 0.6741, aux_task5.loss_bbox: 0.3212, loss: 17.6698, grad_norm: 33.1773
2025-04-16 14:18:22,716 - mmdet - INFO - Epoch [3][800/1104]	lr: 8.345e-05, eta: 5:25:46, time: 1.010, data_time: 0.008, memory: 14036, loss_cls: 0.6373, loss_bbox: 0.9753, d0.loss_cls: 0.7242, d0.loss_bbox: 1.1973, d1.loss_cls: 0.6847, d1.loss_bbox: 1.0365, d2.loss_cls: 0.6634, d2.loss_bbox: 0.9897, d3.loss_cls: 0.6460, d3.loss_bbox: 0.9807, d4.loss_cls: 0.6410, d4.loss_bbox: 0.9753, aux_task0.loss_heatmap: 0.8020, aux_task0.loss_bbox: 0.3180, aux_task1.loss_heatmap: 1.0818, aux_task1.loss_bbox: 0.3666, aux_task2.loss_heatmap: 1.2336, aux_task2.loss_bbox: 0.3967, aux_task3.loss_heatmap: 0.8376, aux_task3.loss_bbox: 0.3174, aux_task4.loss_heatmap: 0.6804, aux_task4.loss_bbox: 0.3228, aux_task5.loss_heatmap: 0.6480, aux_task5.loss_bbox: 0.3154, loss: 17.4717, grad_norm: 35.0520
2025-04-16 14:19:13,026 - mmdet - INFO - Epoch [3][850/1104]	lr: 8.521e-05, eta: 5:24:49, time: 1.006, data_time: 0.010, memory: 14036, loss_cls: 0.6359, loss_bbox: 0.9752, d0.loss_cls: 0.7251, d0.loss_bbox: 1.2023, d1.loss_cls: 0.6911, d1.loss_bbox: 1.0346, d2.loss_cls: 0.6642, d2.loss_bbox: 0.9931, d3.loss_cls: 0.6453, d3.loss_bbox: 0.9824, d4.loss_cls: 0.6433, d4.loss_bbox: 0.9751, aux_task0.loss_heatmap: 0.8094, aux_task0.loss_bbox: 0.3173, aux_task1.loss_heatmap: 1.0758, aux_task1.loss_bbox: 0.3696, aux_task2.loss_heatmap: 1.2077, aux_task2.loss_bbox: 0.4008, aux_task3.loss_heatmap: 0.8640, aux_task3.loss_bbox: 0.3153, aux_task4.loss_heatmap: 0.6676, aux_task4.loss_bbox: 0.3224, aux_task5.loss_heatmap: 0.6421, aux_task5.loss_bbox: 0.3161, loss: 17.4757, grad_norm: 37.7281
2025-04-16 14:20:03,593 - mmdet - INFO - Epoch [3][900/1104]	lr: 8.699e-05, eta: 5:23:54, time: 1.011, data_time: 0.007, memory: 14036, loss_cls: 0.6428, loss_bbox: 0.9764, d0.loss_cls: 0.7298, d0.loss_bbox: 1.1988, d1.loss_cls: 0.6968, d1.loss_bbox: 1.0375, d2.loss_cls: 0.6717, d2.loss_bbox: 0.9978, d3.loss_cls: 0.6530, d3.loss_bbox: 0.9875, d4.loss_cls: 0.6500, d4.loss_bbox: 0.9792, aux_task0.loss_heatmap: 0.8275, aux_task0.loss_bbox: 0.3210, aux_task1.loss_heatmap: 1.0903, aux_task1.loss_bbox: 0.3635, aux_task2.loss_heatmap: 1.2199, aux_task2.loss_bbox: 0.4028, aux_task3.loss_heatmap: 0.8728, aux_task3.loss_bbox: 0.3171, aux_task4.loss_heatmap: 0.6941, aux_task4.loss_bbox: 0.3193, aux_task5.loss_heatmap: 0.6356, aux_task5.loss_bbox: 0.3176, loss: 17.6028, grad_norm: 33.3500
2025-04-16 14:20:53,852 - mmdet - INFO - Epoch [3][950/1104]	lr: 8.879e-05, eta: 5:22:57, time: 1.005, data_time: 0.007, memory: 14036, loss_cls: 0.6297, loss_bbox: 0.9737, d0.loss_cls: 0.7130, d0.loss_bbox: 1.1989, d1.loss_cls: 0.6809, d1.loss_bbox: 1.0313, d2.loss_cls: 0.6569, d2.loss_bbox: 0.9910, d3.loss_cls: 0.6376, d3.loss_bbox: 0.9816, d4.loss_cls: 0.6351, d4.loss_bbox: 0.9745, aux_task0.loss_heatmap: 0.8346, aux_task0.loss_bbox: 0.3176, aux_task1.loss_heatmap: 1.0969, aux_task1.loss_bbox: 0.3690, aux_task2.loss_heatmap: 1.1948, aux_task2.loss_bbox: 0.3958, aux_task3.loss_heatmap: 0.8122, aux_task3.loss_bbox: 0.3138, aux_task4.loss_heatmap: 0.6627, aux_task4.loss_bbox: 0.3240, aux_task5.loss_heatmap: 0.6159, aux_task5.loss_bbox: 0.3183, loss: 17.3598, grad_norm: 35.8010
2025-04-16 14:21:44,362 - mmdet - INFO - Epoch [3][1000/1104]	lr: 9.060e-05, eta: 5:22:02, time: 1.010, data_time: 0.008, memory: 14036, loss_cls: 0.6203, loss_bbox: 0.9554, d0.loss_cls: 0.7081, d0.loss_bbox: 1.1760, d1.loss_cls: 0.6794, d1.loss_bbox: 1.0150, d2.loss_cls: 0.6518, d2.loss_bbox: 0.9738, d3.loss_cls: 0.6299, d3.loss_bbox: 0.9639, d4.loss_cls: 0.6275, d4.loss_bbox: 0.9563, aux_task0.loss_heatmap: 0.8079, aux_task0.loss_bbox: 0.3181, aux_task1.loss_heatmap: 1.0782, aux_task1.loss_bbox: 0.3640, aux_task2.loss_heatmap: 1.1877, aux_task2.loss_bbox: 0.3943, aux_task3.loss_heatmap: 0.7904, aux_task3.loss_bbox: 0.3095, aux_task4.loss_heatmap: 0.6484, aux_task4.loss_bbox: 0.3217, aux_task5.loss_heatmap: 0.6193, aux_task5.loss_bbox: 0.3157, loss: 17.1126, grad_norm: 32.2207
2025-04-16 14:22:35,006 - mmdet - INFO - Epoch [3][1050/1104]	lr: 9.242e-05, eta: 5:21:07, time: 1.013, data_time: 0.008, memory: 14036, loss_cls: 0.6267, loss_bbox: 0.9811, d0.loss_cls: 0.7159, d0.loss_bbox: 1.1980, d1.loss_cls: 0.6841, d1.loss_bbox: 1.0354, d2.loss_cls: 0.6559, d2.loss_bbox: 0.9970, d3.loss_cls: 0.6363, d3.loss_bbox: 0.9865, d4.loss_cls: 0.6329, d4.loss_bbox: 0.9820, aux_task0.loss_heatmap: 0.8285, aux_task0.loss_bbox: 0.3220, aux_task1.loss_heatmap: 1.0747, aux_task1.loss_bbox: 0.3711, aux_task2.loss_heatmap: 1.1760, aux_task2.loss_bbox: 0.3882, aux_task3.loss_heatmap: 0.8664, aux_task3.loss_bbox: 0.3132, aux_task4.loss_heatmap: 0.6651, aux_task4.loss_bbox: 0.3234, aux_task5.loss_heatmap: 0.6328, aux_task5.loss_bbox: 0.3158, loss: 17.4092, grad_norm: 37.0228
2025-04-16 14:23:25,859 - mmdet - INFO - Epoch [3][1100/1104]	lr: 9.426e-05, eta: 5:20:14, time: 1.017, data_time: 0.009, memory: 14036, loss_cls: 0.6065, loss_bbox: 0.9641, d0.loss_cls: 0.6941, d0.loss_bbox: 1.1800, d1.loss_cls: 0.6655, d1.loss_bbox: 1.0201, d2.loss_cls: 0.6385, d2.loss_bbox: 0.9833, d3.loss_cls: 0.6174, d3.loss_bbox: 0.9745, d4.loss_cls: 0.6147, d4.loss_bbox: 0.9657, aux_task0.loss_heatmap: 0.7895, aux_task0.loss_bbox: 0.3157, aux_task1.loss_heatmap: 1.0515, aux_task1.loss_bbox: 0.3660, aux_task2.loss_heatmap: 1.1792, aux_task2.loss_bbox: 0.3967, aux_task3.loss_heatmap: 0.8470, aux_task3.loss_bbox: 0.3133, aux_task4.loss_heatmap: 0.6580, aux_task4.loss_bbox: 0.3262, aux_task5.loss_heatmap: 0.6125, aux_task5.loss_bbox: 0.3120, loss: 17.0921, grad_norm: 31.4782
2025-04-16 14:23:30,285 - mmdet - INFO - Saving checkpoint at 3 epochs
2025-04-16 14:34:23,690 - mmdet - INFO - Exp name: DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01.py
2025-04-16 14:34:23,690 - mmdet - INFO - Epoch(val) [3][3010]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.1292, pts_bbox_NuScenes/car_AP_dist_1.0: 0.3441, pts_bbox_NuScenes/car_AP_dist_2.0: 0.4847, pts_bbox_NuScenes/car_AP_dist_4.0: 0.5866, pts_bbox_NuScenes/car_trans_err: 0.5291, pts_bbox_NuScenes/car_scale_err: 0.1912, pts_bbox_NuScenes/car_orient_err: 1.5319, pts_bbox_NuScenes/car_vel_err: 1.2875, pts_bbox_NuScenes/car_attr_err: 0.4170, pts_bbox_NuScenes/mATE: 0.7003, pts_bbox_NuScenes/mASE: 0.3406, pts_bbox_NuScenes/mAOE: 1.5186, pts_bbox_NuScenes/mAVE: 1.1988, pts_bbox_NuScenes/mAAE: 0.4718, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.0204, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.0795, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.1237, pts_bbox_NuScenes/truck_trans_err: 0.8269, pts_bbox_NuScenes/truck_scale_err: 0.2933, pts_bbox_NuScenes/truck_orient_err: 1.5066, pts_bbox_NuScenes/truck_vel_err: 0.8688, pts_bbox_NuScenes/truck_attr_err: 0.3805, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0000, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.0010, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.0037, pts_bbox_NuScenes/construction_vehicle_trans_err: 0.8403, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.5224, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.6381, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1333, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.4018, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.0132, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.0767, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.1686, pts_bbox_NuScenes/bus_trans_err: 0.9357, pts_bbox_NuScenes/bus_scale_err: 0.2810, pts_bbox_NuScenes/bus_orient_err: 1.6983, pts_bbox_NuScenes/bus_vel_err: 2.7996, pts_bbox_NuScenes/bus_attr_err: 0.6937, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.0000, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.0014, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.0297, pts_bbox_NuScenes/trailer_trans_err: 1.0618, pts_bbox_NuScenes/trailer_scale_err: 0.2798, pts_bbox_NuScenes/trailer_orient_err: 1.6861, pts_bbox_NuScenes/trailer_vel_err: 0.6808, pts_bbox_NuScenes/trailer_attr_err: 0.3017, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.0198, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.1146, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.2118, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.2955, pts_bbox_NuScenes/barrier_trans_err: 0.8569, pts_bbox_NuScenes/barrier_scale_err: 0.3835, pts_bbox_NuScenes/barrier_orient_err: 0.9904, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.0013, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.0057, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.0087, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.0109, pts_bbox_NuScenes/motorcycle_trans_err: 0.4273, pts_bbox_NuScenes/motorcycle_scale_err: 0.3271, pts_bbox_NuScenes/motorcycle_orient_err: 1.7186, pts_bbox_NuScenes/motorcycle_vel_err: 1.9286, pts_bbox_NuScenes/motorcycle_attr_err: 0.5411, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.0000, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.0000, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.0000, pts_bbox_NuScenes/bicycle_trans_err: 0.5076, pts_bbox_NuScenes/bicycle_scale_err: 0.3664, pts_bbox_NuScenes/bicycle_orient_err: 1.4971, pts_bbox_NuScenes/bicycle_vel_err: 0.9533, pts_bbox_NuScenes/bicycle_attr_err: 0.2407, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.1365, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.3912, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.4692, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.5172, pts_bbox_NuScenes/pedestrian_trans_err: 0.5387, pts_bbox_NuScenes/pedestrian_scale_err: 0.3048, pts_bbox_NuScenes/pedestrian_orient_err: 1.4004, pts_bbox_NuScenes/pedestrian_vel_err: 0.9386, pts_bbox_NuScenes/pedestrian_attr_err: 0.7977, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.0802, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.1267, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.1499, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.2046, pts_bbox_NuScenes/traffic_cone_trans_err: 0.4786, pts_bbox_NuScenes/traffic_cone_scale_err: 0.4564, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.2088, pts_bbox_NuScenes/mAP: 0.1202
2025-04-16 14:35:19,882 - mmdet - INFO - Epoch [4][50/1104]	lr: 9.627e-05, eta: 5:19:19, time: 1.105, data_time: 0.090, memory: 14036, loss_cls: 0.6167, loss_bbox: 0.9584, d0.loss_cls: 0.7069, d0.loss_bbox: 1.1695, d1.loss_cls: 0.6752, d1.loss_bbox: 1.0141, d2.loss_cls: 0.6462, d2.loss_bbox: 0.9764, d3.loss_cls: 0.6263, d3.loss_bbox: 0.9656, d4.loss_cls: 0.6220, d4.loss_bbox: 0.9593, aux_task0.loss_heatmap: 0.8002, aux_task0.loss_bbox: 0.3159, aux_task1.loss_heatmap: 1.0550, aux_task1.loss_bbox: 0.3614, aux_task2.loss_heatmap: 1.2200, aux_task2.loss_bbox: 0.4005, aux_task3.loss_heatmap: 0.8257, aux_task3.loss_bbox: 0.3019, aux_task4.loss_heatmap: 0.6650, aux_task4.loss_bbox: 0.3244, aux_task5.loss_heatmap: 0.5984, aux_task5.loss_bbox: 0.3114, loss: 17.1162, grad_norm: 33.1644
2025-04-16 14:36:10,858 - mmdet - INFO - Epoch [4][100/1104]	lr: 9.813e-05, eta: 5:18:27, time: 1.020, data_time: 0.010, memory: 14036, loss_cls: 0.6117, loss_bbox: 0.9595, d0.loss_cls: 0.6962, d0.loss_bbox: 1.1677, d1.loss_cls: 0.6693, d1.loss_bbox: 1.0089, d2.loss_cls: 0.6421, d2.loss_bbox: 0.9721, d3.loss_cls: 0.6197, d3.loss_bbox: 0.9635, d4.loss_cls: 0.6183, d4.loss_bbox: 0.9591, aux_task0.loss_heatmap: 0.7874, aux_task0.loss_bbox: 0.3189, aux_task1.loss_heatmap: 1.0654, aux_task1.loss_bbox: 0.3638, aux_task2.loss_heatmap: 1.1570, aux_task2.loss_bbox: 0.3884, aux_task3.loss_heatmap: 0.8544, aux_task3.loss_bbox: 0.3136, aux_task4.loss_heatmap: 0.6588, aux_task4.loss_bbox: 0.3268, aux_task5.loss_heatmap: 0.5972, aux_task5.loss_bbox: 0.3144, loss: 17.0340, grad_norm: 32.8289
2025-04-16 14:37:01,082 - mmdet - INFO - Epoch [4][150/1104]	lr: 1.000e-04, eta: 5:17:30, time: 1.004, data_time: 0.008, memory: 14036, loss_cls: 0.6025, loss_bbox: 0.9499, d0.loss_cls: 0.6896, d0.loss_bbox: 1.1520, d1.loss_cls: 0.6619, d1.loss_bbox: 1.0029, d2.loss_cls: 0.6390, d2.loss_bbox: 0.9657, d3.loss_cls: 0.6144, d3.loss_bbox: 0.9572, d4.loss_cls: 0.6098, d4.loss_bbox: 0.9513, aux_task0.loss_heatmap: 0.7651, aux_task0.loss_bbox: 0.3103, aux_task1.loss_heatmap: 1.0415, aux_task1.loss_bbox: 0.3620, aux_task2.loss_heatmap: 1.1344, aux_task2.loss_bbox: 0.3886, aux_task3.loss_heatmap: 0.8226, aux_task3.loss_bbox: 0.3149, aux_task4.loss_heatmap: 0.6389, aux_task4.loss_bbox: 0.3213, aux_task5.loss_heatmap: 0.5918, aux_task5.loss_bbox: 0.3142, loss: 16.8017, grad_norm: 34.0347
2025-04-16 14:37:52,986 - mmdet - INFO - Epoch [4][200/1104]	lr: 1.019e-04, eta: 5:16:43, time: 1.038, data_time: 0.008, memory: 14036, loss_cls: 0.5996, loss_bbox: 0.9573, d0.loss_cls: 0.6894, d0.loss_bbox: 1.1570, d1.loss_cls: 0.6628, d1.loss_bbox: 1.0073, d2.loss_cls: 0.6349, d2.loss_bbox: 0.9706, d3.loss_cls: 0.6110, d3.loss_bbox: 0.9636, d4.loss_cls: 0.6075, d4.loss_bbox: 0.9574, aux_task0.loss_heatmap: 0.7934, aux_task0.loss_bbox: 0.3173, aux_task1.loss_heatmap: 1.0346, aux_task1.loss_bbox: 0.3615, aux_task2.loss_heatmap: 1.1392, aux_task2.loss_bbox: 0.3850, aux_task3.loss_heatmap: 0.8188, aux_task3.loss_bbox: 0.3100, aux_task4.loss_heatmap: 0.6231, aux_task4.loss_bbox: 0.3199, aux_task5.loss_heatmap: 0.6190, aux_task5.loss_bbox: 0.3173, loss: 16.8576, grad_norm: 35.9850
2025-04-16 14:38:43,669 - mmdet - INFO - Epoch [4][250/1104]	lr: 1.038e-04, eta: 5:15:49, time: 1.014, data_time: 0.009, memory: 14036, loss_cls: 0.6053, loss_bbox: 0.9488, d0.loss_cls: 0.6893, d0.loss_bbox: 1.1493, d1.loss_cls: 0.6655, d1.loss_bbox: 0.9994, d2.loss_cls: 0.6368, d2.loss_bbox: 0.9639, d3.loss_cls: 0.6169, d3.loss_bbox: 0.9551, d4.loss_cls: 0.6122, d4.loss_bbox: 0.9494, aux_task0.loss_heatmap: 0.7649, aux_task0.loss_bbox: 0.3111, aux_task1.loss_heatmap: 1.0326, aux_task1.loss_bbox: 0.3619, aux_task2.loss_heatmap: 1.1339, aux_task2.loss_bbox: 0.3842, aux_task3.loss_heatmap: 0.8304, aux_task3.loss_bbox: 0.3116, aux_task4.loss_heatmap: 0.6425, aux_task4.loss_bbox: 0.3238, aux_task5.loss_heatmap: 0.6165, aux_task5.loss_bbox: 0.3130, loss: 16.8185, grad_norm: 36.9907
2025-04-16 14:39:34,330 - mmdet - INFO - Epoch [4][300/1104]	lr: 1.057e-04, eta: 5:14:56, time: 1.013, data_time: 0.008, memory: 14036, loss_cls: 0.5912, loss_bbox: 0.9430, d0.loss_cls: 0.6792, d0.loss_bbox: 1.1460, d1.loss_cls: 0.6549, d1.loss_bbox: 0.9977, d2.loss_cls: 0.6273, d2.loss_bbox: 0.9586, d3.loss_cls: 0.6031, d3.loss_bbox: 0.9512, d4.loss_cls: 0.5965, d4.loss_bbox: 0.9452, aux_task0.loss_heatmap: 0.7770, aux_task0.loss_bbox: 0.3101, aux_task1.loss_heatmap: 1.0323, aux_task1.loss_bbox: 0.3579, aux_task2.loss_heatmap: 1.1400, aux_task2.loss_bbox: 0.3988, aux_task3.loss_heatmap: 0.7919, aux_task3.loss_bbox: 0.3063, aux_task4.loss_heatmap: 0.6433, aux_task4.loss_bbox: 0.3132, aux_task5.loss_heatmap: 0.5828, aux_task5.loss_bbox: 0.3157, loss: 16.6635, grad_norm: 38.6101
2025-04-16 14:40:25,103 - mmdet - INFO - Epoch [4][350/1104]	lr: 1.076e-04, eta: 5:14:03, time: 1.015, data_time: 0.008, memory: 14036, loss_cls: 0.6064, loss_bbox: 0.9495, d0.loss_cls: 0.6870, d0.loss_bbox: 1.1471, d1.loss_cls: 0.6635, d1.loss_bbox: 1.0096, d2.loss_cls: 0.6403, d2.loss_bbox: 0.9712, d3.loss_cls: 0.6171, d3.loss_bbox: 0.9591, d4.loss_cls: 0.6111, d4.loss_bbox: 0.9518, aux_task0.loss_heatmap: 0.7770, aux_task0.loss_bbox: 0.3185, aux_task1.loss_heatmap: 1.0587, aux_task1.loss_bbox: 0.3623, aux_task2.loss_heatmap: 1.1495, aux_task2.loss_bbox: 0.3957, aux_task3.loss_heatmap: 0.8141, aux_task3.loss_bbox: 0.3123, aux_task4.loss_heatmap: 0.6656, aux_task4.loss_bbox: 0.3241, aux_task5.loss_heatmap: 0.5844, aux_task5.loss_bbox: 0.3135, loss: 16.8891, grad_norm: 32.1429
2025-04-16 14:41:15,906 - mmdet - INFO - Epoch [4][400/1104]	lr: 1.096e-04, eta: 5:13:10, time: 1.016, data_time: 0.009, memory: 14036, loss_cls: 0.5987, loss_bbox: 0.9383, d0.loss_cls: 0.6862, d0.loss_bbox: 1.1371, d1.loss_cls: 0.6622, d1.loss_bbox: 0.9919, d2.loss_cls: 0.6337, d2.loss_bbox: 0.9586, d3.loss_cls: 0.6112, d3.loss_bbox: 0.9464, d4.loss_cls: 0.6060, d4.loss_bbox: 0.9402, aux_task0.loss_heatmap: 0.7804, aux_task0.loss_bbox: 0.3104, aux_task1.loss_heatmap: 1.0233, aux_task1.loss_bbox: 0.3595, aux_task2.loss_heatmap: 1.1505, aux_task2.loss_bbox: 0.3829, aux_task3.loss_heatmap: 0.7982, aux_task3.loss_bbox: 0.3116, aux_task4.loss_heatmap: 0.6188, aux_task4.loss_bbox: 0.3215, aux_task5.loss_heatmap: 0.6016, aux_task5.loss_bbox: 0.3129, loss: 16.6822, grad_norm: 37.2073
2025-04-16 14:42:06,722 - mmdet - INFO - Epoch [4][450/1104]	lr: 1.115e-04, eta: 5:12:17, time: 1.016, data_time: 0.008, memory: 14036, loss_cls: 0.5853, loss_bbox: 0.9350, d0.loss_cls: 0.6727, d0.loss_bbox: 1.1214, d1.loss_cls: 0.6519, d1.loss_bbox: 0.9795, d2.loss_cls: 0.6226, d2.loss_bbox: 0.9499, d3.loss_cls: 0.6008, d3.loss_bbox: 0.9424, d4.loss_cls: 0.5947, d4.loss_bbox: 0.9357, aux_task0.loss_heatmap: 0.7804, aux_task0.loss_bbox: 0.3095, aux_task1.loss_heatmap: 1.0132, aux_task1.loss_bbox: 0.3588, aux_task2.loss_heatmap: 1.1515, aux_task2.loss_bbox: 0.3800, aux_task3.loss_heatmap: 0.7659, aux_task3.loss_bbox: 0.3028, aux_task4.loss_heatmap: 0.6666, aux_task4.loss_bbox: 0.3196, aux_task5.loss_heatmap: 0.5841, aux_task5.loss_bbox: 0.3121, loss: 16.5366, grad_norm: 32.9097
2025-04-16 14:42:57,010 - mmdet - INFO - Epoch [4][500/1104]	lr: 1.135e-04, eta: 5:11:22, time: 1.006, data_time: 0.008, memory: 14036, loss_cls: 0.5796, loss_bbox: 0.9361, d0.loss_cls: 0.6699, d0.loss_bbox: 1.1326, d1.loss_cls: 0.6498, d1.loss_bbox: 0.9828, d2.loss_cls: 0.6147, d2.loss_bbox: 0.9525, d3.loss_cls: 0.5899, d3.loss_bbox: 0.9473, d4.loss_cls: 0.5872, d4.loss_bbox: 0.9392, aux_task0.loss_heatmap: 0.7557, aux_task0.loss_bbox: 0.3100, aux_task1.loss_heatmap: 1.0212, aux_task1.loss_bbox: 0.3532, aux_task2.loss_heatmap: 1.0930, aux_task2.loss_bbox: 0.3802, aux_task3.loss_heatmap: 0.7905, aux_task3.loss_bbox: 0.3072, aux_task4.loss_heatmap: 0.6293, aux_task4.loss_bbox: 0.3206, aux_task5.loss_heatmap: 0.5846, aux_task5.loss_bbox: 0.3150, loss: 16.4419, grad_norm: 37.0069
2025-04-16 14:43:47,900 - mmdet - INFO - Epoch [4][550/1104]	lr: 1.154e-04, eta: 5:10:29, time: 1.018, data_time: 0.010, memory: 14036, loss_cls: 0.5752, loss_bbox: 0.9364, d0.loss_cls: 0.6628, d0.loss_bbox: 1.1257, d1.loss_cls: 0.6404, d1.loss_bbox: 0.9840, d2.loss_cls: 0.6074, d2.loss_bbox: 0.9524, d3.loss_cls: 0.5847, d3.loss_bbox: 0.9450, d4.loss_cls: 0.5792, d4.loss_bbox: 0.9382, aux_task0.loss_heatmap: 0.7616, aux_task0.loss_bbox: 0.3112, aux_task1.loss_heatmap: 0.9903, aux_task1.loss_bbox: 0.3498, aux_task2.loss_heatmap: 1.1295, aux_task2.loss_bbox: 0.3865, aux_task3.loss_heatmap: 0.7748, aux_task3.loss_bbox: 0.3077, aux_task4.loss_heatmap: 0.6181, aux_task4.loss_bbox: 0.3207, aux_task5.loss_heatmap: 0.5945, aux_task5.loss_bbox: 0.3112, loss: 16.3875, grad_norm: 35.8580
2025-04-16 14:44:38,798 - mmdet - INFO - Epoch [4][600/1104]	lr: 1.174e-04, eta: 5:09:37, time: 1.018, data_time: 0.008, memory: 14036, loss_cls: 0.5792, loss_bbox: 0.9243, d0.loss_cls: 0.6605, d0.loss_bbox: 1.1057, d1.loss_cls: 0.6396, d1.loss_bbox: 0.9730, d2.loss_cls: 0.6110, d2.loss_bbox: 0.9425, d3.loss_cls: 0.5909, d3.loss_bbox: 0.9336, d4.loss_cls: 0.5843, d4.loss_bbox: 0.9264, aux_task0.loss_heatmap: 0.7530, aux_task0.loss_bbox: 0.3056, aux_task1.loss_heatmap: 1.0220, aux_task1.loss_bbox: 0.3584, aux_task2.loss_heatmap: 1.1035, aux_task2.loss_bbox: 0.3925, aux_task3.loss_heatmap: 0.8252, aux_task3.loss_bbox: 0.3113, aux_task4.loss_heatmap: 0.5984, aux_task4.loss_bbox: 0.3124, aux_task5.loss_heatmap: 0.6038, aux_task5.loss_bbox: 0.3099, loss: 16.3668, grad_norm: 36.3731
2025-04-16 14:45:29,602 - mmdet - INFO - Epoch [4][650/1104]	lr: 1.194e-04, eta: 5:08:45, time: 1.016, data_time: 0.008, memory: 14036, loss_cls: 0.5883, loss_bbox: 0.9423, d0.loss_cls: 0.6673, d0.loss_bbox: 1.1206, d1.loss_cls: 0.6524, d1.loss_bbox: 0.9906, d2.loss_cls: 0.6238, d2.loss_bbox: 0.9554, d3.loss_cls: 0.5990, d3.loss_bbox: 0.9488, d4.loss_cls: 0.5935, d4.loss_bbox: 0.9437, aux_task0.loss_heatmap: 0.7643, aux_task0.loss_bbox: 0.3136, aux_task1.loss_heatmap: 0.9793, aux_task1.loss_bbox: 0.3562, aux_task2.loss_heatmap: 1.1648, aux_task2.loss_bbox: 0.3902, aux_task3.loss_heatmap: 0.8112, aux_task3.loss_bbox: 0.3088, aux_task4.loss_heatmap: 0.6527, aux_task4.loss_bbox: 0.3179, aux_task5.loss_heatmap: 0.5975, aux_task5.loss_bbox: 0.3131, loss: 16.5951, grad_norm: 34.8649
2025-04-16 14:46:20,095 - mmdet - INFO - Epoch [4][700/1104]	lr: 1.213e-04, eta: 5:07:51, time: 1.010, data_time: 0.008, memory: 14036, loss_cls: 0.5842, loss_bbox: 0.9363, d0.loss_cls: 0.6673, d0.loss_bbox: 1.1111, d1.loss_cls: 0.6571, d1.loss_bbox: 0.9833, d2.loss_cls: 0.6239, d2.loss_bbox: 0.9505, d3.loss_cls: 0.5982, d3.loss_bbox: 0.9442, d4.loss_cls: 0.5925, d4.loss_bbox: 0.9382, aux_task0.loss_heatmap: 0.7579, aux_task0.loss_bbox: 0.3078, aux_task1.loss_heatmap: 0.9932, aux_task1.loss_bbox: 0.3559, aux_task2.loss_heatmap: 1.0842, aux_task2.loss_bbox: 0.3844, aux_task3.loss_heatmap: 0.7901, aux_task3.loss_bbox: 0.3072, aux_task4.loss_heatmap: 0.6065, aux_task4.loss_bbox: 0.3174, aux_task5.loss_heatmap: 0.5904, aux_task5.loss_bbox: 0.3130, loss: 16.3948, grad_norm: 31.2689
2025-04-16 14:47:10,311 - mmdet - INFO - Epoch [4][750/1104]	lr: 1.233e-04, eta: 5:06:55, time: 1.004, data_time: 0.008, memory: 14036, loss_cls: 0.5777, loss_bbox: 0.9223, d0.loss_cls: 0.6600, d0.loss_bbox: 1.0998, d1.loss_cls: 0.6479, d1.loss_bbox: 0.9652, d2.loss_cls: 0.6174, d2.loss_bbox: 0.9338, d3.loss_cls: 0.5909, d3.loss_bbox: 0.9296, d4.loss_cls: 0.5853, d4.loss_bbox: 0.9232, aux_task0.loss_heatmap: 0.7540, aux_task0.loss_bbox: 0.3051, aux_task1.loss_heatmap: 1.0078, aux_task1.loss_bbox: 0.3530, aux_task2.loss_heatmap: 1.0915, aux_task2.loss_bbox: 0.3803, aux_task3.loss_heatmap: 0.8107, aux_task3.loss_bbox: 0.3074, aux_task4.loss_heatmap: 0.6177, aux_task4.loss_bbox: 0.3191, aux_task5.loss_heatmap: 0.5808, aux_task5.loss_bbox: 0.3063, loss: 16.2871, grad_norm: 36.0825
2025-04-16 14:48:00,711 - mmdet - INFO - Epoch [4][800/1104]	lr: 1.253e-04, eta: 5:06:01, time: 1.008, data_time: 0.008, memory: 14036, loss_cls: 0.5671, loss_bbox: 0.9183, d0.loss_cls: 0.6546, d0.loss_bbox: 1.0954, d1.loss_cls: 0.6362, d1.loss_bbox: 0.9647, d2.loss_cls: 0.6091, d2.loss_bbox: 0.9315, d3.loss_cls: 0.5822, d3.loss_bbox: 0.9235, d4.loss_cls: 0.5753, d4.loss_bbox: 0.9184, aux_task0.loss_heatmap: 0.7290, aux_task0.loss_bbox: 0.3055, aux_task1.loss_heatmap: 0.9957, aux_task1.loss_bbox: 0.3505, aux_task2.loss_heatmap: 1.0952, aux_task2.loss_bbox: 0.3800, aux_task3.loss_heatmap: 0.7682, aux_task3.loss_bbox: 0.3022, aux_task4.loss_heatmap: 0.6302, aux_task4.loss_bbox: 0.3132, aux_task5.loss_heatmap: 0.5770, aux_task5.loss_bbox: 0.3094, loss: 16.1326, grad_norm: 35.4878
2025-04-16 14:48:51,274 - mmdet - INFO - Epoch [4][850/1104]	lr: 1.273e-04, eta: 5:05:08, time: 1.011, data_time: 0.009, memory: 14036, loss_cls: 0.5616, loss_bbox: 0.9176, d0.loss_cls: 0.6464, d0.loss_bbox: 1.0888, d1.loss_cls: 0.6309, d1.loss_bbox: 0.9541, d2.loss_cls: 0.5980, d2.loss_bbox: 0.9264, d3.loss_cls: 0.5721, d3.loss_bbox: 0.9206, d4.loss_cls: 0.5652, d4.loss_bbox: 0.9190, aux_task0.loss_heatmap: 0.7018, aux_task0.loss_bbox: 0.3011, aux_task1.loss_heatmap: 0.9976, aux_task1.loss_bbox: 0.3564, aux_task2.loss_heatmap: 1.0835, aux_task2.loss_bbox: 0.3830, aux_task3.loss_heatmap: 0.7381, aux_task3.loss_bbox: 0.3036, aux_task4.loss_heatmap: 0.6007, aux_task4.loss_bbox: 0.3128, aux_task5.loss_heatmap: 0.5822, aux_task5.loss_bbox: 0.3091, loss: 15.9707, grad_norm: 36.4430
2025-04-16 14:49:42,267 - mmdet - INFO - Epoch [4][900/1104]	lr: 1.293e-04, eta: 5:04:16, time: 1.020, data_time: 0.008, memory: 14036, loss_cls: 0.5692, loss_bbox: 0.9171, d0.loss_cls: 0.6538, d0.loss_bbox: 1.0975, d1.loss_cls: 0.6336, d1.loss_bbox: 0.9666, d2.loss_cls: 0.6080, d2.loss_bbox: 0.9342, d3.loss_cls: 0.5811, d3.loss_bbox: 0.9292, d4.loss_cls: 0.5756, d4.loss_bbox: 0.9223, aux_task0.loss_heatmap: 0.7143, aux_task0.loss_bbox: 0.3038, aux_task1.loss_heatmap: 0.9900, aux_task1.loss_bbox: 0.3485, aux_task2.loss_heatmap: 1.0701, aux_task2.loss_bbox: 0.3863, aux_task3.loss_heatmap: 0.7764, aux_task3.loss_bbox: 0.3116, aux_task4.loss_heatmap: 0.6322, aux_task4.loss_bbox: 0.3072, aux_task5.loss_heatmap: 0.5656, aux_task5.loss_bbox: 0.3091, loss: 16.1032, grad_norm: 41.7334
2025-04-16 14:50:32,732 - mmdet - INFO - Epoch [4][950/1104]	lr: 1.313e-04, eta: 5:03:23, time: 1.009, data_time: 0.008, memory: 14036, loss_cls: 0.5736, loss_bbox: 0.9158, d0.loss_cls: 0.6526, d0.loss_bbox: 1.0847, d1.loss_cls: 0.6364, d1.loss_bbox: 0.9591, d2.loss_cls: 0.6074, d2.loss_bbox: 0.9313, d3.loss_cls: 0.5845, d3.loss_bbox: 0.9228, d4.loss_cls: 0.5791, d4.loss_bbox: 0.9170, aux_task0.loss_heatmap: 0.7379, aux_task0.loss_bbox: 0.3062, aux_task1.loss_heatmap: 1.0219, aux_task1.loss_bbox: 0.3543, aux_task2.loss_heatmap: 1.0876, aux_task2.loss_bbox: 0.3761, aux_task3.loss_heatmap: 0.7861, aux_task3.loss_bbox: 0.3041, aux_task4.loss_heatmap: 0.5918, aux_task4.loss_bbox: 0.3135, aux_task5.loss_heatmap: 0.5826, aux_task5.loss_bbox: 0.3097, loss: 16.1358, grad_norm: 31.5186
2025-04-16 14:51:23,366 - mmdet - INFO - Epoch [4][1000/1104]	lr: 1.333e-04, eta: 5:02:30, time: 1.013, data_time: 0.008, memory: 14036, loss_cls: 0.5615, loss_bbox: 0.9233, d0.loss_cls: 0.6442, d0.loss_bbox: 1.1008, d1.loss_cls: 0.6241, d1.loss_bbox: 0.9688, d2.loss_cls: 0.6001, d2.loss_bbox: 0.9387, d3.loss_cls: 0.5759, d3.loss_bbox: 0.9309, d4.loss_cls: 0.5675, d4.loss_bbox: 0.9253, aux_task0.loss_heatmap: 0.7397, aux_task0.loss_bbox: 0.3083, aux_task1.loss_heatmap: 1.0090, aux_task1.loss_bbox: 0.3490, aux_task2.loss_heatmap: 1.0970, aux_task2.loss_bbox: 0.3813, aux_task3.loss_heatmap: 0.7481, aux_task3.loss_bbox: 0.3059, aux_task4.loss_heatmap: 0.5817, aux_task4.loss_bbox: 0.3112, aux_task5.loss_heatmap: 0.5510, aux_task5.loss_bbox: 0.3055, loss: 16.0490, grad_norm: 36.1112
2025-04-16 14:52:13,962 - mmdet - INFO - Epoch [4][1050/1104]	lr: 1.353e-04, eta: 5:01:37, time: 1.012, data_time: 0.008, memory: 14036, loss_cls: 0.5676, loss_bbox: 0.9074, d0.loss_cls: 0.6489, d0.loss_bbox: 1.0870, d1.loss_cls: 0.6325, d1.loss_bbox: 0.9557, d2.loss_cls: 0.6065, d2.loss_bbox: 0.9255, d3.loss_cls: 0.5799, d3.loss_bbox: 0.9187, d4.loss_cls: 0.5730, d4.loss_bbox: 0.9107, aux_task0.loss_heatmap: 0.7241, aux_task0.loss_bbox: 0.3028, aux_task1.loss_heatmap: 0.9879, aux_task1.loss_bbox: 0.3525, aux_task2.loss_heatmap: 1.0703, aux_task2.loss_bbox: 0.3687, aux_task3.loss_heatmap: 0.7841, aux_task3.loss_bbox: 0.3033, aux_task4.loss_heatmap: 0.6117, aux_task4.loss_bbox: 0.3123, aux_task5.loss_heatmap: 0.5663, aux_task5.loss_bbox: 0.3082, loss: 16.0058, grad_norm: 36.1044
2025-04-16 14:53:04,840 - mmdet - INFO - Epoch [4][1100/1104]	lr: 1.373e-04, eta: 5:00:45, time: 1.018, data_time: 0.008, memory: 14054, loss_cls: 0.5671, loss_bbox: 0.9312, d0.loss_cls: 0.6451, d0.loss_bbox: 1.1012, d1.loss_cls: 0.6349, d1.loss_bbox: 0.9731, d2.loss_cls: 0.6061, d2.loss_bbox: 0.9463, d3.loss_cls: 0.5808, d3.loss_bbox: 0.9396, d4.loss_cls: 0.5743, d4.loss_bbox: 0.9351, aux_task0.loss_heatmap: 0.7594, aux_task0.loss_bbox: 0.3029, aux_task1.loss_heatmap: 0.9887, aux_task1.loss_bbox: 0.3522, aux_task2.loss_heatmap: 1.0615, aux_task2.loss_bbox: 0.3840, aux_task3.loss_heatmap: 0.7630, aux_task3.loss_bbox: 0.2986, aux_task4.loss_heatmap: 0.6093, aux_task4.loss_bbox: 0.3223, aux_task5.loss_heatmap: 0.5660, aux_task5.loss_bbox: 0.3119, loss: 16.1545, grad_norm: 34.6404
2025-04-16 14:53:09,357 - mmdet - INFO - Saving checkpoint at 4 epochs
2025-04-16 15:03:56,646 - mmdet - INFO - Exp name: DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01.py
2025-04-16 15:03:56,646 - mmdet - INFO - Epoch(val) [4][3010]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.2265, pts_bbox_NuScenes/car_AP_dist_1.0: 0.4365, pts_bbox_NuScenes/car_AP_dist_2.0: 0.5661, pts_bbox_NuScenes/car_AP_dist_4.0: 0.6449, pts_bbox_NuScenes/car_trans_err: 0.4689, pts_bbox_NuScenes/car_scale_err: 0.2515, pts_bbox_NuScenes/car_orient_err: 1.3855, pts_bbox_NuScenes/car_vel_err: 1.1082, pts_bbox_NuScenes/car_attr_err: 0.3859, pts_bbox_NuScenes/mATE: 0.6653, pts_bbox_NuScenes/mASE: 0.3421, pts_bbox_NuScenes/mAOE: 1.3951, pts_bbox_NuScenes/mAVE: 1.2349, pts_bbox_NuScenes/mAAE: 0.4621, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.0075, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.0636, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.1266, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.1762, pts_bbox_NuScenes/truck_trans_err: 0.6794, pts_bbox_NuScenes/truck_scale_err: 0.2953, pts_bbox_NuScenes/truck_orient_err: 1.6718, pts_bbox_NuScenes/truck_vel_err: 1.0708, pts_bbox_NuScenes/truck_attr_err: 0.3886, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0008, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.0342, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.0463, pts_bbox_NuScenes/construction_vehicle_trans_err: 0.9137, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.4875, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.3839, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1318, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.3511, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.0010, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.0619, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.2113, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.3144, pts_bbox_NuScenes/bus_trans_err: 0.8442, pts_bbox_NuScenes/bus_scale_err: 0.2911, pts_bbox_NuScenes/bus_orient_err: 1.2374, pts_bbox_NuScenes/bus_vel_err: 2.9918, pts_bbox_NuScenes/bus_attr_err: 0.7278, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.0000, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.0193, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.0559, pts_bbox_NuScenes/trailer_trans_err: 0.9774, pts_bbox_NuScenes/trailer_scale_err: 0.3262, pts_bbox_NuScenes/trailer_orient_err: 1.4110, pts_bbox_NuScenes/trailer_vel_err: 0.4864, pts_bbox_NuScenes/trailer_attr_err: 0.2522, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.0002, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.1266, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.2828, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.3538, pts_bbox_NuScenes/barrier_trans_err: 0.8660, pts_bbox_NuScenes/barrier_scale_err: 0.3787, pts_bbox_NuScenes/barrier_orient_err: 0.7617, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.0292, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.0548, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.0764, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.0849, pts_bbox_NuScenes/motorcycle_trans_err: 0.4165, pts_bbox_NuScenes/motorcycle_scale_err: 0.2907, pts_bbox_NuScenes/motorcycle_orient_err: 1.4772, pts_bbox_NuScenes/motorcycle_vel_err: 2.2380, pts_bbox_NuScenes/motorcycle_attr_err: 0.5547, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.0000, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.0000, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.0000, pts_bbox_NuScenes/bicycle_trans_err: 0.4942, pts_bbox_NuScenes/bicycle_scale_err: 0.3456, pts_bbox_NuScenes/bicycle_orient_err: 1.6183, pts_bbox_NuScenes/bicycle_vel_err: 0.8667, pts_bbox_NuScenes/bicycle_attr_err: 0.2149, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.2508, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.5445, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.6088, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.6457, pts_bbox_NuScenes/pedestrian_trans_err: 0.4555, pts_bbox_NuScenes/pedestrian_scale_err: 0.3074, pts_bbox_NuScenes/pedestrian_orient_err: 1.6094, pts_bbox_NuScenes/pedestrian_vel_err: 0.9859, pts_bbox_NuScenes/pedestrian_attr_err: 0.8216, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.0639, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.2189, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.2651, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.3200, pts_bbox_NuScenes/traffic_cone_trans_err: 0.5377, pts_bbox_NuScenes/traffic_cone_scale_err: 0.4474, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.2395, pts_bbox_NuScenes/mAP: 0.1730
2025-04-16 15:04:52,838 - mmdet - INFO - Epoch [5][50/1104]	lr: 1.395e-04, eta: 4:59:50, time: 1.106, data_time: 0.090, memory: 14054, loss_cls: 0.5466, loss_bbox: 0.9057, d0.loss_cls: 0.6307, d0.loss_bbox: 1.0718, d1.loss_cls: 0.6121, d1.loss_bbox: 0.9531, d2.loss_cls: 0.5839, d2.loss_bbox: 0.9224, d3.loss_cls: 0.5602, d3.loss_bbox: 0.9134, d4.loss_cls: 0.5549, d4.loss_bbox: 0.9072, aux_task0.loss_heatmap: 0.7035, aux_task0.loss_bbox: 0.2992, aux_task1.loss_heatmap: 0.9826, aux_task1.loss_bbox: 0.3475, aux_task2.loss_heatmap: 1.0500, aux_task2.loss_bbox: 0.3812, aux_task3.loss_heatmap: 0.7509, aux_task3.loss_bbox: 0.3094, aux_task4.loss_heatmap: 0.6024, aux_task4.loss_bbox: 0.3136, aux_task5.loss_heatmap: 0.5381, aux_task5.loss_bbox: 0.3068, loss: 15.7473, grad_norm: 29.7524
2025-04-16 15:05:43,787 - mmdet - INFO - Epoch [5][100/1104]	lr: 1.415e-04, eta: 4:58:59, time: 1.019, data_time: 0.009, memory: 14054, loss_cls: 0.5567, loss_bbox: 0.9081, d0.loss_cls: 0.6337, d0.loss_bbox: 1.0753, d1.loss_cls: 0.6187, d1.loss_bbox: 0.9513, d2.loss_cls: 0.5922, d2.loss_bbox: 0.9212, d3.loss_cls: 0.5678, d3.loss_bbox: 0.9164, d4.loss_cls: 0.5620, d4.loss_bbox: 0.9106, aux_task0.loss_heatmap: 0.7108, aux_task0.loss_bbox: 0.3013, aux_task1.loss_heatmap: 1.0122, aux_task1.loss_bbox: 0.3518, aux_task2.loss_heatmap: 1.0308, aux_task2.loss_bbox: 0.3698, aux_task3.loss_heatmap: 0.7842, aux_task3.loss_bbox: 0.3034, aux_task4.loss_heatmap: 0.5987, aux_task4.loss_bbox: 0.3185, aux_task5.loss_heatmap: 0.5753, aux_task5.loss_bbox: 0.3076, loss: 15.8782, grad_norm: 34.5720
2025-04-16 15:06:34,587 - mmdet - INFO - Epoch [5][150/1104]	lr: 1.435e-04, eta: 4:58:07, time: 1.016, data_time: 0.008, memory: 14054, loss_cls: 0.5531, loss_bbox: 0.9082, d0.loss_cls: 0.6340, d0.loss_bbox: 1.0738, d1.loss_cls: 0.6183, d1.loss_bbox: 0.9558, d2.loss_cls: 0.5882, d2.loss_bbox: 0.9253, d3.loss_cls: 0.5665, d3.loss_bbox: 0.9180, d4.loss_cls: 0.5593, d4.loss_bbox: 0.9118, aux_task0.loss_heatmap: 0.7121, aux_task0.loss_bbox: 0.2992, aux_task1.loss_heatmap: 0.9712, aux_task1.loss_bbox: 0.3490, aux_task2.loss_heatmap: 1.0533, aux_task2.loss_bbox: 0.3749, aux_task3.loss_heatmap: 0.8013, aux_task3.loss_bbox: 0.3050, aux_task4.loss_heatmap: 0.5930, aux_task4.loss_bbox: 0.3112, aux_task5.loss_heatmap: 0.5555, aux_task5.loss_bbox: 0.3045, loss: 15.8423, grad_norm: 31.7830
2025-04-16 15:07:25,829 - mmdet - INFO - Epoch [5][200/1104]	lr: 1.455e-04, eta: 4:57:16, time: 1.025, data_time: 0.008, memory: 14054, loss_cls: 0.5486, loss_bbox: 0.9152, d0.loss_cls: 0.6312, d0.loss_bbox: 1.0740, d1.loss_cls: 0.6147, d1.loss_bbox: 0.9579, d2.loss_cls: 0.5899, d2.loss_bbox: 0.9282, d3.loss_cls: 0.5636, d3.loss_bbox: 0.9219, d4.loss_cls: 0.5557, d4.loss_bbox: 0.9163, aux_task0.loss_heatmap: 0.7096, aux_task0.loss_bbox: 0.2992, aux_task1.loss_heatmap: 0.9594, aux_task1.loss_bbox: 0.3541, aux_task2.loss_heatmap: 1.0316, aux_task2.loss_bbox: 0.3721, aux_task3.loss_heatmap: 0.7693, aux_task3.loss_bbox: 0.3085, aux_task4.loss_heatmap: 0.5754, aux_task4.loss_bbox: 0.3114, aux_task5.loss_heatmap: 0.5800, aux_task5.loss_bbox: 0.3129, loss: 15.8009, grad_norm: 31.3137
2025-04-16 15:08:16,388 - mmdet - INFO - Epoch [5][250/1104]	lr: 1.475e-04, eta: 4:56:23, time: 1.011, data_time: 0.007, memory: 14054, loss_cls: 0.5538, loss_bbox: 0.9021, d0.loss_cls: 0.6355, d0.loss_bbox: 1.0611, d1.loss_cls: 0.6210, d1.loss_bbox: 0.9459, d2.loss_cls: 0.5955, d2.loss_bbox: 0.9176, d3.loss_cls: 0.5692, d3.loss_bbox: 0.9085, d4.loss_cls: 0.5589, d4.loss_bbox: 0.9046, aux_task0.loss_heatmap: 0.7159, aux_task0.loss_bbox: 0.3008, aux_task1.loss_heatmap: 0.9750, aux_task1.loss_bbox: 0.3534, aux_task2.loss_heatmap: 1.0292, aux_task2.loss_bbox: 0.3684, aux_task3.loss_heatmap: 0.7767, aux_task3.loss_bbox: 0.3037, aux_task4.loss_heatmap: 0.6011, aux_task4.loss_bbox: 0.3128, aux_task5.loss_heatmap: 0.5622, aux_task5.loss_bbox: 0.3084, loss: 15.7812, grad_norm: 30.7965
2025-04-16 15:09:07,326 - mmdet - INFO - Epoch [5][300/1104]	lr: 1.494e-04, eta: 4:55:32, time: 1.019, data_time: 0.008, memory: 14054, loss_cls: 0.5456, loss_bbox: 0.9020, d0.loss_cls: 0.6293, d0.loss_bbox: 1.0569, d1.loss_cls: 0.6124, d1.loss_bbox: 0.9413, d2.loss_cls: 0.5846, d2.loss_bbox: 0.9144, d3.loss_cls: 0.5586, d3.loss_bbox: 0.9076, d4.loss_cls: 0.5528, d4.loss_bbox: 0.9045, aux_task0.loss_heatmap: 0.7170, aux_task0.loss_bbox: 0.2962, aux_task1.loss_heatmap: 0.9819, aux_task1.loss_bbox: 0.3490, aux_task2.loss_heatmap: 1.0058, aux_task2.loss_bbox: 0.3782, aux_task3.loss_heatmap: 0.7701, aux_task3.loss_bbox: 0.3056, aux_task4.loss_heatmap: 0.5905, aux_task4.loss_bbox: 0.3014, aux_task5.loss_heatmap: 0.5639, aux_task5.loss_bbox: 0.3080, loss: 15.6774, grad_norm: 33.5858
2025-04-16 15:09:58,052 - mmdet - INFO - Epoch [5][350/1104]	lr: 1.514e-04, eta: 4:54:40, time: 1.015, data_time: 0.010, memory: 14054, loss_cls: 0.5526, loss_bbox: 0.9063, d0.loss_cls: 0.6303, d0.loss_bbox: 1.0572, d1.loss_cls: 0.6147, d1.loss_bbox: 0.9472, d2.loss_cls: 0.5899, d2.loss_bbox: 0.9192, d3.loss_cls: 0.5634, d3.loss_bbox: 0.9103, d4.loss_cls: 0.5572, d4.loss_bbox: 0.9057, aux_task0.loss_heatmap: 0.6922, aux_task0.loss_bbox: 0.2973, aux_task1.loss_heatmap: 0.9927, aux_task1.loss_bbox: 0.3560, aux_task2.loss_heatmap: 1.0326, aux_task2.loss_bbox: 0.3758, aux_task3.loss_heatmap: 0.7545, aux_task3.loss_bbox: 0.3064, aux_task4.loss_heatmap: 0.6010, aux_task4.loss_bbox: 0.3119, aux_task5.loss_heatmap: 0.5700, aux_task5.loss_bbox: 0.3040, loss: 15.7484, grad_norm: 28.6029
2025-04-16 15:10:49,174 - mmdet - INFO - Epoch [5][400/1104]	lr: 1.534e-04, eta: 4:53:49, time: 1.022, data_time: 0.010, memory: 14054, loss_cls: 0.5397, loss_bbox: 0.8892, d0.loss_cls: 0.6179, d0.loss_bbox: 1.0488, d1.loss_cls: 0.6031, d1.loss_bbox: 0.9362, d2.loss_cls: 0.5747, d2.loss_bbox: 0.9072, d3.loss_cls: 0.5526, d3.loss_bbox: 0.8994, d4.loss_cls: 0.5451, d4.loss_bbox: 0.8930, aux_task0.loss_heatmap: 0.7167, aux_task0.loss_bbox: 0.3009, aux_task1.loss_heatmap: 0.9514, aux_task1.loss_bbox: 0.3475, aux_task2.loss_heatmap: 1.0636, aux_task2.loss_bbox: 0.3679, aux_task3.loss_heatmap: 0.7503, aux_task3.loss_bbox: 0.2991, aux_task4.loss_heatmap: 0.5722, aux_task4.loss_bbox: 0.3105, aux_task5.loss_heatmap: 0.5497, aux_task5.loss_bbox: 0.3041, loss: 15.5408, grad_norm: 29.7492
2025-04-16 15:11:40,320 - mmdet - INFO - Epoch [5][450/1104]	lr: 1.554e-04, eta: 4:52:58, time: 1.023, data_time: 0.008, memory: 14054, loss_cls: 0.5375, loss_bbox: 0.8951, d0.loss_cls: 0.6203, d0.loss_bbox: 1.0460, d1.loss_cls: 0.6036, d1.loss_bbox: 0.9389, d2.loss_cls: 0.5776, d2.loss_bbox: 0.9131, d3.loss_cls: 0.5513, d3.loss_bbox: 0.9037, d4.loss_cls: 0.5431, d4.loss_bbox: 0.8972, aux_task0.loss_heatmap: 0.7021, aux_task0.loss_bbox: 0.3019, aux_task1.loss_heatmap: 0.9565, aux_task1.loss_bbox: 0.3473, aux_task2.loss_heatmap: 1.0176, aux_task2.loss_bbox: 0.3694, aux_task3.loss_heatmap: 0.7358, aux_task3.loss_bbox: 0.2939, aux_task4.loss_heatmap: 0.6021, aux_task4.loss_bbox: 0.3101, aux_task5.loss_heatmap: 0.5758, aux_task5.loss_bbox: 0.3035, loss: 15.5432, grad_norm: 31.3782
2025-04-16 15:12:31,014 - mmdet - INFO - Epoch [5][500/1104]	lr: 1.574e-04, eta: 4:52:06, time: 1.014, data_time: 0.011, memory: 14054, loss_cls: 0.5405, loss_bbox: 0.8907, d0.loss_cls: 0.6217, d0.loss_bbox: 1.0491, d1.loss_cls: 0.6037, d1.loss_bbox: 0.9340, d2.loss_cls: 0.5779, d2.loss_bbox: 0.9047, d3.loss_cls: 0.5523, d3.loss_bbox: 0.8978, d4.loss_cls: 0.5457, d4.loss_bbox: 0.8938, aux_task0.loss_heatmap: 0.7117, aux_task0.loss_bbox: 0.2984, aux_task1.loss_heatmap: 0.9737, aux_task1.loss_bbox: 0.3419, aux_task2.loss_heatmap: 0.9672, aux_task2.loss_bbox: 0.3638, aux_task3.loss_heatmap: 0.7652, aux_task3.loss_bbox: 0.2874, aux_task4.loss_heatmap: 0.5801, aux_task4.loss_bbox: 0.3110, aux_task5.loss_heatmap: 0.5655, aux_task5.loss_bbox: 0.3063, loss: 15.4843, grad_norm: 36.2584
2025-04-16 15:13:21,963 - mmdet - INFO - Epoch [5][550/1104]	lr: 1.593e-04, eta: 4:51:14, time: 1.019, data_time: 0.009, memory: 14054, loss_cls: 0.5333, loss_bbox: 0.8971, d0.loss_cls: 0.6178, d0.loss_bbox: 1.0486, d1.loss_cls: 0.5962, d1.loss_bbox: 0.9396, d2.loss_cls: 0.5710, d2.loss_bbox: 0.9113, d3.loss_cls: 0.5476, d3.loss_bbox: 0.9033, d4.loss_cls: 0.5403, d4.loss_bbox: 0.8982, aux_task0.loss_heatmap: 0.6987, aux_task0.loss_bbox: 0.2978, aux_task1.loss_heatmap: 0.9373, aux_task1.loss_bbox: 0.3415, aux_task2.loss_heatmap: 1.0401, aux_task2.loss_bbox: 0.3704, aux_task3.loss_heatmap: 0.7450, aux_task3.loss_bbox: 0.3120, aux_task4.loss_heatmap: 0.5652, aux_task4.loss_bbox: 0.3082, aux_task5.loss_heatmap: 0.5618, aux_task5.loss_bbox: 0.3104, loss: 15.4927, grad_norm: 29.7447
2025-04-16 15:14:12,834 - mmdet - INFO - Epoch [5][600/1104]	lr: 1.613e-04, eta: 4:50:22, time: 1.017, data_time: 0.007, memory: 14054, loss_cls: 0.5244, loss_bbox: 0.9040, d0.loss_cls: 0.6124, d0.loss_bbox: 1.0532, d1.loss_cls: 0.5951, d1.loss_bbox: 0.9462, d2.loss_cls: 0.5708, d2.loss_bbox: 0.9185, d3.loss_cls: 0.5403, d3.loss_bbox: 0.9116, d4.loss_cls: 0.5335, d4.loss_bbox: 0.9062, aux_task0.loss_heatmap: 0.7051, aux_task0.loss_bbox: 0.3063, aux_task1.loss_heatmap: 0.9618, aux_task1.loss_bbox: 0.3471, aux_task2.loss_heatmap: 1.0208, aux_task2.loss_bbox: 0.3749, aux_task3.loss_heatmap: 0.7366, aux_task3.loss_bbox: 0.3027, aux_task4.loss_heatmap: 0.5604, aux_task4.loss_bbox: 0.3049, aux_task5.loss_heatmap: 0.5504, aux_task5.loss_bbox: 0.3089, loss: 15.4958, grad_norm: 29.9987
2025-04-16 15:15:03,616 - mmdet - INFO - Epoch [5][650/1104]	lr: 1.632e-04, eta: 4:49:31, time: 1.016, data_time: 0.009, memory: 14054, loss_cls: 0.5309, loss_bbox: 0.8900, d0.loss_cls: 0.6142, d0.loss_bbox: 1.0499, d1.loss_cls: 0.5979, d1.loss_bbox: 0.9371, d2.loss_cls: 0.5712, d2.loss_bbox: 0.9098, d3.loss_cls: 0.5446, d3.loss_bbox: 0.9002, d4.loss_cls: 0.5372, d4.loss_bbox: 0.8939, aux_task0.loss_heatmap: 0.7048, aux_task0.loss_bbox: 0.2990, aux_task1.loss_heatmap: 0.9122, aux_task1.loss_bbox: 0.3448, aux_task2.loss_heatmap: 1.0340, aux_task2.loss_bbox: 0.3792, aux_task3.loss_heatmap: 0.7658, aux_task3.loss_bbox: 0.3031, aux_task4.loss_heatmap: 0.5973, aux_task4.loss_bbox: 0.3089, aux_task5.loss_heatmap: 0.5487, aux_task5.loss_bbox: 0.3052, loss: 15.4798, grad_norm: 34.2658
2025-04-16 15:15:54,388 - mmdet - INFO - Epoch [5][700/1104]	lr: 1.652e-04, eta: 4:48:39, time: 1.015, data_time: 0.009, memory: 14054, loss_cls: 0.5237, loss_bbox: 0.8804, d0.loss_cls: 0.6066, d0.loss_bbox: 1.0369, d1.loss_cls: 0.5884, d1.loss_bbox: 0.9291, d2.loss_cls: 0.5608, d2.loss_bbox: 0.8984, d3.loss_cls: 0.5354, d3.loss_bbox: 0.8911, d4.loss_cls: 0.5304, d4.loss_bbox: 0.8839, aux_task0.loss_heatmap: 0.6914, aux_task0.loss_bbox: 0.2929, aux_task1.loss_heatmap: 0.9361, aux_task1.loss_bbox: 0.3446, aux_task2.loss_heatmap: 1.0013, aux_task2.loss_bbox: 0.3692, aux_task3.loss_heatmap: 0.7217, aux_task3.loss_bbox: 0.2974, aux_task4.loss_heatmap: 0.5518, aux_task4.loss_bbox: 0.3084, aux_task5.loss_heatmap: 0.5400, aux_task5.loss_bbox: 0.2985, loss: 15.2184, grad_norm: 31.0825
2025-04-16 15:16:45,150 - mmdet - INFO - Epoch [5][750/1104]	lr: 1.671e-04, eta: 4:47:47, time: 1.015, data_time: 0.008, memory: 14054, loss_cls: 0.5206, loss_bbox: 0.8782, d0.loss_cls: 0.6038, d0.loss_bbox: 1.0295, d1.loss_cls: 0.5857, d1.loss_bbox: 0.9162, d2.loss_cls: 0.5589, d2.loss_bbox: 0.8932, d3.loss_cls: 0.5341, d3.loss_bbox: 0.8858, d4.loss_cls: 0.5270, d4.loss_bbox: 0.8804, aux_task0.loss_heatmap: 0.6797, aux_task0.loss_bbox: 0.2912, aux_task1.loss_heatmap: 0.9455, aux_task1.loss_bbox: 0.3434, aux_task2.loss_heatmap: 0.9785, aux_task2.loss_bbox: 0.3663, aux_task3.loss_heatmap: 0.7821, aux_task3.loss_bbox: 0.2998, aux_task4.loss_heatmap: 0.5787, aux_task4.loss_bbox: 0.3106, aux_task5.loss_heatmap: 0.5264, aux_task5.loss_bbox: 0.3022, loss: 15.2181, grad_norm: 31.8251
2025-04-16 15:17:35,793 - mmdet - INFO - Epoch [5][800/1104]	lr: 1.690e-04, eta: 4:46:54, time: 1.013, data_time: 0.008, memory: 14054, loss_cls: 0.5311, loss_bbox: 0.8906, d0.loss_cls: 0.6185, d0.loss_bbox: 1.0392, d1.loss_cls: 0.6008, d1.loss_bbox: 0.9331, d2.loss_cls: 0.5734, d2.loss_bbox: 0.9085, d3.loss_cls: 0.5443, d3.loss_bbox: 0.9005, d4.loss_cls: 0.5370, d4.loss_bbox: 0.8939, aux_task0.loss_heatmap: 0.6979, aux_task0.loss_bbox: 0.2995, aux_task1.loss_heatmap: 0.9423, aux_task1.loss_bbox: 0.3456, aux_task2.loss_heatmap: 1.0146, aux_task2.loss_bbox: 0.3709, aux_task3.loss_heatmap: 0.7605, aux_task3.loss_bbox: 0.2919, aux_task4.loss_heatmap: 0.5838, aux_task4.loss_bbox: 0.3048, aux_task5.loss_heatmap: 0.5369, aux_task5.loss_bbox: 0.3076, loss: 15.4272, grad_norm: 30.2206
2025-04-16 15:18:26,338 - mmdet - INFO - Epoch [5][850/1104]	lr: 1.710e-04, eta: 4:46:02, time: 1.011, data_time: 0.008, memory: 14054, loss_cls: 0.5244, loss_bbox: 0.8802, d0.loss_cls: 0.6089, d0.loss_bbox: 1.0236, d1.loss_cls: 0.5921, d1.loss_bbox: 0.9212, d2.loss_cls: 0.5675, d2.loss_bbox: 0.8959, d3.loss_cls: 0.5373, d3.loss_bbox: 0.8919, d4.loss_cls: 0.5307, d4.loss_bbox: 0.8842, aux_task0.loss_heatmap: 0.6840, aux_task0.loss_bbox: 0.2959, aux_task1.loss_heatmap: 0.9427, aux_task1.loss_bbox: 0.3477, aux_task2.loss_heatmap: 1.0035, aux_task2.loss_bbox: 0.3747, aux_task3.loss_heatmap: 0.7025, aux_task3.loss_bbox: 0.2974, aux_task4.loss_heatmap: 0.5614, aux_task4.loss_bbox: 0.3016, aux_task5.loss_heatmap: 0.5377, aux_task5.loss_bbox: 0.3025, loss: 15.2095, grad_norm: 30.7385
2025-04-16 15:19:17,531 - mmdet - INFO - Epoch [5][900/1104]	lr: 1.729e-04, eta: 4:45:11, time: 1.024, data_time: 0.008, memory: 14054, loss_cls: 0.5343, loss_bbox: 0.8867, d0.loss_cls: 0.6189, d0.loss_bbox: 1.0293, d1.loss_cls: 0.6079, d1.loss_bbox: 0.9293, d2.loss_cls: 0.5816, d2.loss_bbox: 0.9010, d3.loss_cls: 0.5505, d3.loss_bbox: 0.8929, d4.loss_cls: 0.5413, d4.loss_bbox: 0.8887, aux_task0.loss_heatmap: 0.6878, aux_task0.loss_bbox: 0.2985, aux_task1.loss_heatmap: 0.9577, aux_task1.loss_bbox: 0.3402, aux_task2.loss_heatmap: 1.0263, aux_task2.loss_bbox: 0.3731, aux_task3.loss_heatmap: 0.7492, aux_task3.loss_bbox: 0.3038, aux_task4.loss_heatmap: 0.5904, aux_task4.loss_bbox: 0.3008, aux_task5.loss_heatmap: 0.5472, aux_task5.loss_bbox: 0.3007, loss: 15.4381, grad_norm: 32.2950
2025-04-16 15:20:08,612 - mmdet - INFO - Epoch [5][950/1104]	lr: 1.748e-04, eta: 4:44:20, time: 1.022, data_time: 0.011, memory: 14054, loss_cls: 0.5220, loss_bbox: 0.8833, d0.loss_cls: 0.6055, d0.loss_bbox: 1.0292, d1.loss_cls: 0.5926, d1.loss_bbox: 0.9239, d2.loss_cls: 0.5681, d2.loss_bbox: 0.8990, d3.loss_cls: 0.5373, d3.loss_bbox: 0.8915, d4.loss_cls: 0.5307, d4.loss_bbox: 0.8843, aux_task0.loss_heatmap: 0.6792, aux_task0.loss_bbox: 0.2931, aux_task1.loss_heatmap: 0.9587, aux_task1.loss_bbox: 0.3416, aux_task2.loss_heatmap: 0.9820, aux_task2.loss_bbox: 0.3617, aux_task3.loss_heatmap: 0.7177, aux_task3.loss_bbox: 0.2977, aux_task4.loss_heatmap: 0.5582, aux_task4.loss_bbox: 0.3046, aux_task5.loss_heatmap: 0.5244, aux_task5.loss_bbox: 0.3025, loss: 15.1887, grad_norm: 31.1710
2025-04-16 15:20:59,589 - mmdet - INFO - Epoch [5][1000/1104]	lr: 1.766e-04, eta: 4:43:29, time: 1.020, data_time: 0.009, memory: 14054, loss_cls: 0.5317, loss_bbox: 0.8880, d0.loss_cls: 0.6112, d0.loss_bbox: 1.0397, d1.loss_cls: 0.5954, d1.loss_bbox: 0.9310, d2.loss_cls: 0.5725, d2.loss_bbox: 0.9061, d3.loss_cls: 0.5434, d3.loss_bbox: 0.9001, d4.loss_cls: 0.5356, d4.loss_bbox: 0.8915, aux_task0.loss_heatmap: 0.7007, aux_task0.loss_bbox: 0.3025, aux_task1.loss_heatmap: 0.9696, aux_task1.loss_bbox: 0.3414, aux_task2.loss_heatmap: 1.0119, aux_task2.loss_bbox: 0.3700, aux_task3.loss_heatmap: 0.7668, aux_task3.loss_bbox: 0.2977, aux_task4.loss_heatmap: 0.5464, aux_task4.loss_bbox: 0.3006, aux_task5.loss_heatmap: 0.5390, aux_task5.loss_bbox: 0.3039, loss: 15.3968, grad_norm: 28.9443
2025-04-16 15:21:50,495 - mmdet - INFO - Epoch [5][1050/1104]	lr: 1.785e-04, eta: 4:42:38, time: 1.018, data_time: 0.010, memory: 14054, loss_cls: 0.5280, loss_bbox: 0.8873, d0.loss_cls: 0.6103, d0.loss_bbox: 1.0339, d1.loss_cls: 0.6032, d1.loss_bbox: 0.9370, d2.loss_cls: 0.5922, d2.loss_bbox: 0.9072, d3.loss_cls: 0.5489, d3.loss_bbox: 0.8982, d4.loss_cls: 0.5362, d4.loss_bbox: 0.8916, aux_task0.loss_heatmap: 0.6972, aux_task0.loss_bbox: 0.2952, aux_task1.loss_heatmap: 0.9442, aux_task1.loss_bbox: 0.3486, aux_task2.loss_heatmap: 0.9637, aux_task2.loss_bbox: 0.3617, aux_task3.loss_heatmap: 0.7938, aux_task3.loss_bbox: 0.2963, aux_task4.loss_heatmap: 0.5812, aux_task4.loss_bbox: 0.3069, aux_task5.loss_heatmap: 0.5251, aux_task5.loss_bbox: 0.3025, loss: 15.3904, grad_norm: 29.2758
2025-04-16 15:22:41,852 - mmdet - INFO - Epoch [5][1100/1104]	lr: 1.804e-04, eta: 4:41:47, time: 1.027, data_time: 0.008, memory: 14054, loss_cls: 0.5144, loss_bbox: 0.8855, d0.loss_cls: 0.5955, d0.loss_bbox: 1.0341, d1.loss_cls: 0.5849, d1.loss_bbox: 0.9313, d2.loss_cls: 0.5687, d2.loss_bbox: 0.8998, d3.loss_cls: 0.5292, d3.loss_bbox: 0.8935, d4.loss_cls: 0.5211, d4.loss_bbox: 0.8862, aux_task0.loss_heatmap: 0.6620, aux_task0.loss_bbox: 0.2941, aux_task1.loss_heatmap: 0.9387, aux_task1.loss_bbox: 0.3392, aux_task2.loss_heatmap: 0.9982, aux_task2.loss_bbox: 0.3668, aux_task3.loss_heatmap: 0.7144, aux_task3.loss_bbox: 0.2872, aux_task4.loss_heatmap: 0.5545, aux_task4.loss_bbox: 0.3039, aux_task5.loss_heatmap: 0.5199, aux_task5.loss_bbox: 0.3044, loss: 15.1276, grad_norm: 31.3224
2025-04-16 15:22:46,277 - mmdet - INFO - Saving checkpoint at 5 epochs
2025-04-16 15:34:09,414 - mmdet - INFO - Exp name: DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01.py
2025-04-16 15:34:09,414 - mmdet - INFO - Epoch(val) [5][3010]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.2723, pts_bbox_NuScenes/car_AP_dist_1.0: 0.4780, pts_bbox_NuScenes/car_AP_dist_2.0: 0.6014, pts_bbox_NuScenes/car_AP_dist_4.0: 0.6862, pts_bbox_NuScenes/car_trans_err: 0.4115, pts_bbox_NuScenes/car_scale_err: 0.1827, pts_bbox_NuScenes/car_orient_err: 1.4344, pts_bbox_NuScenes/car_vel_err: 1.1570, pts_bbox_NuScenes/car_attr_err: 0.3995, pts_bbox_NuScenes/mATE: 0.5701, pts_bbox_NuScenes/mASE: 0.3166, pts_bbox_NuScenes/mAOE: 1.3754, pts_bbox_NuScenes/mAVE: 1.0935, pts_bbox_NuScenes/mAAE: 0.4451, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.0272, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.1160, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.1986, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.2420, pts_bbox_NuScenes/truck_trans_err: 0.6238, pts_bbox_NuScenes/truck_scale_err: 0.2616, pts_bbox_NuScenes/truck_orient_err: 1.3622, pts_bbox_NuScenes/truck_vel_err: 0.8990, pts_bbox_NuScenes/truck_attr_err: 0.3666, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0013, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.0191, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.0318, pts_bbox_NuScenes/construction_vehicle_trans_err: 0.8659, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.4790, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.5649, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1284, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.3457, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.0212, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.1543, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.2954, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.3723, pts_bbox_NuScenes/bus_trans_err: 0.6917, pts_bbox_NuScenes/bus_scale_err: 0.2243, pts_bbox_NuScenes/bus_orient_err: 1.2680, pts_bbox_NuScenes/bus_vel_err: 2.4819, pts_bbox_NuScenes/bus_attr_err: 0.6561, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.0102, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.0334, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.0609, pts_bbox_NuScenes/trailer_trans_err: 0.8370, pts_bbox_NuScenes/trailer_scale_err: 0.2894, pts_bbox_NuScenes/trailer_orient_err: 1.6638, pts_bbox_NuScenes/trailer_vel_err: 0.4496, pts_bbox_NuScenes/trailer_attr_err: 0.2008, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.0584, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.2396, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.4070, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.4780, pts_bbox_NuScenes/barrier_trans_err: 0.7121, pts_bbox_NuScenes/barrier_scale_err: 0.3292, pts_bbox_NuScenes/barrier_orient_err: 0.3393, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.0130, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.0278, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.0393, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.0438, pts_bbox_NuScenes/motorcycle_trans_err: 0.4090, pts_bbox_NuScenes/motorcycle_scale_err: 0.3246, pts_bbox_NuScenes/motorcycle_orient_err: 1.8134, pts_bbox_NuScenes/motorcycle_vel_err: 1.7518, pts_bbox_NuScenes/motorcycle_attr_err: 0.5312, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.0000, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.0000, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.0000, pts_bbox_NuScenes/bicycle_trans_err: 0.4257, pts_bbox_NuScenes/bicycle_scale_err: 0.3190, pts_bbox_NuScenes/bicycle_orient_err: 1.5061, pts_bbox_NuScenes/bicycle_vel_err: 0.8718, pts_bbox_NuScenes/bicycle_attr_err: 0.2232, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.2688, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.5342, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.5890, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.6203, pts_bbox_NuScenes/pedestrian_trans_err: 0.4378, pts_bbox_NuScenes/pedestrian_scale_err: 0.3033, pts_bbox_NuScenes/pedestrian_orient_err: 1.4265, pts_bbox_NuScenes/pedestrian_vel_err: 1.0082, pts_bbox_NuScenes/pedestrian_attr_err: 0.8373, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.2364, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.2794, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.3164, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.3676, pts_bbox_NuScenes/traffic_cone_trans_err: 0.2867, pts_bbox_NuScenes/traffic_cone_scale_err: 0.4529, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.2686, pts_bbox_NuScenes/mAP: 0.2035
2025-04-16 15:35:05,608 - mmdet - INFO - Epoch [6][50/1104]	lr: 1.824e-04, eta: 4:40:53, time: 1.107, data_time: 0.090, memory: 14054, loss_cls: 0.5193, loss_bbox: 0.8816, d0.loss_cls: 0.6015, d0.loss_bbox: 1.0255, d1.loss_cls: 0.5914, d1.loss_bbox: 0.9256, d2.loss_cls: 0.5736, d2.loss_bbox: 0.8996, d3.loss_cls: 0.5356, d3.loss_bbox: 0.8947, d4.loss_cls: 0.5248, d4.loss_bbox: 0.8853, aux_task0.loss_heatmap: 0.6663, aux_task0.loss_bbox: 0.2902, aux_task1.loss_heatmap: 0.9418, aux_task1.loss_bbox: 0.3383, aux_task2.loss_heatmap: 1.0088, aux_task2.loss_bbox: 0.3659, aux_task3.loss_heatmap: 0.7162, aux_task3.loss_bbox: 0.2989, aux_task4.loss_heatmap: 0.5760, aux_task4.loss_bbox: 0.3040, aux_task5.loss_heatmap: 0.5462, aux_task5.loss_bbox: 0.3042, loss: 15.2153, grad_norm: 29.9257
2025-04-16 15:35:56,434 - mmdet - INFO - Epoch [6][100/1104]	lr: 1.842e-04, eta: 4:40:01, time: 1.017, data_time: 0.009, memory: 14054, loss_cls: 0.5078, loss_bbox: 0.8718, d0.loss_cls: 0.5912, d0.loss_bbox: 1.0127, d1.loss_cls: 0.5786, d1.loss_bbox: 0.9181, d2.loss_cls: 0.5600, d2.loss_bbox: 0.8903, d3.loss_cls: 0.5243, d3.loss_bbox: 0.8841, d4.loss_cls: 0.5146, d4.loss_bbox: 0.8751, aux_task0.loss_heatmap: 0.6661, aux_task0.loss_bbox: 0.2848, aux_task1.loss_heatmap: 0.9561, aux_task1.loss_bbox: 0.3429, aux_task2.loss_heatmap: 0.9756, aux_task2.loss_bbox: 0.3549, aux_task3.loss_heatmap: 0.7149, aux_task3.loss_bbox: 0.2992, aux_task4.loss_heatmap: 0.5750, aux_task4.loss_bbox: 0.3079, aux_task5.loss_heatmap: 0.5174, aux_task5.loss_bbox: 0.3005, loss: 15.0237, grad_norm: 27.4738
2025-04-16 15:36:46,818 - mmdet - INFO - Epoch [6][150/1104]	lr: 1.860e-04, eta: 4:39:08, time: 1.008, data_time: 0.008, memory: 14054, loss_cls: 0.5108, loss_bbox: 0.8750, d0.loss_cls: 0.5963, d0.loss_bbox: 1.0180, d1.loss_cls: 0.5858, d1.loss_bbox: 0.9259, d2.loss_cls: 0.5632, d2.loss_bbox: 0.8979, d3.loss_cls: 0.5281, d3.loss_bbox: 0.8891, d4.loss_cls: 0.5182, d4.loss_bbox: 0.8787, aux_task0.loss_heatmap: 0.6835, aux_task0.loss_bbox: 0.2909, aux_task1.loss_heatmap: 0.9365, aux_task1.loss_bbox: 0.3392, aux_task2.loss_heatmap: 0.9742, aux_task2.loss_bbox: 0.3644, aux_task3.loss_heatmap: 0.7276, aux_task3.loss_bbox: 0.3008, aux_task4.loss_heatmap: 0.5466, aux_task4.loss_bbox: 0.3017, aux_task5.loss_heatmap: 0.5141, aux_task5.loss_bbox: 0.3033, loss: 15.0696, grad_norm: 28.4794
2025-04-16 15:37:37,026 - mmdet - INFO - Epoch [6][200/1104]	lr: 1.878e-04, eta: 4:38:15, time: 1.004, data_time: 0.007, memory: 14054, loss_cls: 0.4986, loss_bbox: 0.8667, d0.loss_cls: 0.5896, d0.loss_bbox: 1.0053, d1.loss_cls: 0.5789, d1.loss_bbox: 0.9063, d2.loss_cls: 0.5528, d2.loss_bbox: 0.8864, d3.loss_cls: 0.5145, d3.loss_bbox: 0.8824, d4.loss_cls: 0.5070, d4.loss_bbox: 0.8695, aux_task0.loss_heatmap: 0.6562, aux_task0.loss_bbox: 0.2835, aux_task1.loss_heatmap: 0.9118, aux_task1.loss_bbox: 0.3368, aux_task2.loss_heatmap: 0.9675, aux_task2.loss_bbox: 0.3586, aux_task3.loss_heatmap: 0.6957, aux_task3.loss_bbox: 0.3015, aux_task4.loss_heatmap: 0.5415, aux_task4.loss_bbox: 0.3001, aux_task5.loss_heatmap: 0.5072, aux_task5.loss_bbox: 0.3038, loss: 14.8221, grad_norm: 30.6814
2025-04-16 15:38:28,349 - mmdet - INFO - Epoch [6][250/1104]	lr: 1.896e-04, eta: 4:37:25, time: 1.026, data_time: 0.008, memory: 14054, loss_cls: 0.5156, loss_bbox: 0.8683, d0.loss_cls: 0.5984, d0.loss_bbox: 1.0127, d1.loss_cls: 0.5854, d1.loss_bbox: 0.9161, d2.loss_cls: 0.5698, d2.loss_bbox: 0.8879, d3.loss_cls: 0.5337, d3.loss_bbox: 0.8830, d4.loss_cls: 0.5244, d4.loss_bbox: 0.8707, aux_task0.loss_heatmap: 0.6721, aux_task0.loss_bbox: 0.2871, aux_task1.loss_heatmap: 0.9246, aux_task1.loss_bbox: 0.3421, aux_task2.loss_heatmap: 0.9417, aux_task2.loss_bbox: 0.3545, aux_task3.loss_heatmap: 0.7075, aux_task3.loss_bbox: 0.2921, aux_task4.loss_heatmap: 0.5749, aux_task4.loss_bbox: 0.3051, aux_task5.loss_heatmap: 0.5334, aux_task5.loss_bbox: 0.3026, loss: 15.0037, grad_norm: 27.5109
2025-04-16 15:39:21,079 - mmdet - INFO - Epoch [6][300/1104]	lr: 1.913e-04, eta: 4:36:39, time: 1.055, data_time: 0.008, memory: 14054, loss_cls: 0.5088, loss_bbox: 0.8648, d0.loss_cls: 0.5923, d0.loss_bbox: 1.0128, d1.loss_cls: 0.5733, d1.loss_bbox: 0.9169, d2.loss_cls: 0.5487, d2.loss_bbox: 0.8900, d3.loss_cls: 0.5222, d3.loss_bbox: 0.8808, d4.loss_cls: 0.5154, d4.loss_bbox: 0.8673, aux_task0.loss_heatmap: 0.6503, aux_task0.loss_bbox: 0.2833, aux_task1.loss_heatmap: 0.9334, aux_task1.loss_bbox: 0.3372, aux_task2.loss_heatmap: 0.9449, aux_task2.loss_bbox: 0.3681, aux_task3.loss_heatmap: 0.7418, aux_task3.loss_bbox: 0.2959, aux_task4.loss_heatmap: 0.5572, aux_task4.loss_bbox: 0.2970, aux_task5.loss_heatmap: 0.5437, aux_task5.loss_bbox: 0.3022, loss: 14.9486, grad_norm: 28.3036
2025-04-16 15:40:11,798 - mmdet - INFO - Epoch [6][350/1104]	lr: 1.931e-04, eta: 4:35:47, time: 1.014, data_time: 0.008, memory: 14054, loss_cls: 0.5146, loss_bbox: 0.8760, d0.loss_cls: 0.5971, d0.loss_bbox: 1.0196, d1.loss_cls: 0.5885, d1.loss_bbox: 0.9229, d2.loss_cls: 0.5698, d2.loss_bbox: 0.9011, d3.loss_cls: 0.5311, d3.loss_bbox: 0.8931, d4.loss_cls: 0.5218, d4.loss_bbox: 0.8811, aux_task0.loss_heatmap: 0.6746, aux_task0.loss_bbox: 0.2911, aux_task1.loss_heatmap: 0.9614, aux_task1.loss_bbox: 0.3469, aux_task2.loss_heatmap: 0.9815, aux_task2.loss_bbox: 0.3682, aux_task3.loss_heatmap: 0.6690, aux_task3.loss_bbox: 0.2923, aux_task4.loss_heatmap: 0.5652, aux_task4.loss_bbox: 0.3048, aux_task5.loss_heatmap: 0.5095, aux_task5.loss_bbox: 0.3016, loss: 15.0827, grad_norm: 30.5315
2025-04-16 15:41:02,580 - mmdet - INFO - Epoch [6][400/1104]	lr: 1.948e-04, eta: 4:34:55, time: 1.016, data_time: 0.008, memory: 14054, loss_cls: 0.5011, loss_bbox: 0.8476, d0.loss_cls: 0.5782, d0.loss_bbox: 0.9991, d1.loss_cls: 0.5675, d1.loss_bbox: 0.8986, d2.loss_cls: 0.5457, d2.loss_bbox: 0.8728, d3.loss_cls: 0.5148, d3.loss_bbox: 0.8647, d4.loss_cls: 0.5066, d4.loss_bbox: 0.8518, aux_task0.loss_heatmap: 0.6471, aux_task0.loss_bbox: 0.2798, aux_task1.loss_heatmap: 0.9045, aux_task1.loss_bbox: 0.3367, aux_task2.loss_heatmap: 0.9919, aux_task2.loss_bbox: 0.3493, aux_task3.loss_heatmap: 0.6646, aux_task3.loss_bbox: 0.2915, aux_task4.loss_heatmap: 0.5392, aux_task4.loss_bbox: 0.2970, aux_task5.loss_heatmap: 0.5165, aux_task5.loss_bbox: 0.2999, loss: 14.6666, grad_norm: 28.8850
2025-04-16 15:41:53,035 - mmdet - INFO - Epoch [6][450/1104]	lr: 1.965e-04, eta: 4:34:02, time: 1.009, data_time: 0.008, memory: 14054, loss_cls: 0.5118, loss_bbox: 0.8609, d0.loss_cls: 0.5857, d0.loss_bbox: 1.0029, d1.loss_cls: 0.5724, d1.loss_bbox: 0.9085, d2.loss_cls: 0.5486, d2.loss_bbox: 0.8865, d3.loss_cls: 0.5239, d3.loss_bbox: 0.8777, d4.loss_cls: 0.5182, d4.loss_bbox: 0.8643, aux_task0.loss_heatmap: 0.6525, aux_task0.loss_bbox: 0.2793, aux_task1.loss_heatmap: 0.9020, aux_task1.loss_bbox: 0.3413, aux_task2.loss_heatmap: 0.9787, aux_task2.loss_bbox: 0.3602, aux_task3.loss_heatmap: 0.7003, aux_task3.loss_bbox: 0.2856, aux_task4.loss_heatmap: 0.5701, aux_task4.loss_bbox: 0.3037, aux_task5.loss_heatmap: 0.5333, aux_task5.loss_bbox: 0.3019, loss: 14.8703, grad_norm: 26.7579
2025-04-16 15:42:43,706 - mmdet - INFO - Epoch [6][500/1104]	lr: 1.982e-04, eta: 4:33:10, time: 1.013, data_time: 0.008, memory: 14054, loss_cls: 0.4991, loss_bbox: 0.8617, d0.loss_cls: 0.5829, d0.loss_bbox: 0.9989, d1.loss_cls: 0.5703, d1.loss_bbox: 0.9101, d2.loss_cls: 0.5445, d2.loss_bbox: 0.8874, d3.loss_cls: 0.5169, d3.loss_bbox: 0.8766, d4.loss_cls: 0.5078, d4.loss_bbox: 0.8644, aux_task0.loss_heatmap: 0.6551, aux_task0.loss_bbox: 0.2835, aux_task1.loss_heatmap: 0.9383, aux_task1.loss_bbox: 0.3347, aux_task2.loss_heatmap: 0.9441, aux_task2.loss_bbox: 0.3592, aux_task3.loss_heatmap: 0.7163, aux_task3.loss_bbox: 0.2954, aux_task4.loss_heatmap: 0.5489, aux_task4.loss_bbox: 0.2995, aux_task5.loss_heatmap: 0.5119, aux_task5.loss_bbox: 0.3029, loss: 14.8102, grad_norm: 26.3205
2025-04-16 15:43:34,016 - mmdet - INFO - Epoch [6][550/1104]	lr: 1.999e-04, eta: 4:32:17, time: 1.006, data_time: 0.008, memory: 14054, loss_cls: 0.4992, loss_bbox: 0.8564, d0.loss_cls: 0.5771, d0.loss_bbox: 1.0035, d1.loss_cls: 0.5662, d1.loss_bbox: 0.9097, d2.loss_cls: 0.5369, d2.loss_bbox: 0.8832, d3.loss_cls: 0.5116, d3.loss_bbox: 0.8748, d4.loss_cls: 0.5040, d4.loss_bbox: 0.8610, aux_task0.loss_heatmap: 0.6452, aux_task0.loss_bbox: 0.2828, aux_task1.loss_heatmap: 0.8995, aux_task1.loss_bbox: 0.3299, aux_task2.loss_heatmap: 0.9646, aux_task2.loss_bbox: 0.3557, aux_task3.loss_heatmap: 0.7109, aux_task3.loss_bbox: 0.2970, aux_task4.loss_heatmap: 0.5351, aux_task4.loss_bbox: 0.3042, aux_task5.loss_heatmap: 0.5118, aux_task5.loss_bbox: 0.2996, loss: 14.7196, grad_norm: 30.2730
2025-04-16 15:44:24,555 - mmdet - INFO - Epoch [6][600/1104]	lr: 2.016e-04, eta: 4:31:25, time: 1.011, data_time: 0.008, memory: 14054, loss_cls: 0.4885, loss_bbox: 0.8545, d0.loss_cls: 0.5730, d0.loss_bbox: 0.9992, d1.loss_cls: 0.5580, d1.loss_bbox: 0.9035, d2.loss_cls: 0.5285, d2.loss_bbox: 0.8809, d3.loss_cls: 0.5037, d3.loss_bbox: 0.8686, d4.loss_cls: 0.4953, d4.loss_bbox: 0.8573, aux_task0.loss_heatmap: 0.6671, aux_task0.loss_bbox: 0.2823, aux_task1.loss_heatmap: 0.9147, aux_task1.loss_bbox: 0.3345, aux_task2.loss_heatmap: 0.9371, aux_task2.loss_bbox: 0.3580, aux_task3.loss_heatmap: 0.7109, aux_task3.loss_bbox: 0.2937, aux_task4.loss_heatmap: 0.5043, aux_task4.loss_bbox: 0.2911, aux_task5.loss_heatmap: 0.4969, aux_task5.loss_bbox: 0.3026, loss: 14.6042, grad_norm: 25.9958
2025-04-16 15:45:15,305 - mmdet - INFO - Epoch [6][650/1104]	lr: 2.032e-04, eta: 4:30:33, time: 1.015, data_time: 0.008, memory: 14054, loss_cls: 0.5057, loss_bbox: 0.8645, d0.loss_cls: 0.5846, d0.loss_bbox: 1.0083, d1.loss_cls: 0.5759, d1.loss_bbox: 0.9167, d2.loss_cls: 0.5552, d2.loss_bbox: 0.8890, d3.loss_cls: 0.5208, d3.loss_bbox: 0.8770, d4.loss_cls: 0.5123, d4.loss_bbox: 0.8674, aux_task0.loss_heatmap: 0.6595, aux_task0.loss_bbox: 0.2796, aux_task1.loss_heatmap: 0.8837, aux_task1.loss_bbox: 0.3393, aux_task2.loss_heatmap: 0.9861, aux_task2.loss_bbox: 0.3673, aux_task3.loss_heatmap: 0.7689, aux_task3.loss_bbox: 0.2985, aux_task4.loss_heatmap: 0.5643, aux_task4.loss_bbox: 0.2986, aux_task5.loss_heatmap: 0.5214, aux_task5.loss_bbox: 0.3009, loss: 14.9455, grad_norm: 32.2503
2025-04-16 15:46:06,314 - mmdet - INFO - Epoch [6][700/1104]	lr: 2.048e-04, eta: 4:29:42, time: 1.020, data_time: 0.008, memory: 14054, loss_cls: 0.5049, loss_bbox: 0.8531, d0.loss_cls: 0.5921, d0.loss_bbox: 0.9980, d1.loss_cls: 0.5848, d1.loss_bbox: 0.9035, d2.loss_cls: 0.5597, d2.loss_bbox: 0.8818, d3.loss_cls: 0.5215, d3.loss_bbox: 0.8692, d4.loss_cls: 0.5115, d4.loss_bbox: 0.8589, aux_task0.loss_heatmap: 0.6667, aux_task0.loss_bbox: 0.2804, aux_task1.loss_heatmap: 0.8980, aux_task1.loss_bbox: 0.3366, aux_task2.loss_heatmap: 0.9583, aux_task2.loss_bbox: 0.3565, aux_task3.loss_heatmap: 0.7360, aux_task3.loss_bbox: 0.2930, aux_task4.loss_heatmap: 0.5291, aux_task4.loss_bbox: 0.2992, aux_task5.loss_heatmap: 0.5310, aux_task5.loss_bbox: 0.2970, loss: 14.8208, grad_norm: 32.9221
2025-04-16 15:46:56,776 - mmdet - INFO - Epoch [6][750/1104]	lr: 2.064e-04, eta: 4:28:50, time: 1.009, data_time: 0.008, memory: 14054, loss_cls: 0.5016, loss_bbox: 0.8472, d0.loss_cls: 0.5807, d0.loss_bbox: 0.9889, d1.loss_cls: 0.5700, d1.loss_bbox: 0.9045, d2.loss_cls: 0.5466, d2.loss_bbox: 0.8794, d3.loss_cls: 0.5160, d3.loss_bbox: 0.8626, d4.loss_cls: 0.5060, d4.loss_bbox: 0.8533, aux_task0.loss_heatmap: 0.6515, aux_task0.loss_bbox: 0.2752, aux_task1.loss_heatmap: 0.9100, aux_task1.loss_bbox: 0.3358, aux_task2.loss_heatmap: 0.9295, aux_task2.loss_bbox: 0.3544, aux_task3.loss_heatmap: 0.7137, aux_task3.loss_bbox: 0.2908, aux_task4.loss_heatmap: 0.5442, aux_task4.loss_bbox: 0.3019, aux_task5.loss_heatmap: 0.5266, aux_task5.loss_bbox: 0.2983, loss: 14.6887, grad_norm: 26.4806
2025-04-16 15:47:47,083 - mmdet - INFO - Epoch [6][800/1104]	lr: 2.080e-04, eta: 4:27:57, time: 1.006, data_time: 0.008, memory: 14054, loss_cls: 0.4966, loss_bbox: 0.8534, d0.loss_cls: 0.5800, d0.loss_bbox: 0.9955, d1.loss_cls: 0.5706, d1.loss_bbox: 0.9054, d2.loss_cls: 0.5575, d2.loss_bbox: 0.8791, d3.loss_cls: 0.5178, d3.loss_bbox: 0.8652, d4.loss_cls: 0.5054, d4.loss_bbox: 0.8570, aux_task0.loss_heatmap: 0.6542, aux_task0.loss_bbox: 0.2836, aux_task1.loss_heatmap: 0.8953, aux_task1.loss_bbox: 0.3353, aux_task2.loss_heatmap: 0.9347, aux_task2.loss_bbox: 0.3580, aux_task3.loss_heatmap: 0.6721, aux_task3.loss_bbox: 0.2832, aux_task4.loss_heatmap: 0.5451, aux_task4.loss_bbox: 0.2980, aux_task5.loss_heatmap: 0.5090, aux_task5.loss_bbox: 0.3028, loss: 14.6547, grad_norm: 33.4493
2025-04-16 15:48:37,659 - mmdet - INFO - Epoch [6][850/1104]	lr: 2.095e-04, eta: 4:27:05, time: 1.012, data_time: 0.008, memory: 14054, loss_cls: 0.4995, loss_bbox: 0.8432, d0.loss_cls: 0.5853, d0.loss_bbox: 1.0004, d1.loss_cls: 0.5766, d1.loss_bbox: 0.8996, d2.loss_cls: 0.5523, d2.loss_bbox: 0.8765, d3.loss_cls: 0.5166, d3.loss_bbox: 0.8597, d4.loss_cls: 0.5050, d4.loss_bbox: 0.8494, aux_task0.loss_heatmap: 0.6481, aux_task0.loss_bbox: 0.2692, aux_task1.loss_heatmap: 0.9125, aux_task1.loss_bbox: 0.3328, aux_task2.loss_heatmap: 0.9446, aux_task2.loss_bbox: 0.3576, aux_task3.loss_heatmap: 0.7370, aux_task3.loss_bbox: 0.2997, aux_task4.loss_heatmap: 0.5290, aux_task4.loss_bbox: 0.2960, aux_task5.loss_heatmap: 0.5157, aux_task5.loss_bbox: 0.2971, loss: 14.7034, grad_norm: 29.8285
2025-04-16 15:49:28,804 - mmdet - INFO - Epoch [6][900/1104]	lr: 2.110e-04, eta: 4:26:14, time: 1.023, data_time: 0.008, memory: 14054, loss_cls: 0.4994, loss_bbox: 0.8489, d0.loss_cls: 0.5798, d0.loss_bbox: 0.9998, d1.loss_cls: 0.5695, d1.loss_bbox: 0.9025, d2.loss_cls: 0.5427, d2.loss_bbox: 0.8827, d3.loss_cls: 0.5139, d3.loss_bbox: 0.8640, d4.loss_cls: 0.5053, d4.loss_bbox: 0.8564, aux_task0.loss_heatmap: 0.6439, aux_task0.loss_bbox: 0.2773, aux_task1.loss_heatmap: 0.9318, aux_task1.loss_bbox: 0.3309, aux_task2.loss_heatmap: 0.9311, aux_task2.loss_bbox: 0.3580, aux_task3.loss_heatmap: 0.6897, aux_task3.loss_bbox: 0.2969, aux_task4.loss_heatmap: 0.5546, aux_task4.loss_bbox: 0.2889, aux_task5.loss_heatmap: 0.4926, aux_task5.loss_bbox: 0.3013, loss: 14.6620, grad_norm: 28.3261
2025-04-16 15:50:19,656 - mmdet - INFO - Epoch [6][950/1104]	lr: 2.125e-04, eta: 4:25:23, time: 1.017, data_time: 0.009, memory: 14054, loss_cls: 0.4921, loss_bbox: 0.8443, d0.loss_cls: 0.5821, d0.loss_bbox: 0.9974, d1.loss_cls: 0.5766, d1.loss_bbox: 0.9027, d2.loss_cls: 0.5455, d2.loss_bbox: 0.8785, d3.loss_cls: 0.5105, d3.loss_bbox: 0.8611, d4.loss_cls: 0.4988, d4.loss_bbox: 0.8517, aux_task0.loss_heatmap: 0.6417, aux_task0.loss_bbox: 0.2761, aux_task1.loss_heatmap: 0.9187, aux_task1.loss_bbox: 0.3310, aux_task2.loss_heatmap: 0.9118, aux_task2.loss_bbox: 0.3474, aux_task3.loss_heatmap: 0.7077, aux_task3.loss_bbox: 0.2980, aux_task4.loss_heatmap: 0.5216, aux_task4.loss_bbox: 0.2922, aux_task5.loss_heatmap: 0.5164, aux_task5.loss_bbox: 0.3026, loss: 14.6065, grad_norm: 28.8456
2025-04-16 15:51:10,138 - mmdet - INFO - Epoch [6][1000/1104]	lr: 2.140e-04, eta: 4:24:31, time: 1.010, data_time: 0.008, memory: 14054, loss_cls: 0.4957, loss_bbox: 0.8484, d0.loss_cls: 0.5793, d0.loss_bbox: 0.9981, d1.loss_cls: 0.5738, d1.loss_bbox: 0.9071, d2.loss_cls: 0.5552, d2.loss_bbox: 0.8820, d3.loss_cls: 0.5135, d3.loss_bbox: 0.8651, d4.loss_cls: 0.5028, d4.loss_bbox: 0.8538, aux_task0.loss_heatmap: 0.6346, aux_task0.loss_bbox: 0.2706, aux_task1.loss_heatmap: 0.9289, aux_task1.loss_bbox: 0.3350, aux_task2.loss_heatmap: 0.9351, aux_task2.loss_bbox: 0.3531, aux_task3.loss_heatmap: 0.7081, aux_task3.loss_bbox: 0.2912, aux_task4.loss_heatmap: 0.5269, aux_task4.loss_bbox: 0.2940, aux_task5.loss_heatmap: 0.5025, aux_task5.loss_bbox: 0.2970, loss: 14.6519, grad_norm: 31.2202
2025-04-16 15:52:00,805 - mmdet - INFO - Epoch [6][1050/1104]	lr: 2.155e-04, eta: 4:23:39, time: 1.013, data_time: 0.009, memory: 14054, loss_cls: 0.4931, loss_bbox: 0.8445, d0.loss_cls: 0.5804, d0.loss_bbox: 1.0012, d1.loss_cls: 0.5786, d1.loss_bbox: 0.9033, d2.loss_cls: 0.5595, d2.loss_bbox: 0.8804, d3.loss_cls: 0.5166, d3.loss_bbox: 0.8631, d4.loss_cls: 0.5027, d4.loss_bbox: 0.8517, aux_task0.loss_heatmap: 0.6492, aux_task0.loss_bbox: 0.2819, aux_task1.loss_heatmap: 0.9107, aux_task1.loss_bbox: 0.3413, aux_task2.loss_heatmap: 0.9220, aux_task2.loss_bbox: 0.3498, aux_task3.loss_heatmap: 0.7043, aux_task3.loss_bbox: 0.2926, aux_task4.loss_heatmap: 0.5394, aux_task4.loss_bbox: 0.2968, aux_task5.loss_heatmap: 0.5037, aux_task5.loss_bbox: 0.2951, loss: 14.6619, grad_norm: 38.2543
2025-04-16 15:52:51,998 - mmdet - INFO - Epoch [6][1100/1104]	lr: 2.169e-04, eta: 4:22:48, time: 1.024, data_time: 0.011, memory: 14054, loss_cls: 0.4886, loss_bbox: 0.8482, d0.loss_cls: 0.5712, d0.loss_bbox: 0.9958, d1.loss_cls: 0.5695, d1.loss_bbox: 0.9029, d2.loss_cls: 0.5528, d2.loss_bbox: 0.8775, d3.loss_cls: 0.5141, d3.loss_bbox: 0.8610, d4.loss_cls: 0.4984, d4.loss_bbox: 0.8519, aux_task0.loss_heatmap: 0.6360, aux_task0.loss_bbox: 0.2705, aux_task1.loss_heatmap: 0.9017, aux_task1.loss_bbox: 0.3347, aux_task2.loss_heatmap: 0.9303, aux_task2.loss_bbox: 0.3519, aux_task3.loss_heatmap: 0.6791, aux_task3.loss_bbox: 0.2916, aux_task4.loss_heatmap: 0.5287, aux_task4.loss_bbox: 0.2956, aux_task5.loss_heatmap: 0.4905, aux_task5.loss_bbox: 0.2990, loss: 14.5414, grad_norm: 25.2055
2025-04-16 15:52:56,555 - mmdet - INFO - Saving checkpoint at 6 epochs
2025-04-16 16:03:39,582 - mmdet - INFO - Exp name: DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01.py
2025-04-16 16:03:39,582 - mmdet - INFO - Epoch(val) [6][3010]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.3661, pts_bbox_NuScenes/car_AP_dist_1.0: 0.5387, pts_bbox_NuScenes/car_AP_dist_2.0: 0.6381, pts_bbox_NuScenes/car_AP_dist_4.0: 0.7064, pts_bbox_NuScenes/car_trans_err: 0.3422, pts_bbox_NuScenes/car_scale_err: 0.1925, pts_bbox_NuScenes/car_orient_err: 0.7815, pts_bbox_NuScenes/car_vel_err: 1.2658, pts_bbox_NuScenes/car_attr_err: 0.4167, pts_bbox_NuScenes/mATE: 0.5586, pts_bbox_NuScenes/mASE: 0.3158, pts_bbox_NuScenes/mAOE: 1.1881, pts_bbox_NuScenes/mAVE: 1.1255, pts_bbox_NuScenes/mAAE: 0.4322, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.0274, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.1438, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.2540, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.3095, pts_bbox_NuScenes/truck_trans_err: 0.6524, pts_bbox_NuScenes/truck_scale_err: 0.2639, pts_bbox_NuScenes/truck_orient_err: 0.9273, pts_bbox_NuScenes/truck_vel_err: 1.0120, pts_bbox_NuScenes/truck_attr_err: 0.3640, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0144, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.0599, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.0949, pts_bbox_NuScenes/construction_vehicle_trans_err: 0.8476, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.4777, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.2978, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1287, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.3490, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.0256, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.2020, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.4064, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.5298, pts_bbox_NuScenes/bus_trans_err: 0.7183, pts_bbox_NuScenes/bus_scale_err: 0.2932, pts_bbox_NuScenes/bus_orient_err: 1.1135, pts_bbox_NuScenes/bus_vel_err: 2.3773, pts_bbox_NuScenes/bus_attr_err: 0.6592, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.0285, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.0909, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.1575, pts_bbox_NuScenes/trailer_trans_err: 0.8199, pts_bbox_NuScenes/trailer_scale_err: 0.2932, pts_bbox_NuScenes/trailer_orient_err: 1.2765, pts_bbox_NuScenes/trailer_vel_err: 0.4340, pts_bbox_NuScenes/trailer_attr_err: 0.1841, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.0853, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.3362, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.5237, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.5966, pts_bbox_NuScenes/barrier_trans_err: 0.6618, pts_bbox_NuScenes/barrier_scale_err: 0.3281, pts_bbox_NuScenes/barrier_orient_err: 0.7962, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.0414, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.0802, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.1029, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.1162, pts_bbox_NuScenes/motorcycle_trans_err: 0.3940, pts_bbox_NuScenes/motorcycle_scale_err: 0.2949, pts_bbox_NuScenes/motorcycle_orient_err: 1.3194, pts_bbox_NuScenes/motorcycle_vel_err: 1.8652, pts_bbox_NuScenes/motorcycle_attr_err: 0.4531, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.0020, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.0043, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.0055, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.0074, pts_bbox_NuScenes/bicycle_trans_err: 0.4031, pts_bbox_NuScenes/bicycle_scale_err: 0.2924, pts_bbox_NuScenes/bicycle_orient_err: 1.4959, pts_bbox_NuScenes/bicycle_vel_err: 0.9396, pts_bbox_NuScenes/bicycle_attr_err: 0.2145, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.3721, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.6003, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.6558, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.6882, pts_bbox_NuScenes/pedestrian_trans_err: 0.4050, pts_bbox_NuScenes/pedestrian_scale_err: 0.2899, pts_bbox_NuScenes/pedestrian_orient_err: 1.6851, pts_bbox_NuScenes/pedestrian_vel_err: 0.9814, pts_bbox_NuScenes/pedestrian_attr_err: 0.8170, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.2285, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.2759, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.3183, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.3787, pts_bbox_NuScenes/traffic_cone_trans_err: 0.3418, pts_bbox_NuScenes/traffic_cone_scale_err: 0.4319, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.2945, pts_bbox_NuScenes/mAP: 0.2503
2025-04-16 16:04:35,541 - mmdet - INFO - Epoch [7][50/1104]	lr: 2.184e-04, eta: 4:21:53, time: 1.101, data_time: 0.092, memory: 14054, loss_cls: 0.4969, loss_bbox: 0.8357, d0.loss_cls: 0.5763, d0.loss_bbox: 0.9864, d1.loss_cls: 0.5697, d1.loss_bbox: 0.9055, d2.loss_cls: 0.5552, d2.loss_bbox: 0.8769, d3.loss_cls: 0.5216, d3.loss_bbox: 0.8548, d4.loss_cls: 0.5060, d4.loss_bbox: 0.8434, aux_task0.loss_heatmap: 0.6403, aux_task0.loss_bbox: 0.2685, aux_task1.loss_heatmap: 0.9028, aux_task1.loss_bbox: 0.3238, aux_task2.loss_heatmap: 0.9576, aux_task2.loss_bbox: 0.3551, aux_task3.loss_heatmap: 0.7039, aux_task3.loss_bbox: 0.3009, aux_task4.loss_heatmap: 0.5602, aux_task4.loss_bbox: 0.2947, aux_task5.loss_heatmap: 0.5107, aux_task5.loss_bbox: 0.2949, loss: 14.6418, grad_norm: 26.8112
2025-04-16 16:05:25,959 - mmdet - INFO - Epoch [7][100/1104]	lr: 2.198e-04, eta: 4:21:01, time: 1.008, data_time: 0.009, memory: 14054, loss_cls: 0.4876, loss_bbox: 0.8280, d0.loss_cls: 0.5660, d0.loss_bbox: 0.9825, d1.loss_cls: 0.5573, d1.loss_bbox: 0.8936, d2.loss_cls: 0.5456, d2.loss_bbox: 0.8640, d3.loss_cls: 0.5105, d3.loss_bbox: 0.8465, d4.loss_cls: 0.4970, d4.loss_bbox: 0.8357, aux_task0.loss_heatmap: 0.6331, aux_task0.loss_bbox: 0.2711, aux_task1.loss_heatmap: 0.9257, aux_task1.loss_bbox: 0.3357, aux_task2.loss_heatmap: 0.9090, aux_task2.loss_bbox: 0.3388, aux_task3.loss_heatmap: 0.6372, aux_task3.loss_bbox: 0.2859, aux_task4.loss_heatmap: 0.5354, aux_task4.loss_bbox: 0.3010, aux_task5.loss_heatmap: 0.4965, aux_task5.loss_bbox: 0.2967, loss: 14.3804, grad_norm: 27.6285
2025-04-16 16:06:16,383 - mmdet - INFO - Epoch [7][150/1104]	lr: 2.212e-04, eta: 4:20:09, time: 1.008, data_time: 0.008, memory: 14054, loss_cls: 0.4894, loss_bbox: 0.8355, d0.loss_cls: 0.5719, d0.loss_bbox: 0.9858, d1.loss_cls: 0.5675, d1.loss_bbox: 0.8984, d2.loss_cls: 0.5469, d2.loss_bbox: 0.8717, d3.loss_cls: 0.5121, d3.loss_bbox: 0.8584, d4.loss_cls: 0.4986, d4.loss_bbox: 0.8427, aux_task0.loss_heatmap: 0.6652, aux_task0.loss_bbox: 0.2733, aux_task1.loss_heatmap: 0.8846, aux_task1.loss_bbox: 0.3267, aux_task2.loss_heatmap: 0.9251, aux_task2.loss_bbox: 0.3532, aux_task3.loss_heatmap: 0.7087, aux_task3.loss_bbox: 0.3013, aux_task4.loss_heatmap: 0.5119, aux_task4.loss_bbox: 0.2917, aux_task5.loss_heatmap: 0.4962, aux_task5.loss_bbox: 0.2950, loss: 14.5118, grad_norm: 30.8554
2025-04-16 16:07:07,063 - mmdet - INFO - Epoch [7][200/1104]	lr: 2.225e-04, eta: 4:19:17, time: 1.014, data_time: 0.008, memory: 14054, loss_cls: 0.4759, loss_bbox: 0.8298, d0.loss_cls: 0.5585, d0.loss_bbox: 0.9830, d1.loss_cls: 0.5467, d1.loss_bbox: 0.8899, d2.loss_cls: 0.5300, d2.loss_bbox: 0.8631, d3.loss_cls: 0.4964, d3.loss_bbox: 0.8486, d4.loss_cls: 0.4827, d4.loss_bbox: 0.8362, aux_task0.loss_heatmap: 0.6380, aux_task0.loss_bbox: 0.2671, aux_task1.loss_heatmap: 0.8649, aux_task1.loss_bbox: 0.3281, aux_task2.loss_heatmap: 0.9021, aux_task2.loss_bbox: 0.3470, aux_task3.loss_heatmap: 0.6597, aux_task3.loss_bbox: 0.2845, aux_task4.loss_heatmap: 0.5217, aux_task4.loss_bbox: 0.2909, aux_task5.loss_heatmap: 0.4898, aux_task5.loss_bbox: 0.3030, loss: 14.2374, grad_norm: 32.0130
2025-04-16 16:07:57,727 - mmdet - INFO - Epoch [7][250/1104]	lr: 2.238e-04, eta: 4:18:25, time: 1.013, data_time: 0.010, memory: 14054, loss_cls: 0.4799, loss_bbox: 0.8167, d0.loss_cls: 0.5634, d0.loss_bbox: 0.9674, d1.loss_cls: 0.5502, d1.loss_bbox: 0.8828, d2.loss_cls: 0.5288, d2.loss_bbox: 0.8536, d3.loss_cls: 0.4986, d3.loss_bbox: 0.8356, d4.loss_cls: 0.4872, d4.loss_bbox: 0.8255, aux_task0.loss_heatmap: 0.6030, aux_task0.loss_bbox: 0.2613, aux_task1.loss_heatmap: 0.8962, aux_task1.loss_bbox: 0.3288, aux_task2.loss_heatmap: 0.8993, aux_task2.loss_bbox: 0.3467, aux_task3.loss_heatmap: 0.6477, aux_task3.loss_bbox: 0.2867, aux_task4.loss_heatmap: 0.5519, aux_task4.loss_bbox: 0.2955, aux_task5.loss_heatmap: 0.5131, aux_task5.loss_bbox: 0.3001, loss: 14.2201, grad_norm: 29.7339
2025-04-16 16:08:48,248 - mmdet - INFO - Epoch [7][300/1104]	lr: 2.250e-04, eta: 4:17:33, time: 1.010, data_time: 0.008, memory: 14054, loss_cls: 0.4813, loss_bbox: 0.8282, d0.loss_cls: 0.5617, d0.loss_bbox: 0.9783, d1.loss_cls: 0.5590, d1.loss_bbox: 0.8956, d2.loss_cls: 0.5389, d2.loss_bbox: 0.8644, d3.loss_cls: 0.5047, d3.loss_bbox: 0.8485, d4.loss_cls: 0.4897, d4.loss_bbox: 0.8347, aux_task0.loss_heatmap: 0.6419, aux_task0.loss_bbox: 0.2663, aux_task1.loss_heatmap: 0.9181, aux_task1.loss_bbox: 0.3327, aux_task2.loss_heatmap: 0.9011, aux_task2.loss_bbox: 0.3589, aux_task3.loss_heatmap: 0.6695, aux_task3.loss_bbox: 0.2906, aux_task4.loss_heatmap: 0.5266, aux_task4.loss_bbox: 0.2893, aux_task5.loss_heatmap: 0.4740, aux_task5.loss_bbox: 0.2990, loss: 14.3529, grad_norm: 27.5764
2025-04-16 16:09:38,464 - mmdet - INFO - Epoch [7][350/1104]	lr: 2.263e-04, eta: 4:16:41, time: 1.004, data_time: 0.008, memory: 14054, loss_cls: 0.4941, loss_bbox: 0.8352, d0.loss_cls: 0.5746, d0.loss_bbox: 0.9856, d1.loss_cls: 0.5672, d1.loss_bbox: 0.9066, d2.loss_cls: 0.5475, d2.loss_bbox: 0.8699, d3.loss_cls: 0.5112, d3.loss_bbox: 0.8550, d4.loss_cls: 0.5013, d4.loss_bbox: 0.8424, aux_task0.loss_heatmap: 0.6551, aux_task0.loss_bbox: 0.2673, aux_task1.loss_heatmap: 0.9214, aux_task1.loss_bbox: 0.3368, aux_task2.loss_heatmap: 0.9339, aux_task2.loss_bbox: 0.3544, aux_task3.loss_heatmap: 0.6734, aux_task3.loss_bbox: 0.2932, aux_task4.loss_heatmap: 0.5447, aux_task4.loss_bbox: 0.2950, aux_task5.loss_heatmap: 0.5067, aux_task5.loss_bbox: 0.2984, loss: 14.5711, grad_norm: 24.0899
2025-04-16 16:10:29,074 - mmdet - INFO - Epoch [7][400/1104]	lr: 2.275e-04, eta: 4:15:49, time: 1.012, data_time: 0.008, memory: 14054, loss_cls: 0.4837, loss_bbox: 0.8205, d0.loss_cls: 0.5638, d0.loss_bbox: 0.9727, d1.loss_cls: 0.5530, d1.loss_bbox: 0.8936, d2.loss_cls: 0.5373, d2.loss_bbox: 0.8608, d3.loss_cls: 0.5014, d3.loss_bbox: 0.8421, d4.loss_cls: 0.4897, d4.loss_bbox: 0.8277, aux_task0.loss_heatmap: 0.6217, aux_task0.loss_bbox: 0.2613, aux_task1.loss_heatmap: 0.8702, aux_task1.loss_bbox: 0.3285, aux_task2.loss_heatmap: 0.9449, aux_task2.loss_bbox: 0.3457, aux_task3.loss_heatmap: 0.7091, aux_task3.loss_bbox: 0.2993, aux_task4.loss_heatmap: 0.5032, aux_task4.loss_bbox: 0.2920, aux_task5.loss_heatmap: 0.5190, aux_task5.loss_bbox: 0.3005, loss: 14.3415, grad_norm: 26.5798
2025-04-16 16:11:19,758 - mmdet - INFO - Epoch [7][450/1104]	lr: 2.287e-04, eta: 4:14:57, time: 1.014, data_time: 0.009, memory: 14054, loss_cls: 0.4876, loss_bbox: 0.8134, d0.loss_cls: 0.5688, d0.loss_bbox: 0.9655, d1.loss_cls: 0.5610, d1.loss_bbox: 0.8855, d2.loss_cls: 0.5395, d2.loss_bbox: 0.8521, d3.loss_cls: 0.5075, d3.loss_bbox: 0.8350, d4.loss_cls: 0.4951, d4.loss_bbox: 0.8213, aux_task0.loss_heatmap: 0.6335, aux_task0.loss_bbox: 0.2629, aux_task1.loss_heatmap: 0.8619, aux_task1.loss_bbox: 0.3261, aux_task2.loss_heatmap: 0.9496, aux_task2.loss_bbox: 0.3455, aux_task3.loss_heatmap: 0.6517, aux_task3.loss_bbox: 0.2837, aux_task4.loss_heatmap: 0.5433, aux_task4.loss_bbox: 0.2940, aux_task5.loss_heatmap: 0.4990, aux_task5.loss_bbox: 0.2967, loss: 14.2805, grad_norm: 26.7226
2025-04-16 16:12:10,009 - mmdet - INFO - Epoch [7][500/1104]	lr: 2.298e-04, eta: 4:14:05, time: 1.005, data_time: 0.008, memory: 14054, loss_cls: 0.4871, loss_bbox: 0.8198, d0.loss_cls: 0.5707, d0.loss_bbox: 0.9830, d1.loss_cls: 0.5699, d1.loss_bbox: 0.8956, d2.loss_cls: 0.5434, d2.loss_bbox: 0.8591, d3.loss_cls: 0.5079, d3.loss_bbox: 0.8414, d4.loss_cls: 0.4946, d4.loss_bbox: 0.8273, aux_task0.loss_heatmap: 0.6330, aux_task0.loss_bbox: 0.2639, aux_task1.loss_heatmap: 0.9100, aux_task1.loss_bbox: 0.3266, aux_task2.loss_heatmap: 0.8788, aux_task2.loss_bbox: 0.3451, aux_task3.loss_heatmap: 0.7181, aux_task3.loss_bbox: 0.2832, aux_task4.loss_heatmap: 0.5090, aux_task4.loss_bbox: 0.2893, aux_task5.loss_heatmap: 0.4819, aux_task5.loss_bbox: 0.2955, loss: 14.3341, grad_norm: 24.8508
2025-04-16 16:13:00,652 - mmdet - INFO - Epoch [7][550/1104]	lr: 2.310e-04, eta: 4:13:13, time: 1.013, data_time: 0.008, memory: 14054, loss_cls: 0.4830, loss_bbox: 0.8257, d0.loss_cls: 0.5682, d0.loss_bbox: 0.9923, d1.loss_cls: 0.5595, d1.loss_bbox: 0.9012, d2.loss_cls: 0.5315, d2.loss_bbox: 0.8649, d3.loss_cls: 0.5019, d3.loss_bbox: 0.8458, d4.loss_cls: 0.4886, d4.loss_bbox: 0.8334, aux_task0.loss_heatmap: 0.6409, aux_task0.loss_bbox: 0.2731, aux_task1.loss_heatmap: 0.8797, aux_task1.loss_bbox: 0.3262, aux_task2.loss_heatmap: 0.9509, aux_task2.loss_bbox: 0.3513, aux_task3.loss_heatmap: 0.6787, aux_task3.loss_bbox: 0.2856, aux_task4.loss_heatmap: 0.5200, aux_task4.loss_bbox: 0.2936, aux_task5.loss_heatmap: 0.4876, aux_task5.loss_bbox: 0.2970, loss: 14.3806, grad_norm: 25.0186
2025-04-16 16:13:51,111 - mmdet - INFO - Epoch [7][600/1104]	lr: 2.321e-04, eta: 4:12:21, time: 1.009, data_time: 0.009, memory: 14054, loss_cls: 0.4755, loss_bbox: 0.8222, d0.loss_cls: 0.5668, d0.loss_bbox: 0.9795, d1.loss_cls: 0.5566, d1.loss_bbox: 0.9005, d2.loss_cls: 0.5277, d2.loss_bbox: 0.8663, d3.loss_cls: 0.4987, d3.loss_bbox: 0.8444, d4.loss_cls: 0.4829, d4.loss_bbox: 0.8313, aux_task0.loss_heatmap: 0.6221, aux_task0.loss_bbox: 0.2591, aux_task1.loss_heatmap: 0.8823, aux_task1.loss_bbox: 0.3266, aux_task2.loss_heatmap: 0.9129, aux_task2.loss_bbox: 0.3513, aux_task3.loss_heatmap: 0.7046, aux_task3.loss_bbox: 0.2906, aux_task4.loss_heatmap: 0.4959, aux_task4.loss_bbox: 0.2880, aux_task5.loss_heatmap: 0.5091, aux_task5.loss_bbox: 0.2971, loss: 14.2919, grad_norm: 29.5201
2025-04-16 16:14:41,303 - mmdet - INFO - Epoch [7][650/1104]	lr: 2.331e-04, eta: 4:11:29, time: 1.004, data_time: 0.008, memory: 14054, loss_cls: 0.4881, loss_bbox: 0.8203, d0.loss_cls: 0.5716, d0.loss_bbox: 0.9735, d1.loss_cls: 0.5646, d1.loss_bbox: 0.8914, d2.loss_cls: 0.5431, d2.loss_bbox: 0.8607, d3.loss_cls: 0.5050, d3.loss_bbox: 0.8390, d4.loss_cls: 0.4936, d4.loss_bbox: 0.8266, aux_task0.loss_heatmap: 0.6422, aux_task0.loss_bbox: 0.2605, aux_task1.loss_heatmap: 0.8573, aux_task1.loss_bbox: 0.3290, aux_task2.loss_heatmap: 0.9420, aux_task2.loss_bbox: 0.3591, aux_task3.loss_heatmap: 0.6861, aux_task3.loss_bbox: 0.2988, aux_task4.loss_heatmap: 0.5341, aux_task4.loss_bbox: 0.2893, aux_task5.loss_heatmap: 0.4962, aux_task5.loss_bbox: 0.3040, loss: 14.3761, grad_norm: 29.0813
2025-04-16 16:15:32,016 - mmdet - INFO - Epoch [7][700/1104]	lr: 2.342e-04, eta: 4:10:37, time: 1.014, data_time: 0.008, memory: 14054, loss_cls: 0.4748, loss_bbox: 0.8108, d0.loss_cls: 0.5603, d0.loss_bbox: 0.9629, d1.loss_cls: 0.5462, d1.loss_bbox: 0.8817, d2.loss_cls: 0.5244, d2.loss_bbox: 0.8492, d3.loss_cls: 0.4935, d3.loss_bbox: 0.8287, d4.loss_cls: 0.4825, d4.loss_bbox: 0.8161, aux_task0.loss_heatmap: 0.6250, aux_task0.loss_bbox: 0.2558, aux_task1.loss_heatmap: 0.8681, aux_task1.loss_bbox: 0.3276, aux_task2.loss_heatmap: 0.8736, aux_task2.loss_bbox: 0.3445, aux_task3.loss_heatmap: 0.6747, aux_task3.loss_bbox: 0.2991, aux_task4.loss_heatmap: 0.4915, aux_task4.loss_bbox: 0.2917, aux_task5.loss_heatmap: 0.5315, aux_task5.loss_bbox: 0.2997, loss: 14.1141, grad_norm: 25.2485
2025-04-16 16:16:22,676 - mmdet - INFO - Epoch [7][750/1104]	lr: 2.352e-04, eta: 4:09:46, time: 1.013, data_time: 0.008, memory: 14054, loss_cls: 0.4876, loss_bbox: 0.8164, d0.loss_cls: 0.5728, d0.loss_bbox: 0.9700, d1.loss_cls: 0.5671, d1.loss_bbox: 0.8896, d2.loss_cls: 0.5430, d2.loss_bbox: 0.8536, d3.loss_cls: 0.5059, d3.loss_bbox: 0.8352, d4.loss_cls: 0.4956, d4.loss_bbox: 0.8233, aux_task0.loss_heatmap: 0.6296, aux_task0.loss_bbox: 0.2610, aux_task1.loss_heatmap: 0.8852, aux_task1.loss_bbox: 0.3276, aux_task2.loss_heatmap: 0.8935, aux_task2.loss_bbox: 0.3526, aux_task3.loss_heatmap: 0.7096, aux_task3.loss_bbox: 0.2752, aux_task4.loss_heatmap: 0.5422, aux_task4.loss_bbox: 0.2975, aux_task5.loss_heatmap: 0.5095, aux_task5.loss_bbox: 0.2959, loss: 14.3394, grad_norm: 24.8313
2025-04-16 16:17:13,096 - mmdet - INFO - Epoch [7][800/1104]	lr: 2.362e-04, eta: 4:08:54, time: 1.008, data_time: 0.008, memory: 14054, loss_cls: 0.4696, loss_bbox: 0.8023, d0.loss_cls: 0.5594, d0.loss_bbox: 0.9559, d1.loss_cls: 0.5449, d1.loss_bbox: 0.8776, d2.loss_cls: 0.5231, d2.loss_bbox: 0.8432, d3.loss_cls: 0.4879, d3.loss_bbox: 0.8204, d4.loss_cls: 0.4793, d4.loss_bbox: 0.8079, aux_task0.loss_heatmap: 0.6194, aux_task0.loss_bbox: 0.2533, aux_task1.loss_heatmap: 0.8752, aux_task1.loss_bbox: 0.3261, aux_task2.loss_heatmap: 0.8897, aux_task2.loss_bbox: 0.3462, aux_task3.loss_heatmap: 0.6669, aux_task3.loss_bbox: 0.2796, aux_task4.loss_heatmap: 0.5202, aux_task4.loss_bbox: 0.2869, aux_task5.loss_heatmap: 0.5029, aux_task5.loss_bbox: 0.2975, loss: 14.0354, grad_norm: 23.2650
2025-04-16 16:18:03,936 - mmdet - INFO - Epoch [7][850/1104]	lr: 2.371e-04, eta: 4:08:02, time: 1.017, data_time: 0.010, memory: 14054, loss_cls: 0.4761, loss_bbox: 0.7967, d0.loss_cls: 0.5623, d0.loss_bbox: 0.9566, d1.loss_cls: 0.5552, d1.loss_bbox: 0.8716, d2.loss_cls: 0.5334, d2.loss_bbox: 0.8382, d3.loss_cls: 0.4949, d3.loss_bbox: 0.8133, d4.loss_cls: 0.4825, d4.loss_bbox: 0.8024, aux_task0.loss_heatmap: 0.6267, aux_task0.loss_bbox: 0.2547, aux_task1.loss_heatmap: 0.8734, aux_task1.loss_bbox: 0.3195, aux_task2.loss_heatmap: 0.8890, aux_task2.loss_bbox: 0.3469, aux_task3.loss_heatmap: 0.6459, aux_task3.loss_bbox: 0.2823, aux_task4.loss_heatmap: 0.5106, aux_task4.loss_bbox: 0.2820, aux_task5.loss_heatmap: 0.4898, aux_task5.loss_bbox: 0.2942, loss: 13.9982, grad_norm: 30.6342
2025-04-16 16:18:54,511 - mmdet - INFO - Epoch [7][900/1104]	lr: 2.380e-04, eta: 4:07:11, time: 1.012, data_time: 0.007, memory: 14054, loss_cls: 0.4880, loss_bbox: 0.8127, d0.loss_cls: 0.5774, d0.loss_bbox: 0.9660, d1.loss_cls: 0.5750, d1.loss_bbox: 0.8867, d2.loss_cls: 0.5467, d2.loss_bbox: 0.8542, d3.loss_cls: 0.5069, d3.loss_bbox: 0.8303, d4.loss_cls: 0.4945, d4.loss_bbox: 0.8191, aux_task0.loss_heatmap: 0.6258, aux_task0.loss_bbox: 0.2560, aux_task1.loss_heatmap: 0.9092, aux_task1.loss_bbox: 0.3238, aux_task2.loss_heatmap: 0.9252, aux_task2.loss_bbox: 0.3495, aux_task3.loss_heatmap: 0.6821, aux_task3.loss_bbox: 0.2977, aux_task4.loss_heatmap: 0.5517, aux_task4.loss_bbox: 0.2838, aux_task5.loss_heatmap: 0.4965, aux_task5.loss_bbox: 0.2964, loss: 14.3552, grad_norm: 24.6940
2025-04-16 16:19:45,199 - mmdet - INFO - Epoch [7][950/1104]	lr: 2.389e-04, eta: 4:06:19, time: 1.014, data_time: 0.009, memory: 14054, loss_cls: 0.4689, loss_bbox: 0.7975, d0.loss_cls: 0.5552, d0.loss_bbox: 0.9559, d1.loss_cls: 0.5471, d1.loss_bbox: 0.8702, d2.loss_cls: 0.5240, d2.loss_bbox: 0.8410, d3.loss_cls: 0.4893, d3.loss_bbox: 0.8130, d4.loss_cls: 0.4769, d4.loss_bbox: 0.8029, aux_task0.loss_heatmap: 0.6132, aux_task0.loss_bbox: 0.2518, aux_task1.loss_heatmap: 0.8909, aux_task1.loss_bbox: 0.3231, aux_task2.loss_heatmap: 0.8923, aux_task2.loss_bbox: 0.3341, aux_task3.loss_heatmap: 0.6422, aux_task3.loss_bbox: 0.2849, aux_task4.loss_heatmap: 0.5096, aux_task4.loss_bbox: 0.2854, aux_task5.loss_heatmap: 0.4961, aux_task5.loss_bbox: 0.2957, loss: 13.9611, grad_norm: 25.8988
2025-04-16 16:20:37,680 - mmdet - INFO - Epoch [7][1000/1104]	lr: 2.398e-04, eta: 4:05:31, time: 1.050, data_time: 0.008, memory: 14054, loss_cls: 0.4694, loss_bbox: 0.7960, d0.loss_cls: 0.5547, d0.loss_bbox: 0.9484, d1.loss_cls: 0.5447, d1.loss_bbox: 0.8616, d2.loss_cls: 0.5191, d2.loss_bbox: 0.8343, d3.loss_cls: 0.4872, d3.loss_bbox: 0.8097, d4.loss_cls: 0.4766, d4.loss_bbox: 0.8007, aux_task0.loss_heatmap: 0.5895, aux_task0.loss_bbox: 0.2481, aux_task1.loss_heatmap: 0.8975, aux_task1.loss_bbox: 0.3234, aux_task2.loss_heatmap: 0.9157, aux_task2.loss_bbox: 0.3386, aux_task3.loss_heatmap: 0.6622, aux_task3.loss_bbox: 0.2951, aux_task4.loss_heatmap: 0.5036, aux_task4.loss_bbox: 0.2852, aux_task5.loss_heatmap: 0.4759, aux_task5.loss_bbox: 0.2946, loss: 13.9317, grad_norm: 27.1837
2025-04-16 16:21:28,119 - mmdet - INFO - Epoch [7][1050/1104]	lr: 2.406e-04, eta: 4:04:39, time: 1.009, data_time: 0.008, memory: 14054, loss_cls: 0.4763, loss_bbox: 0.8037, d0.loss_cls: 0.5674, d0.loss_bbox: 0.9640, d1.loss_cls: 0.5582, d1.loss_bbox: 0.8737, d2.loss_cls: 0.5299, d2.loss_bbox: 0.8458, d3.loss_cls: 0.4963, d3.loss_bbox: 0.8225, d4.loss_cls: 0.4831, d4.loss_bbox: 0.8101, aux_task0.loss_heatmap: 0.6249, aux_task0.loss_bbox: 0.2495, aux_task1.loss_heatmap: 0.8961, aux_task1.loss_bbox: 0.3306, aux_task2.loss_heatmap: 0.8910, aux_task2.loss_bbox: 0.3393, aux_task3.loss_heatmap: 0.7279, aux_task3.loss_bbox: 0.2888, aux_task4.loss_heatmap: 0.5199, aux_task4.loss_bbox: 0.2874, aux_task5.loss_heatmap: 0.4964, aux_task5.loss_bbox: 0.2960, loss: 14.1788, grad_norm: 54.1330
2025-04-16 16:22:19,120 - mmdet - INFO - Epoch [7][1100/1104]	lr: 2.414e-04, eta: 4:03:49, time: 1.020, data_time: 0.010, memory: 14054, loss_cls: 0.4725, loss_bbox: 0.8158, d0.loss_cls: 0.5637, d0.loss_bbox: 0.9772, d1.loss_cls: 0.5673, d1.loss_bbox: 0.8957, d2.loss_cls: 0.5401, d2.loss_bbox: 0.8634, d3.loss_cls: 0.4967, d3.loss_bbox: 0.8361, d4.loss_cls: 0.4814, d4.loss_bbox: 0.8232, aux_task0.loss_heatmap: 0.6223, aux_task0.loss_bbox: 0.2547, aux_task1.loss_heatmap: 0.8866, aux_task1.loss_bbox: 0.3208, aux_task2.loss_heatmap: 0.8906, aux_task2.loss_bbox: 0.3413, aux_task3.loss_heatmap: 0.6800, aux_task3.loss_bbox: 0.2957, aux_task4.loss_heatmap: 0.5173, aux_task4.loss_bbox: 0.2849, aux_task5.loss_heatmap: 0.4922, aux_task5.loss_bbox: 0.2977, loss: 14.2172, grad_norm: 27.8168
2025-04-16 16:22:23,555 - mmdet - INFO - Saving checkpoint at 7 epochs
2025-04-16 16:33:06,330 - mmdet - INFO - Exp name: DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01.py
2025-04-16 16:33:06,330 - mmdet - INFO - Epoch(val) [7][3010]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.3461, pts_bbox_NuScenes/car_AP_dist_1.0: 0.5271, pts_bbox_NuScenes/car_AP_dist_2.0: 0.6204, pts_bbox_NuScenes/car_AP_dist_4.0: 0.6774, pts_bbox_NuScenes/car_trans_err: 0.3538, pts_bbox_NuScenes/car_scale_err: 0.1920, pts_bbox_NuScenes/car_orient_err: 0.5398, pts_bbox_NuScenes/car_vel_err: 1.2060, pts_bbox_NuScenes/car_attr_err: 0.3418, pts_bbox_NuScenes/mATE: 0.5275, pts_bbox_NuScenes/mASE: 0.3219, pts_bbox_NuScenes/mAOE: 1.0208, pts_bbox_NuScenes/mAVE: 1.1874, pts_bbox_NuScenes/mAAE: 0.4264, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.0466, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.1152, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.1902, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.2354, pts_bbox_NuScenes/truck_trans_err: 0.5556, pts_bbox_NuScenes/truck_scale_err: 0.2744, pts_bbox_NuScenes/truck_orient_err: 0.5846, pts_bbox_NuScenes/truck_vel_err: 0.9529, pts_bbox_NuScenes/truck_attr_err: 0.3427, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0080, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.0959, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.1209, pts_bbox_NuScenes/construction_vehicle_trans_err: 0.8999, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.5069, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.3645, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1272, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.3622, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.0295, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.1747, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.3463, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.4274, pts_bbox_NuScenes/bus_trans_err: 0.7071, pts_bbox_NuScenes/bus_scale_err: 0.2977, pts_bbox_NuScenes/bus_orient_err: 0.7031, pts_bbox_NuScenes/bus_vel_err: 2.6651, pts_bbox_NuScenes/bus_attr_err: 0.6358, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0044, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.0380, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.0840, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.1285, pts_bbox_NuScenes/trailer_trans_err: 0.7424, pts_bbox_NuScenes/trailer_scale_err: 0.2856, pts_bbox_NuScenes/trailer_orient_err: 1.4942, pts_bbox_NuScenes/trailer_vel_err: 0.5300, pts_bbox_NuScenes/trailer_attr_err: 0.2640, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.0857, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.2432, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.3789, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.4380, pts_bbox_NuScenes/barrier_trans_err: 0.5996, pts_bbox_NuScenes/barrier_scale_err: 0.3280, pts_bbox_NuScenes/barrier_orient_err: 0.4922, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.0623, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.0993, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.1237, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.1356, pts_bbox_NuScenes/motorcycle_trans_err: 0.3677, pts_bbox_NuScenes/motorcycle_scale_err: 0.2955, pts_bbox_NuScenes/motorcycle_orient_err: 1.1836, pts_bbox_NuScenes/motorcycle_vel_err: 2.0447, pts_bbox_NuScenes/motorcycle_attr_err: 0.4571, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.0077, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.0113, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.0149, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.0205, pts_bbox_NuScenes/bicycle_trans_err: 0.3678, pts_bbox_NuScenes/bicycle_scale_err: 0.2864, pts_bbox_NuScenes/bicycle_orient_err: 1.3700, pts_bbox_NuScenes/bicycle_vel_err: 0.9940, pts_bbox_NuScenes/bicycle_attr_err: 0.1993, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.3696, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.5938, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.6482, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.6789, pts_bbox_NuScenes/pedestrian_trans_err: 0.4030, pts_bbox_NuScenes/pedestrian_scale_err: 0.3049, pts_bbox_NuScenes/pedestrian_orient_err: 1.4547, pts_bbox_NuScenes/pedestrian_vel_err: 0.9792, pts_bbox_NuScenes/pedestrian_attr_err: 0.8088, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.2424, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.2799, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.3149, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.3715, pts_bbox_NuScenes/traffic_cone_trans_err: 0.2779, pts_bbox_NuScenes/traffic_cone_scale_err: 0.4479, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.2891, pts_bbox_NuScenes/mAP: 0.2334
2025-04-16 16:34:01,743 - mmdet - INFO - Epoch [8][50/1104]	lr: 2.422e-04, eta: 4:02:53, time: 1.091, data_time: 0.088, memory: 14054, loss_cls: 0.4912, loss_bbox: 0.8175, d0.loss_cls: 0.5789, d0.loss_bbox: 0.9720, d1.loss_cls: 0.6015, d1.loss_bbox: 0.9096, d2.loss_cls: 0.5831, d2.loss_bbox: 0.8674, d3.loss_cls: 0.5195, d3.loss_bbox: 0.8388, d4.loss_cls: 0.5030, d4.loss_bbox: 0.8245, aux_task0.loss_heatmap: 0.6337, aux_task0.loss_bbox: 0.2573, aux_task1.loss_heatmap: 0.9036, aux_task1.loss_bbox: 0.3220, aux_task2.loss_heatmap: 0.9417, aux_task2.loss_bbox: 0.3507, aux_task3.loss_heatmap: 0.6952, aux_task3.loss_bbox: 0.2836, aux_task4.loss_heatmap: 0.5206, aux_task4.loss_bbox: 0.2864, aux_task5.loss_heatmap: 0.4834, aux_task5.loss_bbox: 0.2918, loss: 14.4771, grad_norm: 32.1636
2025-04-16 16:34:52,589 - mmdet - INFO - Epoch [8][100/1104]	lr: 2.429e-04, eta: 4:02:02, time: 1.017, data_time: 0.013, memory: 14054, loss_cls: 0.5021, loss_bbox: 0.8267, d0.loss_cls: 0.5831, d0.loss_bbox: 0.9770, d1.loss_cls: 0.6074, d1.loss_bbox: 0.8989, d2.loss_cls: 0.6363, d2.loss_bbox: 0.8788, d3.loss_cls: 0.5497, d3.loss_bbox: 0.8511, d4.loss_cls: 0.5174, d4.loss_bbox: 0.8360, aux_task0.loss_heatmap: 0.6233, aux_task0.loss_bbox: 0.2530, aux_task1.loss_heatmap: 0.9011, aux_task1.loss_bbox: 0.3280, aux_task2.loss_heatmap: 0.8930, aux_task2.loss_bbox: 0.3335, aux_task3.loss_heatmap: 0.7074, aux_task3.loss_bbox: 0.2933, aux_task4.loss_heatmap: 0.5282, aux_task4.loss_bbox: 0.2931, aux_task5.loss_heatmap: 0.4955, aux_task5.loss_bbox: 0.2997, loss: 14.6135, grad_norm: 24.9726
2025-04-16 16:35:43,234 - mmdet - INFO - Epoch [8][150/1104]	lr: 2.436e-04, eta: 4:01:10, time: 1.013, data_time: 0.008, memory: 14054, loss_cls: 0.4886, loss_bbox: 0.8143, d0.loss_cls: 0.5671, d0.loss_bbox: 0.9637, d1.loss_cls: 0.6014, d1.loss_bbox: 0.8904, d2.loss_cls: 0.6173, d2.loss_bbox: 0.8568, d3.loss_cls: 0.5352, d3.loss_bbox: 0.8347, d4.loss_cls: 0.5046, d4.loss_bbox: 0.8229, aux_task0.loss_heatmap: 0.6246, aux_task0.loss_bbox: 0.2553, aux_task1.loss_heatmap: 0.8885, aux_task1.loss_bbox: 0.3286, aux_task2.loss_heatmap: 0.8924, aux_task2.loss_bbox: 0.3439, aux_task3.loss_heatmap: 0.6609, aux_task3.loss_bbox: 0.2958, aux_task4.loss_heatmap: 0.5067, aux_task4.loss_bbox: 0.2838, aux_task5.loss_heatmap: 0.4963, aux_task5.loss_bbox: 0.2979, loss: 14.3718, grad_norm: 25.0677
2025-04-16 16:36:33,660 - mmdet - INFO - Epoch [8][200/1104]	lr: 2.442e-04, eta: 4:00:18, time: 1.009, data_time: 0.008, memory: 14054, loss_cls: 0.5022, loss_bbox: 0.8359, d0.loss_cls: 0.5890, d0.loss_bbox: 0.9901, d1.loss_cls: 0.6356, d1.loss_bbox: 0.9373, d2.loss_cls: 0.6348, d2.loss_bbox: 0.8869, d3.loss_cls: 0.5483, d3.loss_bbox: 0.8566, d4.loss_cls: 0.5174, d4.loss_bbox: 0.8441, aux_task0.loss_heatmap: 0.6254, aux_task0.loss_bbox: 0.2564, aux_task1.loss_heatmap: 0.8866, aux_task1.loss_bbox: 0.3261, aux_task2.loss_heatmap: 0.9129, aux_task2.loss_bbox: 0.3462, aux_task3.loss_heatmap: 0.7049, aux_task3.loss_bbox: 0.2920, aux_task4.loss_heatmap: 0.5279, aux_task4.loss_bbox: 0.2876, aux_task5.loss_heatmap: 0.5149, aux_task5.loss_bbox: 0.3026, loss: 14.7618, grad_norm: 27.2658
2025-04-16 16:37:24,273 - mmdet - INFO - Epoch [8][250/1104]	lr: 2.448e-04, eta: 3:59:27, time: 1.012, data_time: 0.008, memory: 14054, loss_cls: 0.4950, loss_bbox: 0.8377, d0.loss_cls: 0.5765, d0.loss_bbox: 0.9797, d1.loss_cls: 0.6300, d1.loss_bbox: 0.9397, d2.loss_cls: 0.6463, d2.loss_bbox: 0.8889, d3.loss_cls: 0.5453, d3.loss_bbox: 0.8614, d4.loss_cls: 0.5127, d4.loss_bbox: 0.8469, aux_task0.loss_heatmap: 0.6424, aux_task0.loss_bbox: 0.2605, aux_task1.loss_heatmap: 0.8930, aux_task1.loss_bbox: 0.3309, aux_task2.loss_heatmap: 0.8880, aux_task2.loss_bbox: 0.3425, aux_task3.loss_heatmap: 0.6750, aux_task3.loss_bbox: 0.2929, aux_task4.loss_heatmap: 0.5176, aux_task4.loss_bbox: 0.2875, aux_task5.loss_heatmap: 0.5041, aux_task5.loss_bbox: 0.2984, loss: 14.6928, grad_norm: 25.9352
2025-04-16 16:38:14,937 - mmdet - INFO - Epoch [8][300/1104]	lr: 2.454e-04, eta: 3:58:35, time: 1.013, data_time: 0.008, memory: 14054, loss_cls: 0.4894, loss_bbox: 0.8255, d0.loss_cls: 0.5871, d0.loss_bbox: 0.9830, d1.loss_cls: 0.6092, d1.loss_bbox: 0.9006, d2.loss_cls: 0.6355, d2.loss_bbox: 0.8680, d3.loss_cls: 0.5352, d3.loss_bbox: 0.8528, d4.loss_cls: 0.5049, d4.loss_bbox: 0.8339, aux_task0.loss_heatmap: 0.6106, aux_task0.loss_bbox: 0.2494, aux_task1.loss_heatmap: 0.8962, aux_task1.loss_bbox: 0.3250, aux_task2.loss_heatmap: 0.8644, aux_task2.loss_bbox: 0.3425, aux_task3.loss_heatmap: 0.6917, aux_task3.loss_bbox: 0.2921, aux_task4.loss_heatmap: 0.5357, aux_task4.loss_bbox: 0.2832, aux_task5.loss_heatmap: 0.4916, aux_task5.loss_bbox: 0.2975, loss: 14.5048, grad_norm: 32.6870
2025-04-16 16:39:05,247 - mmdet - INFO - Epoch [8][350/1104]	lr: 2.460e-04, eta: 3:57:43, time: 1.006, data_time: 0.008, memory: 14054, loss_cls: 0.5189, loss_bbox: 0.8520, d0.loss_cls: 0.6147, d0.loss_bbox: 0.9993, d1.loss_cls: 0.6882, d1.loss_bbox: 0.9629, d2.loss_cls: 0.6865, d2.loss_bbox: 0.9067, d3.loss_cls: 0.5751, d3.loss_bbox: 0.8778, d4.loss_cls: 0.5380, d4.loss_bbox: 0.8619, aux_task0.loss_heatmap: 0.6530, aux_task0.loss_bbox: 0.2591, aux_task1.loss_heatmap: 0.9471, aux_task1.loss_bbox: 0.3365, aux_task2.loss_heatmap: 0.9358, aux_task2.loss_bbox: 0.3496, aux_task3.loss_heatmap: 0.7129, aux_task3.loss_bbox: 0.3000, aux_task4.loss_heatmap: 0.5560, aux_task4.loss_bbox: 0.2920, aux_task5.loss_heatmap: 0.5239, aux_task5.loss_bbox: 0.2954, loss: 15.2430, grad_norm: 29.5926
2025-04-16 16:39:56,127 - mmdet - INFO - Epoch [8][400/1104]	lr: 2.465e-04, eta: 3:56:52, time: 1.018, data_time: 0.008, memory: 14085, loss_cls: 0.5035, loss_bbox: 0.8477, d0.loss_cls: 0.5799, d0.loss_bbox: 0.9887, d1.loss_cls: 0.7108, d1.loss_bbox: 1.0100, d2.loss_cls: 0.6632, d2.loss_bbox: 0.9104, d3.loss_cls: 0.5613, d3.loss_bbox: 0.8741, d4.loss_cls: 0.5234, d4.loss_bbox: 0.8558, aux_task0.loss_heatmap: 0.6185, aux_task0.loss_bbox: 0.2538, aux_task1.loss_heatmap: 0.8815, aux_task1.loss_bbox: 0.3275, aux_task2.loss_heatmap: 0.9464, aux_task2.loss_bbox: 0.3332, aux_task3.loss_heatmap: 0.6693, aux_task3.loss_bbox: 0.2978, aux_task4.loss_heatmap: 0.5339, aux_task4.loss_bbox: 0.2938, aux_task5.loss_heatmap: 0.5210, aux_task5.loss_bbox: 0.3053, loss: 15.0107, grad_norm: 36.9184
2025-04-16 16:40:46,963 - mmdet - INFO - Epoch [8][450/1104]	lr: 2.470e-04, eta: 3:56:01, time: 1.017, data_time: 0.008, memory: 14085, loss_cls: 0.4979, loss_bbox: 0.8321, d0.loss_cls: 0.5936, d0.loss_bbox: 0.9907, d1.loss_cls: 0.6644, d1.loss_bbox: 0.9711, d2.loss_cls: 0.6382, d2.loss_bbox: 0.8921, d3.loss_cls: 0.5502, d3.loss_bbox: 0.8555, d4.loss_cls: 0.5130, d4.loss_bbox: 0.8432, aux_task0.loss_heatmap: 0.6488, aux_task0.loss_bbox: 0.2540, aux_task1.loss_heatmap: 0.8599, aux_task1.loss_bbox: 0.3234, aux_task2.loss_heatmap: 0.9427, aux_task2.loss_bbox: 0.3437, aux_task3.loss_heatmap: 0.6610, aux_task3.loss_bbox: 0.2902, aux_task4.loss_heatmap: 0.5437, aux_task4.loss_bbox: 0.2931, aux_task5.loss_heatmap: 0.4937, aux_task5.loss_bbox: 0.2960, loss: 14.7921, grad_norm: 38.0941
2025-04-16 16:41:37,839 - mmdet - INFO - Epoch [8][500/1104]	lr: 2.474e-04, eta: 3:55:10, time: 1.018, data_time: 0.008, memory: 14085, loss_cls: 0.4834, loss_bbox: 0.8139, d0.loss_cls: 0.5718, d0.loss_bbox: 0.9627, d1.loss_cls: 0.6360, d1.loss_bbox: 0.9299, d2.loss_cls: 0.6313, d2.loss_bbox: 0.8589, d3.loss_cls: 0.5347, d3.loss_bbox: 0.8380, d4.loss_cls: 0.4980, d4.loss_bbox: 0.8231, aux_task0.loss_heatmap: 0.6093, aux_task0.loss_bbox: 0.2425, aux_task1.loss_heatmap: 0.9032, aux_task1.loss_bbox: 0.3169, aux_task2.loss_heatmap: 0.8810, aux_task2.loss_bbox: 0.3340, aux_task3.loss_heatmap: 0.6580, aux_task3.loss_bbox: 0.2808, aux_task4.loss_heatmap: 0.5077, aux_task4.loss_bbox: 0.2813, aux_task5.loss_heatmap: 0.4781, aux_task5.loss_bbox: 0.2978, loss: 14.3726, grad_norm: 21.4614
2025-04-16 16:42:28,358 - mmdet - INFO - Epoch [8][550/1104]	lr: 2.478e-04, eta: 3:54:18, time: 1.010, data_time: 0.008, memory: 14085, loss_cls: 0.4713, loss_bbox: 0.7968, d0.loss_cls: 0.5564, d0.loss_bbox: 0.9457, d1.loss_cls: 0.5946, d1.loss_bbox: 0.8873, d2.loss_cls: 0.6229, d2.loss_bbox: 0.8354, d3.loss_cls: 0.5172, d3.loss_bbox: 0.8201, d4.loss_cls: 0.4862, d4.loss_bbox: 0.8049, aux_task0.loss_heatmap: 0.5884, aux_task0.loss_bbox: 0.2408, aux_task1.loss_heatmap: 0.8482, aux_task1.loss_bbox: 0.3125, aux_task2.loss_heatmap: 0.8904, aux_task2.loss_bbox: 0.3356, aux_task3.loss_heatmap: 0.6552, aux_task3.loss_bbox: 0.2832, aux_task4.loss_heatmap: 0.5088, aux_task4.loss_bbox: 0.2846, aux_task5.loss_heatmap: 0.4623, aux_task5.loss_bbox: 0.2920, loss: 14.0407, grad_norm: 23.6403
2025-04-16 16:43:18,922 - mmdet - INFO - Epoch [8][600/1104]	lr: 2.482e-04, eta: 3:53:27, time: 1.011, data_time: 0.011, memory: 14085, loss_cls: 0.4641, loss_bbox: 0.7994, d0.loss_cls: 0.5459, d0.loss_bbox: 0.9461, d1.loss_cls: 0.5721, d1.loss_bbox: 0.8841, d2.loss_cls: 0.6119, d2.loss_bbox: 0.8333, d3.loss_cls: 0.5080, d3.loss_bbox: 0.8223, d4.loss_cls: 0.4783, d4.loss_bbox: 0.8091, aux_task0.loss_heatmap: 0.6016, aux_task0.loss_bbox: 0.2434, aux_task1.loss_heatmap: 0.8585, aux_task1.loss_bbox: 0.3160, aux_task2.loss_heatmap: 0.8933, aux_task2.loss_bbox: 0.3383, aux_task3.loss_heatmap: 0.7030, aux_task3.loss_bbox: 0.2903, aux_task4.loss_heatmap: 0.4910, aux_task4.loss_bbox: 0.2782, aux_task5.loss_heatmap: 0.4982, aux_task5.loss_bbox: 0.2947, loss: 14.0811, grad_norm: 22.1552
2025-04-16 16:44:09,672 - mmdet - INFO - Epoch [8][650/1104]	lr: 2.485e-04, eta: 3:52:36, time: 1.015, data_time: 0.013, memory: 14085, loss_cls: 0.4631, loss_bbox: 0.7846, d0.loss_cls: 0.5418, d0.loss_bbox: 0.9226, d1.loss_cls: 0.5574, d1.loss_bbox: 0.8677, d2.loss_cls: 0.5938, d2.loss_bbox: 0.8189, d3.loss_cls: 0.5017, d3.loss_bbox: 0.8027, d4.loss_cls: 0.4769, d4.loss_bbox: 0.7916, aux_task0.loss_heatmap: 0.5603, aux_task0.loss_bbox: 0.2314, aux_task1.loss_heatmap: 0.8134, aux_task1.loss_bbox: 0.3164, aux_task2.loss_heatmap: 0.8932, aux_task2.loss_bbox: 0.3451, aux_task3.loss_heatmap: 0.6680, aux_task3.loss_bbox: 0.2928, aux_task4.loss_heatmap: 0.5332, aux_task4.loss_bbox: 0.2804, aux_task5.loss_heatmap: 0.4741, aux_task5.loss_bbox: 0.2961, loss: 13.8271, grad_norm: 23.9233
2025-04-16 16:45:00,435 - mmdet - INFO - Epoch [8][700/1104]	lr: 2.488e-04, eta: 3:51:44, time: 1.015, data_time: 0.016, memory: 14085, loss_cls: 0.4521, loss_bbox: 0.7884, d0.loss_cls: 0.5400, d0.loss_bbox: 0.9238, d1.loss_cls: 0.5481, d1.loss_bbox: 0.8680, d2.loss_cls: 0.5742, d2.loss_bbox: 0.8251, d3.loss_cls: 0.4936, d3.loss_bbox: 0.8056, d4.loss_cls: 0.4644, d4.loss_bbox: 0.7962, aux_task0.loss_heatmap: 0.5902, aux_task0.loss_bbox: 0.2421, aux_task1.loss_heatmap: 0.8398, aux_task1.loss_bbox: 0.3190, aux_task2.loss_heatmap: 0.8472, aux_task2.loss_bbox: 0.3353, aux_task3.loss_heatmap: 0.6004, aux_task3.loss_bbox: 0.2821, aux_task4.loss_heatmap: 0.4661, aux_task4.loss_bbox: 0.2814, aux_task5.loss_heatmap: 0.4665, aux_task5.loss_bbox: 0.2956, loss: 13.6451, grad_norm: 29.7528
2025-04-16 16:45:51,608 - mmdet - INFO - Epoch [8][750/1104]	lr: 2.491e-04, eta: 3:50:54, time: 1.023, data_time: 0.016, memory: 14085, loss_cls: 0.4574, loss_bbox: 0.7893, d0.loss_cls: 0.5405, d0.loss_bbox: 0.9252, d1.loss_cls: 0.5489, d1.loss_bbox: 0.8715, d2.loss_cls: 0.5685, d2.loss_bbox: 0.8290, d3.loss_cls: 0.4953, d3.loss_bbox: 0.8064, d4.loss_cls: 0.4700, d4.loss_bbox: 0.7965, aux_task0.loss_heatmap: 0.6126, aux_task0.loss_bbox: 0.2427, aux_task1.loss_heatmap: 0.8487, aux_task1.loss_bbox: 0.3159, aux_task2.loss_heatmap: 0.8181, aux_task2.loss_bbox: 0.3282, aux_task3.loss_heatmap: 0.6322, aux_task3.loss_bbox: 0.2823, aux_task4.loss_heatmap: 0.4987, aux_task4.loss_bbox: 0.2858, aux_task5.loss_heatmap: 0.4707, aux_task5.loss_bbox: 0.2948, loss: 13.7291, grad_norm: 22.5072
2025-04-16 16:46:42,680 - mmdet - INFO - Epoch [8][800/1104]	lr: 2.493e-04, eta: 3:50:03, time: 1.021, data_time: 0.016, memory: 14085, loss_cls: 0.4607, loss_bbox: 0.7839, d0.loss_cls: 0.5431, d0.loss_bbox: 0.9262, d1.loss_cls: 0.5586, d1.loss_bbox: 0.8687, d2.loss_cls: 0.5703, d2.loss_bbox: 0.8251, d3.loss_cls: 0.4893, d3.loss_bbox: 0.8061, d4.loss_cls: 0.4710, d4.loss_bbox: 0.7929, aux_task0.loss_heatmap: 0.5903, aux_task0.loss_bbox: 0.2380, aux_task1.loss_heatmap: 0.8380, aux_task1.loss_bbox: 0.3160, aux_task2.loss_heatmap: 0.8886, aux_task2.loss_bbox: 0.3328, aux_task3.loss_heatmap: 0.6467, aux_task3.loss_bbox: 0.2835, aux_task4.loss_heatmap: 0.5109, aux_task4.loss_bbox: 0.2778, aux_task5.loss_heatmap: 0.4649, aux_task5.loss_bbox: 0.2912, loss: 13.7743, grad_norm: 27.4968
2025-04-16 16:47:33,415 - mmdet - INFO - Epoch [8][850/1104]	lr: 2.495e-04, eta: 3:49:12, time: 1.015, data_time: 0.015, memory: 14085, loss_cls: 0.4685, loss_bbox: 0.7894, d0.loss_cls: 0.5572, d0.loss_bbox: 0.9308, d1.loss_cls: 0.5771, d1.loss_bbox: 0.8648, d2.loss_cls: 0.5997, d2.loss_bbox: 0.8248, d3.loss_cls: 0.5140, d3.loss_bbox: 0.8112, d4.loss_cls: 0.4826, d4.loss_bbox: 0.7988, aux_task0.loss_heatmap: 0.6143, aux_task0.loss_bbox: 0.2448, aux_task1.loss_heatmap: 0.8835, aux_task1.loss_bbox: 0.3172, aux_task2.loss_heatmap: 0.8793, aux_task2.loss_bbox: 0.3419, aux_task3.loss_heatmap: 0.7027, aux_task3.loss_bbox: 0.2834, aux_task4.loss_heatmap: 0.4868, aux_task4.loss_bbox: 0.2801, aux_task5.loss_heatmap: 0.4600, aux_task5.loss_bbox: 0.2934, loss: 14.0063, grad_norm: 25.5850
2025-04-16 16:48:24,575 - mmdet - INFO - Epoch [8][900/1104]	lr: 2.497e-04, eta: 3:48:21, time: 1.023, data_time: 0.015, memory: 14085, loss_cls: 0.4581, loss_bbox: 0.7750, d0.loss_cls: 0.5389, d0.loss_bbox: 0.9128, d1.loss_cls: 0.5446, d1.loss_bbox: 0.8555, d2.loss_cls: 0.5578, d2.loss_bbox: 0.8177, d3.loss_cls: 0.4921, d3.loss_bbox: 0.7955, d4.loss_cls: 0.4696, d4.loss_bbox: 0.7837, aux_task0.loss_heatmap: 0.5692, aux_task0.loss_bbox: 0.2349, aux_task1.loss_heatmap: 0.8652, aux_task1.loss_bbox: 0.3116, aux_task2.loss_heatmap: 0.8642, aux_task2.loss_bbox: 0.3365, aux_task3.loss_heatmap: 0.6369, aux_task3.loss_bbox: 0.2827, aux_task4.loss_heatmap: 0.5144, aux_task4.loss_bbox: 0.2712, aux_task5.loss_heatmap: 0.4774, aux_task5.loss_bbox: 0.2956, loss: 13.6610, grad_norm: 19.9013
2025-04-16 16:49:15,662 - mmdet - INFO - Epoch [8][950/1104]	lr: 2.498e-04, eta: 3:47:31, time: 1.022, data_time: 0.016, memory: 14085, loss_cls: 0.4586, loss_bbox: 0.7759, d0.loss_cls: 0.5411, d0.loss_bbox: 0.9202, d1.loss_cls: 0.5481, d1.loss_bbox: 0.8543, d2.loss_cls: 0.5611, d2.loss_bbox: 0.8183, d3.loss_cls: 0.4881, d3.loss_bbox: 0.8009, d4.loss_cls: 0.4683, d4.loss_bbox: 0.7868, aux_task0.loss_heatmap: 0.5954, aux_task0.loss_bbox: 0.2414, aux_task1.loss_heatmap: 0.8647, aux_task1.loss_bbox: 0.3129, aux_task2.loss_heatmap: 0.8484, aux_task2.loss_bbox: 0.3307, aux_task3.loss_heatmap: 0.6702, aux_task3.loss_bbox: 0.2945, aux_task4.loss_heatmap: 0.4771, aux_task4.loss_bbox: 0.2751, aux_task5.loss_heatmap: 0.4748, aux_task5.loss_bbox: 0.2971, loss: 13.7040, grad_norm: 24.8355
2025-04-16 16:50:06,544 - mmdet - INFO - Epoch [8][1000/1104]	lr: 2.499e-04, eta: 3:46:40, time: 1.018, data_time: 0.014, memory: 14085, loss_cls: 0.4589, loss_bbox: 0.7812, d0.loss_cls: 0.5443, d0.loss_bbox: 0.9239, d1.loss_cls: 0.5589, d1.loss_bbox: 0.8470, d2.loss_cls: 0.5778, d2.loss_bbox: 0.8165, d3.loss_cls: 0.4942, d3.loss_bbox: 0.7992, d4.loss_cls: 0.4696, d4.loss_bbox: 0.7894, aux_task0.loss_heatmap: 0.6114, aux_task0.loss_bbox: 0.2387, aux_task1.loss_heatmap: 0.8855, aux_task1.loss_bbox: 0.3157, aux_task2.loss_heatmap: 0.8769, aux_task2.loss_bbox: 0.3348, aux_task3.loss_heatmap: 0.6192, aux_task3.loss_bbox: 0.2830, aux_task4.loss_heatmap: 0.4854, aux_task4.loss_bbox: 0.2732, aux_task5.loss_heatmap: 0.4663, aux_task5.loss_bbox: 0.2928, loss: 13.7439, grad_norm: 25.9473
2025-04-16 16:50:57,295 - mmdet - INFO - Epoch [8][1050/1104]	lr: 2.500e-04, eta: 3:45:49, time: 1.015, data_time: 0.017, memory: 14085, loss_cls: 0.4629, loss_bbox: 0.7695, d0.loss_cls: 0.5384, d0.loss_bbox: 0.9155, d1.loss_cls: 0.5456, d1.loss_bbox: 0.8414, d2.loss_cls: 0.5678, d2.loss_bbox: 0.8089, d3.loss_cls: 0.5168, d3.loss_bbox: 0.7884, d4.loss_cls: 0.4780, d4.loss_bbox: 0.7783, aux_task0.loss_heatmap: 0.6065, aux_task0.loss_bbox: 0.2415, aux_task1.loss_heatmap: 0.8342, aux_task1.loss_bbox: 0.3127, aux_task2.loss_heatmap: 0.8287, aux_task2.loss_bbox: 0.3284, aux_task3.loss_heatmap: 0.6658, aux_task3.loss_bbox: 0.2847, aux_task4.loss_heatmap: 0.4935, aux_task4.loss_bbox: 0.2794, aux_task5.loss_heatmap: 0.4791, aux_task5.loss_bbox: 0.2902, loss: 13.6562, grad_norm: 20.0660
2025-04-16 16:51:48,349 - mmdet - INFO - Epoch [8][1100/1104]	lr: 2.500e-04, eta: 3:44:58, time: 1.021, data_time: 0.015, memory: 14085, loss_cls: 0.4440, loss_bbox: 0.7713, d0.loss_cls: 0.5293, d0.loss_bbox: 0.9126, d1.loss_cls: 0.5351, d1.loss_bbox: 0.8425, d2.loss_cls: 0.5500, d2.loss_bbox: 0.8081, d3.loss_cls: 0.4829, d3.loss_bbox: 0.7939, d4.loss_cls: 0.4560, d4.loss_bbox: 0.7819, aux_task0.loss_heatmap: 0.5959, aux_task0.loss_bbox: 0.2381, aux_task1.loss_heatmap: 0.8348, aux_task1.loss_bbox: 0.3118, aux_task2.loss_heatmap: 0.8393, aux_task2.loss_bbox: 0.3290, aux_task3.loss_heatmap: 0.5918, aux_task3.loss_bbox: 0.2835, aux_task4.loss_heatmap: 0.4793, aux_task4.loss_bbox: 0.2744, aux_task5.loss_heatmap: 0.4603, aux_task5.loss_bbox: 0.2916, loss: 13.4376, grad_norm: 27.1028
2025-04-16 16:51:53,011 - mmdet - INFO - Saving checkpoint at 8 epochs
2025-04-16 17:04:39,971 - mmdet - INFO - Exp name: DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01.py
2025-04-16 17:04:39,971 - mmdet - INFO - Epoch(val) [8][3010]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.4437, pts_bbox_NuScenes/car_AP_dist_1.0: 0.6171, pts_bbox_NuScenes/car_AP_dist_2.0: 0.7036, pts_bbox_NuScenes/car_AP_dist_4.0: 0.7570, pts_bbox_NuScenes/car_trans_err: 0.3222, pts_bbox_NuScenes/car_scale_err: 0.1765, pts_bbox_NuScenes/car_orient_err: 0.4552, pts_bbox_NuScenes/car_vel_err: 1.1788, pts_bbox_NuScenes/car_attr_err: 0.3146, pts_bbox_NuScenes/mATE: 0.5224, pts_bbox_NuScenes/mASE: 0.3028, pts_bbox_NuScenes/mAOE: 0.9459, pts_bbox_NuScenes/mAVE: 1.1161, pts_bbox_NuScenes/mAAE: 0.4015, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.0621, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.2225, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.3470, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.3969, pts_bbox_NuScenes/truck_trans_err: 0.6227, pts_bbox_NuScenes/truck_scale_err: 0.2571, pts_bbox_NuScenes/truck_orient_err: 0.4726, pts_bbox_NuScenes/truck_vel_err: 0.9788, pts_bbox_NuScenes/truck_attr_err: 0.3640, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0337, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.1043, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.1447, pts_bbox_NuScenes/construction_vehicle_trans_err: 0.8129, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.5099, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.2618, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1408, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.3627, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.0413, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.2258, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.4640, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.5509, pts_bbox_NuScenes/bus_trans_err: 0.6929, pts_bbox_NuScenes/bus_scale_err: 0.2085, pts_bbox_NuScenes/bus_orient_err: 0.6311, pts_bbox_NuScenes/bus_vel_err: 2.4983, pts_bbox_NuScenes/bus_attr_err: 0.5534, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.0455, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.1191, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.1878, pts_bbox_NuScenes/trailer_trans_err: 0.7929, pts_bbox_NuScenes/trailer_scale_err: 0.2766, pts_bbox_NuScenes/trailer_orient_err: 1.5403, pts_bbox_NuScenes/trailer_vel_err: 0.5478, pts_bbox_NuScenes/trailer_attr_err: 0.2441, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.1347, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.3335, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.4743, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.5520, pts_bbox_NuScenes/barrier_trans_err: 0.5517, pts_bbox_NuScenes/barrier_scale_err: 0.3371, pts_bbox_NuScenes/barrier_orient_err: 0.3653, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.1058, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.1532, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.1704, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.1824, pts_bbox_NuScenes/motorcycle_trans_err: 0.3711, pts_bbox_NuScenes/motorcycle_scale_err: 0.2743, pts_bbox_NuScenes/motorcycle_orient_err: 1.1502, pts_bbox_NuScenes/motorcycle_vel_err: 1.7119, pts_bbox_NuScenes/motorcycle_attr_err: 0.3900, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.0085, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.0109, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.0121, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.0147, pts_bbox_NuScenes/bicycle_trans_err: 0.3390, pts_bbox_NuScenes/bicycle_scale_err: 0.2961, pts_bbox_NuScenes/bicycle_orient_err: 1.1098, pts_bbox_NuScenes/bicycle_vel_err: 0.9086, pts_bbox_NuScenes/bicycle_attr_err: 0.1817, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.3820, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.6285, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.6870, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.7184, pts_bbox_NuScenes/pedestrian_trans_err: 0.4068, pts_bbox_NuScenes/pedestrian_scale_err: 0.2855, pts_bbox_NuScenes/pedestrian_orient_err: 1.5271, pts_bbox_NuScenes/pedestrian_vel_err: 0.9637, pts_bbox_NuScenes/pedestrian_attr_err: 0.8014, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.3542, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.4073, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.4450, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.5026, pts_bbox_NuScenes/traffic_cone_trans_err: 0.3118, pts_bbox_NuScenes/traffic_cone_scale_err: 0.4069, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.3295, pts_bbox_NuScenes/mAP: 0.2936
2025-04-16 17:05:37,456 - mmdet - INFO - Epoch [9][50/1104]	lr: 2.500e-04, eta: 3:44:03, time: 1.101, data_time: 0.094, memory: 14085, loss_cls: 0.4597, loss_bbox: 0.7736, d0.loss_cls: 0.5380, d0.loss_bbox: 0.9150, d1.loss_cls: 0.5465, d1.loss_bbox: 0.8447, d2.loss_cls: 0.5619, d2.loss_bbox: 0.8086, d3.loss_cls: 0.4926, d3.loss_bbox: 0.7934, d4.loss_cls: 0.4710, d4.loss_bbox: 0.7822, aux_task0.loss_heatmap: 0.5914, aux_task0.loss_bbox: 0.2387, aux_task1.loss_heatmap: 0.8413, aux_task1.loss_bbox: 0.3070, aux_task2.loss_heatmap: 0.9058, aux_task2.loss_bbox: 0.3416, aux_task3.loss_heatmap: 0.6615, aux_task3.loss_bbox: 0.2780, aux_task4.loss_heatmap: 0.5017, aux_task4.loss_bbox: 0.2732, aux_task5.loss_heatmap: 0.4559, aux_task5.loss_bbox: 0.2869, loss: 13.6701, grad_norm: 25.2110
2025-04-16 17:06:28,317 - mmdet - INFO - Epoch [9][100/1104]	lr: 2.500e-04, eta: 3:43:12, time: 1.017, data_time: 0.012, memory: 14085, loss_cls: 0.4468, loss_bbox: 0.7627, d0.loss_cls: 0.5251, d0.loss_bbox: 0.9010, d1.loss_cls: 0.5239, d1.loss_bbox: 0.8303, d2.loss_cls: 0.5355, d2.loss_bbox: 0.7997, d3.loss_cls: 0.4766, d3.loss_bbox: 0.7825, d4.loss_cls: 0.4565, d4.loss_bbox: 0.7709, aux_task0.loss_heatmap: 0.5775, aux_task0.loss_bbox: 0.2311, aux_task1.loss_heatmap: 0.8761, aux_task1.loss_bbox: 0.3197, aux_task2.loss_heatmap: 0.8219, aux_task2.loss_bbox: 0.3206, aux_task3.loss_heatmap: 0.6381, aux_task3.loss_bbox: 0.2918, aux_task4.loss_heatmap: 0.4910, aux_task4.loss_bbox: 0.2807, aux_task5.loss_heatmap: 0.4504, aux_task5.loss_bbox: 0.2899, loss: 13.4003, grad_norm: 22.5872
2025-04-16 17:07:19,202 - mmdet - INFO - Epoch [9][150/1104]	lr: 2.499e-04, eta: 3:42:21, time: 1.018, data_time: 0.014, memory: 14085, loss_cls: 0.4513, loss_bbox: 0.7639, d0.loss_cls: 0.5312, d0.loss_bbox: 0.9100, d1.loss_cls: 0.5355, d1.loss_bbox: 0.8374, d2.loss_cls: 0.5594, d2.loss_bbox: 0.7985, d3.loss_cls: 0.4839, d3.loss_bbox: 0.7869, d4.loss_cls: 0.4619, d4.loss_bbox: 0.7736, aux_task0.loss_heatmap: 0.5952, aux_task0.loss_bbox: 0.2353, aux_task1.loss_heatmap: 0.8549, aux_task1.loss_bbox: 0.3121, aux_task2.loss_heatmap: 0.8372, aux_task2.loss_bbox: 0.3342, aux_task3.loss_heatmap: 0.6606, aux_task3.loss_bbox: 0.2797, aux_task4.loss_heatmap: 0.4638, aux_task4.loss_bbox: 0.2696, aux_task5.loss_heatmap: 0.4495, aux_task5.loss_bbox: 0.2913, loss: 13.4768, grad_norm: 22.5768
2025-04-16 17:08:10,319 - mmdet - INFO - Epoch [9][200/1104]	lr: 2.499e-04, eta: 3:41:30, time: 1.022, data_time: 0.014, memory: 14085, loss_cls: 0.4408, loss_bbox: 0.7653, d0.loss_cls: 0.5201, d0.loss_bbox: 0.9053, d1.loss_cls: 0.5212, d1.loss_bbox: 0.8331, d2.loss_cls: 0.5385, d2.loss_bbox: 0.8013, d3.loss_cls: 0.4736, d3.loss_bbox: 0.7856, d4.loss_cls: 0.4523, d4.loss_bbox: 0.7737, aux_task0.loss_heatmap: 0.5864, aux_task0.loss_bbox: 0.2382, aux_task1.loss_heatmap: 0.8273, aux_task1.loss_bbox: 0.3114, aux_task2.loss_heatmap: 0.8437, aux_task2.loss_bbox: 0.3301, aux_task3.loss_heatmap: 0.6286, aux_task3.loss_bbox: 0.2873, aux_task4.loss_heatmap: 0.4691, aux_task4.loss_bbox: 0.2704, aux_task5.loss_heatmap: 0.4672, aux_task5.loss_bbox: 0.2947, loss: 13.3650, grad_norm: 21.5644
2025-04-16 17:09:01,316 - mmdet - INFO - Epoch [9][250/1104]	lr: 2.498e-04, eta: 3:40:39, time: 1.020, data_time: 0.013, memory: 14085, loss_cls: 0.4486, loss_bbox: 0.7620, d0.loss_cls: 0.5231, d0.loss_bbox: 0.9038, d1.loss_cls: 0.5257, d1.loss_bbox: 0.8293, d2.loss_cls: 0.5454, d2.loss_bbox: 0.7973, d3.loss_cls: 0.4897, d3.loss_bbox: 0.7815, d4.loss_cls: 0.4620, d4.loss_bbox: 0.7708, aux_task0.loss_heatmap: 0.5650, aux_task0.loss_bbox: 0.2293, aux_task1.loss_heatmap: 0.8407, aux_task1.loss_bbox: 0.3142, aux_task2.loss_heatmap: 0.8137, aux_task2.loss_bbox: 0.3268, aux_task3.loss_heatmap: 0.6238, aux_task3.loss_bbox: 0.2870, aux_task4.loss_heatmap: 0.5007, aux_task4.loss_bbox: 0.2777, aux_task5.loss_heatmap: 0.4664, aux_task5.loss_bbox: 0.2922, loss: 13.3765, grad_norm: 21.6210
2025-04-16 17:09:52,393 - mmdet - INFO - Epoch [9][300/1104]	lr: 2.497e-04, eta: 3:39:49, time: 1.022, data_time: 0.021, memory: 14085, loss_cls: 0.4634, loss_bbox: 0.7706, d0.loss_cls: 0.5413, d0.loss_bbox: 0.9054, d1.loss_cls: 0.5510, d1.loss_bbox: 0.8353, d2.loss_cls: 0.5721, d2.loss_bbox: 0.8068, d3.loss_cls: 0.5118, d3.loss_bbox: 0.7888, d4.loss_cls: 0.4775, d4.loss_bbox: 0.7782, aux_task0.loss_heatmap: 0.5734, aux_task0.loss_bbox: 0.2322, aux_task1.loss_heatmap: 0.8713, aux_task1.loss_bbox: 0.3138, aux_task2.loss_heatmap: 0.8070, aux_task2.loss_bbox: 0.3324, aux_task3.loss_heatmap: 0.6616, aux_task3.loss_bbox: 0.2891, aux_task4.loss_heatmap: 0.4917, aux_task4.loss_bbox: 0.2716, aux_task5.loss_heatmap: 0.4863, aux_task5.loss_bbox: 0.2929, loss: 13.6257, grad_norm: 23.1699
2025-04-16 17:10:43,088 - mmdet - INFO - Epoch [9][350/1104]	lr: 2.496e-04, eta: 3:38:57, time: 1.014, data_time: 0.014, memory: 14085, loss_cls: 0.4579, loss_bbox: 0.7674, d0.loss_cls: 0.5360, d0.loss_bbox: 0.9082, d1.loss_cls: 0.5424, d1.loss_bbox: 0.8338, d2.loss_cls: 0.5592, d2.loss_bbox: 0.8072, d3.loss_cls: 0.4958, d3.loss_bbox: 0.7887, d4.loss_cls: 0.4698, d4.loss_bbox: 0.7760, aux_task0.loss_heatmap: 0.5922, aux_task0.loss_bbox: 0.2324, aux_task1.loss_heatmap: 0.8778, aux_task1.loss_bbox: 0.3186, aux_task2.loss_heatmap: 0.8661, aux_task2.loss_bbox: 0.3365, aux_task3.loss_heatmap: 0.6658, aux_task3.loss_bbox: 0.2807, aux_task4.loss_heatmap: 0.4920, aux_task4.loss_bbox: 0.2746, aux_task5.loss_heatmap: 0.4723, aux_task5.loss_bbox: 0.2891, loss: 13.6405, grad_norm: 23.6026
2025-04-16 17:11:34,428 - mmdet - INFO - Epoch [9][400/1104]	lr: 2.494e-04, eta: 3:38:07, time: 1.027, data_time: 0.013, memory: 14085, loss_cls: 0.4427, loss_bbox: 0.7557, d0.loss_cls: 0.5232, d0.loss_bbox: 0.9059, d1.loss_cls: 0.5275, d1.loss_bbox: 0.8231, d2.loss_cls: 0.5423, d2.loss_bbox: 0.7940, d3.loss_cls: 0.4813, d3.loss_bbox: 0.7755, d4.loss_cls: 0.4544, d4.loss_bbox: 0.7636, aux_task0.loss_heatmap: 0.5728, aux_task0.loss_bbox: 0.2335, aux_task1.loss_heatmap: 0.8294, aux_task1.loss_bbox: 0.3103, aux_task2.loss_heatmap: 0.8674, aux_task2.loss_bbox: 0.3249, aux_task3.loss_heatmap: 0.6529, aux_task3.loss_bbox: 0.2756, aux_task4.loss_heatmap: 0.4699, aux_task4.loss_bbox: 0.2728, aux_task5.loss_heatmap: 0.4581, aux_task5.loss_bbox: 0.2901, loss: 13.3471, grad_norm: 23.9901
2025-04-16 17:12:25,870 - mmdet - INFO - Epoch [9][450/1104]	lr: 2.493e-04, eta: 3:37:17, time: 1.029, data_time: 0.023, memory: 14085, loss_cls: 0.4502, loss_bbox: 0.7515, d0.loss_cls: 0.5206, d0.loss_bbox: 0.8923, d1.loss_cls: 0.5200, d1.loss_bbox: 0.8170, d2.loss_cls: 0.5333, d2.loss_bbox: 0.7868, d3.loss_cls: 0.4893, d3.loss_bbox: 0.7679, d4.loss_cls: 0.4608, d4.loss_bbox: 0.7593, aux_task0.loss_heatmap: 0.5810, aux_task0.loss_bbox: 0.2341, aux_task1.loss_heatmap: 0.8026, aux_task1.loss_bbox: 0.3062, aux_task2.loss_heatmap: 0.8662, aux_task2.loss_bbox: 0.3276, aux_task3.loss_heatmap: 0.6146, aux_task3.loss_bbox: 0.2663, aux_task4.loss_heatmap: 0.5044, aux_task4.loss_bbox: 0.2749, aux_task5.loss_heatmap: 0.4721, aux_task5.loss_bbox: 0.2878, loss: 13.2869, grad_norm: 23.9683
2025-04-16 17:13:17,459 - mmdet - INFO - Epoch [9][500/1104]	lr: 2.491e-04, eta: 3:36:27, time: 1.032, data_time: 0.026, memory: 14085, loss_cls: 0.4347, loss_bbox: 0.7557, d0.loss_cls: 0.5198, d0.loss_bbox: 0.8983, d1.loss_cls: 0.5169, d1.loss_bbox: 0.8212, d2.loss_cls: 0.5310, d2.loss_bbox: 0.7923, d3.loss_cls: 0.4762, d3.loss_bbox: 0.7753, d4.loss_cls: 0.4475, d4.loss_bbox: 0.7633, aux_task0.loss_heatmap: 0.5558, aux_task0.loss_bbox: 0.2302, aux_task1.loss_heatmap: 0.8684, aux_task1.loss_bbox: 0.3117, aux_task2.loss_heatmap: 0.8088, aux_task2.loss_bbox: 0.3256, aux_task3.loss_heatmap: 0.6224, aux_task3.loss_bbox: 0.2761, aux_task4.loss_heatmap: 0.4641, aux_task4.loss_bbox: 0.2687, aux_task5.loss_heatmap: 0.4657, aux_task5.loss_bbox: 0.2934, loss: 13.2231, grad_norm: 22.3323
2025-04-16 17:14:08,506 - mmdet - INFO - Epoch [9][550/1104]	lr: 2.489e-04, eta: 3:35:36, time: 1.021, data_time: 0.015, memory: 14085, loss_cls: 0.4444, loss_bbox: 0.7566, d0.loss_cls: 0.5203, d0.loss_bbox: 0.9009, d1.loss_cls: 0.5180, d1.loss_bbox: 0.8271, d2.loss_cls: 0.5298, d2.loss_bbox: 0.8014, d3.loss_cls: 0.4783, d3.loss_bbox: 0.7776, d4.loss_cls: 0.4549, d4.loss_bbox: 0.7660, aux_task0.loss_heatmap: 0.5850, aux_task0.loss_bbox: 0.2317, aux_task1.loss_heatmap: 0.8212, aux_task1.loss_bbox: 0.3069, aux_task2.loss_heatmap: 0.8750, aux_task2.loss_bbox: 0.3263, aux_task3.loss_heatmap: 0.6374, aux_task3.loss_bbox: 0.2811, aux_task4.loss_heatmap: 0.4806, aux_task4.loss_bbox: 0.2731, aux_task5.loss_heatmap: 0.4594, aux_task5.loss_bbox: 0.2890, loss: 13.3422, grad_norm: 22.0519
2025-04-16 17:14:59,577 - mmdet - INFO - Epoch [9][600/1104]	lr: 2.487e-04, eta: 3:34:45, time: 1.021, data_time: 0.015, memory: 14085, loss_cls: 0.4407, loss_bbox: 0.7543, d0.loss_cls: 0.5204, d0.loss_bbox: 0.8980, d1.loss_cls: 0.5253, d1.loss_bbox: 0.8175, d2.loss_cls: 0.5408, d2.loss_bbox: 0.7899, d3.loss_cls: 0.4779, d3.loss_bbox: 0.7749, d4.loss_cls: 0.4513, d4.loss_bbox: 0.7648, aux_task0.loss_heatmap: 0.5609, aux_task0.loss_bbox: 0.2303, aux_task1.loss_heatmap: 0.8319, aux_task1.loss_bbox: 0.3078, aux_task2.loss_heatmap: 0.8475, aux_task2.loss_bbox: 0.3298, aux_task3.loss_heatmap: 0.6421, aux_task3.loss_bbox: 0.2826, aux_task4.loss_heatmap: 0.4554, aux_task4.loss_bbox: 0.2699, aux_task5.loss_heatmap: 0.4693, aux_task5.loss_bbox: 0.2918, loss: 13.2752, grad_norm: 24.1017
2025-04-16 17:15:52,690 - mmdet - INFO - Epoch [9][650/1104]	lr: 2.485e-04, eta: 3:33:57, time: 1.062, data_time: 0.022, memory: 14085, loss_cls: 0.4466, loss_bbox: 0.7548, d0.loss_cls: 0.5265, d0.loss_bbox: 0.8932, d1.loss_cls: 0.5239, d1.loss_bbox: 0.8142, d2.loss_cls: 0.5331, d2.loss_bbox: 0.7910, d3.loss_cls: 0.4830, d3.loss_bbox: 0.7747, d4.loss_cls: 0.4599, d4.loss_bbox: 0.7632, aux_task0.loss_heatmap: 0.5914, aux_task0.loss_bbox: 0.2281, aux_task1.loss_heatmap: 0.8065, aux_task1.loss_bbox: 0.3128, aux_task2.loss_heatmap: 0.8597, aux_task2.loss_bbox: 0.3361, aux_task3.loss_heatmap: 0.6328, aux_task3.loss_bbox: 0.2785, aux_task4.loss_heatmap: 0.5068, aux_task4.loss_bbox: 0.2706, aux_task5.loss_heatmap: 0.4766, aux_task5.loss_bbox: 0.2920, loss: 13.3559, grad_norm: 23.3212
2025-04-16 17:16:43,906 - mmdet - INFO - Epoch [9][700/1104]	lr: 2.483e-04, eta: 3:33:06, time: 1.024, data_time: 0.021, memory: 14085, loss_cls: 0.4344, loss_bbox: 0.7425, d0.loss_cls: 0.5171, d0.loss_bbox: 0.8864, d1.loss_cls: 0.5143, d1.loss_bbox: 0.8068, d2.loss_cls: 0.5299, d2.loss_bbox: 0.7875, d3.loss_cls: 0.4672, d3.loss_bbox: 0.7660, d4.loss_cls: 0.4434, d4.loss_bbox: 0.7531, aux_task0.loss_heatmap: 0.5591, aux_task0.loss_bbox: 0.2267, aux_task1.loss_heatmap: 0.8350, aux_task1.loss_bbox: 0.3095, aux_task2.loss_heatmap: 0.8447, aux_task2.loss_bbox: 0.3258, aux_task3.loss_heatmap: 0.6123, aux_task3.loss_bbox: 0.2803, aux_task4.loss_heatmap: 0.4654, aux_task4.loss_bbox: 0.2663, aux_task5.loss_heatmap: 0.4461, aux_task5.loss_bbox: 0.2884, loss: 13.1081, grad_norm: 26.1084
2025-04-16 17:17:35,174 - mmdet - INFO - Epoch [9][750/1104]	lr: 2.480e-04, eta: 3:32:16, time: 1.025, data_time: 0.017, memory: 14085, loss_cls: 0.4367, loss_bbox: 0.7407, d0.loss_cls: 0.5163, d0.loss_bbox: 0.8864, d1.loss_cls: 0.5140, d1.loss_bbox: 0.8062, d2.loss_cls: 0.5262, d2.loss_bbox: 0.7835, d3.loss_cls: 0.4641, d3.loss_bbox: 0.7631, d4.loss_cls: 0.4439, d4.loss_bbox: 0.7511, aux_task0.loss_heatmap: 0.5580, aux_task0.loss_bbox: 0.2237, aux_task1.loss_heatmap: 0.8475, aux_task1.loss_bbox: 0.3043, aux_task2.loss_heatmap: 0.7964, aux_task2.loss_bbox: 0.3222, aux_task3.loss_heatmap: 0.6464, aux_task3.loss_bbox: 0.2762, aux_task4.loss_heatmap: 0.4736, aux_task4.loss_bbox: 0.2724, aux_task5.loss_heatmap: 0.4595, aux_task5.loss_bbox: 0.2880, loss: 13.1004, grad_norm: 22.6621
2025-04-16 17:18:26,002 - mmdet - INFO - Epoch [9][800/1104]	lr: 2.478e-04, eta: 3:31:25, time: 1.017, data_time: 0.013, memory: 14085, loss_cls: 0.4445, loss_bbox: 0.7537, d0.loss_cls: 0.5267, d0.loss_bbox: 0.8947, d1.loss_cls: 0.5256, d1.loss_bbox: 0.8153, d2.loss_cls: 0.5385, d2.loss_bbox: 0.7913, d3.loss_cls: 0.4795, d3.loss_bbox: 0.7726, d4.loss_cls: 0.4550, d4.loss_bbox: 0.7627, aux_task0.loss_heatmap: 0.5781, aux_task0.loss_bbox: 0.2314, aux_task1.loss_heatmap: 0.8190, aux_task1.loss_bbox: 0.3042, aux_task2.loss_heatmap: 0.8728, aux_task2.loss_bbox: 0.3345, aux_task3.loss_heatmap: 0.6241, aux_task3.loss_bbox: 0.2734, aux_task4.loss_heatmap: 0.4784, aux_task4.loss_bbox: 0.2681, aux_task5.loss_heatmap: 0.4655, aux_task5.loss_bbox: 0.2901, loss: 13.2999, grad_norm: 26.5381
2025-04-16 17:19:16,948 - mmdet - INFO - Epoch [9][850/1104]	lr: 2.475e-04, eta: 3:30:34, time: 1.019, data_time: 0.014, memory: 14085, loss_cls: 0.4339, loss_bbox: 0.7435, d0.loss_cls: 0.5169, d0.loss_bbox: 0.8855, d1.loss_cls: 0.5150, d1.loss_bbox: 0.8033, d2.loss_cls: 0.5259, d2.loss_bbox: 0.7783, d3.loss_cls: 0.4661, d3.loss_bbox: 0.7615, d4.loss_cls: 0.4454, d4.loss_bbox: 0.7511, aux_task0.loss_heatmap: 0.5636, aux_task0.loss_bbox: 0.2292, aux_task1.loss_heatmap: 0.8333, aux_task1.loss_bbox: 0.3059, aux_task2.loss_heatmap: 0.8312, aux_task2.loss_bbox: 0.3291, aux_task3.loss_heatmap: 0.6028, aux_task3.loss_bbox: 0.2777, aux_task4.loss_heatmap: 0.4741, aux_task4.loss_bbox: 0.2664, aux_task5.loss_heatmap: 0.4557, aux_task5.loss_bbox: 0.2908, loss: 13.0865, grad_norm: 23.3447
2025-04-16 17:20:07,857 - mmdet - INFO - Epoch [9][900/1104]	lr: 2.472e-04, eta: 3:29:43, time: 1.018, data_time: 0.013, memory: 14085, loss_cls: 0.4464, loss_bbox: 0.7518, d0.loss_cls: 0.5274, d0.loss_bbox: 0.8908, d1.loss_cls: 0.5265, d1.loss_bbox: 0.8183, d2.loss_cls: 0.5386, d2.loss_bbox: 0.7906, d3.loss_cls: 0.4745, d3.loss_bbox: 0.7708, d4.loss_cls: 0.4549, d4.loss_bbox: 0.7604, aux_task0.loss_heatmap: 0.6033, aux_task0.loss_bbox: 0.2300, aux_task1.loss_heatmap: 0.8523, aux_task1.loss_bbox: 0.3023, aux_task2.loss_heatmap: 0.8356, aux_task2.loss_bbox: 0.3263, aux_task3.loss_heatmap: 0.6153, aux_task3.loss_bbox: 0.2798, aux_task4.loss_heatmap: 0.4739, aux_task4.loss_bbox: 0.2597, aux_task5.loss_heatmap: 0.4855, aux_task5.loss_bbox: 0.2914, loss: 13.3065, grad_norm: 21.7077
2025-04-16 17:20:58,978 - mmdet - INFO - Epoch [9][950/1104]	lr: 2.468e-04, eta: 3:28:52, time: 1.022, data_time: 0.014, memory: 14085, loss_cls: 0.4337, loss_bbox: 0.7384, d0.loss_cls: 0.5173, d0.loss_bbox: 0.8782, d1.loss_cls: 0.5145, d1.loss_bbox: 0.7972, d2.loss_cls: 0.5264, d2.loss_bbox: 0.7721, d3.loss_cls: 0.4591, d3.loss_bbox: 0.7567, d4.loss_cls: 0.4411, d4.loss_bbox: 0.7478, aux_task0.loss_heatmap: 0.5579, aux_task0.loss_bbox: 0.2234, aux_task1.loss_heatmap: 0.8365, aux_task1.loss_bbox: 0.3057, aux_task2.loss_heatmap: 0.8277, aux_task2.loss_bbox: 0.3164, aux_task3.loss_heatmap: 0.6427, aux_task3.loss_bbox: 0.2807, aux_task4.loss_heatmap: 0.4623, aux_task4.loss_bbox: 0.2667, aux_task5.loss_heatmap: 0.4443, aux_task5.loss_bbox: 0.2880, loss: 13.0348, grad_norm: 23.4205
2025-04-16 17:21:49,948 - mmdet - INFO - Epoch [9][1000/1104]	lr: 2.465e-04, eta: 3:28:01, time: 1.019, data_time: 0.014, memory: 14085, loss_cls: 0.4308, loss_bbox: 0.7335, d0.loss_cls: 0.5115, d0.loss_bbox: 0.8761, d1.loss_cls: 0.5105, d1.loss_bbox: 0.7948, d2.loss_cls: 0.5214, d2.loss_bbox: 0.7676, d3.loss_cls: 0.4560, d3.loss_bbox: 0.7516, d4.loss_cls: 0.4391, d4.loss_bbox: 0.7430, aux_task0.loss_heatmap: 0.5560, aux_task0.loss_bbox: 0.2257, aux_task1.loss_heatmap: 0.8366, aux_task1.loss_bbox: 0.2998, aux_task2.loss_heatmap: 0.8286, aux_task2.loss_bbox: 0.3165, aux_task3.loss_heatmap: 0.6095, aux_task3.loss_bbox: 0.2831, aux_task4.loss_heatmap: 0.4502, aux_task4.loss_bbox: 0.2595, aux_task5.loss_heatmap: 0.4512, aux_task5.loss_bbox: 0.2907, loss: 12.9431, grad_norm: 21.5109
2025-04-16 17:22:40,923 - mmdet - INFO - Epoch [9][1050/1104]	lr: 2.462e-04, eta: 3:27:10, time: 1.019, data_time: 0.014, memory: 14085, loss_cls: 0.4270, loss_bbox: 0.7297, d0.loss_cls: 0.5061, d0.loss_bbox: 0.8714, d1.loss_cls: 0.5020, d1.loss_bbox: 0.7919, d2.loss_cls: 0.5144, d2.loss_bbox: 0.7650, d3.loss_cls: 0.4554, d3.loss_bbox: 0.7482, d4.loss_cls: 0.4361, d4.loss_bbox: 0.7390, aux_task0.loss_heatmap: 0.5523, aux_task0.loss_bbox: 0.2220, aux_task1.loss_heatmap: 0.8333, aux_task1.loss_bbox: 0.3070, aux_task2.loss_heatmap: 0.8016, aux_task2.loss_bbox: 0.3113, aux_task3.loss_heatmap: 0.6248, aux_task3.loss_bbox: 0.2779, aux_task4.loss_heatmap: 0.4739, aux_task4.loss_bbox: 0.2677, aux_task5.loss_heatmap: 0.4505, aux_task5.loss_bbox: 0.2849, loss: 12.8934, grad_norm: 20.6720
2025-04-16 17:23:32,057 - mmdet - INFO - Epoch [9][1100/1104]	lr: 2.458e-04, eta: 3:26:20, time: 1.023, data_time: 0.016, memory: 14085, loss_cls: 0.4344, loss_bbox: 0.7375, d0.loss_cls: 0.5125, d0.loss_bbox: 0.8828, d1.loss_cls: 0.5095, d1.loss_bbox: 0.8046, d2.loss_cls: 0.5206, d2.loss_bbox: 0.7814, d3.loss_cls: 0.4670, d3.loss_bbox: 0.7587, d4.loss_cls: 0.4431, d4.loss_bbox: 0.7476, aux_task0.loss_heatmap: 0.5808, aux_task0.loss_bbox: 0.2278, aux_task1.loss_heatmap: 0.8202, aux_task1.loss_bbox: 0.3041, aux_task2.loss_heatmap: 0.8410, aux_task2.loss_bbox: 0.3222, aux_task3.loss_heatmap: 0.6131, aux_task3.loss_bbox: 0.2732, aux_task4.loss_heatmap: 0.4727, aux_task4.loss_bbox: 0.2607, aux_task5.loss_heatmap: 0.4593, aux_task5.loss_bbox: 0.2882, loss: 13.0629, grad_norm: 22.3169
2025-04-16 17:23:36,861 - mmdet - INFO - Saving checkpoint at 9 epochs
