2025-04-16 17:45:15,222 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.20 | packaged by conda-forge | (default, Sep 30 2024, 17:52:49) [GCC 13.3.0]
CUDA available: True
GPU 0,1: NVIDIA GeForce RTX 4090 D
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.6, V11.6.55
GCC: gcc (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0
PyTorch: 1.13.0
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2022.1-Product Build 20220311 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.6
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.6, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.14.0
OpenCV: 4.11.0
MMCV: 1.7.0
MMCV Compiler: GCC 9.4
MMCV CUDA Compiler: 11.6
MMDetection: 2.27.0
MMSegmentation: 0.30.0
MMDetection3D: 1.0.0rc6+9130d71
spconv2.0: True
------------------------------------------------------------

2025-04-16 17:45:16,044 - mmdet - INFO - 分布式训练: True
2025-04-16 17:45:16,857 - mmdet - INFO - 配置:
point_cloud_range = [-54, -54, -5.0, 54, 54, 3.0]
class_names = [
    'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',
    'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
]
dataset_type = 'NuScenesDataset'
data_root = 'data/nuscenes/'
input_modality = dict(
    use_lidar=True,
    use_camera=False,
    use_radar=False,
    use_map=False,
    use_external=False)
file_client_args = dict(backend='disk')
train_pipeline = [
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=5,
        file_client_args=dict(backend='disk')),
    dict(
        type='LoadPointsFromMultiSweeps',
        sweeps_num=9,
        use_dim=[0, 1, 2, 3, 4],
        file_client_args=dict(backend='disk'),
        pad_empty_sweeps=True,
        remove_close=True),
    dict(type='LoadAnnotations3D', with_bbox_3d=True, with_label_3d=True),
    dict(
        type='ObjectSample',
        db_sampler=dict(
            data_root='data/nuscenes/',
            info_path='data/nuscenes/nuscenes_dbinfos_train.pkl',
            rate=1.0,
            prepare=dict(
                filter_by_difficulty=[-1],
                filter_by_min_points=dict(
                    car=5,
                    truck=5,
                    bus=5,
                    trailer=5,
                    construction_vehicle=5,
                    traffic_cone=5,
                    barrier=5,
                    motorcycle=5,
                    bicycle=5,
                    pedestrian=5)),
            classes=[
                'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                'traffic_cone'
            ],
            sample_groups=dict(
                car=2,
                truck=3,
                construction_vehicle=7,
                bus=4,
                trailer=6,
                barrier=2,
                motorcycle=6,
                bicycle=6,
                pedestrian=2,
                traffic_cone=2),
            points_loader=dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=[0, 1, 2, 3, 4],
                file_client_args=dict(backend='disk')))),
    dict(
        type='GlobalRotScaleTrans',
        rot_range=[-0.785, 0.785],
        scale_ratio_range=[0.9, 1.1],
        translation_std=[0.5, 0.5, 0.5]),
    dict(
        type='RandomFlip3D',
        sync_2d=False,
        flip_ratio_bev_horizontal=0.5,
        flip_ratio_bev_vertical=0.5),
    dict(
        type='PointsRangeFilter',
        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
    dict(
        type='ObjectRangeFilter',
        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
    dict(
        type='ObjectNameFilter',
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ]),
    dict(type='PointShuffle'),
    dict(
        type='DefaultFormatBundle3D',
        class_names=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ]),
    dict(type='Collect3D', keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])
]
test_pipeline = [
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=5,
        file_client_args=dict(backend='disk')),
    dict(
        type='LoadPointsFromMultiSweeps',
        sweeps_num=9,
        use_dim=[0, 1, 2, 3, 4],
        file_client_args=dict(backend='disk'),
        pad_empty_sweeps=True,
        remove_close=True),
    dict(
        type='MultiScaleFlipAug3D',
        img_scale=(1333, 800),
        pts_scale_ratio=1,
        flip=False,
        transforms=[
            dict(
                type='GlobalRotScaleTrans',
                rot_range=[0, 0],
                scale_ratio_range=[1.0, 1.0],
                translation_std=[0, 0, 0]),
            dict(type='RandomFlip3D'),
            dict(
                type='PointsRangeFilter',
                point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
            dict(
                type='DefaultFormatBundle3D',
                class_names=[
                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                    'traffic_cone'
                ],
                with_label=False),
            dict(type='Collect3D', keys=['points'])
        ])
]
eval_pipeline = [
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=5,
        file_client_args=dict(backend='disk')),
    dict(
        type='LoadPointsFromMultiSweeps',
        sweeps_num=9,
        use_dim=[0, 1, 2, 3, 4],
        file_client_args=dict(backend='disk'),
        pad_empty_sweeps=True,
        remove_close=True),
    dict(
        type='DefaultFormatBundle3D',
        class_names=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ],
        with_label=False),
    dict(type='Collect3D', keys=['points'])
]
data = dict(
    samples_per_gpu=4,
    workers_per_gpu=4,
    train=dict(
        type='CBGSDataset',
        data_root='data/nuscenes/',
        ann_file='data/nuscenes/nuscenes_infos_train.pkl',
        pipeline=[
            dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                file_client_args=dict(backend='disk')),
            dict(
                type='LoadPointsFromMultiSweeps',
                sweeps_num=10,
                file_client_args=dict(backend='disk')),
            dict(
                type='LoadAnnotations3D',
                with_bbox_3d=True,
                with_label_3d=True),
            dict(
                type='GlobalRotScaleTrans',
                rot_range=[-0.3925, 0.3925],
                scale_ratio_range=[0.95, 1.05],
                translation_std=[0, 0, 0]),
            dict(type='RandomFlip3D', flip_ratio_bev_horizontal=0.5),
            dict(
                type='PointsRangeFilter',
                point_cloud_range=[-50, -50, -5, 50, 50, 3]),
            dict(
                type='ObjectRangeFilter',
                point_cloud_range=[-50, -50, -5, 50, 50, 3]),
            dict(
                type='ObjectNameFilter',
                classes=[
                    'car', 'truck', 'trailer', 'bus', 'construction_vehicle',
                    'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone',
                    'barrier'
                ]),
            dict(type='PointShuffle'),
            dict(
                type='DefaultFormatBundle3D',
                class_names=[
                    'car', 'truck', 'trailer', 'bus', 'construction_vehicle',
                    'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone',
                    'barrier'
                ]),
            dict(
                type='Collect3D',
                keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])
        ],
        classes=[
            'car', 'truck', 'trailer', 'bus', 'construction_vehicle',
            'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier'
        ],
        modality=dict(
            use_lidar=True,
            use_camera=False,
            use_radar=False,
            use_map=False,
            use_external=False),
        test_mode=False,
        box_type_3d='LiDAR',
        split=14,
        dataset=dict(
            type='NuScenesDataset',
            data_root='data/nuscenes/',
            ann_file='data/nuscenes/nuscenes_infos_train.pkl',
            pipeline=[
                dict(
                    type='LoadPointsFromFile',
                    coord_type='LIDAR',
                    load_dim=5,
                    use_dim=5,
                    file_client_args=dict(backend='disk')),
                dict(
                    type='LoadPointsFromMultiSweeps',
                    sweeps_num=9,
                    use_dim=[0, 1, 2, 3, 4],
                    file_client_args=dict(backend='disk'),
                    pad_empty_sweeps=True,
                    remove_close=True),
                dict(
                    type='LoadAnnotations3D',
                    with_bbox_3d=True,
                    with_label_3d=True),
                dict(
                    type='ObjectSample',
                    db_sampler=dict(
                        data_root='data/nuscenes/',
                        info_path='data/nuscenes/nuscenes_dbinfos_train.pkl',
                        rate=1.0,
                        prepare=dict(
                            filter_by_difficulty=[-1],
                            filter_by_min_points=dict(
                                car=5,
                                truck=5,
                                bus=5,
                                trailer=5,
                                construction_vehicle=5,
                                traffic_cone=5,
                                barrier=5,
                                motorcycle=5,
                                bicycle=5,
                                pedestrian=5)),
                        classes=[
                            'car', 'truck', 'construction_vehicle', 'bus',
                            'trailer', 'barrier', 'motorcycle', 'bicycle',
                            'pedestrian', 'traffic_cone'
                        ],
                        sample_groups=dict(
                            car=2,
                            truck=3,
                            construction_vehicle=7,
                            bus=4,
                            trailer=6,
                            barrier=2,
                            motorcycle=6,
                            bicycle=6,
                            pedestrian=2,
                            traffic_cone=2),
                        points_loader=dict(
                            type='LoadPointsFromFile',
                            coord_type='LIDAR',
                            load_dim=5,
                            use_dim=[0, 1, 2, 3, 4],
                            file_client_args=dict(backend='disk')))),
                dict(
                    type='GlobalRotScaleTrans',
                    rot_range=[-0.785, 0.785],
                    scale_ratio_range=[0.9, 1.1],
                    translation_std=[0.5, 0.5, 0.5]),
                dict(
                    type='RandomFlip3D',
                    sync_2d=False,
                    flip_ratio_bev_horizontal=0.5,
                    flip_ratio_bev_vertical=0.5),
                dict(
                    type='PointsRangeFilter',
                    point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
                dict(
                    type='ObjectRangeFilter',
                    point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
                dict(
                    type='ObjectNameFilter',
                    classes=[
                        'car', 'truck', 'construction_vehicle', 'bus',
                        'trailer', 'barrier', 'motorcycle', 'bicycle',
                        'pedestrian', 'traffic_cone'
                    ]),
                dict(type='PointShuffle'),
                dict(
                    type='DefaultFormatBundle3D',
                    class_names=[
                        'car', 'truck', 'construction_vehicle', 'bus',
                        'trailer', 'barrier', 'motorcycle', 'bicycle',
                        'pedestrian', 'traffic_cone'
                    ]),
                dict(
                    type='Collect3D',
                    keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])
            ],
            classes=[
                'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                'traffic_cone'
            ],
            test_mode=False,
            use_valid_flag=True,
            box_type_3d='LiDAR')),
    val=dict(
        type='NuScenesDataset',
        data_root='data/nuscenes/',
        ann_file='data/nuscenes/nuscenes_infos_val.pkl',
        pipeline=[
            dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                file_client_args=dict(backend='disk')),
            dict(
                type='LoadPointsFromMultiSweeps',
                sweeps_num=9,
                use_dim=[0, 1, 2, 3, 4],
                file_client_args=dict(backend='disk'),
                pad_empty_sweeps=True,
                remove_close=True),
            dict(
                type='MultiScaleFlipAug3D',
                img_scale=(1333, 800),
                pts_scale_ratio=1,
                flip=False,
                transforms=[
                    dict(
                        type='GlobalRotScaleTrans',
                        rot_range=[0, 0],
                        scale_ratio_range=[1.0, 1.0],
                        translation_std=[0, 0, 0]),
                    dict(type='RandomFlip3D'),
                    dict(
                        type='PointsRangeFilter',
                        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
                    dict(
                        type='DefaultFormatBundle3D',
                        class_names=[
                            'car', 'truck', 'construction_vehicle', 'bus',
                            'trailer', 'barrier', 'motorcycle', 'bicycle',
                            'pedestrian', 'traffic_cone'
                        ],
                        with_label=False),
                    dict(type='Collect3D', keys=['points'])
                ])
        ],
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ],
        modality=dict(
            use_lidar=True,
            use_camera=False,
            use_radar=False,
            use_map=False,
            use_external=False),
        test_mode=True,
        box_type_3d='LiDAR'),
    test=dict(
        type='NuScenesDataset',
        data_root='data/nuscenes/',
        ann_file='data/nuscenes/nuscenes_infos_val.pkl',
        pipeline=[
            dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                file_client_args=dict(backend='disk')),
            dict(
                type='LoadPointsFromMultiSweeps',
                sweeps_num=9,
                use_dim=[0, 1, 2, 3, 4],
                file_client_args=dict(backend='disk'),
                pad_empty_sweeps=True,
                remove_close=True),
            dict(
                type='MultiScaleFlipAug3D',
                img_scale=(1333, 800),
                pts_scale_ratio=1,
                flip=False,
                transforms=[
                    dict(
                        type='GlobalRotScaleTrans',
                        rot_range=[0, 0],
                        scale_ratio_range=[1.0, 1.0],
                        translation_std=[0, 0, 0]),
                    dict(type='RandomFlip3D'),
                    dict(
                        type='PointsRangeFilter',
                        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
                    dict(
                        type='DefaultFormatBundle3D',
                        class_names=[
                            'car', 'truck', 'construction_vehicle', 'bus',
                            'trailer', 'barrier', 'motorcycle', 'bicycle',
                            'pedestrian', 'traffic_cone'
                        ],
                        with_label=False),
                    dict(type='Collect3D', keys=['points'])
                ])
        ],
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ],
        modality=dict(
            use_lidar=True,
            use_camera=False,
            use_radar=False,
            use_map=False,
            use_external=False),
        test_mode=True,
        box_type_3d='LiDAR'))
evaluation = dict(
    interval=1,
    pipeline=[
        dict(
            type='LoadPointsFromFile',
            coord_type='LIDAR',
            load_dim=5,
            use_dim=5,
            file_client_args=dict(backend='disk')),
        dict(
            type='LoadPointsFromMultiSweeps',
            sweeps_num=10,
            file_client_args=dict(backend='disk')),
        dict(
            type='DefaultFormatBundle3D',
            class_names=[
                'car', 'truck', 'trailer', 'bus', 'construction_vehicle',
                'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone',
                'barrier'
            ],
            with_label=False),
        dict(type='Collect3D', keys=['points'])
    ])
optimizer = dict(type='AdamW', lr=0.0001, weight_decay=0.01)
optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))
lr_config = dict(
    policy='cyclic',
    target_ratio=(10, 0.0001),
    cyclic_times=1,
    step_ratio_up=0.4)
momentum_config = dict(
    policy='cyclic',
    target_ratio=(0.8947368421052632, 1),
    cyclic_times=1,
    step_ratio_up=0.4)
runner = dict(type='EpochBasedRunner', max_epochs=20)
checkpoint_config = dict(interval=1)
log_config = dict(
    interval=50,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
work_dir = './work_dirs/DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01/两张卡每张卡4'
load_from = None
resume_from = 'work_dirs/DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01/两张卡每张卡4/epoch_8.pth'
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
plugin = 'plugin/futr3d'
voxel_size = [0.075, 0.075, 0.2]
center_head = dict(
    type='CenterHead',
    in_channels=512,
    tasks=[
        dict(num_class=1, class_names=['car']),
        dict(num_class=2, class_names=['truck', 'construction_vehicle']),
        dict(num_class=2, class_names=['bus', 'trailer']),
        dict(num_class=1, class_names=['barrier']),
        dict(num_class=2, class_names=['motorcycle', 'bicycle']),
        dict(num_class=2, class_names=['pedestrian', 'traffic_cone'])
    ],
    common_heads=dict(
        reg=(2, 2), height=(1, 2), dim=(3, 2), rot=(2, 2), vel=(2, 2)),
    share_conv_channel=64,
    bbox_coder=dict(
        type='CenterPointBBoxCoder',
        pc_range=[-54, -54],
        post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],
        max_num=500,
        score_threshold=0.1,
        out_size_factor=8,
        voxel_size=[0.075, 0.075],
        code_size=9),
    separate_head=dict(type='SeparateHead', init_bias=-2.19, final_kernel=3),
    loss_cls=dict(type='GaussianFocalLoss', reduction='mean'),
    loss_bbox=dict(type='L1Loss', reduction='mean', loss_weight=0.25),
    norm_bbox=True)
model = dict(
    type='FUTR3D',
    aux_weight=0.5,
    pts_voxel_layer=dict(
        max_num_points=10,
        voxel_size=[0.075, 0.075, 0.2],
        max_voxels=(120000, 160000),
        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
    pts_voxel_encoder=dict(type='HardSimpleVFE', num_features=5),
    pts_middle_encoder=dict(
        type='SparseEncoder',
        in_channels=5,
        sparse_shape=[41, 1440, 1440],
        output_channels=128,
        order=('conv', 'norm', 'act'),
        encoder_channels=((16, 16, 32), (32, 32, 64), (64, 64, 128), (128,
                                                                      128)),
        encoder_paddings=((0, 0, 1), (0, 0, 1), (0, 0, [0, 1, 1]), (0, 0)),
        block_type='basicblock'),
    pts_backbone=dict(
        type='SECOND',
        in_channels=256,
        out_channels=[128, 256],
        layer_nums=[5, 5],
        layer_strides=[1, 2],
        norm_cfg=dict(type='BN', eps=0.001, momentum=0.01),
        conv_cfg=dict(type='Conv2d', bias=False)),
    pts_neck=dict(
        type='FPN',
        norm_cfg=dict(type='BN2d', eps=0.001, momentum=0.01),
        act_cfg=dict(type='ReLU', inplace=False),
        in_channels=[128, 256],
        out_channels=256,
        start_level=0,
        add_extra_convs=True,
        num_outs=4,
        relu_before_extra_convs=True),
    pts_bbox_head=dict(
        type='FUTR3DHead',
        use_dab=True,
        use_dss=True,
        use_hybrid=True,
        hybrid=[1, 2, 3, 4, 5],
        dss_batch_first=False,
        dss_drop_prob=0.1,
        dss_mamba_prenorm=False,
        dss_mamba_cfg=dict(),
        dss_mamba_version='DSSMamba_Gigantic',
        dss_num_layers=3,
        dss_rope=False,
        dss_morton_rearrange=True,
        dss_conv_path=False,
        dss_xy=True,
        anchor_size=3,
        use_aux=True,
        aux_head=dict(
            type='CenterHead',
            in_channels=512,
            tasks=[
                dict(num_class=1, class_names=['car']),
                dict(
                    num_class=2, class_names=['truck',
                                              'construction_vehicle']),
                dict(num_class=2, class_names=['bus', 'trailer']),
                dict(num_class=1, class_names=['barrier']),
                dict(num_class=2, class_names=['motorcycle', 'bicycle']),
                dict(num_class=2, class_names=['pedestrian', 'traffic_cone'])
            ],
            common_heads=dict(
                reg=(2, 2), height=(1, 2), dim=(3, 2), rot=(2, 2), vel=(2, 2)),
            share_conv_channel=64,
            bbox_coder=dict(
                type='CenterPointBBoxCoder',
                pc_range=[-54, -54],
                post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],
                max_num=500,
                score_threshold=0.1,
                out_size_factor=8,
                voxel_size=[0.075, 0.075],
                code_size=9),
            separate_head=dict(
                type='SeparateHead', init_bias=-2.19, final_kernel=3),
            loss_cls=dict(type='GaussianFocalLoss', reduction='mean'),
            loss_bbox=dict(type='L1Loss', reduction='mean', loss_weight=0.25),
            norm_bbox=True),
        mix_selection=False,
        num_query=900,
        num_classes=10,
        in_channels=256,
        pc_range=[-54, -54, -5.0, 54, 54, 3.0],
        sync_cls_avg_factor=True,
        with_box_refine=True,
        as_two_stage=False,
        code_weights=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2],
        transformer=dict(
            type='FUTR3DTransformer',
            use_dab=True,
            decoder=dict(
                type='FUTR3DTransformerDecoder',
                num_layers=6,
                use_dab=True,
                anchor_size=3,
                return_intermediate=True,
                transformerlayers=dict(
                    type='DetrTransformerDecoderLayer',
                    attn_cfgs=[
                        dict(
                            type='MultiheadAttention',
                            embed_dims=256,
                            num_heads=8,
                            dropout=0.1),
                        dict(type='FUTR3DAttention', embed_dims=256)
                    ],
                    feedforward_channels=1024,
                    ffn_dropout=0.1,
                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',
                                     'ffn', 'norm')))),
        positional_encoding=dict(
            type='SinePositionalEncoding',
            num_feats=128,
            normalize=True,
            offset=-0.5),
        loss_cls=dict(
            type='FocalLoss',
            use_sigmoid=True,
            gamma=2.0,
            alpha=0.25,
            loss_weight=2.0),
        loss_bbox=dict(type='L1Loss', loss_weight=0.25),
        loss_iou=dict(type='GIoULoss', loss_weight=0)),
    train_cfg=dict(
        pts=dict(
            point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0],
            pc_range=[-54, -54, -5.0, 54, 54, 3.0],
            grid_size=[1440, 1440, 40],
            voxel_size=[0.075, 0.075, 0.2],
            out_size_factor=8,
            dense_reg=1,
            gaussian_overlap=0.1,
            max_objs=500,
            min_radius=2,
            code_weights=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2],
            assigner=dict(
                type='HungarianAssigner3D',
                cls_cost=dict(type='FocalLossCost', weight=2.0),
                reg_cost=dict(type='BBox3DL1Cost', weight=0.25),
                iou_cost=dict(type='IoUCost', weight=0)))),
    test_cfg=dict(
        pts=dict(
            pc_range=[-54, -54],
            post_center_limit_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],
            max_per_img=500,
            max_pool_nms=False,
            min_radius=[4, 12, 10, 1, 0.85, 0.175],
            out_size_factor=8,
            voxel_size=[0.075, 0.075],
            nms_type='circle',
            pre_max_size=1000,
            post_max_size=83,
            nms_thr=0.2,
            max_num=300,
            score_threshold=0,
            post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0])))
db_sampler = dict(
    data_root='data/nuscenes/',
    info_path='data/nuscenes/nuscenes_dbinfos_train.pkl',
    rate=1.0,
    prepare=dict(
        filter_by_difficulty=[-1],
        filter_by_min_points=dict(
            car=5,
            truck=5,
            bus=5,
            trailer=5,
            construction_vehicle=5,
            traffic_cone=5,
            barrier=5,
            motorcycle=5,
            bicycle=5,
            pedestrian=5)),
    classes=[
        'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',
        'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
    ],
    sample_groups=dict(
        car=2,
        truck=3,
        construction_vehicle=7,
        bus=4,
        trailer=6,
        barrier=2,
        motorcycle=6,
        bicycle=6,
        pedestrian=2,
        traffic_cone=2),
    points_loader=dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=[0, 1, 2, 3, 4],
        file_client_args=dict(backend='disk')))
find_unused_parameters = True
custom_hooks = [dict(type='FadeOjectSampleHook', num_last_epochs=5)]
gpu_ids = range(0, 2)

2025-04-16 17:45:16,858 - mmdet - INFO - 设置随机种子为 0, deterministic: False
2025-04-16 17:45:17,063 - mmdet - INFO - initialize SECOND with init_cfg {'type': 'Kaiming', 'layer': 'Conv2d'}
2025-04-16 17:45:17,074 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
Name of parameter - Initialization information

pts_middle_encoder.conv_input.0.weight - torch.Size([16, 3, 3, 3, 5]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.conv_input.1.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.conv_input.1.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.0.conv1.weight - torch.Size([16, 3, 3, 3, 16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.0.bn1.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.0.bn1.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.0.conv2.weight - torch.Size([16, 3, 3, 3, 16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.0.bn2.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.0.bn2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.1.conv1.weight - torch.Size([16, 3, 3, 3, 16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.1.bn1.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.1.bn1.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.1.conv2.weight - torch.Size([16, 3, 3, 3, 16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.1.bn2.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.1.bn2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.2.0.weight - torch.Size([32, 3, 3, 3, 16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.2.1.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.2.1.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.0.conv1.weight - torch.Size([32, 3, 3, 3, 32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.0.bn1.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.0.bn1.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.0.conv2.weight - torch.Size([32, 3, 3, 3, 32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.0.bn2.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.0.bn2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.1.conv1.weight - torch.Size([32, 3, 3, 3, 32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.1.bn1.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.1.bn1.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.1.conv2.weight - torch.Size([32, 3, 3, 3, 32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.1.bn2.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.1.bn2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.2.0.weight - torch.Size([64, 3, 3, 3, 32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.2.1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.2.1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.0.conv1.weight - torch.Size([64, 3, 3, 3, 64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.0.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.0.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.0.conv2.weight - torch.Size([64, 3, 3, 3, 64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.0.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.0.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.1.conv1.weight - torch.Size([64, 3, 3, 3, 64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.1.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.1.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.1.conv2.weight - torch.Size([64, 3, 3, 3, 64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.1.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.1.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.2.0.weight - torch.Size([128, 3, 3, 3, 64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.2.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.2.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.0.conv1.weight - torch.Size([128, 3, 3, 3, 128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.0.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.0.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.0.conv2.weight - torch.Size([128, 3, 3, 3, 128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.0.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.0.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.1.conv1.weight - torch.Size([128, 3, 3, 3, 128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.1.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.1.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.1.conv2.weight - torch.Size([128, 3, 3, 3, 128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.1.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.1.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.conv_out.0.weight - torch.Size([128, 3, 1, 1, 128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.conv_out.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.conv_out.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.0.weight - torch.Size([128, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.0.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.3.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.0.4.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.4.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.6.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.0.7.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.7.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.9.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.0.10.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.10.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.12.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.0.13.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.13.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.15.weight - torch.Size([128, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.0.16.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.0.16.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.0.weight - torch.Size([256, 128, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.1.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.3.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.1.4.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.4.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.6.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.1.7.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.7.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.9.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.1.10.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.10.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.12.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.1.13.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.13.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.15.weight - torch.Size([256, 256, 3, 3]): 
KaimingInit: a=0, mode=fan_out, nonlinearity=relu, distribution =normal, bias=0 

pts_backbone.blocks.1.16.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.blocks.1.16.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.lateral_convs.0.conv.weight - torch.Size([256, 128, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

pts_neck.lateral_convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.lateral_convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.lateral_convs.1.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

pts_neck.lateral_convs.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.lateral_convs.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

pts_neck.fpn_convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

pts_neck.fpn_convs.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

pts_neck.fpn_convs.2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

pts_neck.fpn_convs.3.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.level_embeds - torch.Size([4, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.attentions.0.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.attentions.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.attentions.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.attentions.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.ffns.0.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.ffns.0.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.ffns.0.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.0.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.1.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.layers.2.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.ffns.0.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.ffns.0.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.ffns.0.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.0.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.1.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.layers.2.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.ffns.0.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.ffns.0.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.ffns.0.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.0.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.1.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.layers.2.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.ffns.0.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.ffns.0.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.ffns.0.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.0.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.1.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.layers.2.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.ffns.0.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.ffns.0.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.ffns.0.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.0.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.norm.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.1.norm.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.A_log_f - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.A_log_b - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.D_f - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.D_b - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.A_log_f_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.A_log_b_xy - torch.Size([256, 128]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.D_f_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.D_b_xy - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.in_proj.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.in_proj_xy.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.x_proj_f.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.x_proj_b.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.dt_proj_f.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.dt_proj_f.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.dt_proj_b.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.dt_proj_b.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.x_proj_f_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.x_proj_b_xy.weight - torch.Size([272, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.dt_proj_f_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.dt_proj_f_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.dt_proj_b_xy.weight - torch.Size([256, 16]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.dt_proj_b_xy.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.layers.2.mamba.out_proj.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.ffns.0.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.ffns.0.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.ffns.0.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.query_scale.layers.0.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.query_scale.layers.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.query_scale.layers.1.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.query_scale.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.ref_point_head.layers.0.weight - torch.Size([256, 384]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.ref_point_head.layers.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.ref_point_head.layers.1.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.ref_point_head.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.cls_branches.0.weight - torch.Size([10, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.cls_branches.0.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.cls_branches.1.weight - torch.Size([10, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.cls_branches.1.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.cls_branches.2.weight - torch.Size([10, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.cls_branches.2.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.cls_branches.3.weight - torch.Size([10, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.cls_branches.3.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.cls_branches.4.weight - torch.Size([10, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.cls_branches.4.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.cls_branches.5.weight - torch.Size([10, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.cls_branches.5.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.0.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.0.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.0.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.0.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.0.4.weight - torch.Size([10, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.0.4.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.1.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.1.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.1.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.1.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.1.4.weight - torch.Size([10, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.1.4.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.2.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.2.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.2.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.2.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.2.4.weight - torch.Size([10, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.2.4.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.3.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.3.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.3.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.3.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.3.4.weight - torch.Size([10, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.3.4.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.4.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.4.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.4.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.4.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.4.4.weight - torch.Size([10, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.4.4.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.5.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.5.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.5.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.5.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.5.4.weight - torch.Size([10, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.5.4.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.tgt_embed.weight - torch.Size([900, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.refpoint_embed.weight - torch.Size([900, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.shared_conv.conv.weight - torch.Size([64, 512, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.shared_conv.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.shared_conv.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.reg.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.reg.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.reg.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.reg.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.reg.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.height.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.height.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.height.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.height.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.height.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.dim.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.dim.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.dim.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.dim.1.weight - torch.Size([3, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.dim.1.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.rot.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.rot.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.rot.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.rot.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.rot.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.vel.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.vel.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.vel.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.vel.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.vel.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.heatmap.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.heatmap.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.heatmap.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.heatmap.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.heatmap.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.reg.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.reg.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.reg.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.reg.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.reg.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.height.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.height.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.height.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.height.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.height.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.dim.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.dim.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.dim.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.dim.1.weight - torch.Size([3, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.dim.1.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.rot.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.rot.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.rot.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.rot.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.rot.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.vel.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.vel.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.vel.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.vel.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.vel.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.heatmap.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.heatmap.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.heatmap.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.heatmap.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.heatmap.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.reg.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.reg.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.reg.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.reg.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.reg.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.height.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.height.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.height.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.height.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.height.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.dim.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.dim.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.dim.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.dim.1.weight - torch.Size([3, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.dim.1.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.rot.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.rot.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.rot.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.rot.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.rot.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.vel.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.vel.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.vel.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.vel.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.vel.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.heatmap.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.heatmap.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.heatmap.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.heatmap.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.heatmap.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.reg.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.reg.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.reg.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.reg.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.reg.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.height.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.height.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.height.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.height.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.height.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.dim.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.dim.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.dim.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.dim.1.weight - torch.Size([3, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.dim.1.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.rot.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.rot.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.rot.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.rot.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.rot.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.vel.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.vel.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.vel.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.vel.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.vel.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.heatmap.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.heatmap.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.heatmap.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.heatmap.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.heatmap.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.reg.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.reg.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.reg.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.reg.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.reg.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.height.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.height.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.height.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.height.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.height.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.dim.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.dim.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.dim.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.dim.1.weight - torch.Size([3, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.dim.1.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.rot.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.rot.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.rot.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.rot.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.rot.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.vel.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.vel.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.vel.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.vel.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.vel.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.heatmap.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.heatmap.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.heatmap.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.heatmap.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.heatmap.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.reg.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.reg.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.reg.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.reg.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.reg.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.height.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.height.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.height.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.height.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.height.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.dim.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.dim.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.dim.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.dim.1.weight - torch.Size([3, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.dim.1.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.rot.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.rot.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.rot.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.rot.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.rot.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.vel.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.vel.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.vel.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.vel.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.vel.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.heatmap.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.heatmap.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.heatmap.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.heatmap.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.heatmap.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  
2025-04-16 17:45:17,162 - mmdet - INFO - Model:
FUTR3D(
  (pts_voxel_layer): Voxelization(voxel_size=[0.075, 0.075, 0.2], point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0], max_num_points=10, max_voxels=(120000, 160000), deterministic=True)
  (pts_voxel_encoder): HardSimpleVFE()
  (pts_middle_encoder): SparseEncoder(
    (conv_input): SparseSequential(
      (0): SubMConv3d(5, 16, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
      (1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (encoder_layers): SparseSequential(
      (encoder_layer1): SparseSequential(
        (0): SparseBasicBlock(
          (conv1): SubMConv3d(16, 16, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(16, 16, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): SparseBasicBlock(
          (conv1): SubMConv3d(16, 16, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(16, 16, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): SparseSequential(
          (0): SparseConv3d(16, 32, kernel_size=[3, 3, 3], stride=[2, 2, 2], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (encoder_layer2): SparseSequential(
        (0): SparseBasicBlock(
          (conv1): SubMConv3d(32, 32, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(32, 32, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): SparseBasicBlock(
          (conv1): SubMConv3d(32, 32, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(32, 32, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): SparseSequential(
          (0): SparseConv3d(32, 64, kernel_size=[3, 3, 3], stride=[2, 2, 2], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (encoder_layer3): SparseSequential(
        (0): SparseBasicBlock(
          (conv1): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): SparseBasicBlock(
          (conv1): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): SparseSequential(
          (0): SparseConv3d(64, 128, kernel_size=[3, 3, 3], stride=[2, 2, 2], padding=[0, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (encoder_layer4): SparseSequential(
        (0): SparseBasicBlock(
          (conv1): SubMConv3d(128, 128, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(128, 128, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): SparseBasicBlock(
          (conv1): SubMConv3d(128, 128, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(128, 128, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (conv_out): SparseSequential(
      (0): SparseConv3d(128, 128, kernel_size=[3, 1, 1], stride=[2, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
      (1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (pts_backbone): SECOND(
    (blocks): ModuleList(
      (0): Sequential(
        (0): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (7): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
        (9): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (10): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (11): ReLU(inplace=True)
        (12): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (13): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (14): ReLU(inplace=True)
        (15): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (16): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (17): ReLU(inplace=True)
      )
      (1): Sequential(
        (0): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (4): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (7): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (10): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (11): ReLU(inplace=True)
        (12): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (13): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (14): ReLU(inplace=True)
        (15): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (16): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (17): ReLU(inplace=True)
      )
    )
  )
  init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
  (pts_neck): FPN(
    (lateral_convs): ModuleList(
      (0): ConvModule(
        (conv): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
      (1): ConvModule(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
    )
    (fpn_convs): ModuleList(
      (0): ConvModule(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
      (1): ConvModule(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
      (2): ConvModule(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
      (3): ConvModule(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
    )
  )
  init_cfg={'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
  (pts_bbox_head): FUTR3DHead(
    (loss_cls): FocalLoss()
    (loss_bbox): L1Loss()
    (loss_iou): GIoULoss()
    (activate): ReLU(inplace=True)
    (positional_encoding): SinePositionalEncoding(num_feats=128, temperature=10000, normalize=True, scale=6.283185307179586, eps=1e-06)
    (transformer): FUTR3DTransformer(
      (decoder): FUTR3DTransformerDecoder(
        (layers): ModuleList(
          (0): DetrTransformerDecoderLayer(
            (attentions): ModuleList(
              (0): MultiheadAttention(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.0, inplace=False)
                (dropout_layer): Dropout(p=0.1, inplace=False)
              )
              (1): FUTR3DAttention(
                (dropout): Dropout(p=0.1, inplace=False)
                (sampling_offsets): Linear(in_features=256, out_features=256, bias=True)
                (attention_weights): Linear(in_features=256, out_features=128, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
            )
            (ffns): ModuleList(
              (0): FFN(
                (activate): ReLU(inplace=True)
                (layers): Sequential(
                  (0): Sequential(
                    (0): Linear(in_features=256, out_features=1024, bias=True)
                    (1): ReLU(inplace=True)
                    (2): Dropout(p=0.1, inplace=False)
                  )
                  (1): Linear(in_features=1024, out_features=256, bias=True)
                  (2): Dropout(p=0.1, inplace=False)
                )
                (dropout_layer): Identity()
              )
            )
            (norms): ModuleList(
              (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (1): DetrTransformerDecoderLayer(
            (attentions): ModuleList(
              (0): DSS(
                (layers): ModuleList(
                  (0): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): Identity()
                    (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  )
                  (1): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): DropPath(drop_prob=0.050)
                    (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  )
                  (2): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): DropPath(drop_prob=0.100)
                    (norm): Identity()
                  )
                )
              )
              (1): FUTR3DAttention(
                (dropout): Dropout(p=0.1, inplace=False)
                (sampling_offsets): Linear(in_features=256, out_features=256, bias=True)
                (attention_weights): Linear(in_features=256, out_features=128, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
            )
            (ffns): ModuleList(
              (0): FFN(
                (activate): ReLU(inplace=True)
                (layers): Sequential(
                  (0): Sequential(
                    (0): Linear(in_features=256, out_features=1024, bias=True)
                    (1): ReLU(inplace=True)
                    (2): Dropout(p=0.1, inplace=False)
                  )
                  (1): Linear(in_features=1024, out_features=256, bias=True)
                  (2): Dropout(p=0.1, inplace=False)
                )
                (dropout_layer): Identity()
              )
            )
            (norms): ModuleList(
              (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (2): DetrTransformerDecoderLayer(
            (attentions): ModuleList(
              (0): DSS(
                (layers): ModuleList(
                  (0): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): Identity()
                    (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  )
                  (1): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): DropPath(drop_prob=0.050)
                    (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  )
                  (2): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): DropPath(drop_prob=0.100)
                    (norm): Identity()
                  )
                )
              )
              (1): FUTR3DAttention(
                (dropout): Dropout(p=0.1, inplace=False)
                (sampling_offsets): Linear(in_features=256, out_features=256, bias=True)
                (attention_weights): Linear(in_features=256, out_features=128, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
            )
            (ffns): ModuleList(
              (0): FFN(
                (activate): ReLU(inplace=True)
                (layers): Sequential(
                  (0): Sequential(
                    (0): Linear(in_features=256, out_features=1024, bias=True)
                    (1): ReLU(inplace=True)
                    (2): Dropout(p=0.1, inplace=False)
                  )
                  (1): Linear(in_features=1024, out_features=256, bias=True)
                  (2): Dropout(p=0.1, inplace=False)
                )
                (dropout_layer): Identity()
              )
            )
            (norms): ModuleList(
              (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (3): DetrTransformerDecoderLayer(
            (attentions): ModuleList(
              (0): DSS(
                (layers): ModuleList(
                  (0): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): Identity()
                    (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  )
                  (1): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): DropPath(drop_prob=0.050)
                    (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  )
                  (2): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): DropPath(drop_prob=0.100)
                    (norm): Identity()
                  )
                )
              )
              (1): FUTR3DAttention(
                (dropout): Dropout(p=0.1, inplace=False)
                (sampling_offsets): Linear(in_features=256, out_features=256, bias=True)
                (attention_weights): Linear(in_features=256, out_features=128, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
            )
            (ffns): ModuleList(
              (0): FFN(
                (activate): ReLU(inplace=True)
                (layers): Sequential(
                  (0): Sequential(
                    (0): Linear(in_features=256, out_features=1024, bias=True)
                    (1): ReLU(inplace=True)
                    (2): Dropout(p=0.1, inplace=False)
                  )
                  (1): Linear(in_features=1024, out_features=256, bias=True)
                  (2): Dropout(p=0.1, inplace=False)
                )
                (dropout_layer): Identity()
              )
            )
            (norms): ModuleList(
              (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (4): DetrTransformerDecoderLayer(
            (attentions): ModuleList(
              (0): DSS(
                (layers): ModuleList(
                  (0): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): Identity()
                    (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  )
                  (1): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): DropPath(drop_prob=0.050)
                    (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  )
                  (2): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): DropPath(drop_prob=0.100)
                    (norm): Identity()
                  )
                )
              )
              (1): FUTR3DAttention(
                (dropout): Dropout(p=0.1, inplace=False)
                (sampling_offsets): Linear(in_features=256, out_features=256, bias=True)
                (attention_weights): Linear(in_features=256, out_features=128, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
            )
            (ffns): ModuleList(
              (0): FFN(
                (activate): ReLU(inplace=True)
                (layers): Sequential(
                  (0): Sequential(
                    (0): Linear(in_features=256, out_features=1024, bias=True)
                    (1): ReLU(inplace=True)
                    (2): Dropout(p=0.1, inplace=False)
                  )
                  (1): Linear(in_features=1024, out_features=256, bias=True)
                  (2): Dropout(p=0.1, inplace=False)
                )
                (dropout_layer): Identity()
              )
            )
            (norms): ModuleList(
              (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (5): DetrTransformerDecoderLayer(
            (attentions): ModuleList(
              (0): DSS(
                (layers): ModuleList(
                  (0): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): Identity()
                    (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  )
                  (1): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): DropPath(drop_prob=0.050)
                    (norm): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  )
                  (2): ModuleDict(
                    (mamba): DSSMamba(
                      (in_proj): Linear(in_features=256, out_features=1024, bias=False)
                      (in_proj_xy): Linear(in_features=256, out_features=1024, bias=False)
                      (act_f): SiLU()
                      (act_b): SiLU()
                      (x_proj_f): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b): Linear(in_features=16, out_features=256, bias=True)
                      (act_f_xy): SiLU()
                      (act_b_xy): SiLU()
                      (x_proj_f_xy): Linear(in_features=256, out_features=272, bias=False)
                      (x_proj_b_xy): Linear(in_features=256, out_features=272, bias=False)
                      (dt_proj_f_xy): Linear(in_features=16, out_features=256, bias=True)
                      (dt_proj_b_xy): Linear(in_features=16, out_features=256, bias=True)
                      (out_proj): Linear(in_features=1024, out_features=256, bias=False)
                    )
                    (dropout): DropPath(drop_prob=0.100)
                    (norm): Identity()
                  )
                )
              )
              (1): FUTR3DAttention(
                (dropout): Dropout(p=0.1, inplace=False)
                (sampling_offsets): Linear(in_features=256, out_features=256, bias=True)
                (attention_weights): Linear(in_features=256, out_features=128, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
            )
            (ffns): ModuleList(
              (0): FFN(
                (activate): ReLU(inplace=True)
                (layers): Sequential(
                  (0): Sequential(
                    (0): Linear(in_features=256, out_features=1024, bias=True)
                    (1): ReLU(inplace=True)
                    (2): Dropout(p=0.1, inplace=False)
                  )
                  (1): Linear(in_features=1024, out_features=256, bias=True)
                  (2): Dropout(p=0.1, inplace=False)
                )
                (dropout_layer): Identity()
              )
            )
            (norms): ModuleList(
              (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
        (query_scale): MLP(
          (layers): ModuleList(
            (0): Linear(in_features=256, out_features=256, bias=True)
            (1): Linear(in_features=256, out_features=256, bias=True)
          )
        )
        (ref_point_head): MLP(
          (layers): ModuleList(
            (0): Linear(in_features=384, out_features=256, bias=True)
            (1): Linear(in_features=256, out_features=256, bias=True)
          )
        )
      )
    )
    (cls_branches): ModuleList(
      (0): Linear(in_features=256, out_features=10, bias=True)
      (1): Linear(in_features=256, out_features=10, bias=True)
      (2): Linear(in_features=256, out_features=10, bias=True)
      (3): Linear(in_features=256, out_features=10, bias=True)
      (4): Linear(in_features=256, out_features=10, bias=True)
      (5): Linear(in_features=256, out_features=10, bias=True)
    )
    (reg_branches): ModuleList(
      (0): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (1): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (2): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (3): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (4): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (5): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
    )
    (tgt_embed): Embedding(900, 256)
    (refpoint_embed): Embedding(900, 3)
    (aux_head): CenterHead(
      (loss_cls): GaussianFocalLoss()
      (loss_bbox): L1Loss()
      (shared_conv): ConvModule(
        (conv): Conv2d(512, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
      (task_heads): ModuleList(
        (0): SeparateHead(
          (reg): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (height): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (dim): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (rot): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (vel): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (heatmap): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
        (1): SeparateHead(
          (reg): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (height): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (dim): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (rot): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (vel): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (heatmap): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
        (2): SeparateHead(
          (reg): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (height): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (dim): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (rot): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (vel): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (heatmap): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
        (3): SeparateHead(
          (reg): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (height): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (dim): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (rot): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (vel): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (heatmap): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
        (4): SeparateHead(
          (reg): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (height): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (dim): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (rot): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (vel): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (heatmap): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
        (5): SeparateHead(
          (reg): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (height): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (dim): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (rot): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (vel): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (heatmap): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
      )
    )
  )
)
2025-04-16 17:45:29,915 - mmdet - INFO - load checkpoint from local path: work_dirs/DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01/两张卡每张卡4/epoch_8.pth
2025-04-16 17:45:30,240 - mmdet - INFO - resumed epoch 8, iter 8832
2025-04-16 17:45:30,243 - mmdet - INFO - Start running, host: ubuntu@ubuntu, work_dir: /home/ubuntu/jxcao/hdd/jxc/FUTR3D/work_dirs/DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01/两张卡每张卡4
2025-04-16 17:45:30,255 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) CyclicLrUpdaterHook                
(HIGH        ) CyclicMomentumUpdaterHook          
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) CyclicLrUpdaterHook                
(HIGH        ) CyclicMomentumUpdaterHook          
(NORMAL      ) FadeOjectSampleHook                
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) CyclicLrUpdaterHook                
(HIGH        ) CyclicMomentumUpdaterHook          
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2025-04-16 17:45:30,267 - mmdet - INFO - workflow: [('train', 1)], max: 20 epochs
2025-04-16 17:45:30,267 - mmdet - INFO - Checkpoints will be saved to /home/ubuntu/jxcao/hdd/jxc/FUTR3D/work_dirs/DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01/两张卡每张卡4 by HardDiskBackend.
2025-04-16 17:46:42,009 - mmdet - INFO - Epoch [9][50/1104]	lr: 2.500e-04, eta: 5:14:08, time: 1.428, data_time: 0.212, memory: 13587, loss_cls: 0.4578, loss_bbox: 0.7726, d0.loss_cls: 0.5370, d0.loss_bbox: 0.9158, d1.loss_cls: 0.5461, d1.loss_bbox: 0.8423, d2.loss_cls: 0.5654, d2.loss_bbox: 0.8016, d3.loss_cls: 0.4914, d3.loss_bbox: 0.7918, d4.loss_cls: 0.4676, d4.loss_bbox: 0.7814, aux_task0.loss_heatmap: 0.5828, aux_task0.loss_bbox: 0.2369, aux_task1.loss_heatmap: 0.8464, aux_task1.loss_bbox: 0.3084, aux_task2.loss_heatmap: 0.8947, aux_task2.loss_bbox: 0.3398, aux_task3.loss_heatmap: 0.6670, aux_task3.loss_bbox: 0.2798, aux_task4.loss_heatmap: 0.5014, aux_task4.loss_bbox: 0.2728, aux_task5.loss_heatmap: 0.4599, aux_task5.loss_bbox: 0.2873, loss: 13.6479, grad_norm: 25.2116
2025-04-16 17:47:33,476 - mmdet - INFO - Epoch [9][100/1104]	lr: 2.500e-04, eta: 4:29:15, time: 1.029, data_time: 0.015, memory: 13587, loss_cls: 0.4562, loss_bbox: 0.7714, d0.loss_cls: 0.5283, d0.loss_bbox: 0.9096, d1.loss_cls: 0.5349, d1.loss_bbox: 0.8432, d2.loss_cls: 0.5505, d2.loss_bbox: 0.8075, d3.loss_cls: 0.5057, d3.loss_bbox: 0.7915, d4.loss_cls: 0.4713, d4.loss_bbox: 0.7801, aux_task0.loss_heatmap: 0.5924, aux_task0.loss_bbox: 0.2366, aux_task1.loss_heatmap: 0.8789, aux_task1.loss_bbox: 0.3200, aux_task2.loss_heatmap: 0.8096, aux_task2.loss_bbox: 0.3196, aux_task3.loss_heatmap: 0.6423, aux_task3.loss_bbox: 0.2925, aux_task4.loss_heatmap: 0.4967, aux_task4.loss_bbox: 0.2836, aux_task5.loss_heatmap: 0.4550, aux_task5.loss_bbox: 0.2898, loss: 13.5669, grad_norm: 24.4826
2025-04-16 17:48:24,812 - mmdet - INFO - Epoch [9][150/1104]	lr: 2.499e-04, eta: 4:13:31, time: 1.027, data_time: 0.014, memory: 13587, loss_cls: 0.4540, loss_bbox: 0.7662, d0.loss_cls: 0.5257, d0.loss_bbox: 0.9103, d1.loss_cls: 0.5282, d1.loss_bbox: 0.8409, d2.loss_cls: 0.5399, d2.loss_bbox: 0.8026, d3.loss_cls: 0.4930, d3.loss_bbox: 0.7911, d4.loss_cls: 0.4661, d4.loss_bbox: 0.7773, aux_task0.loss_heatmap: 0.5891, aux_task0.loss_bbox: 0.2346, aux_task1.loss_heatmap: 0.8503, aux_task1.loss_bbox: 0.3118, aux_task2.loss_heatmap: 0.8285, aux_task2.loss_bbox: 0.3335, aux_task3.loss_heatmap: 0.6619, aux_task3.loss_bbox: 0.2788, aux_task4.loss_heatmap: 0.4630, aux_task4.loss_bbox: 0.2700, aux_task5.loss_heatmap: 0.4490, aux_task5.loss_bbox: 0.2920, loss: 13.4578, grad_norm: 25.8139
2025-04-16 17:49:16,278 - mmdet - INFO - Epoch [9][200/1104]	lr: 2.499e-04, eta: 4:05:23, time: 1.029, data_time: 0.015, memory: 13587, loss_cls: 0.4480, loss_bbox: 0.7718, d0.loss_cls: 0.5271, d0.loss_bbox: 0.9071, d1.loss_cls: 0.5474, d1.loss_bbox: 0.8467, d2.loss_cls: 0.5738, d2.loss_bbox: 0.8037, d3.loss_cls: 0.5010, d3.loss_bbox: 0.7926, d4.loss_cls: 0.4635, d4.loss_bbox: 0.7801, aux_task0.loss_heatmap: 0.5956, aux_task0.loss_bbox: 0.2398, aux_task1.loss_heatmap: 0.8243, aux_task1.loss_bbox: 0.3093, aux_task2.loss_heatmap: 0.8411, aux_task2.loss_bbox: 0.3313, aux_task3.loss_heatmap: 0.6316, aux_task3.loss_bbox: 0.2862, aux_task4.loss_heatmap: 0.4809, aux_task4.loss_bbox: 0.2710, aux_task5.loss_heatmap: 0.4834, aux_task5.loss_bbox: 0.2967, loss: 13.5541, grad_norm: 26.4478
2025-04-16 17:50:11,060 - mmdet - INFO - Epoch [9][250/1104]	lr: 2.498e-04, eta: 4:03:01, time: 1.096, data_time: 0.008, memory: 13587, loss_cls: 0.4745, loss_bbox: 0.7878, d0.loss_cls: 0.5462, d0.loss_bbox: 0.9246, d1.loss_cls: 0.5938, d1.loss_bbox: 0.8926, d2.loss_cls: 0.5897, d2.loss_bbox: 0.8352, d3.loss_cls: 0.5213, d3.loss_bbox: 0.8121, d4.loss_cls: 0.4911, d4.loss_bbox: 0.7973, aux_task0.loss_heatmap: 0.5889, aux_task0.loss_bbox: 0.2369, aux_task1.loss_heatmap: 0.8604, aux_task1.loss_bbox: 0.3191, aux_task2.loss_heatmap: 0.8310, aux_task2.loss_bbox: 0.3293, aux_task3.loss_heatmap: 0.6457, aux_task3.loss_bbox: 0.2902, aux_task4.loss_heatmap: 0.5256, aux_task4.loss_bbox: 0.2855, aux_task5.loss_heatmap: 0.4924, aux_task5.loss_bbox: 0.2975, loss: 13.9688, grad_norm: 26.3595
2025-04-16 17:51:01,868 - mmdet - INFO - Epoch [9][300/1104]	lr: 2.497e-04, eta: 3:58:17, time: 1.016, data_time: 0.009, memory: 13842, loss_cls: 0.4743, loss_bbox: 0.7858, d0.loss_cls: 0.5510, d0.loss_bbox: 0.9211, d1.loss_cls: 0.5751, d1.loss_bbox: 0.8712, d2.loss_cls: 0.5849, d2.loss_bbox: 0.8201, d3.loss_cls: 0.5164, d3.loss_bbox: 0.8062, d4.loss_cls: 0.4882, d4.loss_bbox: 0.7941, aux_task0.loss_heatmap: 0.5836, aux_task0.loss_bbox: 0.2372, aux_task1.loss_heatmap: 0.8842, aux_task1.loss_bbox: 0.3164, aux_task2.loss_heatmap: 0.8226, aux_task2.loss_bbox: 0.3372, aux_task3.loss_heatmap: 0.6835, aux_task3.loss_bbox: 0.2937, aux_task4.loss_heatmap: 0.5054, aux_task4.loss_bbox: 0.2773, aux_task5.loss_heatmap: 0.4945, aux_task5.loss_bbox: 0.2960, loss: 13.9201, grad_norm: 25.7824
2025-04-16 17:51:52,649 - mmdet - INFO - Epoch [9][350/1104]	lr: 2.496e-04, eta: 3:54:38, time: 1.016, data_time: 0.008, memory: 13842, loss_cls: 0.4820, loss_bbox: 0.7823, d0.loss_cls: 0.5588, d0.loss_bbox: 0.9203, d1.loss_cls: 0.5853, d1.loss_bbox: 0.8782, d2.loss_cls: 0.5866, d2.loss_bbox: 0.8207, d3.loss_cls: 0.5206, d3.loss_bbox: 0.8032, d4.loss_cls: 0.4927, d4.loss_bbox: 0.7924, aux_task0.loss_heatmap: 0.6140, aux_task0.loss_bbox: 0.2391, aux_task1.loss_heatmap: 0.9005, aux_task1.loss_bbox: 0.3231, aux_task2.loss_heatmap: 0.8858, aux_task2.loss_bbox: 0.3396, aux_task3.loss_heatmap: 0.7076, aux_task3.loss_bbox: 0.2862, aux_task4.loss_heatmap: 0.5161, aux_task4.loss_bbox: 0.2826, aux_task5.loss_heatmap: 0.4976, aux_task5.loss_bbox: 0.2935, loss: 14.1087, grad_norm: 22.4388
2025-04-16 17:52:44,144 - mmdet - INFO - Epoch [9][400/1104]	lr: 2.494e-04, eta: 3:52:05, time: 1.030, data_time: 0.008, memory: 13842, loss_cls: 0.4526, loss_bbox: 0.7650, d0.loss_cls: 0.5251, d0.loss_bbox: 0.9051, d1.loss_cls: 0.5397, d1.loss_bbox: 0.8513, d2.loss_cls: 0.5543, d2.loss_bbox: 0.8043, d3.loss_cls: 0.4905, d3.loss_bbox: 0.7842, d4.loss_cls: 0.4644, d4.loss_bbox: 0.7734, aux_task0.loss_heatmap: 0.5792, aux_task0.loss_bbox: 0.2356, aux_task1.loss_heatmap: 0.8360, aux_task1.loss_bbox: 0.3119, aux_task2.loss_heatmap: 0.8867, aux_task2.loss_bbox: 0.3284, aux_task3.loss_heatmap: 0.6682, aux_task3.loss_bbox: 0.2790, aux_task4.loss_heatmap: 0.4780, aux_task4.loss_bbox: 0.2753, aux_task5.loss_heatmap: 0.4708, aux_task5.loss_bbox: 0.2910, loss: 13.5501, grad_norm: 25.2485
2025-04-16 17:53:35,206 - mmdet - INFO - Epoch [9][450/1104]	lr: 2.493e-04, eta: 3:49:42, time: 1.021, data_time: 0.008, memory: 13842, loss_cls: 0.5156, loss_bbox: 0.8351, d0.loss_cls: 0.5990, d0.loss_bbox: 0.9675, d1.loss_cls: 0.6816, d1.loss_bbox: 0.9722, d2.loss_cls: 0.6430, d2.loss_bbox: 0.8846, d3.loss_cls: 0.5582, d3.loss_bbox: 0.8556, d4.loss_cls: 0.5297, d4.loss_bbox: 0.8426, aux_task0.loss_heatmap: 0.6910, aux_task0.loss_bbox: 0.2630, aux_task1.loss_heatmap: 0.9035, aux_task1.loss_bbox: 0.3265, aux_task2.loss_heatmap: 1.0027, aux_task2.loss_bbox: 0.3521, aux_task3.loss_heatmap: 0.6869, aux_task3.loss_bbox: 0.2802, aux_task4.loss_heatmap: 0.5712, aux_task4.loss_bbox: 0.2907, aux_task5.loss_heatmap: 0.5182, aux_task5.loss_bbox: 0.2975, loss: 15.0681, grad_norm: 41.6897
2025-04-16 17:54:26,259 - mmdet - INFO - Epoch [9][500/1104]	lr: 2.491e-04, eta: 3:47:37, time: 1.021, data_time: 0.007, memory: 13842, loss_cls: 0.5071, loss_bbox: 0.8403, d0.loss_cls: 0.6027, d0.loss_bbox: 0.9884, d1.loss_cls: 0.6657, d1.loss_bbox: 0.9773, d2.loss_cls: 0.6407, d2.loss_bbox: 0.8881, d3.loss_cls: 0.5520, d3.loss_bbox: 0.8679, d4.loss_cls: 0.5209, d4.loss_bbox: 0.8497, aux_task0.loss_heatmap: 0.6694, aux_task0.loss_bbox: 0.2582, aux_task1.loss_heatmap: 0.9711, aux_task1.loss_bbox: 0.3341, aux_task2.loss_heatmap: 0.9390, aux_task2.loss_bbox: 0.3521, aux_task3.loss_heatmap: 0.7082, aux_task3.loss_bbox: 0.2877, aux_task4.loss_heatmap: 0.5315, aux_task4.loss_bbox: 0.2838, aux_task5.loss_heatmap: 0.5179, aux_task5.loss_bbox: 0.3029, loss: 15.0565, grad_norm: 56.1644
2025-04-16 17:55:17,340 - mmdet - INFO - Epoch [9][550/1104]	lr: 2.489e-04, eta: 3:45:46, time: 1.022, data_time: 0.008, memory: 13842, loss_cls: 0.4927, loss_bbox: 0.8264, d0.loss_cls: 0.5837, d0.loss_bbox: 0.9792, d1.loss_cls: 0.6575, d1.loss_bbox: 0.9440, d2.loss_cls: 0.6416, d2.loss_bbox: 0.8744, d3.loss_cls: 0.5374, d3.loss_bbox: 0.8517, d4.loss_cls: 0.5054, d4.loss_bbox: 0.8396, aux_task0.loss_heatmap: 0.6652, aux_task0.loss_bbox: 0.2572, aux_task1.loss_heatmap: 0.8948, aux_task1.loss_bbox: 0.3264, aux_task2.loss_heatmap: 0.9765, aux_task2.loss_bbox: 0.3485, aux_task3.loss_heatmap: 0.6861, aux_task3.loss_bbox: 0.2948, aux_task4.loss_heatmap: 0.5156, aux_task4.loss_bbox: 0.2862, aux_task5.loss_heatmap: 0.4953, aux_task5.loss_bbox: 0.2974, loss: 14.7777, grad_norm: 29.3101
2025-04-16 17:56:08,450 - mmdet - INFO - Epoch [9][600/1104]	lr: 2.487e-04, eta: 3:44:05, time: 1.022, data_time: 0.007, memory: 13842, loss_cls: 0.4664, loss_bbox: 0.7892, d0.loss_cls: 0.5568, d0.loss_bbox: 0.9365, d1.loss_cls: 0.6371, d1.loss_bbox: 0.9049, d2.loss_cls: 0.6204, d2.loss_bbox: 0.8366, d3.loss_cls: 0.5274, d3.loss_bbox: 0.8133, d4.loss_cls: 0.4837, d4.loss_bbox: 0.8015, aux_task0.loss_heatmap: 0.6028, aux_task0.loss_bbox: 0.2435, aux_task1.loss_heatmap: 0.8730, aux_task1.loss_bbox: 0.3155, aux_task2.loss_heatmap: 0.8813, aux_task2.loss_bbox: 0.3406, aux_task3.loss_heatmap: 0.6977, aux_task3.loss_bbox: 0.2933, aux_task4.loss_heatmap: 0.4722, aux_task4.loss_bbox: 0.2744, aux_task5.loss_heatmap: 0.4825, aux_task5.loss_bbox: 0.2956, loss: 14.1461, grad_norm: 23.4999
2025-04-16 17:56:59,351 - mmdet - INFO - Epoch [9][650/1104]	lr: 2.485e-04, eta: 3:42:28, time: 1.018, data_time: 0.007, memory: 13842, loss_cls: 0.4716, loss_bbox: 0.7908, d0.loss_cls: 0.5622, d0.loss_bbox: 0.9259, d1.loss_cls: 0.6396, d1.loss_bbox: 0.8791, d2.loss_cls: 0.6335, d2.loss_bbox: 0.8288, d3.loss_cls: 0.5194, d3.loss_bbox: 0.8159, d4.loss_cls: 0.4863, d4.loss_bbox: 0.8027, aux_task0.loss_heatmap: 0.6293, aux_task0.loss_bbox: 0.2395, aux_task1.loss_heatmap: 0.8364, aux_task1.loss_bbox: 0.3197, aux_task2.loss_heatmap: 0.9071, aux_task2.loss_bbox: 0.3442, aux_task3.loss_heatmap: 0.6613, aux_task3.loss_bbox: 0.2842, aux_task4.loss_heatmap: 0.5266, aux_task4.loss_bbox: 0.2770, aux_task5.loss_heatmap: 0.4923, aux_task5.loss_bbox: 0.2942, loss: 14.1676, grad_norm: 21.5975
2025-04-16 17:57:50,261 - mmdet - INFO - Epoch [9][700/1104]	lr: 2.483e-04, eta: 3:40:58, time: 1.018, data_time: 0.007, memory: 13842, loss_cls: 0.4464, loss_bbox: 0.7546, d0.loss_cls: 0.5202, d0.loss_bbox: 0.8952, d1.loss_cls: 0.5816, d1.loss_bbox: 0.8440, d2.loss_cls: 0.5884, d2.loss_bbox: 0.7868, d3.loss_cls: 0.4942, d3.loss_bbox: 0.7765, d4.loss_cls: 0.4620, d4.loss_bbox: 0.7657, aux_task0.loss_heatmap: 0.5703, aux_task0.loss_bbox: 0.2281, aux_task1.loss_heatmap: 0.8306, aux_task1.loss_bbox: 0.3099, aux_task2.loss_heatmap: 0.8489, aux_task2.loss_bbox: 0.3280, aux_task3.loss_heatmap: 0.6228, aux_task3.loss_bbox: 0.2822, aux_task4.loss_heatmap: 0.4674, aux_task4.loss_bbox: 0.2681, aux_task5.loss_heatmap: 0.4503, aux_task5.loss_bbox: 0.2887, loss: 13.4110, grad_norm: 20.0363
2025-04-16 17:58:41,482 - mmdet - INFO - Epoch [9][750/1104]	lr: 2.480e-04, eta: 3:39:39, time: 1.024, data_time: 0.007, memory: 13842, loss_cls: 0.4416, loss_bbox: 0.7619, d0.loss_cls: 0.5161, d0.loss_bbox: 0.9037, d1.loss_cls: 0.5520, d1.loss_bbox: 0.8571, d2.loss_cls: 0.5696, d2.loss_bbox: 0.8020, d3.loss_cls: 0.4859, d3.loss_bbox: 0.7840, d4.loss_cls: 0.4565, d4.loss_bbox: 0.7712, aux_task0.loss_heatmap: 0.5651, aux_task0.loss_bbox: 0.2288, aux_task1.loss_heatmap: 0.8429, aux_task1.loss_bbox: 0.3048, aux_task2.loss_heatmap: 0.8029, aux_task2.loss_bbox: 0.3258, aux_task3.loss_heatmap: 0.6519, aux_task3.loss_bbox: 0.2781, aux_task4.loss_heatmap: 0.4778, aux_task4.loss_bbox: 0.2744, aux_task5.loss_heatmap: 0.4628, aux_task5.loss_bbox: 0.2890, loss: 13.4060, grad_norm: 21.6343
2025-04-16 17:59:32,420 - mmdet - INFO - Epoch [9][800/1104]	lr: 2.478e-04, eta: 3:38:18, time: 1.019, data_time: 0.008, memory: 13842, loss_cls: 0.4541, loss_bbox: 0.7739, d0.loss_cls: 0.5287, d0.loss_bbox: 0.9087, d1.loss_cls: 0.5546, d1.loss_bbox: 0.8645, d2.loss_cls: 0.5701, d2.loss_bbox: 0.8175, d3.loss_cls: 0.5023, d3.loss_bbox: 0.7983, d4.loss_cls: 0.4677, d4.loss_bbox: 0.7851, aux_task0.loss_heatmap: 0.5955, aux_task0.loss_bbox: 0.2378, aux_task1.loss_heatmap: 0.8464, aux_task1.loss_bbox: 0.3086, aux_task2.loss_heatmap: 0.8850, aux_task2.loss_bbox: 0.3349, aux_task3.loss_heatmap: 0.6389, aux_task3.loss_bbox: 0.2744, aux_task4.loss_heatmap: 0.4871, aux_task4.loss_bbox: 0.2691, aux_task5.loss_heatmap: 0.4660, aux_task5.loss_bbox: 0.2910, loss: 13.6603, grad_norm: 26.1525
2025-04-16 18:00:23,450 - mmdet - INFO - Epoch [9][850/1104]	lr: 2.475e-04, eta: 3:37:02, time: 1.021, data_time: 0.008, memory: 13842, loss_cls: 0.4605, loss_bbox: 0.7777, d0.loss_cls: 0.5435, d0.loss_bbox: 0.9241, d1.loss_cls: 0.5791, d1.loss_bbox: 0.8865, d2.loss_cls: 0.5682, d2.loss_bbox: 0.8275, d3.loss_cls: 0.5060, d3.loss_bbox: 0.8009, d4.loss_cls: 0.4758, d4.loss_bbox: 0.7877, aux_task0.loss_heatmap: 0.5882, aux_task0.loss_bbox: 0.2390, aux_task1.loss_heatmap: 0.8668, aux_task1.loss_bbox: 0.3151, aux_task2.loss_heatmap: 0.8638, aux_task2.loss_bbox: 0.3401, aux_task3.loss_heatmap: 0.6348, aux_task3.loss_bbox: 0.2849, aux_task4.loss_heatmap: 0.4942, aux_task4.loss_bbox: 0.2711, aux_task5.loss_heatmap: 0.4791, aux_task5.loss_bbox: 0.2956, loss: 13.8103, grad_norm: 101.8568
2025-04-16 18:01:14,431 - mmdet - INFO - Epoch [9][900/1104]	lr: 2.472e-04, eta: 3:35:49, time: 1.020, data_time: 0.007, memory: 13936, loss_cls: 0.5345, loss_bbox: 0.8582, d0.loss_cls: 0.6300, d0.loss_bbox: 1.0020, d1.loss_cls: 0.7317, d1.loss_bbox: 0.9767, d2.loss_cls: 0.6887, d2.loss_bbox: 0.8955, d3.loss_cls: 0.5894, d3.loss_bbox: 0.8811, d4.loss_cls: 0.5544, d4.loss_bbox: 0.8669, aux_task0.loss_heatmap: 0.7189, aux_task0.loss_bbox: 0.2664, aux_task1.loss_heatmap: 0.9692, aux_task1.loss_bbox: 0.3305, aux_task2.loss_heatmap: 0.9716, aux_task2.loss_bbox: 0.3642, aux_task3.loss_heatmap: 0.7358, aux_task3.loss_bbox: 0.3051, aux_task4.loss_heatmap: 0.5439, aux_task4.loss_bbox: 0.2838, aux_task5.loss_heatmap: 0.5650, aux_task5.loss_bbox: 0.3129, loss: 15.5764, grad_norm: 40.5271
2025-04-16 18:02:05,546 - mmdet - INFO - Epoch [9][950/1104]	lr: 2.468e-04, eta: 3:34:39, time: 1.022, data_time: 0.007, memory: 13936, loss_cls: 0.4752, loss_bbox: 0.7937, d0.loss_cls: 0.5591, d0.loss_bbox: 0.9370, d1.loss_cls: 0.6274, d1.loss_bbox: 0.8941, d2.loss_cls: 0.6118, d2.loss_bbox: 0.8284, d3.loss_cls: 0.5250, d3.loss_bbox: 0.8132, d4.loss_cls: 0.4920, d4.loss_bbox: 0.8013, aux_task0.loss_heatmap: 0.6141, aux_task0.loss_bbox: 0.2399, aux_task1.loss_heatmap: 0.8965, aux_task1.loss_bbox: 0.3237, aux_task2.loss_heatmap: 0.9133, aux_task2.loss_bbox: 0.3324, aux_task3.loss_heatmap: 0.6907, aux_task3.loss_bbox: 0.2935, aux_task4.loss_heatmap: 0.4870, aux_task4.loss_bbox: 0.2798, aux_task5.loss_heatmap: 0.4793, aux_task5.loss_bbox: 0.2978, loss: 14.2061, grad_norm: 19.8713
2025-04-16 18:02:56,586 - mmdet - INFO - Epoch [9][1000/1104]	lr: 2.465e-04, eta: 3:33:31, time: 1.021, data_time: 0.007, memory: 13936, loss_cls: 0.4626, loss_bbox: 0.7757, d0.loss_cls: 0.5437, d0.loss_bbox: 0.9145, d1.loss_cls: 0.6100, d1.loss_bbox: 0.8754, d2.loss_cls: 0.6064, d2.loss_bbox: 0.8137, d3.loss_cls: 0.5155, d3.loss_bbox: 0.7986, d4.loss_cls: 0.4807, d4.loss_bbox: 0.7856, aux_task0.loss_heatmap: 0.5905, aux_task0.loss_bbox: 0.2367, aux_task1.loss_heatmap: 0.8801, aux_task1.loss_bbox: 0.3101, aux_task2.loss_heatmap: 0.8862, aux_task2.loss_bbox: 0.3278, aux_task3.loss_heatmap: 0.6361, aux_task3.loss_bbox: 0.2921, aux_task4.loss_heatmap: 0.4839, aux_task4.loss_bbox: 0.2680, aux_task5.loss_heatmap: 0.4751, aux_task5.loss_bbox: 0.2957, loss: 13.8648, grad_norm: 28.4158
2025-04-16 18:03:47,668 - mmdet - INFO - Epoch [9][1050/1104]	lr: 2.462e-04, eta: 3:32:24, time: 1.022, data_time: 0.009, memory: 13936, loss_cls: 0.4668, loss_bbox: 0.7833, d0.loss_cls: 0.5480, d0.loss_bbox: 0.9191, d1.loss_cls: 0.6173, d1.loss_bbox: 0.8833, d2.loss_cls: 0.6133, d2.loss_bbox: 0.8166, d3.loss_cls: 0.5207, d3.loss_bbox: 0.8052, d4.loss_cls: 0.4832, d4.loss_bbox: 0.7953, aux_task0.loss_heatmap: 0.5992, aux_task0.loss_bbox: 0.2376, aux_task1.loss_heatmap: 0.8786, aux_task1.loss_bbox: 0.3186, aux_task2.loss_heatmap: 0.8739, aux_task2.loss_bbox: 0.3286, aux_task3.loss_heatmap: 0.6698, aux_task3.loss_bbox: 0.2889, aux_task4.loss_heatmap: 0.5039, aux_task4.loss_bbox: 0.2783, aux_task5.loss_heatmap: 0.4794, aux_task5.loss_bbox: 0.2916, loss: 14.0005, grad_norm: 120.2760
2025-04-16 18:04:38,730 - mmdet - INFO - Epoch [9][1100/1104]	lr: 2.458e-04, eta: 3:31:19, time: 1.021, data_time: 0.007, memory: 13936, loss_cls: 0.4853, loss_bbox: 0.8105, d0.loss_cls: 0.5830, d0.loss_bbox: 0.9702, d1.loss_cls: 0.6442, d1.loss_bbox: 0.9194, d2.loss_cls: 0.6356, d2.loss_bbox: 0.8521, d3.loss_cls: 0.5459, d3.loss_bbox: 0.8346, d4.loss_cls: 0.5043, d4.loss_bbox: 0.8211, aux_task0.loss_heatmap: 0.6488, aux_task0.loss_bbox: 0.2451, aux_task1.loss_heatmap: 0.8968, aux_task1.loss_bbox: 0.3194, aux_task2.loss_heatmap: 0.9184, aux_task2.loss_bbox: 0.3369, aux_task3.loss_heatmap: 0.6805, aux_task3.loss_bbox: 0.2875, aux_task4.loss_heatmap: 0.5228, aux_task4.loss_bbox: 0.2775, aux_task5.loss_heatmap: 0.5083, aux_task5.loss_bbox: 0.2990, loss: 14.5470, grad_norm: 32.4702
2025-04-16 18:04:43,042 - mmdet - INFO - Saving checkpoint at 9 epochs
2025-04-16 18:16:22,530 - mmdet - INFO - Exp name: DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01.py
2025-04-16 18:16:22,530 - mmdet - INFO - Epoch(val) [9][3010]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.4423, pts_bbox_NuScenes/car_AP_dist_1.0: 0.6088, pts_bbox_NuScenes/car_AP_dist_2.0: 0.6920, pts_bbox_NuScenes/car_AP_dist_4.0: 0.7443, pts_bbox_NuScenes/car_trans_err: 0.3090, pts_bbox_NuScenes/car_scale_err: 0.1783, pts_bbox_NuScenes/car_orient_err: 0.3932, pts_bbox_NuScenes/car_vel_err: 1.0854, pts_bbox_NuScenes/car_attr_err: 0.3413, pts_bbox_NuScenes/mATE: 0.5180, pts_bbox_NuScenes/mASE: 0.3074, pts_bbox_NuScenes/mAOE: 0.8967, pts_bbox_NuScenes/mAVE: 1.0387, pts_bbox_NuScenes/mAAE: 0.3780, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.0603, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.1886, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.2964, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.3579, pts_bbox_NuScenes/truck_trans_err: 0.5890, pts_bbox_NuScenes/truck_scale_err: 0.2581, pts_bbox_NuScenes/truck_orient_err: 0.5367, pts_bbox_NuScenes/truck_vel_err: 0.8504, pts_bbox_NuScenes/truck_attr_err: 0.3663, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0076, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.0496, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.0724, pts_bbox_NuScenes/construction_vehicle_trans_err: 0.8539, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.4897, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.4275, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1339, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.3527, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.0795, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.2093, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.3991, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.4877, pts_bbox_NuScenes/bus_trans_err: 0.6285, pts_bbox_NuScenes/bus_scale_err: 0.2482, pts_bbox_NuScenes/bus_orient_err: 0.4289, pts_bbox_NuScenes/bus_vel_err: 2.3044, pts_bbox_NuScenes/bus_attr_err: 0.5940, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.0241, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.0899, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.1384, pts_bbox_NuScenes/trailer_trans_err: 0.8309, pts_bbox_NuScenes/trailer_scale_err: 0.2888, pts_bbox_NuScenes/trailer_orient_err: 1.4230, pts_bbox_NuScenes/trailer_vel_err: 0.5679, pts_bbox_NuScenes/trailer_attr_err: 0.1932, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.1296, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.2911, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.4199, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.4849, pts_bbox_NuScenes/barrier_trans_err: 0.5976, pts_bbox_NuScenes/barrier_scale_err: 0.3334, pts_bbox_NuScenes/barrier_orient_err: 0.3875, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.0807, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.1144, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.1283, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.1343, pts_bbox_NuScenes/motorcycle_trans_err: 0.3428, pts_bbox_NuScenes/motorcycle_scale_err: 0.2783, pts_bbox_NuScenes/motorcycle_orient_err: 0.8751, pts_bbox_NuScenes/motorcycle_vel_err: 1.5307, pts_bbox_NuScenes/motorcycle_attr_err: 0.3080, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.0023, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.0041, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.0057, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.0084, pts_bbox_NuScenes/bicycle_trans_err: 0.3401, pts_bbox_NuScenes/bicycle_scale_err: 0.3005, pts_bbox_NuScenes/bicycle_orient_err: 1.0030, pts_bbox_NuScenes/bicycle_vel_err: 0.8536, pts_bbox_NuScenes/bicycle_attr_err: 0.0607, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.3511, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.5977, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.6556, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.6888, pts_bbox_NuScenes/pedestrian_trans_err: 0.4055, pts_bbox_NuScenes/pedestrian_scale_err: 0.2857, pts_bbox_NuScenes/pedestrian_orient_err: 1.5958, pts_bbox_NuScenes/pedestrian_vel_err: 0.9833, pts_bbox_NuScenes/pedestrian_attr_err: 0.8078, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.2945, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.3471, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.3903, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.4454, pts_bbox_NuScenes/traffic_cone_trans_err: 0.2826, pts_bbox_NuScenes/traffic_cone_scale_err: 0.4128, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.3215, pts_bbox_NuScenes/mAP: 0.2631
2025-04-16 18:17:19,977 - mmdet - INFO - Epoch [10][50/1104]	lr: 2.454e-04, eta: 3:30:25, time: 1.132, data_time: 0.110, memory: 13936, loss_cls: 0.4656, loss_bbox: 0.7810, d0.loss_cls: 0.5577, d0.loss_bbox: 0.9296, d1.loss_cls: 0.6352, d1.loss_bbox: 0.8951, d2.loss_cls: 0.6029, d2.loss_bbox: 0.8168, d3.loss_cls: 0.5157, d3.loss_bbox: 0.8024, d4.loss_cls: 0.4795, d4.loss_bbox: 0.7909, aux_task0.loss_heatmap: 0.5949, aux_task0.loss_bbox: 0.2364, aux_task1.loss_heatmap: 0.8724, aux_task1.loss_bbox: 0.3141, aux_task2.loss_heatmap: 0.9109, aux_task2.loss_bbox: 0.3403, aux_task3.loss_heatmap: 0.6285, aux_task3.loss_bbox: 0.2821, aux_task4.loss_heatmap: 0.5035, aux_task4.loss_bbox: 0.2733, aux_task5.loss_heatmap: 0.4828, aux_task5.loss_bbox: 0.2935, loss: 14.0054, grad_norm: 88.5117
2025-04-16 18:18:11,435 - mmdet - INFO - Epoch [10][100/1104]	lr: 2.449e-04, eta: 3:29:26, time: 1.029, data_time: 0.007, memory: 13936, loss_cls: 0.4676, loss_bbox: 0.7942, d0.loss_cls: 0.5661, d0.loss_bbox: 0.9506, d1.loss_cls: 0.6405, d1.loss_bbox: 0.9083, d2.loss_cls: 0.6171, d2.loss_bbox: 0.8355, d3.loss_cls: 0.5166, d3.loss_bbox: 0.8204, d4.loss_cls: 0.4831, d4.loss_bbox: 0.8048, aux_task0.loss_heatmap: 0.6056, aux_task0.loss_bbox: 0.2390, aux_task1.loss_heatmap: 0.9058, aux_task1.loss_bbox: 0.3168, aux_task2.loss_heatmap: 0.8684, aux_task2.loss_bbox: 0.3232, aux_task3.loss_heatmap: 0.6792, aux_task3.loss_bbox: 0.2876, aux_task4.loss_heatmap: 0.4943, aux_task4.loss_bbox: 0.2772, aux_task5.loss_heatmap: 0.4733, aux_task5.loss_bbox: 0.2939, loss: 14.1695, grad_norm: 25.4805
2025-04-16 18:19:02,064 - mmdet - INFO - Epoch [10][150/1104]	lr: 2.445e-04, eta: 3:28:19, time: 1.013, data_time: 0.007, memory: 13936, loss_cls: 0.4498, loss_bbox: 0.7650, d0.loss_cls: 0.5374, d0.loss_bbox: 0.9118, d1.loss_cls: 0.6086, d1.loss_bbox: 0.8691, d2.loss_cls: 0.6033, d2.loss_bbox: 0.8011, d3.loss_cls: 0.5002, d3.loss_bbox: 0.7914, d4.loss_cls: 0.4640, d4.loss_bbox: 0.7784, aux_task0.loss_heatmap: 0.5931, aux_task0.loss_bbox: 0.2323, aux_task1.loss_heatmap: 0.8250, aux_task1.loss_bbox: 0.3068, aux_task2.loss_heatmap: 0.8595, aux_task2.loss_bbox: 0.3321, aux_task3.loss_heatmap: 0.5877, aux_task3.loss_bbox: 0.2899, aux_task4.loss_heatmap: 0.4712, aux_task4.loss_bbox: 0.2704, aux_task5.loss_heatmap: 0.4610, aux_task5.loss_bbox: 0.2946, loss: 13.6040, grad_norm: 19.0344
2025-04-16 18:19:53,206 - mmdet - INFO - Epoch [10][200/1104]	lr: 2.441e-04, eta: 3:27:18, time: 1.023, data_time: 0.007, memory: 13936, loss_cls: 0.4715, loss_bbox: 0.7764, d0.loss_cls: 0.5520, d0.loss_bbox: 0.9265, d1.loss_cls: 0.6274, d1.loss_bbox: 0.9087, d2.loss_cls: 0.6120, d2.loss_bbox: 0.8344, d3.loss_cls: 0.5269, d3.loss_bbox: 0.8050, d4.loss_cls: 0.4894, d4.loss_bbox: 0.7899, aux_task0.loss_heatmap: 0.6227, aux_task0.loss_bbox: 0.2374, aux_task1.loss_heatmap: 0.8339, aux_task1.loss_bbox: 0.3097, aux_task2.loss_heatmap: 0.8612, aux_task2.loss_bbox: 0.3309, aux_task3.loss_heatmap: 0.6706, aux_task3.loss_bbox: 0.2789, aux_task4.loss_heatmap: 0.5055, aux_task4.loss_bbox: 0.2679, aux_task5.loss_heatmap: 0.5117, aux_task5.loss_bbox: 0.2973, loss: 14.0477, grad_norm: 45.8334
2025-04-16 18:20:44,404 - mmdet - INFO - Epoch [10][250/1104]	lr: 2.436e-04, eta: 3:26:18, time: 1.024, data_time: 0.007, memory: 13936, loss_cls: 0.4565, loss_bbox: 0.7593, d0.loss_cls: 0.5349, d0.loss_bbox: 0.9047, d1.loss_cls: 0.5818, d1.loss_bbox: 0.8811, d2.loss_cls: 0.5850, d2.loss_bbox: 0.8100, d3.loss_cls: 0.5110, d3.loss_bbox: 0.7804, d4.loss_cls: 0.4717, d4.loss_bbox: 0.7716, aux_task0.loss_heatmap: 0.5853, aux_task0.loss_bbox: 0.2270, aux_task1.loss_heatmap: 0.8367, aux_task1.loss_bbox: 0.3119, aux_task2.loss_heatmap: 0.8057, aux_task2.loss_bbox: 0.3172, aux_task3.loss_heatmap: 0.6136, aux_task3.loss_bbox: 0.2861, aux_task4.loss_heatmap: 0.5167, aux_task4.loss_bbox: 0.2722, aux_task5.loss_heatmap: 0.4889, aux_task5.loss_bbox: 0.2935, loss: 13.6027, grad_norm: 20.1367
2025-04-16 18:21:35,432 - mmdet - INFO - Epoch [10][300/1104]	lr: 2.431e-04, eta: 3:25:18, time: 1.021, data_time: 0.007, memory: 13936, loss_cls: 0.4454, loss_bbox: 0.7533, d0.loss_cls: 0.5300, d0.loss_bbox: 0.8910, d1.loss_cls: 0.5776, d1.loss_bbox: 0.8464, d2.loss_cls: 0.5895, d2.loss_bbox: 0.7925, d3.loss_cls: 0.5013, d3.loss_bbox: 0.7749, d4.loss_cls: 0.4605, d4.loss_bbox: 0.7637, aux_task0.loss_heatmap: 0.5622, aux_task0.loss_bbox: 0.2265, aux_task1.loss_heatmap: 0.8470, aux_task1.loss_bbox: 0.3111, aux_task2.loss_heatmap: 0.7737, aux_task2.loss_bbox: 0.3304, aux_task3.loss_heatmap: 0.6140, aux_task3.loss_bbox: 0.2679, aux_task4.loss_heatmap: 0.4921, aux_task4.loss_bbox: 0.2704, aux_task5.loss_heatmap: 0.4733, aux_task5.loss_bbox: 0.2945, loss: 13.3893, grad_norm: 24.7427
2025-04-16 18:22:26,396 - mmdet - INFO - Epoch [10][350/1104]	lr: 2.427e-04, eta: 3:24:17, time: 1.019, data_time: 0.008, memory: 13936, loss_cls: 0.4615, loss_bbox: 0.7581, d0.loss_cls: 0.5416, d0.loss_bbox: 0.8961, d1.loss_cls: 0.5832, d1.loss_bbox: 0.8587, d2.loss_cls: 0.5946, d2.loss_bbox: 0.8026, d3.loss_cls: 0.5124, d3.loss_bbox: 0.7837, d4.loss_cls: 0.4744, d4.loss_bbox: 0.7708, aux_task0.loss_heatmap: 0.5798, aux_task0.loss_bbox: 0.2283, aux_task1.loss_heatmap: 0.8554, aux_task1.loss_bbox: 0.3130, aux_task2.loss_heatmap: 0.8500, aux_task2.loss_bbox: 0.3298, aux_task3.loss_heatmap: 0.6386, aux_task3.loss_bbox: 0.2853, aux_task4.loss_heatmap: 0.5079, aux_task4.loss_bbox: 0.2718, aux_task5.loss_heatmap: 0.4723, aux_task5.loss_bbox: 0.2900, loss: 13.6596, grad_norm: 25.6225
2025-04-16 18:23:17,522 - mmdet - INFO - Epoch [10][400/1104]	lr: 2.421e-04, eta: 3:23:19, time: 1.023, data_time: 0.007, memory: 13936, loss_cls: 0.4431, loss_bbox: 0.7395, d0.loss_cls: 0.5199, d0.loss_bbox: 0.8812, d1.loss_cls: 0.5505, d1.loss_bbox: 0.8432, d2.loss_cls: 0.5666, d2.loss_bbox: 0.7875, d3.loss_cls: 0.4896, d3.loss_bbox: 0.7652, d4.loss_cls: 0.4575, d4.loss_bbox: 0.7516, aux_task0.loss_heatmap: 0.5811, aux_task0.loss_bbox: 0.2267, aux_task1.loss_heatmap: 0.8252, aux_task1.loss_bbox: 0.3056, aux_task2.loss_heatmap: 0.8328, aux_task2.loss_bbox: 0.3126, aux_task3.loss_heatmap: 0.5977, aux_task3.loss_bbox: 0.2868, aux_task4.loss_heatmap: 0.4623, aux_task4.loss_bbox: 0.2652, aux_task5.loss_heatmap: 0.4779, aux_task5.loss_bbox: 0.2889, loss: 13.2583, grad_norm: 19.2104
2025-04-16 18:24:08,780 - mmdet - INFO - Epoch [10][450/1104]	lr: 2.416e-04, eta: 3:22:22, time: 1.025, data_time: 0.007, memory: 13936, loss_cls: 0.4472, loss_bbox: 0.7700, d0.loss_cls: 0.6090, d0.loss_bbox: 0.9772, d1.loss_cls: 0.5934, d1.loss_bbox: 0.9138, d2.loss_cls: 0.5739, d2.loss_bbox: 0.8255, d3.loss_cls: 0.4978, d3.loss_bbox: 0.7939, d4.loss_cls: 0.4644, d4.loss_bbox: 0.7804, aux_task0.loss_heatmap: 0.5793, aux_task0.loss_bbox: 0.2269, aux_task1.loss_heatmap: 0.8180, aux_task1.loss_bbox: 0.3038, aux_task2.loss_heatmap: 0.8642, aux_task2.loss_bbox: 0.3229, aux_task3.loss_heatmap: 0.6157, aux_task3.loss_bbox: 0.2747, aux_task4.loss_heatmap: 0.4950, aux_task4.loss_bbox: 0.2739, aux_task5.loss_heatmap: 0.4625, aux_task5.loss_bbox: 0.2893, loss: 13.7727, grad_norm: 34.1774
2025-04-16 18:24:59,607 - mmdet - INFO - Epoch [10][500/1104]	lr: 2.411e-04, eta: 3:21:22, time: 1.017, data_time: 0.007, memory: 13936, loss_cls: 0.4636, loss_bbox: 0.7723, d0.loss_cls: 0.5683, d0.loss_bbox: 0.9282, d1.loss_cls: 0.6045, d1.loss_bbox: 0.9072, d2.loss_cls: 0.5911, d2.loss_bbox: 0.8307, d3.loss_cls: 0.5284, d3.loss_bbox: 0.7980, d4.loss_cls: 0.4839, d4.loss_bbox: 0.7862, aux_task0.loss_heatmap: 0.5755, aux_task0.loss_bbox: 0.2263, aux_task1.loss_heatmap: 0.8673, aux_task1.loss_bbox: 0.3070, aux_task2.loss_heatmap: 0.8471, aux_task2.loss_bbox: 0.3289, aux_task3.loss_heatmap: 0.6725, aux_task3.loss_bbox: 0.2720, aux_task4.loss_heatmap: 0.4844, aux_task4.loss_bbox: 0.2653, aux_task5.loss_heatmap: 0.4909, aux_task5.loss_bbox: 0.2911, loss: 13.8907, grad_norm: 28.3507
2025-04-16 18:25:50,518 - mmdet - INFO - Epoch [10][550/1104]	lr: 2.405e-04, eta: 3:20:23, time: 1.018, data_time: 0.007, memory: 13936, loss_cls: 0.4628, loss_bbox: 0.7696, d0.loss_cls: 0.5534, d0.loss_bbox: 0.9208, d1.loss_cls: 0.6002, d1.loss_bbox: 0.8965, d2.loss_cls: 0.5901, d2.loss_bbox: 0.8169, d3.loss_cls: 0.5272, d3.loss_bbox: 0.7948, d4.loss_cls: 0.4851, d4.loss_bbox: 0.7825, aux_task0.loss_heatmap: 0.5770, aux_task0.loss_bbox: 0.2317, aux_task1.loss_heatmap: 0.8195, aux_task1.loss_bbox: 0.3048, aux_task2.loss_heatmap: 0.8988, aux_task2.loss_bbox: 0.3258, aux_task3.loss_heatmap: 0.6263, aux_task3.loss_bbox: 0.2808, aux_task4.loss_heatmap: 0.4894, aux_task4.loss_bbox: 0.2685, aux_task5.loss_heatmap: 0.4911, aux_task5.loss_bbox: 0.2899, loss: 13.8037, grad_norm: 27.4249
2025-04-16 18:26:41,769 - mmdet - INFO - Epoch [10][600/1104]	lr: 2.399e-04, eta: 3:19:27, time: 1.025, data_time: 0.008, memory: 13936, loss_cls: 0.4434, loss_bbox: 0.7529, d0.loss_cls: 0.5292, d0.loss_bbox: 0.8962, d1.loss_cls: 0.5612, d1.loss_bbox: 0.8643, d2.loss_cls: 0.5599, d2.loss_bbox: 0.7982, d3.loss_cls: 0.5110, d3.loss_bbox: 0.7756, d4.loss_cls: 0.4667, d4.loss_bbox: 0.7668, aux_task0.loss_heatmap: 0.5702, aux_task0.loss_bbox: 0.2245, aux_task1.loss_heatmap: 0.8432, aux_task1.loss_bbox: 0.3040, aux_task2.loss_heatmap: 0.8379, aux_task2.loss_bbox: 0.3261, aux_task3.loss_heatmap: 0.6377, aux_task3.loss_bbox: 0.2848, aux_task4.loss_heatmap: 0.4533, aux_task4.loss_bbox: 0.2621, aux_task5.loss_heatmap: 0.4650, aux_task5.loss_bbox: 0.2908, loss: 13.4249, grad_norm: 31.5914
2025-04-16 18:27:32,560 - mmdet - INFO - Epoch [10][650/1104]	lr: 2.394e-04, eta: 3:18:28, time: 1.016, data_time: 0.008, memory: 13936, loss_cls: 0.4421, loss_bbox: 0.7467, d0.loss_cls: 0.5261, d0.loss_bbox: 0.8909, d1.loss_cls: 0.5511, d1.loss_bbox: 0.8486, d2.loss_cls: 0.5531, d2.loss_bbox: 0.7919, d3.loss_cls: 0.5006, d3.loss_bbox: 0.7711, d4.loss_cls: 0.4650, d4.loss_bbox: 0.7582, aux_task0.loss_heatmap: 0.5526, aux_task0.loss_bbox: 0.2230, aux_task1.loss_heatmap: 0.8053, aux_task1.loss_bbox: 0.3029, aux_task2.loss_heatmap: 0.8773, aux_task2.loss_bbox: 0.3248, aux_task3.loss_heatmap: 0.6593, aux_task3.loss_bbox: 0.2813, aux_task4.loss_heatmap: 0.4815, aux_task4.loss_bbox: 0.2624, aux_task5.loss_heatmap: 0.4646, aux_task5.loss_bbox: 0.2891, loss: 13.3694, grad_norm: 19.2979
2025-04-16 18:28:24,114 - mmdet - INFO - Epoch [10][700/1104]	lr: 2.387e-04, eta: 3:17:35, time: 1.031, data_time: 0.008, memory: 13936, loss_cls: 0.4311, loss_bbox: 0.7349, d0.loss_cls: 0.5141, d0.loss_bbox: 0.8780, d1.loss_cls: 0.5285, d1.loss_bbox: 0.8358, d2.loss_cls: 0.5283, d2.loss_bbox: 0.7856, d3.loss_cls: 0.4807, d3.loss_bbox: 0.7605, d4.loss_cls: 0.4488, d4.loss_bbox: 0.7463, aux_task0.loss_heatmap: 0.5491, aux_task0.loss_bbox: 0.2185, aux_task1.loss_heatmap: 0.8101, aux_task1.loss_bbox: 0.3059, aux_task2.loss_heatmap: 0.7908, aux_task2.loss_bbox: 0.3151, aux_task3.loss_heatmap: 0.6298, aux_task3.loss_bbox: 0.2752, aux_task4.loss_heatmap: 0.4449, aux_task4.loss_bbox: 0.2612, aux_task5.loss_heatmap: 0.4574, aux_task5.loss_bbox: 0.2842, loss: 13.0151, grad_norm: 22.9969
2025-04-16 18:29:15,257 - mmdet - INFO - Epoch [10][750/1104]	lr: 2.381e-04, eta: 3:16:39, time: 1.023, data_time: 0.009, memory: 13936, loss_cls: 0.4198, loss_bbox: 0.7341, d0.loss_cls: 0.5049, d0.loss_bbox: 0.8677, d1.loss_cls: 0.5124, d1.loss_bbox: 0.8172, d2.loss_cls: 0.5184, d2.loss_bbox: 0.7753, d3.loss_cls: 0.4737, d3.loss_bbox: 0.7559, d4.loss_cls: 0.4364, d4.loss_bbox: 0.7449, aux_task0.loss_heatmap: 0.5529, aux_task0.loss_bbox: 0.2191, aux_task1.loss_heatmap: 0.8039, aux_task1.loss_bbox: 0.2983, aux_task2.loss_heatmap: 0.7568, aux_task2.loss_bbox: 0.3129, aux_task3.loss_heatmap: 0.6197, aux_task3.loss_bbox: 0.2832, aux_task4.loss_heatmap: 0.4540, aux_task4.loss_bbox: 0.2691, aux_task5.loss_heatmap: 0.4326, aux_task5.loss_bbox: 0.2872, loss: 12.8502, grad_norm: 20.2415
2025-04-16 18:30:06,337 - mmdet - INFO - Epoch [10][800/1104]	lr: 2.375e-04, eta: 3:15:43, time: 1.022, data_time: 0.009, memory: 13936, loss_cls: 0.4220, loss_bbox: 0.7307, d0.loss_cls: 0.5114, d0.loss_bbox: 0.8696, d1.loss_cls: 0.5219, d1.loss_bbox: 0.8217, d2.loss_cls: 0.5264, d2.loss_bbox: 0.7792, d3.loss_cls: 0.4643, d3.loss_bbox: 0.7563, d4.loss_cls: 0.4356, d4.loss_bbox: 0.7436, aux_task0.loss_heatmap: 0.5614, aux_task0.loss_bbox: 0.2215, aux_task1.loss_heatmap: 0.7959, aux_task1.loss_bbox: 0.2993, aux_task2.loss_heatmap: 0.8237, aux_task2.loss_bbox: 0.3218, aux_task3.loss_heatmap: 0.5742, aux_task3.loss_bbox: 0.2661, aux_task4.loss_heatmap: 0.4727, aux_task4.loss_bbox: 0.2596, aux_task5.loss_heatmap: 0.4510, aux_task5.loss_bbox: 0.2877, loss: 12.9177, grad_norm: 25.7295
2025-04-16 18:30:57,643 - mmdet - INFO - Epoch [10][850/1104]	lr: 2.368e-04, eta: 3:14:49, time: 1.026, data_time: 0.008, memory: 13936, loss_cls: 0.4315, loss_bbox: 0.7293, d0.loss_cls: 0.5172, d0.loss_bbox: 0.8694, d1.loss_cls: 0.5298, d1.loss_bbox: 0.8146, d2.loss_cls: 0.5445, d2.loss_bbox: 0.7719, d3.loss_cls: 0.4674, d3.loss_bbox: 0.7532, d4.loss_cls: 0.4418, d4.loss_bbox: 0.7426, aux_task0.loss_heatmap: 0.5654, aux_task0.loss_bbox: 0.2235, aux_task1.loss_heatmap: 0.8205, aux_task1.loss_bbox: 0.2974, aux_task2.loss_heatmap: 0.8053, aux_task2.loss_bbox: 0.3251, aux_task3.loss_heatmap: 0.6215, aux_task3.loss_bbox: 0.2744, aux_task4.loss_heatmap: 0.4569, aux_task4.loss_bbox: 0.2588, aux_task5.loss_heatmap: 0.4389, aux_task5.loss_bbox: 0.2862, loss: 12.9870, grad_norm: 20.3933
2025-04-16 18:31:48,833 - mmdet - INFO - Epoch [10][900/1104]	lr: 2.362e-04, eta: 3:13:54, time: 1.024, data_time: 0.008, memory: 13936, loss_cls: 0.4530, loss_bbox: 0.7485, d0.loss_cls: 0.5560, d0.loss_bbox: 0.9222, d1.loss_cls: 0.5629, d1.loss_bbox: 0.8576, d2.loss_cls: 0.5699, d2.loss_bbox: 0.8026, d3.loss_cls: 0.4981, d3.loss_bbox: 0.7762, d4.loss_cls: 0.4673, d4.loss_bbox: 0.7623, aux_task0.loss_heatmap: 0.5778, aux_task0.loss_bbox: 0.2254, aux_task1.loss_heatmap: 0.8821, aux_task1.loss_bbox: 0.3080, aux_task2.loss_heatmap: 0.8472, aux_task2.loss_bbox: 0.3278, aux_task3.loss_heatmap: 0.6335, aux_task3.loss_bbox: 0.2785, aux_task4.loss_heatmap: 0.5035, aux_task4.loss_bbox: 0.2588, aux_task5.loss_heatmap: 0.4543, aux_task5.loss_bbox: 0.2954, loss: 13.5689, grad_norm: 29.0916
2025-04-16 18:32:39,549 - mmdet - INFO - Epoch [10][950/1104]	lr: 2.355e-04, eta: 3:12:57, time: 1.014, data_time: 0.008, memory: 13936, loss_cls: 0.4437, loss_bbox: 0.7566, d0.loss_cls: 0.5440, d0.loss_bbox: 0.9384, d1.loss_cls: 0.5653, d1.loss_bbox: 0.8740, d2.loss_cls: 0.5513, d2.loss_bbox: 0.8104, d3.loss_cls: 0.4883, d3.loss_bbox: 0.7856, d4.loss_cls: 0.4551, d4.loss_bbox: 0.7740, aux_task0.loss_heatmap: 0.5843, aux_task0.loss_bbox: 0.2333, aux_task1.loss_heatmap: 0.8432, aux_task1.loss_bbox: 0.3055, aux_task2.loss_heatmap: 0.8422, aux_task2.loss_bbox: 0.3257, aux_task3.loss_heatmap: 0.6080, aux_task3.loss_bbox: 0.2906, aux_task4.loss_heatmap: 0.4576, aux_task4.loss_bbox: 0.2614, aux_task5.loss_heatmap: 0.4681, aux_task5.loss_bbox: 0.2905, loss: 13.4972, grad_norm: 34.4195
2025-04-16 18:33:30,535 - mmdet - INFO - Epoch [10][1000/1104]	lr: 2.348e-04, eta: 3:12:01, time: 1.020, data_time: 0.007, memory: 13936, loss_cls: 0.4285, loss_bbox: 0.7394, d0.loss_cls: 0.5308, d0.loss_bbox: 0.9090, d1.loss_cls: 0.5291, d1.loss_bbox: 0.8437, d2.loss_cls: 0.5282, d2.loss_bbox: 0.7875, d3.loss_cls: 0.4731, d3.loss_bbox: 0.7677, d4.loss_cls: 0.4421, d4.loss_bbox: 0.7542, aux_task0.loss_heatmap: 0.5794, aux_task0.loss_bbox: 0.2255, aux_task1.loss_heatmap: 0.8306, aux_task1.loss_bbox: 0.2990, aux_task2.loss_heatmap: 0.8215, aux_task2.loss_bbox: 0.3139, aux_task3.loss_heatmap: 0.6055, aux_task3.loss_bbox: 0.2805, aux_task4.loss_heatmap: 0.4436, aux_task4.loss_bbox: 0.2575, aux_task5.loss_heatmap: 0.4360, aux_task5.loss_bbox: 0.2876, loss: 13.1139, grad_norm: 23.1250
2025-04-16 18:34:21,257 - mmdet - INFO - Epoch [10][1050/1104]	lr: 2.341e-04, eta: 3:11:04, time: 1.014, data_time: 0.008, memory: 13936, loss_cls: 0.4378, loss_bbox: 0.7413, d0.loss_cls: 0.5299, d0.loss_bbox: 0.9020, d1.loss_cls: 0.5415, d1.loss_bbox: 0.8446, d2.loss_cls: 0.5532, d2.loss_bbox: 0.7903, d3.loss_cls: 0.4919, d3.loss_bbox: 0.7707, d4.loss_cls: 0.4545, d4.loss_bbox: 0.7580, aux_task0.loss_heatmap: 0.5589, aux_task0.loss_bbox: 0.2233, aux_task1.loss_heatmap: 0.8361, aux_task1.loss_bbox: 0.3067, aux_task2.loss_heatmap: 0.8112, aux_task2.loss_bbox: 0.3126, aux_task3.loss_heatmap: 0.6220, aux_task3.loss_bbox: 0.2733, aux_task4.loss_heatmap: 0.4743, aux_task4.loss_bbox: 0.2656, aux_task5.loss_heatmap: 0.4609, aux_task5.loss_bbox: 0.2883, loss: 13.2489, grad_norm: 25.5762
2025-04-16 18:35:12,053 - mmdet - INFO - Epoch [10][1100/1104]	lr: 2.333e-04, eta: 3:10:08, time: 1.016, data_time: 0.008, memory: 13936, loss_cls: 0.4411, loss_bbox: 0.7456, d0.loss_cls: 0.5452, d0.loss_bbox: 0.9193, d1.loss_cls: 0.5700, d1.loss_bbox: 0.8536, d2.loss_cls: 0.5628, d2.loss_bbox: 0.7979, d3.loss_cls: 0.4919, d3.loss_bbox: 0.7729, d4.loss_cls: 0.4579, d4.loss_bbox: 0.7627, aux_task0.loss_heatmap: 0.5975, aux_task0.loss_bbox: 0.2236, aux_task1.loss_heatmap: 0.8348, aux_task1.loss_bbox: 0.3008, aux_task2.loss_heatmap: 0.8452, aux_task2.loss_bbox: 0.3165, aux_task3.loss_heatmap: 0.6872, aux_task3.loss_bbox: 0.2894, aux_task4.loss_heatmap: 0.4707, aux_task4.loss_bbox: 0.2623, aux_task5.loss_heatmap: 0.4496, aux_task5.loss_bbox: 0.2900, loss: 13.4885, grad_norm: 26.7989
2025-04-16 18:35:16,512 - mmdet - INFO - Saving checkpoint at 10 epochs
2025-04-16 18:46:52,108 - mmdet - INFO - Exp name: DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01.py
2025-04-16 18:46:52,108 - mmdet - INFO - Epoch(val) [10][3010]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.4595, pts_bbox_NuScenes/car_AP_dist_1.0: 0.6305, pts_bbox_NuScenes/car_AP_dist_2.0: 0.7121, pts_bbox_NuScenes/car_AP_dist_4.0: 0.7581, pts_bbox_NuScenes/car_trans_err: 0.3023, pts_bbox_NuScenes/car_scale_err: 0.1997, pts_bbox_NuScenes/car_orient_err: 0.3702, pts_bbox_NuScenes/car_vel_err: 0.6792, pts_bbox_NuScenes/car_attr_err: 0.2662, pts_bbox_NuScenes/mATE: 0.4915, pts_bbox_NuScenes/mASE: 0.3064, pts_bbox_NuScenes/mAOE: 0.8282, pts_bbox_NuScenes/mAVE: 0.8733, pts_bbox_NuScenes/mAAE: 0.3317, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.0898, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.2311, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.3479, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.4036, pts_bbox_NuScenes/truck_trans_err: 0.5460, pts_bbox_NuScenes/truck_scale_err: 0.2457, pts_bbox_NuScenes/truck_orient_err: 0.4301, pts_bbox_NuScenes/truck_vel_err: 0.7704, pts_bbox_NuScenes/truck_attr_err: 0.3211, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0001, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0198, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.0714, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.0964, pts_bbox_NuScenes/construction_vehicle_trans_err: 0.7920, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.4659, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.2011, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1572, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.3350, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.0971, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.3286, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.5303, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.5899, pts_bbox_NuScenes/bus_trans_err: 0.5990, pts_bbox_NuScenes/bus_scale_err: 0.2921, pts_bbox_NuScenes/bus_orient_err: 0.4246, pts_bbox_NuScenes/bus_vel_err: 2.0316, pts_bbox_NuScenes/bus_attr_err: 0.5064, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.0556, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.1223, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.1940, pts_bbox_NuScenes/trailer_trans_err: 0.7931, pts_bbox_NuScenes/trailer_scale_err: 0.3014, pts_bbox_NuScenes/trailer_orient_err: 1.3206, pts_bbox_NuScenes/trailer_vel_err: 0.6046, pts_bbox_NuScenes/trailer_attr_err: 0.1781, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.1184, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.3541, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.4981, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.5638, pts_bbox_NuScenes/barrier_trans_err: 0.5927, pts_bbox_NuScenes/barrier_scale_err: 0.3095, pts_bbox_NuScenes/barrier_orient_err: 0.3313, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.0435, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.0673, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.0718, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.0762, pts_bbox_NuScenes/motorcycle_trans_err: 0.3348, pts_bbox_NuScenes/motorcycle_scale_err: 0.2841, pts_bbox_NuScenes/motorcycle_orient_err: 0.9033, pts_bbox_NuScenes/motorcycle_vel_err: 1.2892, pts_bbox_NuScenes/motorcycle_attr_err: 0.2041, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.0149, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.0168, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.0178, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.0191, pts_bbox_NuScenes/bicycle_trans_err: 0.3131, pts_bbox_NuScenes/bicycle_scale_err: 0.2803, pts_bbox_NuScenes/bicycle_orient_err: 0.8919, pts_bbox_NuScenes/bicycle_vel_err: 0.4475, pts_bbox_NuScenes/bicycle_attr_err: 0.0418, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.4072, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.6256, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.6776, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.7094, pts_bbox_NuScenes/pedestrian_trans_err: 0.3774, pts_bbox_NuScenes/pedestrian_scale_err: 0.2892, pts_bbox_NuScenes/pedestrian_orient_err: 1.5807, pts_bbox_NuScenes/pedestrian_vel_err: 1.0068, pts_bbox_NuScenes/pedestrian_attr_err: 0.8014, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.3743, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.4314, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.4744, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.5334, pts_bbox_NuScenes/traffic_cone_trans_err: 0.2641, pts_bbox_NuScenes/traffic_cone_scale_err: 0.3963, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.3648, pts_bbox_NuScenes/mAP: 0.2958
2025-04-16 18:47:48,771 - mmdet - INFO - Epoch [11][50/1104]	lr: 2.325e-04, eta: 3:09:12, time: 1.113, data_time: 0.101, memory: 13936, loss_cls: 0.4368, loss_bbox: 0.7322, d0.loss_cls: 0.5289, d0.loss_bbox: 0.8821, d1.loss_cls: 0.5517, d1.loss_bbox: 0.8262, d2.loss_cls: 0.5518, d2.loss_bbox: 0.7763, d3.loss_cls: 0.4816, d3.loss_bbox: 0.7562, d4.loss_cls: 0.4501, d4.loss_bbox: 0.7467, aux_task0.loss_heatmap: 0.5774, aux_task0.loss_bbox: 0.2222, aux_task1.loss_heatmap: 0.8131, aux_task1.loss_bbox: 0.2937, aux_task2.loss_heatmap: 0.8537, aux_task2.loss_bbox: 0.3287, aux_task3.loss_heatmap: 0.6237, aux_task3.loss_bbox: 0.2681, aux_task4.loss_heatmap: 0.4685, aux_task4.loss_bbox: 0.2555, aux_task5.loss_heatmap: 0.4444, aux_task5.loss_bbox: 0.2845, loss: 13.1541, grad_norm: 21.4659
2025-04-16 18:48:41,421 - mmdet - INFO - Epoch [11][100/1104]	lr: 2.318e-04, eta: 3:08:25, time: 1.053, data_time: 0.008, memory: 13936, loss_cls: 0.4366, loss_bbox: 0.7273, d0.loss_cls: 0.5231, d0.loss_bbox: 0.8800, d1.loss_cls: 0.5351, d1.loss_bbox: 0.8244, d2.loss_cls: 0.5420, d2.loss_bbox: 0.7818, d3.loss_cls: 0.4810, d3.loss_bbox: 0.7554, d4.loss_cls: 0.4515, d4.loss_bbox: 0.7444, aux_task0.loss_heatmap: 0.5649, aux_task0.loss_bbox: 0.2244, aux_task1.loss_heatmap: 0.8302, aux_task1.loss_bbox: 0.2997, aux_task2.loss_heatmap: 0.7918, aux_task2.loss_bbox: 0.3091, aux_task3.loss_heatmap: 0.6437, aux_task3.loss_bbox: 0.2878, aux_task4.loss_heatmap: 0.4621, aux_task4.loss_bbox: 0.2658, aux_task5.loss_heatmap: 0.4677, aux_task5.loss_bbox: 0.2881, loss: 13.1176, grad_norm: 33.9533
2025-04-16 18:49:32,511 - mmdet - INFO - Epoch [11][150/1104]	lr: 2.310e-04, eta: 3:07:31, time: 1.022, data_time: 0.008, memory: 13936, loss_cls: 0.4216, loss_bbox: 0.7240, d0.loss_cls: 0.5161, d0.loss_bbox: 0.8753, d1.loss_cls: 0.5261, d1.loss_bbox: 0.8124, d2.loss_cls: 0.5327, d2.loss_bbox: 0.7671, d3.loss_cls: 0.4637, d3.loss_bbox: 0.7499, d4.loss_cls: 0.4345, d4.loss_bbox: 0.7390, aux_task0.loss_heatmap: 0.5656, aux_task0.loss_bbox: 0.2244, aux_task1.loss_heatmap: 0.7981, aux_task1.loss_bbox: 0.2986, aux_task2.loss_heatmap: 0.8085, aux_task2.loss_bbox: 0.3187, aux_task3.loss_heatmap: 0.5841, aux_task3.loss_bbox: 0.2736, aux_task4.loss_heatmap: 0.4451, aux_task4.loss_bbox: 0.2568, aux_task5.loss_heatmap: 0.4149, aux_task5.loss_bbox: 0.2830, loss: 12.8338, grad_norm: 26.8805
2025-04-16 18:50:23,566 - mmdet - INFO - Epoch [11][200/1104]	lr: 2.302e-04, eta: 3:06:36, time: 1.021, data_time: 0.008, memory: 13936, loss_cls: 0.4351, loss_bbox: 0.7294, d0.loss_cls: 0.5259, d0.loss_bbox: 0.8908, d1.loss_cls: 0.5436, d1.loss_bbox: 0.8263, d2.loss_cls: 0.5557, d2.loss_bbox: 0.7810, d3.loss_cls: 0.4914, d3.loss_bbox: 0.7574, d4.loss_cls: 0.4534, d4.loss_bbox: 0.7469, aux_task0.loss_heatmap: 0.5782, aux_task0.loss_bbox: 0.2216, aux_task1.loss_heatmap: 0.8100, aux_task1.loss_bbox: 0.2995, aux_task2.loss_heatmap: 0.8120, aux_task2.loss_bbox: 0.3231, aux_task3.loss_heatmap: 0.6065, aux_task3.loss_bbox: 0.2765, aux_task4.loss_heatmap: 0.4647, aux_task4.loss_bbox: 0.2551, aux_task5.loss_heatmap: 0.4483, aux_task5.loss_bbox: 0.2909, loss: 13.1231, grad_norm: 30.4850
2025-04-16 18:51:14,333 - mmdet - INFO - Epoch [11][250/1104]	lr: 2.294e-04, eta: 3:05:41, time: 1.015, data_time: 0.008, memory: 13936, loss_cls: 0.4295, loss_bbox: 0.7161, d0.loss_cls: 0.5168, d0.loss_bbox: 0.8695, d1.loss_cls: 0.5419, d1.loss_bbox: 0.8048, d2.loss_cls: 0.5467, d2.loss_bbox: 0.7622, d3.loss_cls: 0.4736, d3.loss_bbox: 0.7435, d4.loss_cls: 0.4421, d4.loss_bbox: 0.7343, aux_task0.loss_heatmap: 0.5638, aux_task0.loss_bbox: 0.2191, aux_task1.loss_heatmap: 0.8038, aux_task1.loss_bbox: 0.3011, aux_task2.loss_heatmap: 0.8054, aux_task2.loss_bbox: 0.3113, aux_task3.loss_heatmap: 0.5923, aux_task3.loss_bbox: 0.2690, aux_task4.loss_heatmap: 0.4762, aux_task4.loss_bbox: 0.2609, aux_task5.loss_heatmap: 0.4420, aux_task5.loss_bbox: 0.2830, loss: 12.9090, grad_norm: 26.2479
2025-04-16 18:52:05,575 - mmdet - INFO - Epoch [11][300/1104]	lr: 2.286e-04, eta: 3:04:48, time: 1.025, data_time: 0.007, memory: 13936, loss_cls: 0.4261, loss_bbox: 0.7295, d0.loss_cls: 0.5110, d0.loss_bbox: 0.8855, d1.loss_cls: 0.5356, d1.loss_bbox: 0.8219, d2.loss_cls: 0.5416, d2.loss_bbox: 0.7759, d3.loss_cls: 0.4698, d3.loss_bbox: 0.7611, d4.loss_cls: 0.4390, d4.loss_bbox: 0.7493, aux_task0.loss_heatmap: 0.5720, aux_task0.loss_bbox: 0.2190, aux_task1.loss_heatmap: 0.8228, aux_task1.loss_bbox: 0.2985, aux_task2.loss_heatmap: 0.7773, aux_task2.loss_bbox: 0.3208, aux_task3.loss_heatmap: 0.5880, aux_task3.loss_bbox: 0.2805, aux_task4.loss_heatmap: 0.4678, aux_task4.loss_bbox: 0.2565, aux_task5.loss_heatmap: 0.4501, aux_task5.loss_bbox: 0.2905, loss: 12.9904, grad_norm: 22.4572
2025-04-16 18:52:56,338 - mmdet - INFO - Epoch [11][350/1104]	lr: 2.277e-04, eta: 3:03:52, time: 1.015, data_time: 0.008, memory: 13936, loss_cls: 0.4266, loss_bbox: 0.7262, d0.loss_cls: 0.5115, d0.loss_bbox: 0.8706, d1.loss_cls: 0.5295, d1.loss_bbox: 0.8158, d2.loss_cls: 0.5334, d2.loss_bbox: 0.7717, d3.loss_cls: 0.4672, d3.loss_bbox: 0.7549, d4.loss_cls: 0.4380, d4.loss_bbox: 0.7438, aux_task0.loss_heatmap: 0.5585, aux_task0.loss_bbox: 0.2170, aux_task1.loss_heatmap: 0.8374, aux_task1.loss_bbox: 0.3096, aux_task2.loss_heatmap: 0.8313, aux_task2.loss_bbox: 0.3251, aux_task3.loss_heatmap: 0.5775, aux_task3.loss_bbox: 0.2608, aux_task4.loss_heatmap: 0.4719, aux_task4.loss_bbox: 0.2623, aux_task5.loss_heatmap: 0.4415, aux_task5.loss_bbox: 0.2868, loss: 12.9690, grad_norm: 19.5489
2025-04-16 18:53:47,549 - mmdet - INFO - Epoch [11][400/1104]	lr: 2.269e-04, eta: 3:02:59, time: 1.024, data_time: 0.009, memory: 13936, loss_cls: 0.4082, loss_bbox: 0.6993, d0.loss_cls: 0.4961, d0.loss_bbox: 0.8412, d1.loss_cls: 0.5070, d1.loss_bbox: 0.7886, d2.loss_cls: 0.5122, d2.loss_bbox: 0.7456, d3.loss_cls: 0.4515, d3.loss_bbox: 0.7259, d4.loss_cls: 0.4207, d4.loss_bbox: 0.7154, aux_task0.loss_heatmap: 0.5275, aux_task0.loss_bbox: 0.2122, aux_task1.loss_heatmap: 0.7770, aux_task1.loss_bbox: 0.2972, aux_task2.loss_heatmap: 0.7952, aux_task2.loss_bbox: 0.3049, aux_task3.loss_heatmap: 0.5818, aux_task3.loss_bbox: 0.2703, aux_task4.loss_heatmap: 0.4370, aux_task4.loss_bbox: 0.2561, aux_task5.loss_heatmap: 0.4398, aux_task5.loss_bbox: 0.2850, loss: 12.4958, grad_norm: 21.9656
2025-04-16 18:54:38,755 - mmdet - INFO - Epoch [11][450/1104]	lr: 2.260e-04, eta: 3:02:06, time: 1.024, data_time: 0.008, memory: 13936, loss_cls: 0.4224, loss_bbox: 0.7155, d0.loss_cls: 0.5048, d0.loss_bbox: 0.8623, d1.loss_cls: 0.5140, d1.loss_bbox: 0.8047, d2.loss_cls: 0.5207, d2.loss_bbox: 0.7638, d3.loss_cls: 0.4636, d3.loss_bbox: 0.7465, d4.loss_cls: 0.4344, d4.loss_bbox: 0.7335, aux_task0.loss_heatmap: 0.5432, aux_task0.loss_bbox: 0.2184, aux_task1.loss_heatmap: 0.7886, aux_task1.loss_bbox: 0.2964, aux_task2.loss_heatmap: 0.8112, aux_task2.loss_bbox: 0.3107, aux_task3.loss_heatmap: 0.6023, aux_task3.loss_bbox: 0.2743, aux_task4.loss_heatmap: 0.4826, aux_task4.loss_bbox: 0.2641, aux_task5.loss_heatmap: 0.4524, aux_task5.loss_bbox: 0.2831, loss: 12.8135, grad_norm: 22.3001
2025-04-16 18:55:29,753 - mmdet - INFO - Epoch [11][500/1104]	lr: 2.251e-04, eta: 3:01:12, time: 1.020, data_time: 0.008, memory: 13936, loss_cls: 0.4140, loss_bbox: 0.7037, d0.loss_cls: 0.4982, d0.loss_bbox: 0.8448, d1.loss_cls: 0.5051, d1.loss_bbox: 0.7876, d2.loss_cls: 0.5107, d2.loss_bbox: 0.7472, d3.loss_cls: 0.4582, d3.loss_bbox: 0.7317, d4.loss_cls: 0.4261, d4.loss_bbox: 0.7225, aux_task0.loss_heatmap: 0.5395, aux_task0.loss_bbox: 0.2137, aux_task1.loss_heatmap: 0.8087, aux_task1.loss_bbox: 0.2876, aux_task2.loss_heatmap: 0.7779, aux_task2.loss_bbox: 0.3102, aux_task3.loss_heatmap: 0.6146, aux_task3.loss_bbox: 0.2741, aux_task4.loss_heatmap: 0.4495, aux_task4.loss_bbox: 0.2499, aux_task5.loss_heatmap: 0.4414, aux_task5.loss_bbox: 0.2835, loss: 12.6005, grad_norm: 25.6385
2025-04-16 18:56:20,599 - mmdet - INFO - Epoch [11][550/1104]	lr: 2.242e-04, eta: 3:00:18, time: 1.017, data_time: 0.007, memory: 13936, loss_cls: 0.4125, loss_bbox: 0.7069, d0.loss_cls: 0.5001, d0.loss_bbox: 0.8562, d1.loss_cls: 0.5093, d1.loss_bbox: 0.7981, d2.loss_cls: 0.5110, d2.loss_bbox: 0.7563, d3.loss_cls: 0.4514, d3.loss_bbox: 0.7358, d4.loss_cls: 0.4246, d4.loss_bbox: 0.7257, aux_task0.loss_heatmap: 0.5392, aux_task0.loss_bbox: 0.2188, aux_task1.loss_heatmap: 0.7928, aux_task1.loss_bbox: 0.2919, aux_task2.loss_heatmap: 0.8123, aux_task2.loss_bbox: 0.3111, aux_task3.loss_heatmap: 0.6052, aux_task3.loss_bbox: 0.2689, aux_task4.loss_heatmap: 0.4440, aux_task4.loss_bbox: 0.2548, aux_task5.loss_heatmap: 0.4534, aux_task5.loss_bbox: 0.2846, loss: 12.6651, grad_norm: 20.4273
2025-04-16 18:57:11,692 - mmdet - INFO - Epoch [11][600/1104]	lr: 2.233e-04, eta: 2:59:24, time: 1.022, data_time: 0.008, memory: 13936, loss_cls: 0.4090, loss_bbox: 0.6979, d0.loss_cls: 0.4912, d0.loss_bbox: 0.8444, d1.loss_cls: 0.4971, d1.loss_bbox: 0.7888, d2.loss_cls: 0.5037, d2.loss_bbox: 0.7486, d3.loss_cls: 0.4460, d3.loss_bbox: 0.7290, d4.loss_cls: 0.4191, d4.loss_bbox: 0.7190, aux_task0.loss_heatmap: 0.5535, aux_task0.loss_bbox: 0.2126, aux_task1.loss_heatmap: 0.7908, aux_task1.loss_bbox: 0.2918, aux_task2.loss_heatmap: 0.8148, aux_task2.loss_bbox: 0.3153, aux_task3.loss_heatmap: 0.6006, aux_task3.loss_bbox: 0.2789, aux_task4.loss_heatmap: 0.4357, aux_task4.loss_bbox: 0.2469, aux_task5.loss_heatmap: 0.4340, aux_task5.loss_bbox: 0.2871, loss: 12.5560, grad_norm: 19.3039
2025-04-16 18:58:03,060 - mmdet - INFO - Epoch [11][650/1104]	lr: 2.224e-04, eta: 2:58:32, time: 1.027, data_time: 0.010, memory: 13936, loss_cls: 0.4206, loss_bbox: 0.7176, d0.loss_cls: 0.5057, d0.loss_bbox: 0.8830, d1.loss_cls: 0.5139, d1.loss_bbox: 0.8160, d2.loss_cls: 0.5151, d2.loss_bbox: 0.7732, d3.loss_cls: 0.4538, d3.loss_bbox: 0.7509, d4.loss_cls: 0.4308, d4.loss_bbox: 0.7376, aux_task0.loss_heatmap: 0.5487, aux_task0.loss_bbox: 0.2174, aux_task1.loss_heatmap: 0.7709, aux_task1.loss_bbox: 0.2977, aux_task2.loss_heatmap: 0.8206, aux_task2.loss_bbox: 0.3203, aux_task3.loss_heatmap: 0.6354, aux_task3.loss_bbox: 0.2700, aux_task4.loss_heatmap: 0.4741, aux_task4.loss_bbox: 0.2546, aux_task5.loss_heatmap: 0.4560, aux_task5.loss_bbox: 0.2858, loss: 12.8694, grad_norm: 22.3279
2025-04-16 18:58:54,496 - mmdet - INFO - Epoch [11][700/1104]	lr: 2.215e-04, eta: 2:57:40, time: 1.029, data_time: 0.008, memory: 13936, loss_cls: 0.4043, loss_bbox: 0.7074, d0.loss_cls: 0.4938, d0.loss_bbox: 0.8684, d1.loss_cls: 0.5004, d1.loss_bbox: 0.8048, d2.loss_cls: 0.5004, d2.loss_bbox: 0.7638, d3.loss_cls: 0.4399, d3.loss_bbox: 0.7386, d4.loss_cls: 0.4157, d4.loss_bbox: 0.7255, aux_task0.loss_heatmap: 0.5431, aux_task0.loss_bbox: 0.2113, aux_task1.loss_heatmap: 0.7685, aux_task1.loss_bbox: 0.2924, aux_task2.loss_heatmap: 0.8040, aux_task2.loss_bbox: 0.3130, aux_task3.loss_heatmap: 0.6016, aux_task3.loss_bbox: 0.2696, aux_task4.loss_heatmap: 0.4303, aux_task4.loss_bbox: 0.2522, aux_task5.loss_heatmap: 0.4511, aux_task5.loss_bbox: 0.2858, loss: 12.5858, grad_norm: 19.4796
2025-04-16 18:59:45,409 - mmdet - INFO - Epoch [11][750/1104]	lr: 2.205e-04, eta: 2:56:46, time: 1.018, data_time: 0.008, memory: 13936, loss_cls: 0.4110, loss_bbox: 0.7039, d0.loss_cls: 0.4989, d0.loss_bbox: 0.8492, d1.loss_cls: 0.5053, d1.loss_bbox: 0.7875, d2.loss_cls: 0.5119, d2.loss_bbox: 0.7530, d3.loss_cls: 0.4496, d3.loss_bbox: 0.7330, d4.loss_cls: 0.4246, d4.loss_bbox: 0.7227, aux_task0.loss_heatmap: 0.5327, aux_task0.loss_bbox: 0.2108, aux_task1.loss_heatmap: 0.8112, aux_task1.loss_bbox: 0.2912, aux_task2.loss_heatmap: 0.7466, aux_task2.loss_bbox: 0.3085, aux_task3.loss_heatmap: 0.5882, aux_task3.loss_bbox: 0.2750, aux_task4.loss_heatmap: 0.4531, aux_task4.loss_bbox: 0.2606, aux_task5.loss_heatmap: 0.4564, aux_task5.loss_bbox: 0.2832, loss: 12.5678, grad_norm: 21.2708
2025-04-16 19:00:36,373 - mmdet - INFO - Epoch [11][800/1104]	lr: 2.195e-04, eta: 2:55:53, time: 1.019, data_time: 0.008, memory: 13936, loss_cls: 0.4061, loss_bbox: 0.6983, d0.loss_cls: 0.4943, d0.loss_bbox: 0.8503, d1.loss_cls: 0.4965, d1.loss_bbox: 0.7849, d2.loss_cls: 0.5055, d2.loss_bbox: 0.7466, d3.loss_cls: 0.4491, d3.loss_bbox: 0.7255, d4.loss_cls: 0.4178, d4.loss_bbox: 0.7162, aux_task0.loss_heatmap: 0.5350, aux_task0.loss_bbox: 0.2125, aux_task1.loss_heatmap: 0.7858, aux_task1.loss_bbox: 0.2904, aux_task2.loss_heatmap: 0.7854, aux_task2.loss_bbox: 0.3070, aux_task3.loss_heatmap: 0.5725, aux_task3.loss_bbox: 0.2607, aux_task4.loss_heatmap: 0.4532, aux_task4.loss_bbox: 0.2521, aux_task5.loss_heatmap: 0.4528, aux_task5.loss_bbox: 0.2853, loss: 12.4839, grad_norm: 22.8436
2025-04-16 19:01:27,516 - mmdet - INFO - Epoch [11][850/1104]	lr: 2.186e-04, eta: 2:55:00, time: 1.023, data_time: 0.010, memory: 13936, loss_cls: 0.4102, loss_bbox: 0.7128, d0.loss_cls: 0.4992, d0.loss_bbox: 0.8599, d1.loss_cls: 0.5072, d1.loss_bbox: 0.7933, d2.loss_cls: 0.5162, d2.loss_bbox: 0.7538, d3.loss_cls: 0.4611, d3.loss_bbox: 0.7380, d4.loss_cls: 0.4243, d4.loss_bbox: 0.7296, aux_task0.loss_heatmap: 0.5610, aux_task0.loss_bbox: 0.2210, aux_task1.loss_heatmap: 0.7915, aux_task1.loss_bbox: 0.2914, aux_task2.loss_heatmap: 0.7681, aux_task2.loss_bbox: 0.3172, aux_task3.loss_heatmap: 0.5547, aux_task3.loss_bbox: 0.2762, aux_task4.loss_heatmap: 0.4404, aux_task4.loss_bbox: 0.2541, aux_task5.loss_heatmap: 0.4424, aux_task5.loss_bbox: 0.2865, loss: 12.6101, grad_norm: 21.6579
2025-04-16 19:02:18,889 - mmdet - INFO - Epoch [11][900/1104]	lr: 2.176e-04, eta: 2:54:08, time: 1.027, data_time: 0.008, memory: 13936, loss_cls: 0.4174, loss_bbox: 0.7184, d0.loss_cls: 0.5054, d0.loss_bbox: 0.8645, d1.loss_cls: 0.5118, d1.loss_bbox: 0.8001, d2.loss_cls: 0.5186, d2.loss_bbox: 0.7616, d3.loss_cls: 0.4557, d3.loss_bbox: 0.7468, d4.loss_cls: 0.4301, d4.loss_bbox: 0.7370, aux_task0.loss_heatmap: 0.5433, aux_task0.loss_bbox: 0.2167, aux_task1.loss_heatmap: 0.8303, aux_task1.loss_bbox: 0.2924, aux_task2.loss_heatmap: 0.7935, aux_task2.loss_bbox: 0.3142, aux_task3.loss_heatmap: 0.5960, aux_task3.loss_bbox: 0.2742, aux_task4.loss_heatmap: 0.4672, aux_task4.loss_bbox: 0.2475, aux_task5.loss_heatmap: 0.4570, aux_task5.loss_bbox: 0.2890, loss: 12.7888, grad_norm: 19.7352
2025-04-16 19:03:10,384 - mmdet - INFO - Epoch [11][950/1104]	lr: 2.166e-04, eta: 2:53:16, time: 1.030, data_time: 0.010, memory: 13936, loss_cls: 0.4010, loss_bbox: 0.7024, d0.loss_cls: 0.4923, d0.loss_bbox: 0.8432, d1.loss_cls: 0.4921, d1.loss_bbox: 0.7827, d2.loss_cls: 0.4922, d2.loss_bbox: 0.7480, d3.loss_cls: 0.4386, d3.loss_bbox: 0.7314, d4.loss_cls: 0.4126, d4.loss_bbox: 0.7215, aux_task0.loss_heatmap: 0.5547, aux_task0.loss_bbox: 0.2136, aux_task1.loss_heatmap: 0.7923, aux_task1.loss_bbox: 0.2928, aux_task2.loss_heatmap: 0.7758, aux_task2.loss_bbox: 0.3017, aux_task3.loss_heatmap: 0.5932, aux_task3.loss_bbox: 0.2750, aux_task4.loss_heatmap: 0.4254, aux_task4.loss_bbox: 0.2483, aux_task5.loss_heatmap: 0.4154, aux_task5.loss_bbox: 0.2817, loss: 12.4278, grad_norm: 19.1860
2025-04-16 19:04:01,394 - mmdet - INFO - Epoch [11][1000/1104]	lr: 2.156e-04, eta: 2:52:23, time: 1.020, data_time: 0.009, memory: 13936, loss_cls: 0.4061, loss_bbox: 0.6901, d0.loss_cls: 0.4905, d0.loss_bbox: 0.8325, d1.loss_cls: 0.4934, d1.loss_bbox: 0.7717, d2.loss_cls: 0.4986, d2.loss_bbox: 0.7374, d3.loss_cls: 0.4392, d3.loss_bbox: 0.7216, d4.loss_cls: 0.4165, d4.loss_bbox: 0.7094, aux_task0.loss_heatmap: 0.5352, aux_task0.loss_bbox: 0.2125, aux_task1.loss_heatmap: 0.8011, aux_task1.loss_bbox: 0.2934, aux_task2.loss_heatmap: 0.7713, aux_task2.loss_bbox: 0.3047, aux_task3.loss_heatmap: 0.5616, aux_task3.loss_bbox: 0.2685, aux_task4.loss_heatmap: 0.4363, aux_task4.loss_bbox: 0.2473, aux_task5.loss_heatmap: 0.4357, aux_task5.loss_bbox: 0.2849, loss: 12.3594, grad_norm: 20.6234
2025-04-16 19:04:52,132 - mmdet - INFO - Epoch [11][1050/1104]	lr: 2.145e-04, eta: 2:51:29, time: 1.015, data_time: 0.009, memory: 13936, loss_cls: 0.4138, loss_bbox: 0.6943, d0.loss_cls: 0.4972, d0.loss_bbox: 0.8413, d1.loss_cls: 0.4997, d1.loss_bbox: 0.7772, d2.loss_cls: 0.5032, d2.loss_bbox: 0.7435, d3.loss_cls: 0.4503, d3.loss_bbox: 0.7249, d4.loss_cls: 0.4240, d4.loss_bbox: 0.7146, aux_task0.loss_heatmap: 0.5463, aux_task0.loss_bbox: 0.2109, aux_task1.loss_heatmap: 0.8161, aux_task1.loss_bbox: 0.2931, aux_task2.loss_heatmap: 0.7749, aux_task2.loss_bbox: 0.3043, aux_task3.loss_heatmap: 0.6070, aux_task3.loss_bbox: 0.2652, aux_task4.loss_heatmap: 0.4539, aux_task4.loss_bbox: 0.2547, aux_task5.loss_heatmap: 0.4426, aux_task5.loss_bbox: 0.2833, loss: 12.5364, grad_norm: 18.9916
2025-04-16 19:05:43,631 - mmdet - INFO - Epoch [11][1100/1104]	lr: 2.135e-04, eta: 2:50:38, time: 1.030, data_time: 0.008, memory: 13936, loss_cls: 0.3936, loss_bbox: 0.6880, d0.loss_cls: 0.4743, d0.loss_bbox: 0.8415, d1.loss_cls: 0.4742, d1.loss_bbox: 0.7732, d2.loss_cls: 0.4792, d2.loss_bbox: 0.7434, d3.loss_cls: 0.4237, d3.loss_bbox: 0.7215, d4.loss_cls: 0.4023, d4.loss_bbox: 0.7097, aux_task0.loss_heatmap: 0.5267, aux_task0.loss_bbox: 0.2099, aux_task1.loss_heatmap: 0.7899, aux_task1.loss_bbox: 0.2901, aux_task2.loss_heatmap: 0.7783, aux_task2.loss_bbox: 0.3035, aux_task3.loss_heatmap: 0.5472, aux_task3.loss_bbox: 0.2684, aux_task4.loss_heatmap: 0.4355, aux_task4.loss_bbox: 0.2463, aux_task5.loss_heatmap: 0.4245, aux_task5.loss_bbox: 0.2823, loss: 12.2273, grad_norm: 19.5772
2025-04-16 19:05:48,142 - mmdet - INFO - Saving checkpoint at 11 epochs
2025-04-16 19:17:17,586 - mmdet - INFO - Exp name: DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01.py
2025-04-16 19:17:17,587 - mmdet - INFO - Epoch(val) [11][3010]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.5158, pts_bbox_NuScenes/car_AP_dist_1.0: 0.6781, pts_bbox_NuScenes/car_AP_dist_2.0: 0.7561, pts_bbox_NuScenes/car_AP_dist_4.0: 0.7999, pts_bbox_NuScenes/car_trans_err: 0.2725, pts_bbox_NuScenes/car_scale_err: 0.1761, pts_bbox_NuScenes/car_orient_err: 0.3161, pts_bbox_NuScenes/car_vel_err: 0.5948, pts_bbox_NuScenes/car_attr_err: 0.2414, pts_bbox_NuScenes/mATE: 0.4508, pts_bbox_NuScenes/mASE: 0.2967, pts_bbox_NuScenes/mAOE: 0.7821, pts_bbox_NuScenes/mAVE: 0.8381, pts_bbox_NuScenes/mAAE: 0.3258, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.1179, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.2923, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.4032, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.4546, pts_bbox_NuScenes/truck_trans_err: 0.5145, pts_bbox_NuScenes/truck_scale_err: 0.2378, pts_bbox_NuScenes/truck_orient_err: 0.3485, pts_bbox_NuScenes/truck_vel_err: 0.8129, pts_bbox_NuScenes/truck_attr_err: 0.3668, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0004, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0290, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.0865, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.1415, pts_bbox_NuScenes/construction_vehicle_trans_err: 0.7808, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.4715, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.3401, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1493, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.3647, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.1156, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.3585, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.5389, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.5958, pts_bbox_NuScenes/bus_trans_err: 0.5794, pts_bbox_NuScenes/bus_scale_err: 0.2408, pts_bbox_NuScenes/bus_orient_err: 0.4694, pts_bbox_NuScenes/bus_vel_err: 1.7455, pts_bbox_NuScenes/bus_attr_err: 0.4167, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0250, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.1120, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.1631, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.2081, pts_bbox_NuScenes/trailer_trans_err: 0.6245, pts_bbox_NuScenes/trailer_scale_err: 0.2913, pts_bbox_NuScenes/trailer_orient_err: 1.1069, pts_bbox_NuScenes/trailer_vel_err: 0.5200, pts_bbox_NuScenes/trailer_attr_err: 0.2230, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.1938, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.3752, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.4937, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.5434, pts_bbox_NuScenes/barrier_trans_err: 0.4879, pts_bbox_NuScenes/barrier_scale_err: 0.3063, pts_bbox_NuScenes/barrier_orient_err: 0.2681, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.1087, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.1449, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.1563, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.1640, pts_bbox_NuScenes/motorcycle_trans_err: 0.3178, pts_bbox_NuScenes/motorcycle_scale_err: 0.2688, pts_bbox_NuScenes/motorcycle_orient_err: 0.7743, pts_bbox_NuScenes/motorcycle_vel_err: 1.2849, pts_bbox_NuScenes/motorcycle_attr_err: 0.1993, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.0522, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.0558, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.0641, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.0687, pts_bbox_NuScenes/bicycle_trans_err: 0.3067, pts_bbox_NuScenes/bicycle_scale_err: 0.2871, pts_bbox_NuScenes/bicycle_orient_err: 0.8642, pts_bbox_NuScenes/bicycle_vel_err: 0.6212, pts_bbox_NuScenes/bicycle_attr_err: 0.0346, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.4196, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.6638, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.7161, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.7457, pts_bbox_NuScenes/pedestrian_trans_err: 0.3818, pts_bbox_NuScenes/pedestrian_scale_err: 0.2999, pts_bbox_NuScenes/pedestrian_orient_err: 1.5512, pts_bbox_NuScenes/pedestrian_vel_err: 0.9764, pts_bbox_NuScenes/pedestrian_attr_err: 0.7599, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.4276, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.4750, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.5131, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.5612, pts_bbox_NuScenes/traffic_cone_trans_err: 0.2415, pts_bbox_NuScenes/traffic_cone_scale_err: 0.3874, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.3973, pts_bbox_NuScenes/mAP: 0.3334
2025-04-16 19:18:13,796 - mmdet - INFO - Epoch [12][50/1104]	lr: 2.124e-04, eta: 2:49:41, time: 1.105, data_time: 0.086, memory: 13936, loss_cls: 0.4200, loss_bbox: 0.7038, d0.loss_cls: 0.5097, d0.loss_bbox: 0.8596, d1.loss_cls: 0.5076, d1.loss_bbox: 0.7837, d2.loss_cls: 0.5106, d2.loss_bbox: 0.7484, d3.loss_cls: 0.4715, d3.loss_bbox: 0.7326, d4.loss_cls: 0.4369, d4.loss_bbox: 0.7212, aux_task0.loss_heatmap: 0.5439, aux_task0.loss_bbox: 0.2126, aux_task1.loss_heatmap: 0.8004, aux_task1.loss_bbox: 0.2841, aux_task2.loss_heatmap: 0.8408, aux_task2.loss_bbox: 0.3178, aux_task3.loss_heatmap: 0.6031, aux_task3.loss_bbox: 0.2726, aux_task4.loss_heatmap: 0.4539, aux_task4.loss_bbox: 0.2475, aux_task5.loss_heatmap: 0.4334, aux_task5.loss_bbox: 0.2826, loss: 12.6981, grad_norm: 30.3212
2025-04-16 19:19:04,631 - mmdet - INFO - Epoch [12][100/1104]	lr: 2.113e-04, eta: 2:48:48, time: 1.017, data_time: 0.008, memory: 13936, loss_cls: 0.4744, loss_bbox: 0.7783, d0.loss_cls: 0.5921, d0.loss_bbox: 0.9669, d1.loss_cls: 0.6153, d1.loss_bbox: 0.8863, d2.loss_cls: 0.6194, d2.loss_bbox: 0.8284, d3.loss_cls: 0.5530, d3.loss_bbox: 0.8094, d4.loss_cls: 0.4966, d4.loss_bbox: 0.7974, aux_task0.loss_heatmap: 0.6170, aux_task0.loss_bbox: 0.2412, aux_task1.loss_heatmap: 0.8987, aux_task1.loss_bbox: 0.3158, aux_task2.loss_heatmap: 0.8504, aux_task2.loss_bbox: 0.3266, aux_task3.loss_heatmap: 0.7075, aux_task3.loss_bbox: 0.2864, aux_task4.loss_heatmap: 0.4922, aux_task4.loss_bbox: 0.2723, aux_task5.loss_heatmap: 0.4735, aux_task5.loss_bbox: 0.2933, loss: 14.1924, grad_norm: 140.6604
2025-04-16 19:19:56,744 - mmdet - INFO - Epoch [12][150/1104]	lr: 2.102e-04, eta: 2:47:58, time: 1.042, data_time: 0.036, memory: 13936, loss_cls: 0.4445, loss_bbox: 0.7481, d0.loss_cls: 0.5487, d0.loss_bbox: 0.9243, d1.loss_cls: 0.5739, d1.loss_bbox: 0.8512, d2.loss_cls: 0.5880, d2.loss_bbox: 0.7914, d3.loss_cls: 0.5176, d3.loss_bbox: 0.7783, d4.loss_cls: 0.4657, d4.loss_bbox: 0.7673, aux_task0.loss_heatmap: 0.5695, aux_task0.loss_bbox: 0.2259, aux_task1.loss_heatmap: 0.8348, aux_task1.loss_bbox: 0.3045, aux_task2.loss_heatmap: 0.8595, aux_task2.loss_bbox: 0.3347, aux_task3.loss_heatmap: 0.6535, aux_task3.loss_bbox: 0.2893, aux_task4.loss_heatmap: 0.4581, aux_task4.loss_bbox: 0.2589, aux_task5.loss_heatmap: 0.4515, aux_task5.loss_bbox: 0.2951, loss: 13.5343, grad_norm: 34.3879
2025-04-16 19:20:47,975 - mmdet - INFO - Epoch [12][200/1104]	lr: 2.091e-04, eta: 2:47:06, time: 1.025, data_time: 0.008, memory: 13936, loss_cls: 0.4188, loss_bbox: 0.7187, d0.loss_cls: 0.5170, d0.loss_bbox: 0.8871, d1.loss_cls: 0.5264, d1.loss_bbox: 0.8212, d2.loss_cls: 0.5349, d2.loss_bbox: 0.7700, d3.loss_cls: 0.4779, d3.loss_bbox: 0.7512, d4.loss_cls: 0.4367, d4.loss_bbox: 0.7406, aux_task0.loss_heatmap: 0.5504, aux_task0.loss_bbox: 0.2163, aux_task1.loss_heatmap: 0.7819, aux_task1.loss_bbox: 0.2945, aux_task2.loss_heatmap: 0.8030, aux_task2.loss_bbox: 0.3148, aux_task3.loss_heatmap: 0.6039, aux_task3.loss_bbox: 0.2735, aux_task4.loss_heatmap: 0.4417, aux_task4.loss_bbox: 0.2491, aux_task5.loss_heatmap: 0.4523, aux_task5.loss_bbox: 0.2882, loss: 12.8698, grad_norm: 20.3741
2025-04-16 19:21:39,226 - mmdet - INFO - Epoch [12][250/1104]	lr: 2.080e-04, eta: 2:46:14, time: 1.025, data_time: 0.008, memory: 13936, loss_cls: 0.4273, loss_bbox: 0.7180, d0.loss_cls: 0.5278, d0.loss_bbox: 0.8802, d1.loss_cls: 0.5349, d1.loss_bbox: 0.8110, d2.loss_cls: 0.5504, d2.loss_bbox: 0.7681, d3.loss_cls: 0.4840, d3.loss_bbox: 0.7494, d4.loss_cls: 0.4421, d4.loss_bbox: 0.7386, aux_task0.loss_heatmap: 0.5557, aux_task0.loss_bbox: 0.2190, aux_task1.loss_heatmap: 0.8136, aux_task1.loss_bbox: 0.3002, aux_task2.loss_heatmap: 0.7984, aux_task2.loss_bbox: 0.3145, aux_task3.loss_heatmap: 0.6044, aux_task3.loss_bbox: 0.2792, aux_task4.loss_heatmap: 0.4794, aux_task4.loss_bbox: 0.2555, aux_task5.loss_heatmap: 0.4288, aux_task5.loss_bbox: 0.2853, loss: 12.9658, grad_norm: 26.2103
2025-04-16 19:22:30,292 - mmdet - INFO - Epoch [12][300/1104]	lr: 2.069e-04, eta: 2:45:21, time: 1.021, data_time: 0.008, memory: 13936, loss_cls: 0.4156, loss_bbox: 0.7059, d0.loss_cls: 0.5131, d0.loss_bbox: 0.8593, d1.loss_cls: 0.5271, d1.loss_bbox: 0.7957, d2.loss_cls: 0.5416, d2.loss_bbox: 0.7543, d3.loss_cls: 0.4707, d3.loss_bbox: 0.7381, d4.loss_cls: 0.4300, d4.loss_bbox: 0.7282, aux_task0.loss_heatmap: 0.5281, aux_task0.loss_bbox: 0.2102, aux_task1.loss_heatmap: 0.7953, aux_task1.loss_bbox: 0.2962, aux_task2.loss_heatmap: 0.7744, aux_task2.loss_bbox: 0.3205, aux_task3.loss_heatmap: 0.5930, aux_task3.loss_bbox: 0.2709, aux_task4.loss_heatmap: 0.4599, aux_task4.loss_bbox: 0.2533, aux_task5.loss_heatmap: 0.4518, aux_task5.loss_bbox: 0.2839, loss: 12.7170, grad_norm: 19.3735
2025-04-16 19:23:21,224 - mmdet - INFO - Epoch [12][350/1104]	lr: 2.058e-04, eta: 2:44:28, time: 1.019, data_time: 0.007, memory: 13936, loss_cls: 0.4324, loss_bbox: 0.7324, d0.loss_cls: 0.5263, d0.loss_bbox: 0.8831, d1.loss_cls: 0.5496, d1.loss_bbox: 0.8322, d2.loss_cls: 0.5627, d2.loss_bbox: 0.7943, d3.loss_cls: 0.4970, d3.loss_bbox: 0.7685, d4.loss_cls: 0.4510, d4.loss_bbox: 0.7547, aux_task0.loss_heatmap: 0.5556, aux_task0.loss_bbox: 0.2217, aux_task1.loss_heatmap: 0.8710, aux_task1.loss_bbox: 0.3064, aux_task2.loss_heatmap: 0.8131, aux_task2.loss_bbox: 0.3226, aux_task3.loss_heatmap: 0.5986, aux_task3.loss_bbox: 0.2875, aux_task4.loss_heatmap: 0.4659, aux_task4.loss_bbox: 0.2567, aux_task5.loss_heatmap: 0.4631, aux_task5.loss_bbox: 0.2864, loss: 13.2326, grad_norm: 24.9830
2025-04-16 19:24:12,129 - mmdet - INFO - Epoch [12][400/1104]	lr: 2.046e-04, eta: 2:43:35, time: 1.018, data_time: 0.009, memory: 13936, loss_cls: 0.4192, loss_bbox: 0.7081, d0.loss_cls: 0.5122, d0.loss_bbox: 0.8687, d1.loss_cls: 0.5365, d1.loss_bbox: 0.8093, d2.loss_cls: 0.5437, d2.loss_bbox: 0.7598, d3.loss_cls: 0.4786, d3.loss_bbox: 0.7396, d4.loss_cls: 0.4361, d4.loss_bbox: 0.7300, aux_task0.loss_heatmap: 0.5634, aux_task0.loss_bbox: 0.2180, aux_task1.loss_heatmap: 0.8117, aux_task1.loss_bbox: 0.2966, aux_task2.loss_heatmap: 0.8073, aux_task2.loss_bbox: 0.3096, aux_task3.loss_heatmap: 0.5792, aux_task3.loss_bbox: 0.2734, aux_task4.loss_heatmap: 0.4270, aux_task4.loss_bbox: 0.2496, aux_task5.loss_heatmap: 0.4452, aux_task5.loss_bbox: 0.2829, loss: 12.8057, grad_norm: 25.4399
2025-04-16 19:25:03,394 - mmdet - INFO - Epoch [12][450/1104]	lr: 2.035e-04, eta: 2:42:43, time: 1.025, data_time: 0.008, memory: 13936, loss_cls: 0.4157, loss_bbox: 0.7033, d0.loss_cls: 0.5068, d0.loss_bbox: 0.8587, d1.loss_cls: 0.5233, d1.loss_bbox: 0.8062, d2.loss_cls: 0.5193, d2.loss_bbox: 0.7632, d3.loss_cls: 0.4587, d3.loss_bbox: 0.7387, d4.loss_cls: 0.4281, d4.loss_bbox: 0.7279, aux_task0.loss_heatmap: 0.5376, aux_task0.loss_bbox: 0.2119, aux_task1.loss_heatmap: 0.7773, aux_task1.loss_bbox: 0.2927, aux_task2.loss_heatmap: 0.8193, aux_task2.loss_bbox: 0.3072, aux_task3.loss_heatmap: 0.5789, aux_task3.loss_bbox: 0.2637, aux_task4.loss_heatmap: 0.4837, aux_task4.loss_bbox: 0.2583, aux_task5.loss_heatmap: 0.4614, aux_task5.loss_bbox: 0.2831, loss: 12.7253, grad_norm: 24.2785
2025-04-16 19:25:53,974 - mmdet - INFO - Epoch [12][500/1104]	lr: 2.023e-04, eta: 2:41:50, time: 1.012, data_time: 0.008, memory: 13936, loss_cls: 0.4006, loss_bbox: 0.6917, d0.loss_cls: 0.4901, d0.loss_bbox: 0.8432, d1.loss_cls: 0.5184, d1.loss_bbox: 0.7944, d2.loss_cls: 0.5045, d2.loss_bbox: 0.7431, d3.loss_cls: 0.4444, d3.loss_bbox: 0.7259, d4.loss_cls: 0.4137, d4.loss_bbox: 0.7141, aux_task0.loss_heatmap: 0.5327, aux_task0.loss_bbox: 0.2097, aux_task1.loss_heatmap: 0.8032, aux_task1.loss_bbox: 0.2888, aux_task2.loss_heatmap: 0.7821, aux_task2.loss_bbox: 0.3082, aux_task3.loss_heatmap: 0.5794, aux_task3.loss_bbox: 0.2692, aux_task4.loss_heatmap: 0.4427, aux_task4.loss_bbox: 0.2496, aux_task5.loss_heatmap: 0.4186, aux_task5.loss_bbox: 0.2841, loss: 12.4527, grad_norm: 19.7286
2025-04-16 19:26:44,886 - mmdet - INFO - Epoch [12][550/1104]	lr: 2.012e-04, eta: 2:40:57, time: 1.018, data_time: 0.008, memory: 13936, loss_cls: 0.4023, loss_bbox: 0.6910, d0.loss_cls: 0.4953, d0.loss_bbox: 0.8526, d1.loss_cls: 0.5019, d1.loss_bbox: 0.7931, d2.loss_cls: 0.4996, d2.loss_bbox: 0.7502, d3.loss_cls: 0.4422, d3.loss_bbox: 0.7266, d4.loss_cls: 0.4136, d4.loss_bbox: 0.7146, aux_task0.loss_heatmap: 0.5185, aux_task0.loss_bbox: 0.2067, aux_task1.loss_heatmap: 0.7981, aux_task1.loss_bbox: 0.2889, aux_task2.loss_heatmap: 0.7856, aux_task2.loss_bbox: 0.3033, aux_task3.loss_heatmap: 0.5922, aux_task3.loss_bbox: 0.2674, aux_task4.loss_heatmap: 0.4330, aux_task4.loss_bbox: 0.2463, aux_task5.loss_heatmap: 0.4360, aux_task5.loss_bbox: 0.2789, loss: 12.4380, grad_norm: 31.6210
2025-04-16 19:27:37,444 - mmdet - INFO - Epoch [12][600/1104]	lr: 2.000e-04, eta: 2:40:08, time: 1.051, data_time: 0.008, memory: 13936, loss_cls: 0.4109, loss_bbox: 0.6924, d0.loss_cls: 0.4984, d0.loss_bbox: 0.8426, d1.loss_cls: 0.5068, d1.loss_bbox: 0.7818, d2.loss_cls: 0.5096, d2.loss_bbox: 0.7446, d3.loss_cls: 0.4585, d3.loss_bbox: 0.7267, d4.loss_cls: 0.4256, d4.loss_bbox: 0.7159, aux_task0.loss_heatmap: 0.5481, aux_task0.loss_bbox: 0.2155, aux_task1.loss_heatmap: 0.8011, aux_task1.loss_bbox: 0.2892, aux_task2.loss_heatmap: 0.8123, aux_task2.loss_bbox: 0.3157, aux_task3.loss_heatmap: 0.6091, aux_task3.loss_bbox: 0.2727, aux_task4.loss_heatmap: 0.4170, aux_task4.loss_bbox: 0.2439, aux_task5.loss_heatmap: 0.4463, aux_task5.loss_bbox: 0.2852, loss: 12.5698, grad_norm: 20.5146
2025-04-16 19:28:28,302 - mmdet - INFO - Epoch [12][650/1104]	lr: 1.988e-04, eta: 2:39:15, time: 1.017, data_time: 0.008, memory: 13936, loss_cls: 0.4085, loss_bbox: 0.6856, d0.loss_cls: 0.4970, d0.loss_bbox: 0.8315, d1.loss_cls: 0.5028, d1.loss_bbox: 0.7753, d2.loss_cls: 0.5044, d2.loss_bbox: 0.7366, d3.loss_cls: 0.4560, d3.loss_bbox: 0.7193, d4.loss_cls: 0.4207, d4.loss_bbox: 0.7070, aux_task0.loss_heatmap: 0.5376, aux_task0.loss_bbox: 0.2045, aux_task1.loss_heatmap: 0.7503, aux_task1.loss_bbox: 0.2885, aux_task2.loss_heatmap: 0.7982, aux_task2.loss_bbox: 0.3063, aux_task3.loss_heatmap: 0.6053, aux_task3.loss_bbox: 0.2698, aux_task4.loss_heatmap: 0.4579, aux_task4.loss_bbox: 0.2477, aux_task5.loss_heatmap: 0.4410, aux_task5.loss_bbox: 0.2818, loss: 12.4336, grad_norm: 18.0309
2025-04-16 19:29:19,580 - mmdet - INFO - Epoch [12][700/1104]	lr: 1.976e-04, eta: 2:38:23, time: 1.026, data_time: 0.008, memory: 13936, loss_cls: 0.4004, loss_bbox: 0.6925, d0.loss_cls: 0.4860, d0.loss_bbox: 0.8416, d1.loss_cls: 0.4938, d1.loss_bbox: 0.7792, d2.loss_cls: 0.5004, d2.loss_bbox: 0.7384, d3.loss_cls: 0.4460, d3.loss_bbox: 0.7251, d4.loss_cls: 0.4147, d4.loss_bbox: 0.7111, aux_task0.loss_heatmap: 0.5332, aux_task0.loss_bbox: 0.2136, aux_task1.loss_heatmap: 0.7627, aux_task1.loss_bbox: 0.2868, aux_task2.loss_heatmap: 0.7609, aux_task2.loss_bbox: 0.3033, aux_task3.loss_heatmap: 0.5688, aux_task3.loss_bbox: 0.2777, aux_task4.loss_heatmap: 0.4309, aux_task4.loss_bbox: 0.2469, aux_task5.loss_heatmap: 0.4505, aux_task5.loss_bbox: 0.2864, loss: 12.3508, grad_norm: 21.2957
2025-04-16 19:30:10,579 - mmdet - INFO - Epoch [12][750/1104]	lr: 1.964e-04, eta: 2:37:31, time: 1.020, data_time: 0.008, memory: 13936, loss_cls: 0.3976, loss_bbox: 0.6849, d0.loss_cls: 0.4833, d0.loss_bbox: 0.8300, d1.loss_cls: 0.4942, d1.loss_bbox: 0.7679, d2.loss_cls: 0.5017, d2.loss_bbox: 0.7300, d3.loss_cls: 0.4500, d3.loss_bbox: 0.7163, d4.loss_cls: 0.4121, d4.loss_bbox: 0.7077, aux_task0.loss_heatmap: 0.5305, aux_task0.loss_bbox: 0.2107, aux_task1.loss_heatmap: 0.7672, aux_task1.loss_bbox: 0.2849, aux_task2.loss_heatmap: 0.7322, aux_task2.loss_bbox: 0.2969, aux_task3.loss_heatmap: 0.5548, aux_task3.loss_bbox: 0.2671, aux_task4.loss_heatmap: 0.4370, aux_task4.loss_bbox: 0.2536, aux_task5.loss_heatmap: 0.4275, aux_task5.loss_bbox: 0.2835, loss: 12.2215, grad_norm: 21.2057
2025-04-16 19:31:01,595 - mmdet - INFO - Epoch [12][800/1104]	lr: 1.952e-04, eta: 2:36:39, time: 1.020, data_time: 0.008, memory: 13936, loss_cls: 0.3979, loss_bbox: 0.6799, d0.loss_cls: 0.4826, d0.loss_bbox: 0.8337, d1.loss_cls: 0.4884, d1.loss_bbox: 0.7761, d2.loss_cls: 0.4936, d2.loss_bbox: 0.7369, d3.loss_cls: 0.4430, d3.loss_bbox: 0.7170, d4.loss_cls: 0.4116, d4.loss_bbox: 0.7040, aux_task0.loss_heatmap: 0.5269, aux_task0.loss_bbox: 0.2055, aux_task1.loss_heatmap: 0.7675, aux_task1.loss_bbox: 0.2860, aux_task2.loss_heatmap: 0.7668, aux_task2.loss_bbox: 0.2992, aux_task3.loss_heatmap: 0.5511, aux_task3.loss_bbox: 0.2613, aux_task4.loss_heatmap: 0.4496, aux_task4.loss_bbox: 0.2480, aux_task5.loss_heatmap: 0.4472, aux_task5.loss_bbox: 0.2832, loss: 12.2570, grad_norm: 22.2194
2025-04-16 19:31:52,724 - mmdet - INFO - Epoch [12][850/1104]	lr: 1.939e-04, eta: 2:35:46, time: 1.023, data_time: 0.008, memory: 13936, loss_cls: 0.4116, loss_bbox: 0.6975, d0.loss_cls: 0.5009, d0.loss_bbox: 0.8476, d1.loss_cls: 0.5086, d1.loss_bbox: 0.7921, d2.loss_cls: 0.5091, d2.loss_bbox: 0.7497, d3.loss_cls: 0.4515, d3.loss_bbox: 0.7314, d4.loss_cls: 0.4242, d4.loss_bbox: 0.7177, aux_task0.loss_heatmap: 0.5577, aux_task0.loss_bbox: 0.2163, aux_task1.loss_heatmap: 0.7988, aux_task1.loss_bbox: 0.2891, aux_task2.loss_heatmap: 0.7847, aux_task2.loss_bbox: 0.3148, aux_task3.loss_heatmap: 0.5866, aux_task3.loss_bbox: 0.2628, aux_task4.loss_heatmap: 0.4355, aux_task4.loss_bbox: 0.2480, aux_task5.loss_heatmap: 0.4534, aux_task5.loss_bbox: 0.2844, loss: 12.5741, grad_norm: 25.8510
2025-04-16 19:32:44,183 - mmdet - INFO - Epoch [12][900/1104]	lr: 1.927e-04, eta: 2:34:55, time: 1.029, data_time: 0.008, memory: 13936, loss_cls: 0.4052, loss_bbox: 0.6890, d0.loss_cls: 0.4922, d0.loss_bbox: 0.8359, d1.loss_cls: 0.4981, d1.loss_bbox: 0.7752, d2.loss_cls: 0.5023, d2.loss_bbox: 0.7392, d3.loss_cls: 0.4414, d3.loss_bbox: 0.7232, d4.loss_cls: 0.4168, d4.loss_bbox: 0.7082, aux_task0.loss_heatmap: 0.5309, aux_task0.loss_bbox: 0.2019, aux_task1.loss_heatmap: 0.8001, aux_task1.loss_bbox: 0.2864, aux_task2.loss_heatmap: 0.7830, aux_task2.loss_bbox: 0.3014, aux_task3.loss_heatmap: 0.5289, aux_task3.loss_bbox: 0.2720, aux_task4.loss_heatmap: 0.4712, aux_task4.loss_bbox: 0.2424, aux_task5.loss_heatmap: 0.4407, aux_task5.loss_bbox: 0.2815, loss: 12.3672, grad_norm: 20.8270
2025-04-16 19:33:35,278 - mmdet - INFO - Epoch [12][950/1104]	lr: 1.914e-04, eta: 2:34:03, time: 1.022, data_time: 0.008, memory: 13997, loss_cls: 0.4043, loss_bbox: 0.6827, d0.loss_cls: 0.4916, d0.loss_bbox: 0.8368, d1.loss_cls: 0.4970, d1.loss_bbox: 0.7715, d2.loss_cls: 0.4980, d2.loss_bbox: 0.7347, d3.loss_cls: 0.4390, d3.loss_bbox: 0.7188, d4.loss_cls: 0.4134, d4.loss_bbox: 0.7055, aux_task0.loss_heatmap: 0.5360, aux_task0.loss_bbox: 0.2073, aux_task1.loss_heatmap: 0.7893, aux_task1.loss_bbox: 0.2902, aux_task2.loss_heatmap: 0.7797, aux_task2.loss_bbox: 0.2999, aux_task3.loss_heatmap: 0.5702, aux_task3.loss_bbox: 0.2658, aux_task4.loss_heatmap: 0.4372, aux_task4.loss_bbox: 0.2438, aux_task5.loss_heatmap: 0.4403, aux_task5.loss_bbox: 0.2833, loss: 12.3361, grad_norm: 28.3350
2025-04-16 19:34:26,203 - mmdet - INFO - Epoch [12][1000/1104]	lr: 1.902e-04, eta: 2:33:10, time: 1.018, data_time: 0.007, memory: 13997, loss_cls: 0.3979, loss_bbox: 0.6781, d0.loss_cls: 0.4858, d0.loss_bbox: 0.8324, d1.loss_cls: 0.4914, d1.loss_bbox: 0.7685, d2.loss_cls: 0.4919, d2.loss_bbox: 0.7327, d3.loss_cls: 0.4321, d3.loss_bbox: 0.7149, d4.loss_cls: 0.4081, d4.loss_bbox: 0.7020, aux_task0.loss_heatmap: 0.5406, aux_task0.loss_bbox: 0.2111, aux_task1.loss_heatmap: 0.8009, aux_task1.loss_bbox: 0.2894, aux_task2.loss_heatmap: 0.7923, aux_task2.loss_bbox: 0.3022, aux_task3.loss_heatmap: 0.5725, aux_task3.loss_bbox: 0.2701, aux_task4.loss_heatmap: 0.4216, aux_task4.loss_bbox: 0.2398, aux_task5.loss_heatmap: 0.4248, aux_task5.loss_bbox: 0.2794, loss: 12.2807, grad_norm: 22.1992
2025-04-16 19:35:17,115 - mmdet - INFO - Epoch [12][1050/1104]	lr: 1.889e-04, eta: 2:32:18, time: 1.018, data_time: 0.008, memory: 13997, loss_cls: 0.4108, loss_bbox: 0.6913, d0.loss_cls: 0.5028, d0.loss_bbox: 0.8427, d1.loss_cls: 0.5188, d1.loss_bbox: 0.7836, d2.loss_cls: 0.5202, d2.loss_bbox: 0.7432, d3.loss_cls: 0.4554, d3.loss_bbox: 0.7247, d4.loss_cls: 0.4229, d4.loss_bbox: 0.7111, aux_task0.loss_heatmap: 0.5387, aux_task0.loss_bbox: 0.2101, aux_task1.loss_heatmap: 0.8025, aux_task1.loss_bbox: 0.2926, aux_task2.loss_heatmap: 0.7459, aux_task2.loss_bbox: 0.2972, aux_task3.loss_heatmap: 0.5906, aux_task3.loss_bbox: 0.2671, aux_task4.loss_heatmap: 0.4561, aux_task4.loss_bbox: 0.2561, aux_task5.loss_heatmap: 0.4589, aux_task5.loss_bbox: 0.2857, loss: 12.5291, grad_norm: 28.9392
2025-04-16 19:36:08,211 - mmdet - INFO - Epoch [12][1100/1104]	lr: 1.876e-04, eta: 2:31:26, time: 1.022, data_time: 0.008, memory: 13997, loss_cls: 0.4094, loss_bbox: 0.6865, d0.loss_cls: 0.5031, d0.loss_bbox: 0.8461, d1.loss_cls: 0.5195, d1.loss_bbox: 0.7868, d2.loss_cls: 0.5183, d2.loss_bbox: 0.7429, d3.loss_cls: 0.4510, d3.loss_bbox: 0.7251, d4.loss_cls: 0.4219, d4.loss_bbox: 0.7090, aux_task0.loss_heatmap: 0.5417, aux_task0.loss_bbox: 0.2119, aux_task1.loss_heatmap: 0.7924, aux_task1.loss_bbox: 0.2914, aux_task2.loss_heatmap: 0.7891, aux_task2.loss_bbox: 0.3034, aux_task3.loss_heatmap: 0.6051, aux_task3.loss_bbox: 0.2698, aux_task4.loss_heatmap: 0.4404, aux_task4.loss_bbox: 0.2454, aux_task5.loss_heatmap: 0.4572, aux_task5.loss_bbox: 0.2834, loss: 12.5510, grad_norm: 182.8916
2025-04-16 19:36:12,683 - mmdet - INFO - Saving checkpoint at 12 epochs
2025-04-16 19:47:07,809 - mmdet - INFO - Exp name: DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01.py
2025-04-16 19:47:07,810 - mmdet - INFO - Epoch(val) [12][3010]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.4866, pts_bbox_NuScenes/car_AP_dist_1.0: 0.6481, pts_bbox_NuScenes/car_AP_dist_2.0: 0.7312, pts_bbox_NuScenes/car_AP_dist_4.0: 0.7747, pts_bbox_NuScenes/car_trans_err: 0.2803, pts_bbox_NuScenes/car_scale_err: 0.1793, pts_bbox_NuScenes/car_orient_err: 0.3317, pts_bbox_NuScenes/car_vel_err: 0.5308, pts_bbox_NuScenes/car_attr_err: 0.2271, pts_bbox_NuScenes/mATE: 0.4530, pts_bbox_NuScenes/mASE: 0.2945, pts_bbox_NuScenes/mAOE: 0.7711, pts_bbox_NuScenes/mAVE: 0.7763, pts_bbox_NuScenes/mAAE: 0.3093, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.1093, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.2409, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.3411, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.3836, pts_bbox_NuScenes/truck_trans_err: 0.5102, pts_bbox_NuScenes/truck_scale_err: 0.2539, pts_bbox_NuScenes/truck_orient_err: 0.3825, pts_bbox_NuScenes/truck_vel_err: 0.5505, pts_bbox_NuScenes/truck_attr_err: 0.2691, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0003, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0337, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.0872, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.1332, pts_bbox_NuScenes/construction_vehicle_trans_err: 0.7497, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.4412, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.1882, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1435, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.3426, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.1440, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.3816, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.5976, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.6711, pts_bbox_NuScenes/bus_trans_err: 0.5861, pts_bbox_NuScenes/bus_scale_err: 0.2742, pts_bbox_NuScenes/bus_orient_err: 0.5069, pts_bbox_NuScenes/bus_vel_err: 1.7909, pts_bbox_NuScenes/bus_attr_err: 0.4316, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0102, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.0829, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.1642, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.2523, pts_bbox_NuScenes/trailer_trans_err: 0.6969, pts_bbox_NuScenes/trailer_scale_err: 0.2815, pts_bbox_NuScenes/trailer_orient_err: 1.2305, pts_bbox_NuScenes/trailer_vel_err: 0.4286, pts_bbox_NuScenes/trailer_attr_err: 0.1861, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.1933, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.3766, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.4876, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.5307, pts_bbox_NuScenes/barrier_trans_err: 0.4751, pts_bbox_NuScenes/barrier_scale_err: 0.3058, pts_bbox_NuScenes/barrier_orient_err: 0.2601, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.1583, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.1917, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.2025, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.2119, pts_bbox_NuScenes/motorcycle_trans_err: 0.2919, pts_bbox_NuScenes/motorcycle_scale_err: 0.2568, pts_bbox_NuScenes/motorcycle_orient_err: 0.7180, pts_bbox_NuScenes/motorcycle_vel_err: 1.2175, pts_bbox_NuScenes/motorcycle_attr_err: 0.2429, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.0535, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.0596, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.0647, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.0716, pts_bbox_NuScenes/bicycle_trans_err: 0.3117, pts_bbox_NuScenes/bicycle_scale_err: 0.2706, pts_bbox_NuScenes/bicycle_orient_err: 0.8192, pts_bbox_NuScenes/bicycle_vel_err: 0.6036, pts_bbox_NuScenes/bicycle_attr_err: 0.0204, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.4398, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.6536, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.7065, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.7406, pts_bbox_NuScenes/pedestrian_trans_err: 0.3791, pts_bbox_NuScenes/pedestrian_scale_err: 0.2878, pts_bbox_NuScenes/pedestrian_orient_err: 1.5025, pts_bbox_NuScenes/pedestrian_vel_err: 0.9452, pts_bbox_NuScenes/pedestrian_attr_err: 0.7545, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.4023, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.4531, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.4986, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.5528, pts_bbox_NuScenes/traffic_cone_trans_err: 0.2493, pts_bbox_NuScenes/traffic_cone_scale_err: 0.3943, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.4061, pts_bbox_NuScenes/mAP: 0.3331
2025-04-16 19:48:04,281 - mmdet - INFO - Epoch [13][50/1104]	lr: 1.862e-04, eta: 2:30:30, time: 1.112, data_time: 0.094, memory: 13997, loss_cls: 0.4076, loss_bbox: 0.6840, d0.loss_cls: 0.4980, d0.loss_bbox: 0.8336, d1.loss_cls: 0.5225, d1.loss_bbox: 0.7777, d2.loss_cls: 0.5210, d2.loss_bbox: 0.7317, d3.loss_cls: 0.4521, d3.loss_bbox: 0.7180, d4.loss_cls: 0.4194, d4.loss_bbox: 0.7054, aux_task0.loss_heatmap: 0.5480, aux_task0.loss_bbox: 0.2092, aux_task1.loss_heatmap: 0.7657, aux_task1.loss_bbox: 0.2784, aux_task2.loss_heatmap: 0.7932, aux_task2.loss_bbox: 0.3087, aux_task3.loss_heatmap: 0.5616, aux_task3.loss_bbox: 0.2710, aux_task4.loss_heatmap: 0.4544, aux_task4.loss_bbox: 0.2429, aux_task5.loss_heatmap: 0.4458, aux_task5.loss_bbox: 0.2801, loss: 12.4301, grad_norm: 22.8270
2025-04-16 19:48:55,321 - mmdet - INFO - Epoch [13][100/1104]	lr: 1.849e-04, eta: 2:29:38, time: 1.021, data_time: 0.008, memory: 13997, loss_cls: 0.3987, loss_bbox: 0.6761, d0.loss_cls: 0.4894, d0.loss_bbox: 0.8258, d1.loss_cls: 0.5006, d1.loss_bbox: 0.7661, d2.loss_cls: 0.5056, d2.loss_bbox: 0.7282, d3.loss_cls: 0.4400, d3.loss_bbox: 0.7115, d4.loss_cls: 0.4104, d4.loss_bbox: 0.6969, aux_task0.loss_heatmap: 0.5484, aux_task0.loss_bbox: 0.2130, aux_task1.loss_heatmap: 0.8024, aux_task1.loss_bbox: 0.2923, aux_task2.loss_heatmap: 0.7349, aux_task2.loss_bbox: 0.2958, aux_task3.loss_heatmap: 0.5794, aux_task3.loss_bbox: 0.2566, aux_task4.loss_heatmap: 0.4364, aux_task4.loss_bbox: 0.2492, aux_task5.loss_heatmap: 0.4339, aux_task5.loss_bbox: 0.2818, loss: 12.2734, grad_norm: 17.4078
2025-04-16 19:49:46,367 - mmdet - INFO - Epoch [13][150/1104]	lr: 1.836e-04, eta: 2:28:46, time: 1.021, data_time: 0.008, memory: 13997, loss_cls: 0.3908, loss_bbox: 0.6680, d0.loss_cls: 0.4746, d0.loss_bbox: 0.8196, d1.loss_cls: 0.4824, d1.loss_bbox: 0.7581, d2.loss_cls: 0.4858, d2.loss_bbox: 0.7226, d3.loss_cls: 0.4302, d3.loss_bbox: 0.7028, d4.loss_cls: 0.4036, d4.loss_bbox: 0.6875, aux_task0.loss_heatmap: 0.5243, aux_task0.loss_bbox: 0.2046, aux_task1.loss_heatmap: 0.7776, aux_task1.loss_bbox: 0.2881, aux_task2.loss_heatmap: 0.7431, aux_task2.loss_bbox: 0.3037, aux_task3.loss_heatmap: 0.5493, aux_task3.loss_bbox: 0.2667, aux_task4.loss_heatmap: 0.4292, aux_task4.loss_bbox: 0.2443, aux_task5.loss_heatmap: 0.4052, aux_task5.loss_bbox: 0.2825, loss: 12.0445, grad_norm: 19.5104
2025-04-16 19:50:38,227 - mmdet - INFO - Epoch [13][200/1104]	lr: 1.823e-04, eta: 2:27:56, time: 1.037, data_time: 0.018, memory: 13997, loss_cls: 0.3805, loss_bbox: 0.6648, d0.loss_cls: 0.4684, d0.loss_bbox: 0.8092, d1.loss_cls: 0.4703, d1.loss_bbox: 0.7484, d2.loss_cls: 0.4718, d2.loss_bbox: 0.7155, d3.loss_cls: 0.4230, d3.loss_bbox: 0.6966, d4.loss_cls: 0.3931, d4.loss_bbox: 0.6830, aux_task0.loss_heatmap: 0.5080, aux_task0.loss_bbox: 0.2003, aux_task1.loss_heatmap: 0.7584, aux_task1.loss_bbox: 0.2796, aux_task2.loss_heatmap: 0.7266, aux_task2.loss_bbox: 0.2986, aux_task3.loss_heatmap: 0.5361, aux_task3.loss_bbox: 0.2619, aux_task4.loss_heatmap: 0.4201, aux_task4.loss_bbox: 0.2343, aux_task5.loss_heatmap: 0.4358, aux_task5.loss_bbox: 0.2810, loss: 11.8654, grad_norm: 17.4636
2025-04-16 19:51:28,951 - mmdet - INFO - Epoch [13][250/1104]	lr: 1.810e-04, eta: 2:27:03, time: 1.014, data_time: 0.008, memory: 13997, loss_cls: 0.3972, loss_bbox: 0.6686, d0.loss_cls: 0.4810, d0.loss_bbox: 0.8155, d1.loss_cls: 0.4821, d1.loss_bbox: 0.7570, d2.loss_cls: 0.4840, d2.loss_bbox: 0.7268, d3.loss_cls: 0.4331, d3.loss_bbox: 0.7078, d4.loss_cls: 0.4052, d4.loss_bbox: 0.6930, aux_task0.loss_heatmap: 0.5311, aux_task0.loss_bbox: 0.2026, aux_task1.loss_heatmap: 0.7660, aux_task1.loss_bbox: 0.2852, aux_task2.loss_heatmap: 0.7350, aux_task2.loss_bbox: 0.2931, aux_task3.loss_heatmap: 0.5504, aux_task3.loss_bbox: 0.2648, aux_task4.loss_heatmap: 0.4432, aux_task4.loss_bbox: 0.2409, aux_task5.loss_heatmap: 0.4308, aux_task5.loss_bbox: 0.2800, loss: 12.0746, grad_norm: 16.2446
2025-04-16 19:52:19,942 - mmdet - INFO - Epoch [13][300/1104]	lr: 1.797e-04, eta: 2:26:11, time: 1.020, data_time: 0.008, memory: 13997, loss_cls: 0.3886, loss_bbox: 0.6739, d0.loss_cls: 0.4766, d0.loss_bbox: 0.8156, d1.loss_cls: 0.4774, d1.loss_bbox: 0.7594, d2.loss_cls: 0.4833, d2.loss_bbox: 0.7332, d3.loss_cls: 0.4279, d3.loss_bbox: 0.7107, d4.loss_cls: 0.3997, d4.loss_bbox: 0.6963, aux_task0.loss_heatmap: 0.5195, aux_task0.loss_bbox: 0.2036, aux_task1.loss_heatmap: 0.7637, aux_task1.loss_bbox: 0.2903, aux_task2.loss_heatmap: 0.7245, aux_task2.loss_bbox: 0.3052, aux_task3.loss_heatmap: 0.5416, aux_task3.loss_bbox: 0.2728, aux_task4.loss_heatmap: 0.4346, aux_task4.loss_bbox: 0.2482, aux_task5.loss_heatmap: 0.4351, aux_task5.loss_bbox: 0.2765, loss: 12.0582, grad_norm: 17.8440
2025-04-16 19:53:10,955 - mmdet - INFO - Epoch [13][350/1104]	lr: 1.783e-04, eta: 2:25:19, time: 1.020, data_time: 0.009, memory: 13997, loss_cls: 0.3946, loss_bbox: 0.6765, d0.loss_cls: 0.4836, d0.loss_bbox: 0.8201, d1.loss_cls: 0.4838, d1.loss_bbox: 0.7600, d2.loss_cls: 0.4894, d2.loss_bbox: 0.7282, d3.loss_cls: 0.4319, d3.loss_bbox: 0.7120, d4.loss_cls: 0.4062, d4.loss_bbox: 0.6969, aux_task0.loss_heatmap: 0.5389, aux_task0.loss_bbox: 0.2073, aux_task1.loss_heatmap: 0.8028, aux_task1.loss_bbox: 0.2925, aux_task2.loss_heatmap: 0.7572, aux_task2.loss_bbox: 0.3067, aux_task3.loss_heatmap: 0.5360, aux_task3.loss_bbox: 0.2676, aux_task4.loss_heatmap: 0.4505, aux_task4.loss_bbox: 0.2465, aux_task5.loss_heatmap: 0.4144, aux_task5.loss_bbox: 0.2777, loss: 12.1817, grad_norm: 19.2739
2025-04-16 19:54:02,330 - mmdet - INFO - Epoch [13][400/1104]	lr: 1.770e-04, eta: 2:24:27, time: 1.027, data_time: 0.008, memory: 13997, loss_cls: 0.3865, loss_bbox: 0.6645, d0.loss_cls: 0.4735, d0.loss_bbox: 0.8107, d1.loss_cls: 0.4778, d1.loss_bbox: 0.7483, d2.loss_cls: 0.4802, d2.loss_bbox: 0.7185, d3.loss_cls: 0.4230, d3.loss_bbox: 0.6998, d4.loss_cls: 0.3969, d4.loss_bbox: 0.6845, aux_task0.loss_heatmap: 0.5199, aux_task0.loss_bbox: 0.2065, aux_task1.loss_heatmap: 0.7492, aux_task1.loss_bbox: 0.2798, aux_task2.loss_heatmap: 0.7682, aux_task2.loss_bbox: 0.2918, aux_task3.loss_heatmap: 0.5444, aux_task3.loss_bbox: 0.2621, aux_task4.loss_heatmap: 0.4215, aux_task4.loss_bbox: 0.2386, aux_task5.loss_heatmap: 0.4384, aux_task5.loss_bbox: 0.2813, loss: 11.9660, grad_norm: 22.8813
2025-04-16 19:54:53,278 - mmdet - INFO - Epoch [13][450/1104]	lr: 1.756e-04, eta: 2:23:35, time: 1.019, data_time: 0.009, memory: 13997, loss_cls: 0.3988, loss_bbox: 0.6734, d0.loss_cls: 0.4845, d0.loss_bbox: 0.8224, d1.loss_cls: 0.4866, d1.loss_bbox: 0.7571, d2.loss_cls: 0.4904, d2.loss_bbox: 0.7291, d3.loss_cls: 0.4327, d3.loss_bbox: 0.7084, d4.loss_cls: 0.4092, d4.loss_bbox: 0.6932, aux_task0.loss_heatmap: 0.5165, aux_task0.loss_bbox: 0.2053, aux_task1.loss_heatmap: 0.7625, aux_task1.loss_bbox: 0.2838, aux_task2.loss_heatmap: 0.7928, aux_task2.loss_bbox: 0.2992, aux_task3.loss_heatmap: 0.5621, aux_task3.loss_bbox: 0.2595, aux_task4.loss_heatmap: 0.4635, aux_task4.loss_bbox: 0.2481, aux_task5.loss_heatmap: 0.4424, aux_task5.loss_bbox: 0.2816, loss: 12.2032, grad_norm: 40.1741
2025-04-16 19:55:44,270 - mmdet - INFO - Epoch [13][500/1104]	lr: 1.743e-04, eta: 2:22:43, time: 1.020, data_time: 0.007, memory: 13997, loss_cls: 0.3882, loss_bbox: 0.6644, d0.loss_cls: 0.4750, d0.loss_bbox: 0.8079, d1.loss_cls: 0.4761, d1.loss_bbox: 0.7451, d2.loss_cls: 0.4777, d2.loss_bbox: 0.7185, d3.loss_cls: 0.4203, d3.loss_bbox: 0.6972, d4.loss_cls: 0.3981, d4.loss_bbox: 0.6834, aux_task0.loss_heatmap: 0.5208, aux_task0.loss_bbox: 0.2012, aux_task1.loss_heatmap: 0.7958, aux_task1.loss_bbox: 0.2804, aux_task2.loss_heatmap: 0.7433, aux_task2.loss_bbox: 0.2971, aux_task3.loss_heatmap: 0.5670, aux_task3.loss_bbox: 0.2595, aux_task4.loss_heatmap: 0.4244, aux_task4.loss_bbox: 0.2369, aux_task5.loss_heatmap: 0.4346, aux_task5.loss_bbox: 0.2798, loss: 11.9926, grad_norm: 26.0262
2025-04-16 19:56:35,251 - mmdet - INFO - Epoch [13][550/1104]	lr: 1.729e-04, eta: 2:21:51, time: 1.020, data_time: 0.008, memory: 13997, loss_cls: 0.3868, loss_bbox: 0.6679, d0.loss_cls: 0.4759, d0.loss_bbox: 0.8188, d1.loss_cls: 0.4800, d1.loss_bbox: 0.7522, d2.loss_cls: 0.4843, d2.loss_bbox: 0.7233, d3.loss_cls: 0.4251, d3.loss_bbox: 0.7048, d4.loss_cls: 0.3986, d4.loss_bbox: 0.6872, aux_task0.loss_heatmap: 0.5468, aux_task0.loss_bbox: 0.2108, aux_task1.loss_heatmap: 0.7481, aux_task1.loss_bbox: 0.2833, aux_task2.loss_heatmap: 0.7739, aux_task2.loss_bbox: 0.3012, aux_task3.loss_heatmap: 0.5551, aux_task3.loss_bbox: 0.2588, aux_task4.loss_heatmap: 0.4243, aux_task4.loss_bbox: 0.2404, aux_task5.loss_heatmap: 0.4449, aux_task5.loss_bbox: 0.2788, loss: 12.0713, grad_norm: 18.6519
2025-04-16 19:57:26,166 - mmdet - INFO - Epoch [13][600/1104]	lr: 1.715e-04, eta: 2:20:59, time: 1.018, data_time: 0.008, memory: 13997, loss_cls: 0.3746, loss_bbox: 0.6562, d0.loss_cls: 0.4618, d0.loss_bbox: 0.8035, d1.loss_cls: 0.4647, d1.loss_bbox: 0.7393, d2.loss_cls: 0.4692, d2.loss_bbox: 0.7092, d3.loss_cls: 0.4113, d3.loss_bbox: 0.6896, d4.loss_cls: 0.3860, d4.loss_bbox: 0.6736, aux_task0.loss_heatmap: 0.4991, aux_task0.loss_bbox: 0.2010, aux_task1.loss_heatmap: 0.7586, aux_task1.loss_bbox: 0.2818, aux_task2.loss_heatmap: 0.7578, aux_task2.loss_bbox: 0.3002, aux_task3.loss_heatmap: 0.5557, aux_task3.loss_bbox: 0.2592, aux_task4.loss_heatmap: 0.4038, aux_task4.loss_bbox: 0.2362, aux_task5.loss_heatmap: 0.4164, aux_task5.loss_bbox: 0.2802, loss: 11.7892, grad_norm: 23.9579
2025-04-16 19:58:17,456 - mmdet - INFO - Epoch [13][650/1104]	lr: 1.702e-04, eta: 2:20:07, time: 1.026, data_time: 0.011, memory: 13997, loss_cls: 0.3967, loss_bbox: 0.6690, d0.loss_cls: 0.4826, d0.loss_bbox: 0.8170, d1.loss_cls: 0.4905, d1.loss_bbox: 0.7623, d2.loss_cls: 0.4977, d2.loss_bbox: 0.7285, d3.loss_cls: 0.4347, d3.loss_bbox: 0.7034, d4.loss_cls: 0.4084, d4.loss_bbox: 0.6873, aux_task0.loss_heatmap: 0.5235, aux_task0.loss_bbox: 0.2057, aux_task1.loss_heatmap: 0.7437, aux_task1.loss_bbox: 0.2871, aux_task2.loss_heatmap: 0.7737, aux_task2.loss_bbox: 0.3018, aux_task3.loss_heatmap: 0.5708, aux_task3.loss_bbox: 0.2633, aux_task4.loss_heatmap: 0.4591, aux_task4.loss_bbox: 0.2430, aux_task5.loss_heatmap: 0.4205, aux_task5.loss_bbox: 0.2824, loss: 12.1527, grad_norm: 24.2394
2025-04-16 19:59:08,689 - mmdet - INFO - Epoch [13][700/1104]	lr: 1.688e-04, eta: 2:19:16, time: 1.025, data_time: 0.008, memory: 13997, loss_cls: 0.3839, loss_bbox: 0.6698, d0.loss_cls: 0.4696, d0.loss_bbox: 0.8147, d1.loss_cls: 0.4742, d1.loss_bbox: 0.7546, d2.loss_cls: 0.4802, d2.loss_bbox: 0.7184, d3.loss_cls: 0.4246, d3.loss_bbox: 0.7012, d4.loss_cls: 0.3951, d4.loss_bbox: 0.6866, aux_task0.loss_heatmap: 0.5215, aux_task0.loss_bbox: 0.2035, aux_task1.loss_heatmap: 0.7555, aux_task1.loss_bbox: 0.2876, aux_task2.loss_heatmap: 0.7468, aux_task2.loss_bbox: 0.3010, aux_task3.loss_heatmap: 0.5790, aux_task3.loss_bbox: 0.2776, aux_task4.loss_heatmap: 0.4213, aux_task4.loss_bbox: 0.2407, aux_task5.loss_heatmap: 0.4037, aux_task5.loss_bbox: 0.2731, loss: 11.9841, grad_norm: 17.9610
2025-04-16 19:59:59,728 - mmdet - INFO - Epoch [13][750/1104]	lr: 1.674e-04, eta: 2:18:24, time: 1.021, data_time: 0.008, memory: 13997, loss_cls: 0.3834, loss_bbox: 0.6688, d0.loss_cls: 0.4715, d0.loss_bbox: 0.8125, d1.loss_cls: 0.4730, d1.loss_bbox: 0.7525, d2.loss_cls: 0.4817, d2.loss_bbox: 0.7237, d3.loss_cls: 0.4241, d3.loss_bbox: 0.7040, d4.loss_cls: 0.3962, d4.loss_bbox: 0.6867, aux_task0.loss_heatmap: 0.5163, aux_task0.loss_bbox: 0.2067, aux_task1.loss_heatmap: 0.7795, aux_task1.loss_bbox: 0.2834, aux_task2.loss_heatmap: 0.7281, aux_task2.loss_bbox: 0.2968, aux_task3.loss_heatmap: 0.5654, aux_task3.loss_bbox: 0.2634, aux_task4.loss_heatmap: 0.4267, aux_task4.loss_bbox: 0.2484, aux_task5.loss_heatmap: 0.4323, aux_task5.loss_bbox: 0.2815, loss: 12.0067, grad_norm: 23.4102
2025-04-16 20:00:50,757 - mmdet - INFO - Epoch [13][800/1104]	lr: 1.660e-04, eta: 2:17:32, time: 1.021, data_time: 0.008, memory: 13997, loss_cls: 0.3816, loss_bbox: 0.6610, d0.loss_cls: 0.4716, d0.loss_bbox: 0.8068, d1.loss_cls: 0.4732, d1.loss_bbox: 0.7436, d2.loss_cls: 0.4775, d2.loss_bbox: 0.7112, d3.loss_cls: 0.4163, d3.loss_bbox: 0.6950, d4.loss_cls: 0.3922, d4.loss_bbox: 0.6786, aux_task0.loss_heatmap: 0.5064, aux_task0.loss_bbox: 0.1944, aux_task1.loss_heatmap: 0.7506, aux_task1.loss_bbox: 0.2828, aux_task2.loss_heatmap: 0.7657, aux_task2.loss_bbox: 0.3037, aux_task3.loss_heatmap: 0.5570, aux_task3.loss_bbox: 0.2579, aux_task4.loss_heatmap: 0.4325, aux_task4.loss_bbox: 0.2381, aux_task5.loss_heatmap: 0.4350, aux_task5.loss_bbox: 0.2791, loss: 11.9118, grad_norm: 19.2996
2025-04-16 20:01:41,647 - mmdet - INFO - Epoch [13][850/1104]	lr: 1.646e-04, eta: 2:16:40, time: 1.018, data_time: 0.007, memory: 13997, loss_cls: 0.3854, loss_bbox: 0.6595, d0.loss_cls: 0.4760, d0.loss_bbox: 0.8007, d1.loss_cls: 0.4772, d1.loss_bbox: 0.7379, d2.loss_cls: 0.4899, d2.loss_bbox: 0.7046, d3.loss_cls: 0.4195, d3.loss_bbox: 0.6919, d4.loss_cls: 0.3964, d4.loss_bbox: 0.6753, aux_task0.loss_heatmap: 0.5202, aux_task0.loss_bbox: 0.2001, aux_task1.loss_heatmap: 0.7581, aux_task1.loss_bbox: 0.2799, aux_task2.loss_heatmap: 0.7436, aux_task2.loss_bbox: 0.3085, aux_task3.loss_heatmap: 0.5457, aux_task3.loss_bbox: 0.2514, aux_task4.loss_heatmap: 0.4212, aux_task4.loss_bbox: 0.2396, aux_task5.loss_heatmap: 0.4220, aux_task5.loss_bbox: 0.2810, loss: 11.8856, grad_norm: 21.6006
2025-04-16 20:02:32,622 - mmdet - INFO - Epoch [13][900/1104]	lr: 1.632e-04, eta: 2:15:48, time: 1.019, data_time: 0.008, memory: 13997, loss_cls: 0.3923, loss_bbox: 0.6666, d0.loss_cls: 0.4802, d0.loss_bbox: 0.8090, d1.loss_cls: 0.4800, d1.loss_bbox: 0.7496, d2.loss_cls: 0.4854, d2.loss_bbox: 0.7194, d3.loss_cls: 0.4275, d3.loss_bbox: 0.6989, d4.loss_cls: 0.4021, d4.loss_bbox: 0.6830, aux_task0.loss_heatmap: 0.5209, aux_task0.loss_bbox: 0.2083, aux_task1.loss_heatmap: 0.7965, aux_task1.loss_bbox: 0.2799, aux_task2.loss_heatmap: 0.7878, aux_task2.loss_bbox: 0.3091, aux_task3.loss_heatmap: 0.5365, aux_task3.loss_bbox: 0.2662, aux_task4.loss_heatmap: 0.4562, aux_task4.loss_bbox: 0.2374, aux_task5.loss_heatmap: 0.4205, aux_task5.loss_bbox: 0.2787, loss: 12.0919, grad_norm: 18.2933
2025-04-16 20:03:25,646 - mmdet - INFO - Epoch [13][950/1104]	lr: 1.618e-04, eta: 2:14:59, time: 1.060, data_time: 0.008, memory: 13997, loss_cls: 0.3830, loss_bbox: 0.6598, d0.loss_cls: 0.4731, d0.loss_bbox: 0.8054, d1.loss_cls: 0.4714, d1.loss_bbox: 0.7483, d2.loss_cls: 0.4742, d2.loss_bbox: 0.7156, d3.loss_cls: 0.4167, d3.loss_bbox: 0.6980, d4.loss_cls: 0.3935, d4.loss_bbox: 0.6778, aux_task0.loss_heatmap: 0.5197, aux_task0.loss_bbox: 0.2033, aux_task1.loss_heatmap: 0.7826, aux_task1.loss_bbox: 0.2869, aux_task2.loss_heatmap: 0.7457, aux_task2.loss_bbox: 0.2896, aux_task3.loss_heatmap: 0.5432, aux_task3.loss_bbox: 0.2667, aux_task4.loss_heatmap: 0.4175, aux_task4.loss_bbox: 0.2384, aux_task5.loss_heatmap: 0.4216, aux_task5.loss_bbox: 0.2788, loss: 11.9108, grad_norm: 20.4868
2025-04-16 20:04:16,709 - mmdet - INFO - Epoch [13][1000/1104]	lr: 1.603e-04, eta: 2:14:07, time: 1.021, data_time: 0.008, memory: 13997, loss_cls: 0.3938, loss_bbox: 0.6611, d0.loss_cls: 0.4807, d0.loss_bbox: 0.8068, d1.loss_cls: 0.4835, d1.loss_bbox: 0.7419, d2.loss_cls: 0.4923, d2.loss_bbox: 0.7118, d3.loss_cls: 0.4289, d3.loss_bbox: 0.6972, d4.loss_cls: 0.4022, d4.loss_bbox: 0.6791, aux_task0.loss_heatmap: 0.5095, aux_task0.loss_bbox: 0.1989, aux_task1.loss_heatmap: 0.7886, aux_task1.loss_bbox: 0.2811, aux_task2.loss_heatmap: 0.7602, aux_task2.loss_bbox: 0.2971, aux_task3.loss_heatmap: 0.5923, aux_task3.loss_bbox: 0.2646, aux_task4.loss_heatmap: 0.4226, aux_task4.loss_bbox: 0.2370, aux_task5.loss_heatmap: 0.4322, aux_task5.loss_bbox: 0.2793, loss: 12.0426, grad_norm: 18.0019
2025-04-16 20:05:08,027 - mmdet - INFO - Epoch [13][1050/1104]	lr: 1.589e-04, eta: 2:13:16, time: 1.026, data_time: 0.010, memory: 13997, loss_cls: 0.3789, loss_bbox: 0.6486, d0.loss_cls: 0.4711, d0.loss_bbox: 0.7979, d1.loss_cls: 0.4705, d1.loss_bbox: 0.7314, d2.loss_cls: 0.4772, d2.loss_bbox: 0.7036, d3.loss_cls: 0.4195, d3.loss_bbox: 0.6853, d4.loss_cls: 0.3908, d4.loss_bbox: 0.6675, aux_task0.loss_heatmap: 0.5137, aux_task0.loss_bbox: 0.1982, aux_task1.loss_heatmap: 0.7555, aux_task1.loss_bbox: 0.2850, aux_task2.loss_heatmap: 0.6979, aux_task2.loss_bbox: 0.2855, aux_task3.loss_heatmap: 0.5702, aux_task3.loss_bbox: 0.2634, aux_task4.loss_heatmap: 0.4236, aux_task4.loss_bbox: 0.2453, aux_task5.loss_heatmap: 0.4107, aux_task5.loss_bbox: 0.2772, loss: 11.7685, grad_norm: 18.5314
2025-04-16 20:05:59,315 - mmdet - INFO - Epoch [13][1100/1104]	lr: 1.575e-04, eta: 2:12:24, time: 1.026, data_time: 0.008, memory: 13997, loss_cls: 0.3853, loss_bbox: 0.6579, d0.loss_cls: 0.4715, d0.loss_bbox: 0.8088, d1.loss_cls: 0.4779, d1.loss_bbox: 0.7433, d2.loss_cls: 0.4863, d2.loss_bbox: 0.7139, d3.loss_cls: 0.4235, d3.loss_bbox: 0.6973, d4.loss_cls: 0.3964, d4.loss_bbox: 0.6761, aux_task0.loss_heatmap: 0.5078, aux_task0.loss_bbox: 0.2014, aux_task1.loss_heatmap: 0.7534, aux_task1.loss_bbox: 0.2802, aux_task2.loss_heatmap: 0.7633, aux_task2.loss_bbox: 0.2910, aux_task3.loss_heatmap: 0.5646, aux_task3.loss_bbox: 0.2702, aux_task4.loss_heatmap: 0.4131, aux_task4.loss_bbox: 0.2369, aux_task5.loss_heatmap: 0.4316, aux_task5.loss_bbox: 0.2818, loss: 11.9336, grad_norm: 18.0962
2025-04-16 20:06:03,793 - mmdet - INFO - Saving checkpoint at 13 epochs
2025-04-16 20:18:27,373 - mmdet - INFO - Exp name: DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01.py
2025-04-16 20:18:27,373 - mmdet - INFO - Epoch(val) [13][3010]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.5647, pts_bbox_NuScenes/car_AP_dist_1.0: 0.7104, pts_bbox_NuScenes/car_AP_dist_2.0: 0.7778, pts_bbox_NuScenes/car_AP_dist_4.0: 0.8163, pts_bbox_NuScenes/car_trans_err: 0.2433, pts_bbox_NuScenes/car_scale_err: 0.1733, pts_bbox_NuScenes/car_orient_err: 0.3014, pts_bbox_NuScenes/car_vel_err: 0.4929, pts_bbox_NuScenes/car_attr_err: 0.2342, pts_bbox_NuScenes/mATE: 0.4269, pts_bbox_NuScenes/mASE: 0.2903, pts_bbox_NuScenes/mAOE: 0.7021, pts_bbox_NuScenes/mAVE: 0.6672, pts_bbox_NuScenes/mAAE: 0.3081, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.1595, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.3340, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.4480, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.4952, pts_bbox_NuScenes/truck_trans_err: 0.4891, pts_bbox_NuScenes/truck_scale_err: 0.2423, pts_bbox_NuScenes/truck_orient_err: 0.3640, pts_bbox_NuScenes/truck_vel_err: 0.4629, pts_bbox_NuScenes/truck_attr_err: 0.2514, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0065, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0649, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.1610, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.2295, pts_bbox_NuScenes/construction_vehicle_trans_err: 0.7277, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.4555, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.2262, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1420, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.3533, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.1488, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.3733, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.5777, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.6368, pts_bbox_NuScenes/bus_trans_err: 0.5571, pts_bbox_NuScenes/bus_scale_err: 0.2363, pts_bbox_NuScenes/bus_orient_err: 0.3288, pts_bbox_NuScenes/bus_vel_err: 1.3569, pts_bbox_NuScenes/bus_attr_err: 0.3483, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0318, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.1209, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.1806, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.2613, pts_bbox_NuScenes/trailer_trans_err: 0.6390, pts_bbox_NuScenes/trailer_scale_err: 0.3006, pts_bbox_NuScenes/trailer_orient_err: 1.0723, pts_bbox_NuScenes/trailer_vel_err: 0.4221, pts_bbox_NuScenes/trailer_attr_err: 0.2092, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.2581, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.4678, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.5789, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.6337, pts_bbox_NuScenes/barrier_trans_err: 0.4487, pts_bbox_NuScenes/barrier_scale_err: 0.2940, pts_bbox_NuScenes/barrier_orient_err: 0.1944, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.1816, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.2254, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.2384, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.2486, pts_bbox_NuScenes/motorcycle_trans_err: 0.3039, pts_bbox_NuScenes/motorcycle_scale_err: 0.2510, pts_bbox_NuScenes/motorcycle_orient_err: 0.5797, pts_bbox_NuScenes/motorcycle_vel_err: 1.0035, pts_bbox_NuScenes/motorcycle_attr_err: 0.2672, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.0743, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.0862, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.0900, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.0952, pts_bbox_NuScenes/bicycle_trans_err: 0.2654, pts_bbox_NuScenes/bicycle_scale_err: 0.2860, pts_bbox_NuScenes/bicycle_orient_err: 0.7320, pts_bbox_NuScenes/bicycle_vel_err: 0.4838, pts_bbox_NuScenes/bicycle_attr_err: 0.0185, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.4574, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.6852, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.7343, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.7633, pts_bbox_NuScenes/pedestrian_trans_err: 0.3684, pts_bbox_NuScenes/pedestrian_scale_err: 0.2939, pts_bbox_NuScenes/pedestrian_orient_err: 1.5203, pts_bbox_NuScenes/pedestrian_vel_err: 0.9738, pts_bbox_NuScenes/pedestrian_attr_err: 0.7825, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.4238, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.4748, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.5123, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.5641, pts_bbox_NuScenes/traffic_cone_trans_err: 0.2268, pts_bbox_NuScenes/traffic_cone_scale_err: 0.3700, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.4467, pts_bbox_NuScenes/mAP: 0.3723
2025-04-16 20:19:24,101 - mmdet - INFO - Epoch [14][50/1104]	lr: 1.559e-04, eta: 2:11:29, time: 1.118, data_time: 0.109, memory: 13997, loss_cls: 0.3822, loss_bbox: 0.6530, d0.loss_cls: 0.4677, d0.loss_bbox: 0.8011, d1.loss_cls: 0.4715, d1.loss_bbox: 0.7365, d2.loss_cls: 0.4722, d2.loss_bbox: 0.7086, d3.loss_cls: 0.4178, d3.loss_bbox: 0.6901, d4.loss_cls: 0.3932, d4.loss_bbox: 0.6690, aux_task0.loss_heatmap: 0.4944, aux_task0.loss_bbox: 0.1999, aux_task1.loss_heatmap: 0.7573, aux_task1.loss_bbox: 0.2736, aux_task2.loss_heatmap: 0.7549, aux_task2.loss_bbox: 0.2998, aux_task3.loss_heatmap: 0.5588, aux_task3.loss_bbox: 0.2654, aux_task4.loss_heatmap: 0.4306, aux_task4.loss_bbox: 0.2314, aux_task5.loss_heatmap: 0.4269, aux_task5.loss_bbox: 0.2772, loss: 11.8331, grad_norm: 21.6697
2025-04-16 20:20:15,206 - mmdet - INFO - Epoch [14][100/1104]	lr: 1.545e-04, eta: 2:10:37, time: 1.022, data_time: 0.008, memory: 13997, loss_cls: 0.3768, loss_bbox: 0.6573, d0.loss_cls: 0.4589, d0.loss_bbox: 0.7966, d1.loss_cls: 0.4615, d1.loss_bbox: 0.7334, d2.loss_cls: 0.4629, d2.loss_bbox: 0.7086, d3.loss_cls: 0.4130, d3.loss_bbox: 0.6914, d4.loss_cls: 0.3869, d4.loss_bbox: 0.6707, aux_task0.loss_heatmap: 0.5051, aux_task0.loss_bbox: 0.1972, aux_task1.loss_heatmap: 0.7822, aux_task1.loss_bbox: 0.2837, aux_task2.loss_heatmap: 0.6855, aux_task2.loss_bbox: 0.2825, aux_task3.loss_heatmap: 0.5421, aux_task3.loss_bbox: 0.2670, aux_task4.loss_heatmap: 0.4196, aux_task4.loss_bbox: 0.2443, aux_task5.loss_heatmap: 0.4127, aux_task5.loss_bbox: 0.2720, loss: 11.7121, grad_norm: 18.4000
2025-04-16 20:21:06,126 - mmdet - INFO - Epoch [14][150/1104]	lr: 1.531e-04, eta: 2:09:45, time: 1.018, data_time: 0.008, memory: 13997, loss_cls: 0.3852, loss_bbox: 0.6535, d0.loss_cls: 0.4665, d0.loss_bbox: 0.7947, d1.loss_cls: 0.4688, d1.loss_bbox: 0.7337, d2.loss_cls: 0.4779, d2.loss_bbox: 0.7086, d3.loss_cls: 0.4308, d3.loss_bbox: 0.6885, d4.loss_cls: 0.3991, d4.loss_bbox: 0.6677, aux_task0.loss_heatmap: 0.5220, aux_task0.loss_bbox: 0.2004, aux_task1.loss_heatmap: 0.7500, aux_task1.loss_bbox: 0.2785, aux_task2.loss_heatmap: 0.7302, aux_task2.loss_bbox: 0.3006, aux_task3.loss_heatmap: 0.5478, aux_task3.loss_bbox: 0.2650, aux_task4.loss_heatmap: 0.4152, aux_task4.loss_bbox: 0.2376, aux_task5.loss_heatmap: 0.4074, aux_task5.loss_bbox: 0.2816, loss: 11.8115, grad_norm: 20.7095
2025-04-16 20:21:57,139 - mmdet - INFO - Epoch [14][200/1104]	lr: 1.516e-04, eta: 2:08:54, time: 1.020, data_time: 0.008, memory: 13997, loss_cls: 0.3774, loss_bbox: 0.6486, d0.loss_cls: 0.4628, d0.loss_bbox: 0.7901, d1.loss_cls: 0.4647, d1.loss_bbox: 0.7242, d2.loss_cls: 0.4704, d2.loss_bbox: 0.7030, d3.loss_cls: 0.4148, d3.loss_bbox: 0.6833, d4.loss_cls: 0.3893, d4.loss_bbox: 0.6621, aux_task0.loss_heatmap: 0.5173, aux_task0.loss_bbox: 0.1993, aux_task1.loss_heatmap: 0.7387, aux_task1.loss_bbox: 0.2775, aux_task2.loss_heatmap: 0.7241, aux_task2.loss_bbox: 0.2957, aux_task3.loss_heatmap: 0.5407, aux_task3.loss_bbox: 0.2690, aux_task4.loss_heatmap: 0.4120, aux_task4.loss_bbox: 0.2321, aux_task5.loss_heatmap: 0.4272, aux_task5.loss_bbox: 0.2772, loss: 11.7014, grad_norm: 17.1019
2025-04-16 20:22:47,955 - mmdet - INFO - Epoch [14][250/1104]	lr: 1.502e-04, eta: 2:08:01, time: 1.016, data_time: 0.008, memory: 13997, loss_cls: 0.3851, loss_bbox: 0.6523, d0.loss_cls: 0.4697, d0.loss_bbox: 0.7960, d1.loss_cls: 0.4675, d1.loss_bbox: 0.7357, d2.loss_cls: 0.4731, d2.loss_bbox: 0.7096, d3.loss_cls: 0.4176, d3.loss_bbox: 0.6892, d4.loss_cls: 0.3950, d4.loss_bbox: 0.6676, aux_task0.loss_heatmap: 0.5273, aux_task0.loss_bbox: 0.2013, aux_task1.loss_heatmap: 0.7297, aux_task1.loss_bbox: 0.2837, aux_task2.loss_heatmap: 0.7184, aux_task2.loss_bbox: 0.2916, aux_task3.loss_heatmap: 0.5536, aux_task3.loss_bbox: 0.2583, aux_task4.loss_heatmap: 0.4316, aux_task4.loss_bbox: 0.2336, aux_task5.loss_heatmap: 0.4241, aux_task5.loss_bbox: 0.2754, loss: 11.7871, grad_norm: 18.1614
2025-04-16 20:23:39,021 - mmdet - INFO - Epoch [14][300/1104]	lr: 1.487e-04, eta: 2:07:10, time: 1.021, data_time: 0.009, memory: 13997, loss_cls: 0.3751, loss_bbox: 0.6481, d0.loss_cls: 0.4626, d0.loss_bbox: 0.7931, d1.loss_cls: 0.4694, d1.loss_bbox: 0.7369, d2.loss_cls: 0.4710, d2.loss_bbox: 0.7078, d3.loss_cls: 0.4126, d3.loss_bbox: 0.6847, d4.loss_cls: 0.3853, d4.loss_bbox: 0.6637, aux_task0.loss_heatmap: 0.4896, aux_task0.loss_bbox: 0.1959, aux_task1.loss_heatmap: 0.7533, aux_task1.loss_bbox: 0.2797, aux_task2.loss_heatmap: 0.6955, aux_task2.loss_bbox: 0.2957, aux_task3.loss_heatmap: 0.5401, aux_task3.loss_bbox: 0.2589, aux_task4.loss_heatmap: 0.4295, aux_task4.loss_bbox: 0.2418, aux_task5.loss_heatmap: 0.4117, aux_task5.loss_bbox: 0.2753, loss: 11.6770, grad_norm: 17.9007
2025-04-16 20:24:29,961 - mmdet - INFO - Epoch [14][350/1104]	lr: 1.473e-04, eta: 2:06:18, time: 1.019, data_time: 0.010, memory: 13997, loss_cls: 0.3810, loss_bbox: 0.6502, d0.loss_cls: 0.4641, d0.loss_bbox: 0.7950, d1.loss_cls: 0.4666, d1.loss_bbox: 0.7345, d2.loss_cls: 0.4684, d2.loss_bbox: 0.7059, d3.loss_cls: 0.4173, d3.loss_bbox: 0.6857, d4.loss_cls: 0.3927, d4.loss_bbox: 0.6623, aux_task0.loss_heatmap: 0.5092, aux_task0.loss_bbox: 0.1964, aux_task1.loss_heatmap: 0.7930, aux_task1.loss_bbox: 0.2875, aux_task2.loss_heatmap: 0.7341, aux_task2.loss_bbox: 0.2971, aux_task3.loss_heatmap: 0.5191, aux_task3.loss_bbox: 0.2603, aux_task4.loss_heatmap: 0.4299, aux_task4.loss_bbox: 0.2375, aux_task5.loss_heatmap: 0.4205, aux_task5.loss_bbox: 0.2749, loss: 11.7831, grad_norm: 18.4764
2025-04-16 20:25:21,133 - mmdet - INFO - Epoch [14][400/1104]	lr: 1.458e-04, eta: 2:05:26, time: 1.023, data_time: 0.008, memory: 13997, loss_cls: 0.3670, loss_bbox: 0.6390, d0.loss_cls: 0.4536, d0.loss_bbox: 0.7868, d1.loss_cls: 0.4540, d1.loss_bbox: 0.7253, d2.loss_cls: 0.4530, d2.loss_bbox: 0.6975, d3.loss_cls: 0.4008, d3.loss_bbox: 0.6744, d4.loss_cls: 0.3779, d4.loss_bbox: 0.6527, aux_task0.loss_heatmap: 0.4992, aux_task0.loss_bbox: 0.1993, aux_task1.loss_heatmap: 0.7383, aux_task1.loss_bbox: 0.2778, aux_task2.loss_heatmap: 0.7235, aux_task2.loss_bbox: 0.2854, aux_task3.loss_heatmap: 0.5298, aux_task3.loss_bbox: 0.2551, aux_task4.loss_heatmap: 0.4016, aux_task4.loss_bbox: 0.2389, aux_task5.loss_heatmap: 0.4083, aux_task5.loss_bbox: 0.2792, loss: 11.5184, grad_norm: 18.2119
2025-04-16 20:26:11,923 - mmdet - INFO - Epoch [14][450/1104]	lr: 1.443e-04, eta: 2:04:34, time: 1.016, data_time: 0.007, memory: 13997, loss_cls: 0.3812, loss_bbox: 0.6422, d0.loss_cls: 0.4630, d0.loss_bbox: 0.7932, d1.loss_cls: 0.4636, d1.loss_bbox: 0.7300, d2.loss_cls: 0.4668, d2.loss_bbox: 0.7021, d3.loss_cls: 0.4102, d3.loss_bbox: 0.6833, d4.loss_cls: 0.3900, d4.loss_bbox: 0.6590, aux_task0.loss_heatmap: 0.5087, aux_task0.loss_bbox: 0.1958, aux_task1.loss_heatmap: 0.7248, aux_task1.loss_bbox: 0.2762, aux_task2.loss_heatmap: 0.7519, aux_task2.loss_bbox: 0.2918, aux_task3.loss_heatmap: 0.5148, aux_task3.loss_bbox: 0.2529, aux_task4.loss_heatmap: 0.4381, aux_task4.loss_bbox: 0.2393, aux_task5.loss_heatmap: 0.4206, aux_task5.loss_bbox: 0.2800, loss: 11.6794, grad_norm: 17.8338
2025-04-16 20:27:02,894 - mmdet - INFO - Epoch [14][500/1104]	lr: 1.429e-04, eta: 2:03:42, time: 1.019, data_time: 0.007, memory: 13997, loss_cls: 0.3748, loss_bbox: 0.6486, d0.loss_cls: 0.4584, d0.loss_bbox: 0.7863, d1.loss_cls: 0.4596, d1.loss_bbox: 0.7267, d2.loss_cls: 0.4605, d2.loss_bbox: 0.6999, d3.loss_cls: 0.4048, d3.loss_bbox: 0.6831, d4.loss_cls: 0.3831, d4.loss_bbox: 0.6611, aux_task0.loss_heatmap: 0.5112, aux_task0.loss_bbox: 0.1983, aux_task1.loss_heatmap: 0.7636, aux_task1.loss_bbox: 0.2741, aux_task2.loss_heatmap: 0.7027, aux_task2.loss_bbox: 0.2869, aux_task3.loss_heatmap: 0.5607, aux_task3.loss_bbox: 0.2548, aux_task4.loss_heatmap: 0.4317, aux_task4.loss_bbox: 0.2340, aux_task5.loss_heatmap: 0.4104, aux_task5.loss_bbox: 0.2769, loss: 11.6523, grad_norm: 19.9891
2025-04-16 20:27:53,746 - mmdet - INFO - Epoch [14][550/1104]	lr: 1.414e-04, eta: 2:02:50, time: 1.017, data_time: 0.008, memory: 13997, loss_cls: 0.3748, loss_bbox: 0.6480, d0.loss_cls: 0.4599, d0.loss_bbox: 0.7949, d1.loss_cls: 0.4577, d1.loss_bbox: 0.7336, d2.loss_cls: 0.4599, d2.loss_bbox: 0.7065, d3.loss_cls: 0.4061, d3.loss_bbox: 0.6844, d4.loss_cls: 0.3848, d4.loss_bbox: 0.6614, aux_task0.loss_heatmap: 0.5203, aux_task0.loss_bbox: 0.1993, aux_task1.loss_heatmap: 0.7483, aux_task1.loss_bbox: 0.2691, aux_task2.loss_heatmap: 0.7652, aux_task2.loss_bbox: 0.2915, aux_task3.loss_heatmap: 0.5307, aux_task3.loss_bbox: 0.2573, aux_task4.loss_heatmap: 0.4154, aux_task4.loss_bbox: 0.2359, aux_task5.loss_heatmap: 0.3972, aux_task5.loss_bbox: 0.2733, loss: 11.6755, grad_norm: 21.2228
2025-04-16 20:28:44,770 - mmdet - INFO - Epoch [14][600/1104]	lr: 1.399e-04, eta: 2:01:59, time: 1.020, data_time: 0.008, memory: 13997, loss_cls: 0.3773, loss_bbox: 0.6485, d0.loss_cls: 0.4670, d0.loss_bbox: 0.7937, d1.loss_cls: 0.4768, d1.loss_bbox: 0.7261, d2.loss_cls: 0.4811, d2.loss_bbox: 0.6995, d3.loss_cls: 0.4153, d3.loss_bbox: 0.6874, d4.loss_cls: 0.3897, d4.loss_bbox: 0.6631, aux_task0.loss_heatmap: 0.5196, aux_task0.loss_bbox: 0.1977, aux_task1.loss_heatmap: 0.7386, aux_task1.loss_bbox: 0.2790, aux_task2.loss_heatmap: 0.7575, aux_task2.loss_bbox: 0.2979, aux_task3.loss_heatmap: 0.5517, aux_task3.loss_bbox: 0.2659, aux_task4.loss_heatmap: 0.3943, aux_task4.loss_bbox: 0.2297, aux_task5.loss_heatmap: 0.4195, aux_task5.loss_bbox: 0.2796, loss: 11.7564, grad_norm: 31.0911
2025-04-16 20:29:36,032 - mmdet - INFO - Epoch [14][650/1104]	lr: 1.385e-04, eta: 2:01:07, time: 1.025, data_time: 0.008, memory: 13997, loss_cls: 0.3771, loss_bbox: 0.6448, d0.loss_cls: 0.4601, d0.loss_bbox: 0.7860, d1.loss_cls: 0.4583, d1.loss_bbox: 0.7248, d2.loss_cls: 0.4622, d2.loss_bbox: 0.6952, d3.loss_cls: 0.4105, d3.loss_bbox: 0.6804, d4.loss_cls: 0.3881, d4.loss_bbox: 0.6585, aux_task0.loss_heatmap: 0.5047, aux_task0.loss_bbox: 0.1950, aux_task1.loss_heatmap: 0.7129, aux_task1.loss_bbox: 0.2765, aux_task2.loss_heatmap: 0.7721, aux_task2.loss_bbox: 0.2979, aux_task3.loss_heatmap: 0.5205, aux_task3.loss_bbox: 0.2662, aux_task4.loss_heatmap: 0.4350, aux_task4.loss_bbox: 0.2359, aux_task5.loss_heatmap: 0.4075, aux_task5.loss_bbox: 0.2743, loss: 11.6444, grad_norm: 17.7216
2025-04-16 20:30:27,211 - mmdet - INFO - Epoch [14][700/1104]	lr: 1.370e-04, eta: 2:00:16, time: 1.024, data_time: 0.008, memory: 13997, loss_cls: 0.3647, loss_bbox: 0.6386, d0.loss_cls: 0.4490, d0.loss_bbox: 0.7793, d1.loss_cls: 0.4498, d1.loss_bbox: 0.7172, d2.loss_cls: 0.4540, d2.loss_bbox: 0.6890, d3.loss_cls: 0.3948, d3.loss_bbox: 0.6760, d4.loss_cls: 0.3751, d4.loss_bbox: 0.6525, aux_task0.loss_heatmap: 0.5005, aux_task0.loss_bbox: 0.1965, aux_task1.loss_heatmap: 0.7433, aux_task1.loss_bbox: 0.2837, aux_task2.loss_heatmap: 0.7177, aux_task2.loss_bbox: 0.2859, aux_task3.loss_heatmap: 0.5327, aux_task3.loss_bbox: 0.2520, aux_task4.loss_heatmap: 0.3991, aux_task4.loss_bbox: 0.2322, aux_task5.loss_heatmap: 0.4007, aux_task5.loss_bbox: 0.2740, loss: 11.4584, grad_norm: 17.3693
2025-04-16 20:31:18,366 - mmdet - INFO - Epoch [14][750/1104]	lr: 1.355e-04, eta: 1:59:24, time: 1.023, data_time: 0.008, memory: 13997, loss_cls: 0.3674, loss_bbox: 0.6415, d0.loss_cls: 0.4507, d0.loss_bbox: 0.7873, d1.loss_cls: 0.4494, d1.loss_bbox: 0.7247, d2.loss_cls: 0.4514, d2.loss_bbox: 0.6971, d3.loss_cls: 0.3996, d3.loss_bbox: 0.6780, d4.loss_cls: 0.3780, d4.loss_bbox: 0.6551, aux_task0.loss_heatmap: 0.4973, aux_task0.loss_bbox: 0.1952, aux_task1.loss_heatmap: 0.7539, aux_task1.loss_bbox: 0.2715, aux_task2.loss_heatmap: 0.6923, aux_task2.loss_bbox: 0.2876, aux_task3.loss_heatmap: 0.5557, aux_task3.loss_bbox: 0.2572, aux_task4.loss_heatmap: 0.4068, aux_task4.loss_bbox: 0.2421, aux_task5.loss_heatmap: 0.4140, aux_task5.loss_bbox: 0.2794, loss: 11.5333, grad_norm: 16.6408
2025-04-16 20:32:09,095 - mmdet - INFO - Epoch [14][800/1104]	lr: 1.340e-04, eta: 1:58:32, time: 1.015, data_time: 0.008, memory: 13997, loss_cls: 0.3660, loss_bbox: 0.6319, d0.loss_cls: 0.4529, d0.loss_bbox: 0.7729, d1.loss_cls: 0.4516, d1.loss_bbox: 0.7114, d2.loss_cls: 0.4558, d2.loss_bbox: 0.6843, d3.loss_cls: 0.4014, d3.loss_bbox: 0.6679, d4.loss_cls: 0.3756, d4.loss_bbox: 0.6467, aux_task0.loss_heatmap: 0.5028, aux_task0.loss_bbox: 0.1936, aux_task1.loss_heatmap: 0.7298, aux_task1.loss_bbox: 0.2715, aux_task2.loss_heatmap: 0.7301, aux_task2.loss_bbox: 0.2908, aux_task3.loss_heatmap: 0.5015, aux_task3.loss_bbox: 0.2626, aux_task4.loss_heatmap: 0.4227, aux_task4.loss_bbox: 0.2307, aux_task5.loss_heatmap: 0.4186, aux_task5.loss_bbox: 0.2748, loss: 11.4479, grad_norm: 17.2752
2025-04-16 20:32:59,911 - mmdet - INFO - Epoch [14][850/1104]	lr: 1.326e-04, eta: 1:57:40, time: 1.016, data_time: 0.009, memory: 13997, loss_cls: 0.3702, loss_bbox: 0.6408, d0.loss_cls: 0.4540, d0.loss_bbox: 0.7814, d1.loss_cls: 0.4560, d1.loss_bbox: 0.7165, d2.loss_cls: 0.4611, d2.loss_bbox: 0.6925, d3.loss_cls: 0.4060, d3.loss_bbox: 0.6740, d4.loss_cls: 0.3805, d4.loss_bbox: 0.6534, aux_task0.loss_heatmap: 0.5031, aux_task0.loss_bbox: 0.1971, aux_task1.loss_heatmap: 0.7541, aux_task1.loss_bbox: 0.2748, aux_task2.loss_heatmap: 0.7060, aux_task2.loss_bbox: 0.2955, aux_task3.loss_heatmap: 0.5503, aux_task3.loss_bbox: 0.2592, aux_task4.loss_heatmap: 0.4101, aux_task4.loss_bbox: 0.2349, aux_task5.loss_heatmap: 0.4095, aux_task5.loss_bbox: 0.2751, loss: 11.5561, grad_norm: 22.9491
2025-04-16 20:33:51,639 - mmdet - INFO - Epoch [14][900/1104]	lr: 1.311e-04, eta: 1:56:49, time: 1.035, data_time: 0.008, memory: 13997, loss_cls: 0.3804, loss_bbox: 0.6398, d0.loss_cls: 0.4613, d0.loss_bbox: 0.7834, d1.loss_cls: 0.4610, d1.loss_bbox: 0.7210, d2.loss_cls: 0.4650, d2.loss_bbox: 0.6973, d3.loss_cls: 0.4153, d3.loss_bbox: 0.6769, d4.loss_cls: 0.3899, d4.loss_bbox: 0.6537, aux_task0.loss_heatmap: 0.4984, aux_task0.loss_bbox: 0.1967, aux_task1.loss_heatmap: 0.7532, aux_task1.loss_bbox: 0.2710, aux_task2.loss_heatmap: 0.7124, aux_task2.loss_bbox: 0.2931, aux_task3.loss_heatmap: 0.5749, aux_task3.loss_bbox: 0.2677, aux_task4.loss_heatmap: 0.4371, aux_task4.loss_bbox: 0.2307, aux_task5.loss_heatmap: 0.4019, aux_task5.loss_bbox: 0.2741, loss: 11.6564, grad_norm: 17.0256
2025-04-16 20:34:42,967 - mmdet - INFO - Epoch [14][950/1104]	lr: 1.296e-04, eta: 1:55:58, time: 1.027, data_time: 0.008, memory: 13997, loss_cls: 0.3706, loss_bbox: 0.6370, d0.loss_cls: 0.4559, d0.loss_bbox: 0.7815, d1.loss_cls: 0.4568, d1.loss_bbox: 0.7164, d2.loss_cls: 0.4560, d2.loss_bbox: 0.6933, d3.loss_cls: 0.4044, d3.loss_bbox: 0.6742, d4.loss_cls: 0.3787, d4.loss_bbox: 0.6507, aux_task0.loss_heatmap: 0.4973, aux_task0.loss_bbox: 0.1965, aux_task1.loss_heatmap: 0.7579, aux_task1.loss_bbox: 0.2770, aux_task2.loss_heatmap: 0.7033, aux_task2.loss_bbox: 0.2768, aux_task3.loss_heatmap: 0.5372, aux_task3.loss_bbox: 0.2608, aux_task4.loss_heatmap: 0.3960, aux_task4.loss_bbox: 0.2296, aux_task5.loss_heatmap: 0.4139, aux_task5.loss_bbox: 0.2789, loss: 11.5006, grad_norm: 18.5879
2025-04-16 20:35:34,025 - mmdet - INFO - Epoch [14][1000/1104]	lr: 1.281e-04, eta: 1:55:06, time: 1.021, data_time: 0.008, memory: 13997, loss_cls: 0.3720, loss_bbox: 0.6258, d0.loss_cls: 0.4518, d0.loss_bbox: 0.7723, d1.loss_cls: 0.4510, d1.loss_bbox: 0.7067, d2.loss_cls: 0.4537, d2.loss_bbox: 0.6832, d3.loss_cls: 0.4079, d3.loss_bbox: 0.6656, d4.loss_cls: 0.3814, d4.loss_bbox: 0.6408, aux_task0.loss_heatmap: 0.4910, aux_task0.loss_bbox: 0.1944, aux_task1.loss_heatmap: 0.7600, aux_task1.loss_bbox: 0.2753, aux_task2.loss_heatmap: 0.7316, aux_task2.loss_bbox: 0.2870, aux_task3.loss_heatmap: 0.5476, aux_task3.loss_bbox: 0.2539, aux_task4.loss_heatmap: 0.3904, aux_task4.loss_bbox: 0.2295, aux_task5.loss_heatmap: 0.4119, aux_task5.loss_bbox: 0.2740, loss: 11.4586, grad_norm: 24.6397
2025-04-16 20:36:25,424 - mmdet - INFO - Epoch [14][1050/1104]	lr: 1.266e-04, eta: 1:54:15, time: 1.028, data_time: 0.009, memory: 13997, loss_cls: 0.3646, loss_bbox: 0.6288, d0.loss_cls: 0.4500, d0.loss_bbox: 0.7737, d1.loss_cls: 0.4466, d1.loss_bbox: 0.7075, d2.loss_cls: 0.4470, d2.loss_bbox: 0.6835, d3.loss_cls: 0.3976, d3.loss_bbox: 0.6665, d4.loss_cls: 0.3738, d4.loss_bbox: 0.6433, aux_task0.loss_heatmap: 0.4969, aux_task0.loss_bbox: 0.1924, aux_task1.loss_heatmap: 0.7451, aux_task1.loss_bbox: 0.2750, aux_task2.loss_heatmap: 0.6945, aux_task2.loss_bbox: 0.2765, aux_task3.loss_heatmap: 0.5312, aux_task3.loss_bbox: 0.2434, aux_task4.loss_heatmap: 0.4053, aux_task4.loss_bbox: 0.2337, aux_task5.loss_heatmap: 0.4138, aux_task5.loss_bbox: 0.2718, loss: 11.3622, grad_norm: 17.3798
2025-04-16 20:37:16,518 - mmdet - INFO - Epoch [14][1100/1104]	lr: 1.251e-04, eta: 1:53:24, time: 1.022, data_time: 0.008, memory: 13997, loss_cls: 0.3593, loss_bbox: 0.6317, d0.loss_cls: 0.4429, d0.loss_bbox: 0.7780, d1.loss_cls: 0.4418, d1.loss_bbox: 0.7098, d2.loss_cls: 0.4470, d2.loss_bbox: 0.6827, d3.loss_cls: 0.3941, d3.loss_bbox: 0.6670, d4.loss_cls: 0.3705, d4.loss_bbox: 0.6441, aux_task0.loss_heatmap: 0.4991, aux_task0.loss_bbox: 0.1918, aux_task1.loss_heatmap: 0.7140, aux_task1.loss_bbox: 0.2697, aux_task2.loss_heatmap: 0.7196, aux_task2.loss_bbox: 0.2782, aux_task3.loss_heatmap: 0.5019, aux_task3.loss_bbox: 0.2578, aux_task4.loss_heatmap: 0.4046, aux_task4.loss_bbox: 0.2278, aux_task5.loss_heatmap: 0.3958, aux_task5.loss_bbox: 0.2707, loss: 11.3001, grad_norm: 15.6941
2025-04-16 20:37:21,062 - mmdet - INFO - Saving checkpoint at 14 epochs
2025-04-16 20:48:38,617 - mmdet - INFO - Exp name: DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01.py
2025-04-16 20:48:38,617 - mmdet - INFO - Epoch(val) [14][3010]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.5780, pts_bbox_NuScenes/car_AP_dist_1.0: 0.7273, pts_bbox_NuScenes/car_AP_dist_2.0: 0.7938, pts_bbox_NuScenes/car_AP_dist_4.0: 0.8301, pts_bbox_NuScenes/car_trans_err: 0.2429, pts_bbox_NuScenes/car_scale_err: 0.1723, pts_bbox_NuScenes/car_orient_err: 0.2395, pts_bbox_NuScenes/car_vel_err: 0.4168, pts_bbox_NuScenes/car_attr_err: 0.2329, pts_bbox_NuScenes/mATE: 0.4287, pts_bbox_NuScenes/mASE: 0.2862, pts_bbox_NuScenes/mAOE: 0.6401, pts_bbox_NuScenes/mAVE: 0.6322, pts_bbox_NuScenes/mAAE: 0.3002, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.1807, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.3611, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.4642, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.5153, pts_bbox_NuScenes/truck_trans_err: 0.4503, pts_bbox_NuScenes/truck_scale_err: 0.2417, pts_bbox_NuScenes/truck_orient_err: 0.2427, pts_bbox_NuScenes/truck_vel_err: 0.4396, pts_bbox_NuScenes/truck_attr_err: 0.2632, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0431, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.1577, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.2318, pts_bbox_NuScenes/construction_vehicle_trans_err: 0.8361, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.4472, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.1052, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1475, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.3321, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.1586, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.4215, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.6122, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.6471, pts_bbox_NuScenes/bus_trans_err: 0.5304, pts_bbox_NuScenes/bus_scale_err: 0.2250, pts_bbox_NuScenes/bus_orient_err: 0.1793, pts_bbox_NuScenes/bus_vel_err: 1.1660, pts_bbox_NuScenes/bus_attr_err: 0.3395, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0255, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.1366, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.2121, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.2857, pts_bbox_NuScenes/trailer_trans_err: 0.6489, pts_bbox_NuScenes/trailer_scale_err: 0.2899, pts_bbox_NuScenes/trailer_orient_err: 1.1274, pts_bbox_NuScenes/trailer_vel_err: 0.4260, pts_bbox_NuScenes/trailer_attr_err: 0.2172, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.2732, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.4847, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.6091, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.6523, pts_bbox_NuScenes/barrier_trans_err: 0.4369, pts_bbox_NuScenes/barrier_scale_err: 0.2881, pts_bbox_NuScenes/barrier_orient_err: 0.1610, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.1940, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.2494, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.2667, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.2782, pts_bbox_NuScenes/motorcycle_trans_err: 0.3049, pts_bbox_NuScenes/motorcycle_scale_err: 0.2512, pts_bbox_NuScenes/motorcycle_orient_err: 0.5546, pts_bbox_NuScenes/motorcycle_vel_err: 1.0646, pts_bbox_NuScenes/motorcycle_attr_err: 0.2365, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.0959, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.1072, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.1118, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.1157, pts_bbox_NuScenes/bicycle_trans_err: 0.2550, pts_bbox_NuScenes/bicycle_scale_err: 0.2840, pts_bbox_NuScenes/bicycle_orient_err: 0.7440, pts_bbox_NuScenes/bicycle_vel_err: 0.4529, pts_bbox_NuScenes/bicycle_attr_err: 0.0176, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.4856, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.6923, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.7409, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.7696, pts_bbox_NuScenes/pedestrian_trans_err: 0.3541, pts_bbox_NuScenes/pedestrian_scale_err: 0.2937, pts_bbox_NuScenes/pedestrian_orient_err: 1.4073, pts_bbox_NuScenes/pedestrian_vel_err: 0.9439, pts_bbox_NuScenes/pedestrian_attr_err: 0.7630, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.4350, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.4876, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.5259, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.5695, pts_bbox_NuScenes/traffic_cone_trans_err: 0.2279, pts_bbox_NuScenes/traffic_cone_scale_err: 0.3694, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.4653, pts_bbox_NuScenes/mAP: 0.3882
2025-04-16 20:49:36,408 - mmdet - INFO - Epoch [15][50/1104]	lr: 1.235e-04, eta: 1:52:28, time: 1.104, data_time: 0.091, memory: 13997, loss_cls: 0.3692, loss_bbox: 0.6307, d0.loss_cls: 0.4547, d0.loss_bbox: 0.7756, d1.loss_cls: 0.4560, d1.loss_bbox: 0.7096, d2.loss_cls: 0.4631, d2.loss_bbox: 0.6854, d3.loss_cls: 0.4080, d3.loss_bbox: 0.6677, d4.loss_cls: 0.3802, d4.loss_bbox: 0.6466, aux_task0.loss_heatmap: 0.4957, aux_task0.loss_bbox: 0.1932, aux_task1.loss_heatmap: 0.7247, aux_task1.loss_bbox: 0.2659, aux_task2.loss_heatmap: 0.7204, aux_task2.loss_bbox: 0.2918, aux_task3.loss_heatmap: 0.4997, aux_task3.loss_bbox: 0.2536, aux_task4.loss_heatmap: 0.4240, aux_task4.loss_bbox: 0.2310, aux_task5.loss_heatmap: 0.4086, aux_task5.loss_bbox: 0.2754, loss: 11.4307, grad_norm: 19.2180
2025-04-16 20:50:27,751 - mmdet - INFO - Epoch [15][100/1104]	lr: 1.221e-04, eta: 1:51:37, time: 1.027, data_time: 0.011, memory: 13997, loss_cls: 0.3679, loss_bbox: 0.6385, d0.loss_cls: 0.4526, d0.loss_bbox: 0.7792, d1.loss_cls: 0.4526, d1.loss_bbox: 0.7168, d2.loss_cls: 0.4544, d2.loss_bbox: 0.6959, d3.loss_cls: 0.4050, d3.loss_bbox: 0.6739, d4.loss_cls: 0.3777, d4.loss_bbox: 0.6537, aux_task0.loss_heatmap: 0.5012, aux_task0.loss_bbox: 0.1947, aux_task1.loss_heatmap: 0.7773, aux_task1.loss_bbox: 0.2801, aux_task2.loss_heatmap: 0.6775, aux_task2.loss_bbox: 0.2799, aux_task3.loss_heatmap: 0.5439, aux_task3.loss_bbox: 0.2605, aux_task4.loss_heatmap: 0.4083, aux_task4.loss_bbox: 0.2378, aux_task5.loss_heatmap: 0.3991, aux_task5.loss_bbox: 0.2735, loss: 11.5018, grad_norm: 17.1723
2025-04-16 20:51:19,327 - mmdet - INFO - Epoch [15][150/1104]	lr: 1.206e-04, eta: 1:50:46, time: 1.031, data_time: 0.015, memory: 13997, loss_cls: 0.3618, loss_bbox: 0.6291, d0.loss_cls: 0.4494, d0.loss_bbox: 0.7687, d1.loss_cls: 0.4462, d1.loss_bbox: 0.7060, d2.loss_cls: 0.4482, d2.loss_bbox: 0.6814, d3.loss_cls: 0.3956, d3.loss_bbox: 0.6629, d4.loss_cls: 0.3720, d4.loss_bbox: 0.6415, aux_task0.loss_heatmap: 0.4868, aux_task0.loss_bbox: 0.1940, aux_task1.loss_heatmap: 0.7365, aux_task1.loss_bbox: 0.2730, aux_task2.loss_heatmap: 0.7088, aux_task2.loss_bbox: 0.2933, aux_task3.loss_heatmap: 0.5447, aux_task3.loss_bbox: 0.2702, aux_task4.loss_heatmap: 0.3927, aux_task4.loss_bbox: 0.2290, aux_task5.loss_heatmap: 0.3918, aux_task5.loss_bbox: 0.2740, loss: 11.3576, grad_norm: 19.4526
2025-04-16 20:52:10,726 - mmdet - INFO - Epoch [15][200/1104]	lr: 1.191e-04, eta: 1:49:54, time: 1.028, data_time: 0.015, memory: 13997, loss_cls: 0.3607, loss_bbox: 0.6239, d0.loss_cls: 0.4421, d0.loss_bbox: 0.7698, d1.loss_cls: 0.4412, d1.loss_bbox: 0.7029, d2.loss_cls: 0.4423, d2.loss_bbox: 0.6783, d3.loss_cls: 0.3921, d3.loss_bbox: 0.6575, d4.loss_cls: 0.3717, d4.loss_bbox: 0.6366, aux_task0.loss_heatmap: 0.4870, aux_task0.loss_bbox: 0.1915, aux_task1.loss_heatmap: 0.7085, aux_task1.loss_bbox: 0.2669, aux_task2.loss_heatmap: 0.7134, aux_task2.loss_bbox: 0.2880, aux_task3.loss_heatmap: 0.5259, aux_task3.loss_bbox: 0.2718, aux_task4.loss_heatmap: 0.3958, aux_task4.loss_bbox: 0.2232, aux_task5.loss_heatmap: 0.4076, aux_task5.loss_bbox: 0.2737, loss: 11.2724, grad_norm: 18.3008
2025-04-16 20:53:02,667 - mmdet - INFO - Epoch [15][250/1104]	lr: 1.176e-04, eta: 1:49:04, time: 1.039, data_time: 0.027, memory: 13997, loss_cls: 0.3689, loss_bbox: 0.6234, d0.loss_cls: 0.4544, d0.loss_bbox: 0.7718, d1.loss_cls: 0.4530, d1.loss_bbox: 0.7070, d2.loss_cls: 0.4582, d2.loss_bbox: 0.6802, d3.loss_cls: 0.4007, d3.loss_bbox: 0.6592, d4.loss_cls: 0.3778, d4.loss_bbox: 0.6372, aux_task0.loss_heatmap: 0.4959, aux_task0.loss_bbox: 0.1953, aux_task1.loss_heatmap: 0.7374, aux_task1.loss_bbox: 0.2752, aux_task2.loss_heatmap: 0.7095, aux_task2.loss_bbox: 0.2789, aux_task3.loss_heatmap: 0.4930, aux_task3.loss_bbox: 0.2508, aux_task4.loss_heatmap: 0.4187, aux_task4.loss_bbox: 0.2331, aux_task5.loss_heatmap: 0.4221, aux_task5.loss_bbox: 0.2738, loss: 11.3754, grad_norm: 23.3826
2025-04-16 20:53:54,414 - mmdet - INFO - Epoch [15][300/1104]	lr: 1.161e-04, eta: 1:48:13, time: 1.035, data_time: 0.016, memory: 13997, loss_cls: 0.3613, loss_bbox: 0.6362, d0.loss_cls: 0.4469, d0.loss_bbox: 0.7787, d1.loss_cls: 0.4464, d1.loss_bbox: 0.7164, d2.loss_cls: 0.4475, d2.loss_bbox: 0.6915, d3.loss_cls: 0.3926, d3.loss_bbox: 0.6724, d4.loss_cls: 0.3700, d4.loss_bbox: 0.6502, aux_task0.loss_heatmap: 0.4914, aux_task0.loss_bbox: 0.1929, aux_task1.loss_heatmap: 0.7379, aux_task1.loss_bbox: 0.2763, aux_task2.loss_heatmap: 0.6498, aux_task2.loss_bbox: 0.2854, aux_task3.loss_heatmap: 0.5098, aux_task3.loss_bbox: 0.2676, aux_task4.loss_heatmap: 0.4249, aux_task4.loss_bbox: 0.2355, aux_task5.loss_heatmap: 0.4101, aux_task5.loss_bbox: 0.2764, loss: 11.3681, grad_norm: 17.2558
2025-04-16 20:54:45,843 - mmdet - INFO - Epoch [15][350/1104]	lr: 1.147e-04, eta: 1:47:21, time: 1.029, data_time: 0.015, memory: 13997, loss_cls: 0.3704, loss_bbox: 0.6350, d0.loss_cls: 0.4524, d0.loss_bbox: 0.7779, d1.loss_cls: 0.4515, d1.loss_bbox: 0.7165, d2.loss_cls: 0.4541, d2.loss_bbox: 0.6894, d3.loss_cls: 0.3994, d3.loss_bbox: 0.6719, d4.loss_cls: 0.3794, d4.loss_bbox: 0.6478, aux_task0.loss_heatmap: 0.4791, aux_task0.loss_bbox: 0.1893, aux_task1.loss_heatmap: 0.7726, aux_task1.loss_bbox: 0.2802, aux_task2.loss_heatmap: 0.7499, aux_task2.loss_bbox: 0.2922, aux_task3.loss_heatmap: 0.5395, aux_task3.loss_bbox: 0.2637, aux_task4.loss_heatmap: 0.4312, aux_task4.loss_bbox: 0.2349, aux_task5.loss_heatmap: 0.4043, aux_task5.loss_bbox: 0.2745, loss: 11.5572, grad_norm: 18.1484
2025-04-16 20:55:37,413 - mmdet - INFO - Epoch [15][400/1104]	lr: 1.132e-04, eta: 1:46:30, time: 1.031, data_time: 0.014, memory: 13997, loss_cls: 0.3556, loss_bbox: 0.6205, d0.loss_cls: 0.4408, d0.loss_bbox: 0.7674, d1.loss_cls: 0.4383, d1.loss_bbox: 0.7022, d2.loss_cls: 0.4393, d2.loss_bbox: 0.6757, d3.loss_cls: 0.3864, d3.loss_bbox: 0.6563, d4.loss_cls: 0.3646, d4.loss_bbox: 0.6356, aux_task0.loss_heatmap: 0.4961, aux_task0.loss_bbox: 0.1907, aux_task1.loss_heatmap: 0.7103, aux_task1.loss_bbox: 0.2705, aux_task2.loss_heatmap: 0.7290, aux_task2.loss_bbox: 0.2865, aux_task3.loss_heatmap: 0.5087, aux_task3.loss_bbox: 0.2571, aux_task4.loss_heatmap: 0.3954, aux_task4.loss_bbox: 0.2297, aux_task5.loss_heatmap: 0.4009, aux_task5.loss_bbox: 0.2709, loss: 11.2282, grad_norm: 16.2697
2025-04-16 20:56:28,862 - mmdet - INFO - Epoch [15][450/1104]	lr: 1.117e-04, eta: 1:45:39, time: 1.029, data_time: 0.016, memory: 13997, loss_cls: 0.3644, loss_bbox: 0.6252, d0.loss_cls: 0.4494, d0.loss_bbox: 0.7676, d1.loss_cls: 0.4458, d1.loss_bbox: 0.7036, d2.loss_cls: 0.4471, d2.loss_bbox: 0.6770, d3.loss_cls: 0.3945, d3.loss_bbox: 0.6586, d4.loss_cls: 0.3725, d4.loss_bbox: 0.6381, aux_task0.loss_heatmap: 0.4850, aux_task0.loss_bbox: 0.1926, aux_task1.loss_heatmap: 0.6998, aux_task1.loss_bbox: 0.2684, aux_task2.loss_heatmap: 0.7178, aux_task2.loss_bbox: 0.2816, aux_task3.loss_heatmap: 0.5312, aux_task3.loss_bbox: 0.2501, aux_task4.loss_heatmap: 0.4293, aux_task4.loss_bbox: 0.2380, aux_task5.loss_heatmap: 0.4131, aux_task5.loss_bbox: 0.2704, loss: 11.3212, grad_norm: 16.4104
2025-04-16 20:57:20,192 - mmdet - INFO - Epoch [15][500/1104]	lr: 1.102e-04, eta: 1:44:48, time: 1.027, data_time: 0.014, memory: 13997, loss_cls: 0.3554, loss_bbox: 0.6230, d0.loss_cls: 0.4417, d0.loss_bbox: 0.7599, d1.loss_cls: 0.4378, d1.loss_bbox: 0.6974, d2.loss_cls: 0.4364, d2.loss_bbox: 0.6720, d3.loss_cls: 0.3867, d3.loss_bbox: 0.6534, d4.loss_cls: 0.3636, d4.loss_bbox: 0.6359, aux_task0.loss_heatmap: 0.4798, aux_task0.loss_bbox: 0.1922, aux_task1.loss_heatmap: 0.7624, aux_task1.loss_bbox: 0.2702, aux_task2.loss_heatmap: 0.6935, aux_task2.loss_bbox: 0.2797, aux_task3.loss_heatmap: 0.5086, aux_task3.loss_bbox: 0.2370, aux_task4.loss_heatmap: 0.4007, aux_task4.loss_bbox: 0.2250, aux_task5.loss_heatmap: 0.4026, aux_task5.loss_bbox: 0.2716, loss: 11.1866, grad_norm: 15.2597
2025-04-16 20:58:11,517 - mmdet - INFO - Epoch [15][550/1104]	lr: 1.088e-04, eta: 1:43:56, time: 1.026, data_time: 0.015, memory: 13997, loss_cls: 0.3616, loss_bbox: 0.6250, d0.loss_cls: 0.4453, d0.loss_bbox: 0.7679, d1.loss_cls: 0.4415, d1.loss_bbox: 0.7056, d2.loss_cls: 0.4444, d2.loss_bbox: 0.6790, d3.loss_cls: 0.3934, d3.loss_bbox: 0.6589, d4.loss_cls: 0.3714, d4.loss_bbox: 0.6379, aux_task0.loss_heatmap: 0.5006, aux_task0.loss_bbox: 0.1931, aux_task1.loss_heatmap: 0.7277, aux_task1.loss_bbox: 0.2685, aux_task2.loss_heatmap: 0.7024, aux_task2.loss_bbox: 0.2778, aux_task3.loss_heatmap: 0.5169, aux_task3.loss_bbox: 0.2577, aux_task4.loss_heatmap: 0.3993, aux_task4.loss_bbox: 0.2260, aux_task5.loss_heatmap: 0.4236, aux_task5.loss_bbox: 0.2724, loss: 11.2980, grad_norm: 19.1644
2025-04-16 20:59:03,008 - mmdet - INFO - Epoch [15][600/1104]	lr: 1.073e-04, eta: 1:43:05, time: 1.030, data_time: 0.015, memory: 13997, loss_cls: 0.3528, loss_bbox: 0.6243, d0.loss_cls: 0.4371, d0.loss_bbox: 0.7650, d1.loss_cls: 0.4341, d1.loss_bbox: 0.7034, d2.loss_cls: 0.4342, d2.loss_bbox: 0.6784, d3.loss_cls: 0.3847, d3.loss_bbox: 0.6587, d4.loss_cls: 0.3637, d4.loss_bbox: 0.6375, aux_task0.loss_heatmap: 0.5008, aux_task0.loss_bbox: 0.1943, aux_task1.loss_heatmap: 0.7219, aux_task1.loss_bbox: 0.2684, aux_task2.loss_heatmap: 0.7182, aux_task2.loss_bbox: 0.2860, aux_task3.loss_heatmap: 0.5481, aux_task3.loss_bbox: 0.2589, aux_task4.loss_heatmap: 0.3751, aux_task4.loss_bbox: 0.2229, aux_task5.loss_heatmap: 0.4061, aux_task5.loss_bbox: 0.2738, loss: 11.2485, grad_norm: 22.0324
2025-04-16 20:59:54,732 - mmdet - INFO - Epoch [15][650/1104]	lr: 1.058e-04, eta: 1:42:14, time: 1.034, data_time: 0.015, memory: 13997, loss_cls: 0.3677, loss_bbox: 0.6293, d0.loss_cls: 0.4495, d0.loss_bbox: 0.7678, d1.loss_cls: 0.4472, d1.loss_bbox: 0.7060, d2.loss_cls: 0.4476, d2.loss_bbox: 0.6792, d3.loss_cls: 0.3994, d3.loss_bbox: 0.6622, d4.loss_cls: 0.3767, d4.loss_bbox: 0.6439, aux_task0.loss_heatmap: 0.4989, aux_task0.loss_bbox: 0.1924, aux_task1.loss_heatmap: 0.6980, aux_task1.loss_bbox: 0.2700, aux_task2.loss_heatmap: 0.7321, aux_task2.loss_bbox: 0.2830, aux_task3.loss_heatmap: 0.5392, aux_task3.loss_bbox: 0.2664, aux_task4.loss_heatmap: 0.4417, aux_task4.loss_bbox: 0.2315, aux_task5.loss_heatmap: 0.4121, aux_task5.loss_bbox: 0.2746, loss: 11.4163, grad_norm: 15.8589
2025-04-16 21:00:45,969 - mmdet - INFO - Epoch [15][700/1104]	lr: 1.044e-04, eta: 1:41:23, time: 1.025, data_time: 0.012, memory: 13997, loss_cls: 0.3572, loss_bbox: 0.6220, d0.loss_cls: 0.4451, d0.loss_bbox: 0.7595, d1.loss_cls: 0.4434, d1.loss_bbox: 0.6955, d2.loss_cls: 0.4451, d2.loss_bbox: 0.6695, d3.loss_cls: 0.3909, d3.loss_bbox: 0.6523, d4.loss_cls: 0.3683, d4.loss_bbox: 0.6347, aux_task0.loss_heatmap: 0.4839, aux_task0.loss_bbox: 0.1912, aux_task1.loss_heatmap: 0.7276, aux_task1.loss_bbox: 0.2731, aux_task2.loss_heatmap: 0.6868, aux_task2.loss_bbox: 0.2798, aux_task3.loss_heatmap: 0.5299, aux_task3.loss_bbox: 0.2590, aux_task4.loss_heatmap: 0.3787, aux_task4.loss_bbox: 0.2260, aux_task5.loss_heatmap: 0.4115, aux_task5.loss_bbox: 0.2718, loss: 11.2026, grad_norm: 20.8414
2025-04-16 21:01:37,336 - mmdet - INFO - Epoch [15][750/1104]	lr: 1.029e-04, eta: 1:40:31, time: 1.027, data_time: 0.016, memory: 13997, loss_cls: 0.3548, loss_bbox: 0.6236, d0.loss_cls: 0.4417, d0.loss_bbox: 0.7638, d1.loss_cls: 0.4391, d1.loss_bbox: 0.7050, d2.loss_cls: 0.4451, d2.loss_bbox: 0.6766, d3.loss_cls: 0.3908, d3.loss_bbox: 0.6570, d4.loss_cls: 0.3652, d4.loss_bbox: 0.6362, aux_task0.loss_heatmap: 0.4605, aux_task0.loss_bbox: 0.1891, aux_task1.loss_heatmap: 0.7391, aux_task1.loss_bbox: 0.2703, aux_task2.loss_heatmap: 0.6747, aux_task2.loss_bbox: 0.2757, aux_task3.loss_heatmap: 0.5380, aux_task3.loss_bbox: 0.2474, aux_task4.loss_heatmap: 0.4088, aux_task4.loss_bbox: 0.2370, aux_task5.loss_heatmap: 0.3979, aux_task5.loss_bbox: 0.2746, loss: 11.2122, grad_norm: 19.4184
2025-04-16 21:02:28,855 - mmdet - INFO - Epoch [15][800/1104]	lr: 1.015e-04, eta: 1:39:40, time: 1.030, data_time: 0.016, memory: 13997, loss_cls: 0.3527, loss_bbox: 0.6140, d0.loss_cls: 0.4380, d0.loss_bbox: 0.7553, d1.loss_cls: 0.4334, d1.loss_bbox: 0.6915, d2.loss_cls: 0.4376, d2.loss_bbox: 0.6650, d3.loss_cls: 0.3842, d3.loss_bbox: 0.6476, d4.loss_cls: 0.3622, d4.loss_bbox: 0.6262, aux_task0.loss_heatmap: 0.4846, aux_task0.loss_bbox: 0.1912, aux_task1.loss_heatmap: 0.7149, aux_task1.loss_bbox: 0.2718, aux_task2.loss_heatmap: 0.7224, aux_task2.loss_bbox: 0.2855, aux_task3.loss_heatmap: 0.4910, aux_task3.loss_bbox: 0.2427, aux_task4.loss_heatmap: 0.4084, aux_task4.loss_bbox: 0.2291, aux_task5.loss_heatmap: 0.4012, aux_task5.loss_bbox: 0.2734, loss: 11.1240, grad_norm: 18.4174
2025-04-16 21:03:19,992 - mmdet - INFO - Epoch [15][850/1104]	lr: 1.000e-04, eta: 1:38:49, time: 1.023, data_time: 0.012, memory: 13997, loss_cls: 0.3574, loss_bbox: 0.6247, d0.loss_cls: 0.4397, d0.loss_bbox: 0.7702, d1.loss_cls: 0.4355, d1.loss_bbox: 0.7067, d2.loss_cls: 0.4390, d2.loss_bbox: 0.6779, d3.loss_cls: 0.3933, d3.loss_bbox: 0.6579, d4.loss_cls: 0.3660, d4.loss_bbox: 0.6378, aux_task0.loss_heatmap: 0.4992, aux_task0.loss_bbox: 0.1946, aux_task1.loss_heatmap: 0.7337, aux_task1.loss_bbox: 0.2746, aux_task2.loss_heatmap: 0.6887, aux_task2.loss_bbox: 0.2875, aux_task3.loss_heatmap: 0.4963, aux_task3.loss_bbox: 0.2572, aux_task4.loss_heatmap: 0.4019, aux_task4.loss_bbox: 0.2304, aux_task5.loss_heatmap: 0.3935, aux_task5.loss_bbox: 0.2714, loss: 11.2349, grad_norm: 19.1952
2025-04-16 21:04:13,724 - mmdet - INFO - Epoch [15][900/1104]	lr: 9.855e-05, eta: 1:37:59, time: 1.075, data_time: 0.056, memory: 13997, loss_cls: 0.3621, loss_bbox: 0.6248, d0.loss_cls: 0.4463, d0.loss_bbox: 0.7707, d1.loss_cls: 0.4423, d1.loss_bbox: 0.7024, d2.loss_cls: 0.4435, d2.loss_bbox: 0.6765, d3.loss_cls: 0.3942, d3.loss_bbox: 0.6557, d4.loss_cls: 0.3714, d4.loss_bbox: 0.6395, aux_task0.loss_heatmap: 0.5058, aux_task0.loss_bbox: 0.1931, aux_task1.loss_heatmap: 0.7384, aux_task1.loss_bbox: 0.2664, aux_task2.loss_heatmap: 0.7026, aux_task2.loss_bbox: 0.2816, aux_task3.loss_heatmap: 0.4968, aux_task3.loss_bbox: 0.2598, aux_task4.loss_heatmap: 0.4248, aux_task4.loss_bbox: 0.2228, aux_task5.loss_heatmap: 0.3970, aux_task5.loss_bbox: 0.2727, loss: 11.2913, grad_norm: 18.0412
2025-04-16 21:05:04,993 - mmdet - INFO - Epoch [15][950/1104]	lr: 9.711e-05, eta: 1:37:08, time: 1.025, data_time: 0.014, memory: 13997, loss_cls: 0.3569, loss_bbox: 0.6180, d0.loss_cls: 0.4421, d0.loss_bbox: 0.7635, d1.loss_cls: 0.4385, d1.loss_bbox: 0.6971, d2.loss_cls: 0.4402, d2.loss_bbox: 0.6677, d3.loss_cls: 0.3882, d3.loss_bbox: 0.6483, d4.loss_cls: 0.3669, d4.loss_bbox: 0.6305, aux_task0.loss_heatmap: 0.4754, aux_task0.loss_bbox: 0.1882, aux_task1.loss_heatmap: 0.7322, aux_task1.loss_bbox: 0.2720, aux_task2.loss_heatmap: 0.6970, aux_task2.loss_bbox: 0.2763, aux_task3.loss_heatmap: 0.5144, aux_task3.loss_bbox: 0.2549, aux_task4.loss_heatmap: 0.4051, aux_task4.loss_bbox: 0.2287, aux_task5.loss_heatmap: 0.3907, aux_task5.loss_bbox: 0.2709, loss: 11.1638, grad_norm: 18.5153
2025-04-16 21:05:55,765 - mmdet - INFO - Epoch [15][1000/1104]	lr: 9.567e-05, eta: 1:36:16, time: 1.015, data_time: 0.008, memory: 13997, loss_cls: 0.3626, loss_bbox: 0.6229, d0.loss_cls: 0.4487, d0.loss_bbox: 0.7645, d1.loss_cls: 0.4466, d1.loss_bbox: 0.7024, d2.loss_cls: 0.4536, d2.loss_bbox: 0.6701, d3.loss_cls: 0.3966, d3.loss_bbox: 0.6524, d4.loss_cls: 0.3732, d4.loss_bbox: 0.6349, aux_task0.loss_heatmap: 0.4927, aux_task0.loss_bbox: 0.1951, aux_task1.loss_heatmap: 0.7383, aux_task1.loss_bbox: 0.2693, aux_task2.loss_heatmap: 0.6973, aux_task2.loss_bbox: 0.2838, aux_task3.loss_heatmap: 0.5178, aux_task3.loss_bbox: 0.2548, aux_task4.loss_heatmap: 0.3914, aux_task4.loss_bbox: 0.2237, aux_task5.loss_heatmap: 0.4032, aux_task5.loss_bbox: 0.2702, loss: 11.2661, grad_norm: 23.1085
2025-04-16 21:06:46,665 - mmdet - INFO - Epoch [15][1050/1104]	lr: 9.423e-05, eta: 1:35:24, time: 1.018, data_time: 0.010, memory: 13997, loss_cls: 0.3527, loss_bbox: 0.6117, d0.loss_cls: 0.4418, d0.loss_bbox: 0.7575, d1.loss_cls: 0.4392, d1.loss_bbox: 0.6911, d2.loss_cls: 0.4439, d2.loss_bbox: 0.6604, d3.loss_cls: 0.3872, d3.loss_bbox: 0.6405, d4.loss_cls: 0.3622, d4.loss_bbox: 0.6244, aux_task0.loss_heatmap: 0.4786, aux_task0.loss_bbox: 0.1865, aux_task1.loss_heatmap: 0.7292, aux_task1.loss_bbox: 0.2695, aux_task2.loss_heatmap: 0.6454, aux_task2.loss_bbox: 0.2711, aux_task3.loss_heatmap: 0.5601, aux_task3.loss_bbox: 0.2556, aux_task4.loss_heatmap: 0.4042, aux_task4.loss_bbox: 0.2329, aux_task5.loss_heatmap: 0.3950, aux_task5.loss_bbox: 0.2661, loss: 11.1070, grad_norm: 20.0723
2025-04-16 21:07:37,731 - mmdet - INFO - Epoch [15][1100/1104]	lr: 9.279e-05, eta: 1:34:33, time: 1.021, data_time: 0.008, memory: 13997, loss_cls: 0.3503, loss_bbox: 0.6133, d0.loss_cls: 0.4363, d0.loss_bbox: 0.7575, d1.loss_cls: 0.4307, d1.loss_bbox: 0.6938, d2.loss_cls: 0.4361, d2.loss_bbox: 0.6621, d3.loss_cls: 0.3810, d3.loss_bbox: 0.6431, d4.loss_cls: 0.3594, d4.loss_bbox: 0.6263, aux_task0.loss_heatmap: 0.4702, aux_task0.loss_bbox: 0.1886, aux_task1.loss_heatmap: 0.7099, aux_task1.loss_bbox: 0.2680, aux_task2.loss_heatmap: 0.6858, aux_task2.loss_bbox: 0.2727, aux_task3.loss_heatmap: 0.5095, aux_task3.loss_bbox: 0.2551, aux_task4.loss_heatmap: 0.3879, aux_task4.loss_bbox: 0.2252, aux_task5.loss_heatmap: 0.3929, aux_task5.loss_bbox: 0.2713, loss: 11.0271, grad_norm: 21.1755
2025-04-16 21:07:42,220 - mmdet - INFO - Saving checkpoint at 15 epochs
2025-04-16 21:19:17,924 - mmdet - INFO - Exp name: DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01.py
2025-04-16 21:19:17,924 - mmdet - INFO - Epoch(val) [15][3010]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.5837, pts_bbox_NuScenes/car_AP_dist_1.0: 0.7322, pts_bbox_NuScenes/car_AP_dist_2.0: 0.7968, pts_bbox_NuScenes/car_AP_dist_4.0: 0.8336, pts_bbox_NuScenes/car_trans_err: 0.2439, pts_bbox_NuScenes/car_scale_err: 0.1742, pts_bbox_NuScenes/car_orient_err: 0.2221, pts_bbox_NuScenes/car_vel_err: 0.4163, pts_bbox_NuScenes/car_attr_err: 0.2267, pts_bbox_NuScenes/mATE: 0.4118, pts_bbox_NuScenes/mASE: 0.2791, pts_bbox_NuScenes/mAOE: 0.6286, pts_bbox_NuScenes/mAVE: 0.5939, pts_bbox_NuScenes/mAAE: 0.2953, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.1924, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.3771, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.4806, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.5337, pts_bbox_NuScenes/truck_trans_err: 0.4606, pts_bbox_NuScenes/truck_scale_err: 0.2233, pts_bbox_NuScenes/truck_orient_err: 0.2822, pts_bbox_NuScenes/truck_vel_err: 0.3727, pts_bbox_NuScenes/truck_attr_err: 0.2436, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0010, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0567, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.1497, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.2307, pts_bbox_NuScenes/construction_vehicle_trans_err: 0.7535, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.4477, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.1913, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1431, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.3347, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.2016, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.4415, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.6308, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.6871, pts_bbox_NuScenes/bus_trans_err: 0.4906, pts_bbox_NuScenes/bus_scale_err: 0.2164, pts_bbox_NuScenes/bus_orient_err: 0.2191, pts_bbox_NuScenes/bus_vel_err: 1.1063, pts_bbox_NuScenes/bus_attr_err: 0.3269, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0277, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.1358, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.2251, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.3276, pts_bbox_NuScenes/trailer_trans_err: 0.6616, pts_bbox_NuScenes/trailer_scale_err: 0.2686, pts_bbox_NuScenes/trailer_orient_err: 0.8845, pts_bbox_NuScenes/trailer_vel_err: 0.4196, pts_bbox_NuScenes/trailer_attr_err: 0.1828, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.2836, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.4884, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.6048, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.6501, pts_bbox_NuScenes/barrier_trans_err: 0.4227, pts_bbox_NuScenes/barrier_scale_err: 0.2791, pts_bbox_NuScenes/barrier_orient_err: 0.1080, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.2186, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.2558, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.2673, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.2763, pts_bbox_NuScenes/motorcycle_trans_err: 0.2673, pts_bbox_NuScenes/motorcycle_scale_err: 0.2458, pts_bbox_NuScenes/motorcycle_orient_err: 0.5765, pts_bbox_NuScenes/motorcycle_vel_err: 0.8556, pts_bbox_NuScenes/motorcycle_attr_err: 0.2475, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.0961, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.1082, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.1129, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.1170, pts_bbox_NuScenes/bicycle_trans_err: 0.2456, pts_bbox_NuScenes/bicycle_scale_err: 0.2824, pts_bbox_NuScenes/bicycle_orient_err: 0.7485, pts_bbox_NuScenes/bicycle_vel_err: 0.4753, pts_bbox_NuScenes/bicycle_attr_err: 0.0244, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.4968, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.6957, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.7447, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.7733, pts_bbox_NuScenes/pedestrian_trans_err: 0.3577, pts_bbox_NuScenes/pedestrian_scale_err: 0.2896, pts_bbox_NuScenes/pedestrian_orient_err: 1.4252, pts_bbox_NuScenes/pedestrian_vel_err: 0.9621, pts_bbox_NuScenes/pedestrian_attr_err: 0.7757, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.4332, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.4814, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.5186, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.5607, pts_bbox_NuScenes/traffic_cone_trans_err: 0.2145, pts_bbox_NuScenes/traffic_cone_scale_err: 0.3635, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.4770, pts_bbox_NuScenes/mAP: 0.3957
2025-04-16 21:19:18,726 - mmdet - INFO - No ObjectSample now!
2025-04-16 21:20:10,021 - mmdet - INFO - Epoch [16][50/1104]	lr: 9.125e-05, eta: 1:33:34, time: 1.020, data_time: 0.071, memory: 13997, loss_cls: 0.3779, loss_bbox: 0.6006, d0.loss_cls: 0.4508, d0.loss_bbox: 0.7500, d1.loss_cls: 0.4496, d1.loss_bbox: 0.6900, d2.loss_cls: 0.4506, d2.loss_bbox: 0.6577, d3.loss_cls: 0.4051, d3.loss_bbox: 0.6354, d4.loss_cls: 0.3862, d4.loss_bbox: 0.6169, aux_task0.loss_heatmap: 0.4857, aux_task0.loss_bbox: 0.1919, aux_task1.loss_heatmap: 0.9220, aux_task1.loss_bbox: 0.2439, aux_task2.loss_heatmap: 0.9744, aux_task2.loss_bbox: 0.2786, aux_task3.loss_heatmap: 0.6438, aux_task3.loss_bbox: 0.2395, aux_task4.loss_heatmap: 1.0337, aux_task4.loss_bbox: 0.2412, aux_task5.loss_heatmap: 0.4308, aux_task5.loss_bbox: 0.2706, loss: 12.4267, grad_norm: 33.4276
2025-04-16 21:20:58,118 - mmdet - INFO - Epoch [16][100/1104]	lr: 8.982e-05, eta: 1:32:40, time: 0.962, data_time: 0.007, memory: 13997, loss_cls: 0.3877, loss_bbox: 0.6079, d0.loss_cls: 0.4629, d0.loss_bbox: 0.7561, d1.loss_cls: 0.4661, d1.loss_bbox: 0.6912, d2.loss_cls: 0.4711, d2.loss_bbox: 0.6596, d3.loss_cls: 0.4179, d3.loss_bbox: 0.6424, d4.loss_cls: 0.3940, d4.loss_bbox: 0.6251, aux_task0.loss_heatmap: 0.4964, aux_task0.loss_bbox: 0.1907, aux_task1.loss_heatmap: 0.8822, aux_task1.loss_bbox: 0.2372, aux_task2.loss_heatmap: 0.9004, aux_task2.loss_bbox: 0.2802, aux_task3.loss_heatmap: 0.6951, aux_task3.loss_bbox: 0.2357, aux_task4.loss_heatmap: 0.8767, aux_task4.loss_bbox: 0.2288, aux_task5.loss_heatmap: 0.4422, aux_task5.loss_bbox: 0.2705, loss: 12.3182, grad_norm: 69.9201
2025-04-16 21:21:45,818 - mmdet - INFO - Epoch [16][150/1104]	lr: 8.840e-05, eta: 1:31:47, time: 0.954, data_time: 0.007, memory: 13997, loss_cls: 0.3582, loss_bbox: 0.6023, d0.loss_cls: 0.4330, d0.loss_bbox: 0.7538, d1.loss_cls: 0.4340, d1.loss_bbox: 0.6911, d2.loss_cls: 0.4399, d2.loss_bbox: 0.6582, d3.loss_cls: 0.3877, d3.loss_bbox: 0.6392, d4.loss_cls: 0.3667, d4.loss_bbox: 0.6160, aux_task0.loss_heatmap: 0.4977, aux_task0.loss_bbox: 0.1950, aux_task1.loss_heatmap: 0.8028, aux_task1.loss_bbox: 0.2361, aux_task2.loss_heatmap: 0.8836, aux_task2.loss_bbox: 0.2573, aux_task3.loss_heatmap: 0.6691, aux_task3.loss_bbox: 0.2673, aux_task4.loss_heatmap: 0.8483, aux_task4.loss_bbox: 0.2385, aux_task5.loss_heatmap: 0.4243, aux_task5.loss_bbox: 0.2736, loss: 11.9739, grad_norm: 25.4993
2025-04-16 21:22:33,730 - mmdet - INFO - Epoch [16][200/1104]	lr: 8.699e-05, eta: 1:30:53, time: 0.958, data_time: 0.010, memory: 13997, loss_cls: 0.3676, loss_bbox: 0.6137, d0.loss_cls: 0.4425, d0.loss_bbox: 0.7582, d1.loss_cls: 0.4417, d1.loss_bbox: 0.7022, d2.loss_cls: 0.4417, d2.loss_bbox: 0.6692, d3.loss_cls: 0.3968, d3.loss_bbox: 0.6486, d4.loss_cls: 0.3749, d4.loss_bbox: 0.6282, aux_task0.loss_heatmap: 0.4951, aux_task0.loss_bbox: 0.1976, aux_task1.loss_heatmap: 0.8794, aux_task1.loss_bbox: 0.2523, aux_task2.loss_heatmap: 0.8740, aux_task2.loss_bbox: 0.2812, aux_task3.loss_heatmap: 0.6880, aux_task3.loss_bbox: 0.2337, aux_task4.loss_heatmap: 0.8865, aux_task4.loss_bbox: 0.2324, aux_task5.loss_heatmap: 0.4286, aux_task5.loss_bbox: 0.2733, loss: 12.2076, grad_norm: 24.3693
2025-04-16 21:23:21,539 - mmdet - INFO - Epoch [16][250/1104]	lr: 8.558e-05, eta: 1:30:00, time: 0.956, data_time: 0.007, memory: 13997, loss_cls: 0.3560, loss_bbox: 0.6031, d0.loss_cls: 0.4351, d0.loss_bbox: 0.7475, d1.loss_cls: 0.4367, d1.loss_bbox: 0.6866, d2.loss_cls: 0.4367, d2.loss_bbox: 0.6571, d3.loss_cls: 0.3841, d3.loss_bbox: 0.6351, d4.loss_cls: 0.3638, d4.loss_bbox: 0.6182, aux_task0.loss_heatmap: 0.4775, aux_task0.loss_bbox: 0.1925, aux_task1.loss_heatmap: 0.8277, aux_task1.loss_bbox: 0.2364, aux_task2.loss_heatmap: 0.8492, aux_task2.loss_bbox: 0.2871, aux_task3.loss_heatmap: 0.5803, aux_task3.loss_bbox: 0.2266, aux_task4.loss_heatmap: 0.7995, aux_task4.loss_bbox: 0.2301, aux_task5.loss_heatmap: 0.4652, aux_task5.loss_bbox: 0.2726, loss: 11.8046, grad_norm: 30.5818
2025-04-16 21:24:09,619 - mmdet - INFO - Epoch [16][300/1104]	lr: 8.418e-05, eta: 1:29:06, time: 0.962, data_time: 0.008, memory: 13997, loss_cls: 0.3621, loss_bbox: 0.5992, d0.loss_cls: 0.4386, d0.loss_bbox: 0.7529, d1.loss_cls: 0.4382, d1.loss_bbox: 0.6881, d2.loss_cls: 0.4406, d2.loss_bbox: 0.6559, d3.loss_cls: 0.3933, d3.loss_bbox: 0.6325, d4.loss_cls: 0.3734, d4.loss_bbox: 0.6158, aux_task0.loss_heatmap: 0.4660, aux_task0.loss_bbox: 0.1874, aux_task1.loss_heatmap: 0.8503, aux_task1.loss_bbox: 0.2400, aux_task2.loss_heatmap: 0.8262, aux_task2.loss_bbox: 0.2673, aux_task3.loss_heatmap: 0.6298, aux_task3.loss_bbox: 0.2362, aux_task4.loss_heatmap: 0.8401, aux_task4.loss_bbox: 0.2267, aux_task5.loss_heatmap: 0.4517, aux_task5.loss_bbox: 0.2679, loss: 11.8803, grad_norm: 27.9704
2025-04-16 21:24:57,328 - mmdet - INFO - Epoch [16][350/1104]	lr: 8.278e-05, eta: 1:28:13, time: 0.954, data_time: 0.008, memory: 13997, loss_cls: 0.3481, loss_bbox: 0.5921, d0.loss_cls: 0.4337, d0.loss_bbox: 0.7343, d1.loss_cls: 0.4310, d1.loss_bbox: 0.6688, d2.loss_cls: 0.4261, d2.loss_bbox: 0.6412, d3.loss_cls: 0.3748, d3.loss_bbox: 0.6226, d4.loss_cls: 0.3579, d4.loss_bbox: 0.6061, aux_task0.loss_heatmap: 0.4565, aux_task0.loss_bbox: 0.1840, aux_task1.loss_heatmap: 0.7699, aux_task1.loss_bbox: 0.2199, aux_task2.loss_heatmap: 0.7618, aux_task2.loss_bbox: 0.2357, aux_task3.loss_heatmap: 0.6789, aux_task3.loss_bbox: 0.2368, aux_task4.loss_heatmap: 0.7427, aux_task4.loss_bbox: 0.2124, aux_task5.loss_heatmap: 0.3992, aux_task5.loss_bbox: 0.2676, loss: 11.4021, grad_norm: 22.9932
2025-04-16 21:25:44,818 - mmdet - INFO - Epoch [16][400/1104]	lr: 8.139e-05, eta: 1:27:19, time: 0.950, data_time: 0.008, memory: 13997, loss_cls: 0.3651, loss_bbox: 0.6000, d0.loss_cls: 0.4453, d0.loss_bbox: 0.7471, d1.loss_cls: 0.4449, d1.loss_bbox: 0.6813, d2.loss_cls: 0.4457, d2.loss_bbox: 0.6509, d3.loss_cls: 0.3945, d3.loss_bbox: 0.6340, d4.loss_cls: 0.3746, d4.loss_bbox: 0.6150, aux_task0.loss_heatmap: 0.4775, aux_task0.loss_bbox: 0.1929, aux_task1.loss_heatmap: 0.7929, aux_task1.loss_bbox: 0.2368, aux_task2.loss_heatmap: 0.8217, aux_task2.loss_bbox: 0.2601, aux_task3.loss_heatmap: 0.6937, aux_task3.loss_bbox: 0.2447, aux_task4.loss_heatmap: 0.8505, aux_task4.loss_bbox: 0.2301, aux_task5.loss_heatmap: 0.4397, aux_task5.loss_bbox: 0.2699, loss: 11.9088, grad_norm: 32.9344
2025-04-16 21:26:33,020 - mmdet - INFO - Epoch [16][450/1104]	lr: 8.000e-05, eta: 1:26:26, time: 0.964, data_time: 0.008, memory: 13997, loss_cls: 0.3564, loss_bbox: 0.5913, d0.loss_cls: 0.4349, d0.loss_bbox: 0.7454, d1.loss_cls: 0.4356, d1.loss_bbox: 0.6756, d2.loss_cls: 0.4317, d2.loss_bbox: 0.6440, d3.loss_cls: 0.3828, d3.loss_bbox: 0.6228, d4.loss_cls: 0.3652, d4.loss_bbox: 0.6053, aux_task0.loss_heatmap: 0.4729, aux_task0.loss_bbox: 0.1864, aux_task1.loss_heatmap: 0.8350, aux_task1.loss_bbox: 0.2392, aux_task2.loss_heatmap: 0.8564, aux_task2.loss_bbox: 0.2641, aux_task3.loss_heatmap: 0.6531, aux_task3.loss_bbox: 0.2327, aux_task4.loss_heatmap: 0.7620, aux_task4.loss_bbox: 0.2152, aux_task5.loss_heatmap: 0.4510, aux_task5.loss_bbox: 0.2682, loss: 11.7273, grad_norm: 32.7555
2025-04-16 21:27:20,781 - mmdet - INFO - Epoch [16][500/1104]	lr: 7.862e-05, eta: 1:25:33, time: 0.955, data_time: 0.009, memory: 13997, loss_cls: 0.3510, loss_bbox: 0.5919, d0.loss_cls: 0.4344, d0.loss_bbox: 0.7406, d1.loss_cls: 0.4285, d1.loss_bbox: 0.6801, d2.loss_cls: 0.4266, d2.loss_bbox: 0.6466, d3.loss_cls: 0.3784, d3.loss_bbox: 0.6257, d4.loss_cls: 0.3578, d4.loss_bbox: 0.6087, aux_task0.loss_heatmap: 0.4792, aux_task0.loss_bbox: 0.1887, aux_task1.loss_heatmap: 0.8145, aux_task1.loss_bbox: 0.2386, aux_task2.loss_heatmap: 0.8451, aux_task2.loss_bbox: 0.2742, aux_task3.loss_heatmap: 0.6164, aux_task3.loss_bbox: 0.2126, aux_task4.loss_heatmap: 0.8360, aux_task4.loss_bbox: 0.2225, aux_task5.loss_heatmap: 0.4145, aux_task5.loss_bbox: 0.2675, loss: 11.6805, grad_norm: 26.0098
2025-04-16 21:28:08,752 - mmdet - INFO - Epoch [16][550/1104]	lr: 7.725e-05, eta: 1:24:40, time: 0.959, data_time: 0.008, memory: 13997, loss_cls: 0.3551, loss_bbox: 0.5998, d0.loss_cls: 0.4344, d0.loss_bbox: 0.7504, d1.loss_cls: 0.4312, d1.loss_bbox: 0.6890, d2.loss_cls: 0.4300, d2.loss_bbox: 0.6557, d3.loss_cls: 0.3813, d3.loss_bbox: 0.6346, d4.loss_cls: 0.3636, d4.loss_bbox: 0.6137, aux_task0.loss_heatmap: 0.4859, aux_task0.loss_bbox: 0.1909, aux_task1.loss_heatmap: 0.7909, aux_task1.loss_bbox: 0.2350, aux_task2.loss_heatmap: 0.8487, aux_task2.loss_bbox: 0.2589, aux_task3.loss_heatmap: 0.5665, aux_task3.loss_bbox: 0.2136, aux_task4.loss_heatmap: 0.8092, aux_task4.loss_bbox: 0.2278, aux_task5.loss_heatmap: 0.4388, aux_task5.loss_bbox: 0.2691, loss: 11.6743, grad_norm: 24.4095
2025-04-16 21:28:56,702 - mmdet - INFO - Epoch [16][600/1104]	lr: 7.588e-05, eta: 1:23:47, time: 0.959, data_time: 0.008, memory: 13997, loss_cls: 0.3488, loss_bbox: 0.5796, d0.loss_cls: 0.4279, d0.loss_bbox: 0.7271, d1.loss_cls: 0.4236, d1.loss_bbox: 0.6663, d2.loss_cls: 0.4213, d2.loss_bbox: 0.6346, d3.loss_cls: 0.3743, d3.loss_bbox: 0.6144, d4.loss_cls: 0.3564, d4.loss_bbox: 0.5965, aux_task0.loss_heatmap: 0.4683, aux_task0.loss_bbox: 0.1863, aux_task1.loss_heatmap: 0.8399, aux_task1.loss_bbox: 0.2382, aux_task2.loss_heatmap: 0.8342, aux_task2.loss_bbox: 0.2534, aux_task3.loss_heatmap: 0.5846, aux_task3.loss_bbox: 0.2246, aux_task4.loss_heatmap: 0.7725, aux_task4.loss_bbox: 0.2323, aux_task5.loss_heatmap: 0.4164, aux_task5.loss_bbox: 0.2638, loss: 11.4852, grad_norm: 22.9195
2025-04-16 21:29:44,767 - mmdet - INFO - Epoch [16][650/1104]	lr: 7.452e-05, eta: 1:22:54, time: 0.961, data_time: 0.008, memory: 13997, loss_cls: 0.3486, loss_bbox: 0.5819, d0.loss_cls: 0.4202, d0.loss_bbox: 0.7293, d1.loss_cls: 0.4178, d1.loss_bbox: 0.6638, d2.loss_cls: 0.4205, d2.loss_bbox: 0.6325, d3.loss_cls: 0.3733, d3.loss_bbox: 0.6142, d4.loss_cls: 0.3561, d4.loss_bbox: 0.5960, aux_task0.loss_heatmap: 0.4753, aux_task0.loss_bbox: 0.1851, aux_task1.loss_heatmap: 0.8571, aux_task1.loss_bbox: 0.2412, aux_task2.loss_heatmap: 0.8536, aux_task2.loss_bbox: 0.2512, aux_task3.loss_heatmap: 0.5473, aux_task3.loss_bbox: 0.2351, aux_task4.loss_heatmap: 0.7786, aux_task4.loss_bbox: 0.2099, aux_task5.loss_heatmap: 0.4085, aux_task5.loss_bbox: 0.2685, loss: 11.4657, grad_norm: 29.5551
2025-04-16 21:30:33,014 - mmdet - INFO - Epoch [16][700/1104]	lr: 7.317e-05, eta: 1:22:02, time: 0.965, data_time: 0.015, memory: 13997, loss_cls: 0.3446, loss_bbox: 0.5862, d0.loss_cls: 0.4253, d0.loss_bbox: 0.7382, d1.loss_cls: 0.4194, d1.loss_bbox: 0.6761, d2.loss_cls: 0.4186, d2.loss_bbox: 0.6434, d3.loss_cls: 0.3712, d3.loss_bbox: 0.6213, d4.loss_cls: 0.3534, d4.loss_bbox: 0.6032, aux_task0.loss_heatmap: 0.4715, aux_task0.loss_bbox: 0.1899, aux_task1.loss_heatmap: 0.7647, aux_task1.loss_bbox: 0.2281, aux_task2.loss_heatmap: 0.8647, aux_task2.loss_bbox: 0.2704, aux_task3.loss_heatmap: 0.5767, aux_task3.loss_bbox: 0.2352, aux_task4.loss_heatmap: 0.7485, aux_task4.loss_bbox: 0.2252, aux_task5.loss_heatmap: 0.4027, aux_task5.loss_bbox: 0.2680, loss: 11.4465, grad_norm: 27.1998
2025-04-16 21:31:20,978 - mmdet - INFO - Epoch [16][750/1104]	lr: 7.183e-05, eta: 1:21:09, time: 0.959, data_time: 0.009, memory: 13997, loss_cls: 0.3373, loss_bbox: 0.5726, d0.loss_cls: 0.4125, d0.loss_bbox: 0.7309, d1.loss_cls: 0.4090, d1.loss_bbox: 0.6664, d2.loss_cls: 0.4079, d2.loss_bbox: 0.6309, d3.loss_cls: 0.3615, d3.loss_bbox: 0.6081, d4.loss_cls: 0.3446, d4.loss_bbox: 0.5896, aux_task0.loss_heatmap: 0.4626, aux_task0.loss_bbox: 0.1913, aux_task1.loss_heatmap: 0.7904, aux_task1.loss_bbox: 0.2322, aux_task2.loss_heatmap: 0.7751, aux_task2.loss_bbox: 0.2463, aux_task3.loss_heatmap: 0.6295, aux_task3.loss_bbox: 0.2458, aux_task4.loss_heatmap: 0.7214, aux_task4.loss_bbox: 0.2083, aux_task5.loss_heatmap: 0.4099, aux_task5.loss_bbox: 0.2628, loss: 11.2466, grad_norm: 32.8815
2025-04-16 21:32:09,051 - mmdet - INFO - Epoch [16][800/1104]	lr: 7.049e-05, eta: 1:20:16, time: 0.961, data_time: 0.008, memory: 13997, loss_cls: 0.3373, loss_bbox: 0.5799, d0.loss_cls: 0.4098, d0.loss_bbox: 0.7337, d1.loss_cls: 0.4067, d1.loss_bbox: 0.6672, d2.loss_cls: 0.4071, d2.loss_bbox: 0.6324, d3.loss_cls: 0.3640, d3.loss_bbox: 0.6124, d4.loss_cls: 0.3456, d4.loss_bbox: 0.5957, aux_task0.loss_heatmap: 0.4736, aux_task0.loss_bbox: 0.1878, aux_task1.loss_heatmap: 0.7795, aux_task1.loss_bbox: 0.2301, aux_task2.loss_heatmap: 0.8191, aux_task2.loss_bbox: 0.2559, aux_task3.loss_heatmap: 0.5917, aux_task3.loss_bbox: 0.2379, aux_task4.loss_heatmap: 0.7996, aux_task4.loss_bbox: 0.2302, aux_task5.loss_heatmap: 0.3982, aux_task5.loss_bbox: 0.2667, loss: 11.3622, grad_norm: 29.4096
2025-04-16 21:32:57,010 - mmdet - INFO - Epoch [16][850/1104]	lr: 6.916e-05, eta: 1:19:23, time: 0.959, data_time: 0.008, memory: 13997, loss_cls: 0.3502, loss_bbox: 0.5783, d0.loss_cls: 0.4287, d0.loss_bbox: 0.7424, d1.loss_cls: 0.4238, d1.loss_bbox: 0.6748, d2.loss_cls: 0.4236, d2.loss_bbox: 0.6380, d3.loss_cls: 0.3802, d3.loss_bbox: 0.6125, d4.loss_cls: 0.3602, d4.loss_bbox: 0.5947, aux_task0.loss_heatmap: 0.4644, aux_task0.loss_bbox: 0.1855, aux_task1.loss_heatmap: 0.8335, aux_task1.loss_bbox: 0.2376, aux_task2.loss_heatmap: 0.8592, aux_task2.loss_bbox: 0.2796, aux_task3.loss_heatmap: 0.6179, aux_task3.loss_bbox: 0.2352, aux_task4.loss_heatmap: 0.8906, aux_task4.loss_bbox: 0.2313, aux_task5.loss_heatmap: 0.4308, aux_task5.loss_bbox: 0.2690, loss: 11.7420, grad_norm: 27.6986
2025-04-16 21:33:45,040 - mmdet - INFO - Epoch [16][900/1104]	lr: 6.784e-05, eta: 1:18:31, time: 0.961, data_time: 0.008, memory: 13997, loss_cls: 0.3416, loss_bbox: 0.5778, d0.loss_cls: 0.4196, d0.loss_bbox: 0.7307, d1.loss_cls: 0.4143, d1.loss_bbox: 0.6685, d2.loss_cls: 0.4138, d2.loss_bbox: 0.6358, d3.loss_cls: 0.3691, d3.loss_bbox: 0.6116, d4.loss_cls: 0.3510, d4.loss_bbox: 0.5942, aux_task0.loss_heatmap: 0.4662, aux_task0.loss_bbox: 0.1857, aux_task1.loss_heatmap: 0.8463, aux_task1.loss_bbox: 0.2409, aux_task2.loss_heatmap: 0.7959, aux_task2.loss_bbox: 0.2539, aux_task3.loss_heatmap: 0.5422, aux_task3.loss_bbox: 0.2255, aux_task4.loss_heatmap: 0.7558, aux_task4.loss_bbox: 0.2122, aux_task5.loss_heatmap: 0.4125, aux_task5.loss_bbox: 0.2636, loss: 11.3286, grad_norm: 23.2463
2025-04-16 21:34:33,386 - mmdet - INFO - Epoch [16][950/1104]	lr: 6.652e-05, eta: 1:17:38, time: 0.967, data_time: 0.008, memory: 13997, loss_cls: 0.3332, loss_bbox: 0.5717, d0.loss_cls: 0.4124, d0.loss_bbox: 0.7294, d1.loss_cls: 0.4064, d1.loss_bbox: 0.6638, d2.loss_cls: 0.4051, d2.loss_bbox: 0.6327, d3.loss_cls: 0.3604, d3.loss_bbox: 0.6068, d4.loss_cls: 0.3421, d4.loss_bbox: 0.5881, aux_task0.loss_heatmap: 0.4637, aux_task0.loss_bbox: 0.1857, aux_task1.loss_heatmap: 0.7840, aux_task1.loss_bbox: 0.2303, aux_task2.loss_heatmap: 0.7573, aux_task2.loss_bbox: 0.2454, aux_task3.loss_heatmap: 0.5444, aux_task3.loss_bbox: 0.2331, aux_task4.loss_heatmap: 0.7479, aux_task4.loss_bbox: 0.2216, aux_task5.loss_heatmap: 0.4105, aux_task5.loss_bbox: 0.2668, loss: 11.1428, grad_norm: 31.7139
2025-04-16 21:35:23,108 - mmdet - INFO - Epoch [16][1000/1104]	lr: 6.522e-05, eta: 1:16:47, time: 0.994, data_time: 0.008, memory: 13997, loss_cls: 0.3454, loss_bbox: 0.5737, d0.loss_cls: 0.4251, d0.loss_bbox: 0.7308, d1.loss_cls: 0.4239, d1.loss_bbox: 0.6676, d2.loss_cls: 0.4219, d2.loss_bbox: 0.6329, d3.loss_cls: 0.3752, d3.loss_bbox: 0.6060, d4.loss_cls: 0.3541, d4.loss_bbox: 0.5869, aux_task0.loss_heatmap: 0.4658, aux_task0.loss_bbox: 0.1862, aux_task1.loss_heatmap: 0.8095, aux_task1.loss_bbox: 0.2326, aux_task2.loss_heatmap: 0.7993, aux_task2.loss_bbox: 0.2528, aux_task3.loss_heatmap: 0.6883, aux_task3.loss_bbox: 0.2289, aux_task4.loss_heatmap: 0.7412, aux_task4.loss_bbox: 0.2162, aux_task5.loss_heatmap: 0.4015, aux_task5.loss_bbox: 0.2678, loss: 11.4335, grad_norm: 26.2227
2025-04-16 21:36:11,084 - mmdet - INFO - Epoch [16][1050/1104]	lr: 6.392e-05, eta: 1:15:54, time: 0.960, data_time: 0.008, memory: 13997, loss_cls: 0.3388, loss_bbox: 0.5762, d0.loss_cls: 0.4177, d0.loss_bbox: 0.7266, d1.loss_cls: 0.4159, d1.loss_bbox: 0.6666, d2.loss_cls: 0.4127, d2.loss_bbox: 0.6354, d3.loss_cls: 0.3654, d3.loss_bbox: 0.6097, d4.loss_cls: 0.3460, d4.loss_bbox: 0.5936, aux_task0.loss_heatmap: 0.4650, aux_task0.loss_bbox: 0.1836, aux_task1.loss_heatmap: 0.7905, aux_task1.loss_bbox: 0.2220, aux_task2.loss_heatmap: 0.8436, aux_task2.loss_bbox: 0.2775, aux_task3.loss_heatmap: 0.5470, aux_task3.loss_bbox: 0.2250, aux_task4.loss_heatmap: 0.7496, aux_task4.loss_bbox: 0.2175, aux_task5.loss_heatmap: 0.4270, aux_task5.loss_bbox: 0.2724, loss: 11.3253, grad_norm: 23.8055
2025-04-16 21:36:58,881 - mmdet - INFO - Epoch [16][1100/1104]	lr: 6.263e-05, eta: 1:15:02, time: 0.956, data_time: 0.008, memory: 13997, loss_cls: 0.3407, loss_bbox: 0.5836, d0.loss_cls: 0.4216, d0.loss_bbox: 0.7388, d1.loss_cls: 0.4192, d1.loss_bbox: 0.6833, d2.loss_cls: 0.4147, d2.loss_bbox: 0.6445, d3.loss_cls: 0.3688, d3.loss_bbox: 0.6188, d4.loss_cls: 0.3504, d4.loss_bbox: 0.5999, aux_task0.loss_heatmap: 0.4938, aux_task0.loss_bbox: 0.1912, aux_task1.loss_heatmap: 0.7784, aux_task1.loss_bbox: 0.2255, aux_task2.loss_heatmap: 0.8003, aux_task2.loss_bbox: 0.2589, aux_task3.loss_heatmap: 0.6413, aux_task3.loss_bbox: 0.2346, aux_task4.loss_heatmap: 0.7353, aux_task4.loss_bbox: 0.2090, aux_task5.loss_heatmap: 0.4084, aux_task5.loss_bbox: 0.2647, loss: 11.4256, grad_norm: 21.9838
2025-04-16 21:37:03,076 - mmdet - INFO - Saving checkpoint at 16 epochs
2025-04-16 21:49:00,588 - mmdet - INFO - Exp name: DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01.py
2025-04-16 21:49:00,589 - mmdet - INFO - Epoch(val) [16][3010]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.6116, pts_bbox_NuScenes/car_AP_dist_1.0: 0.7532, pts_bbox_NuScenes/car_AP_dist_2.0: 0.8109, pts_bbox_NuScenes/car_AP_dist_4.0: 0.8443, pts_bbox_NuScenes/car_trans_err: 0.2289, pts_bbox_NuScenes/car_scale_err: 0.1647, pts_bbox_NuScenes/car_orient_err: 0.2102, pts_bbox_NuScenes/car_vel_err: 0.3871, pts_bbox_NuScenes/car_attr_err: 0.2296, pts_bbox_NuScenes/mATE: 0.4006, pts_bbox_NuScenes/mASE: 0.2783, pts_bbox_NuScenes/mAOE: 0.6213, pts_bbox_NuScenes/mAVE: 0.6021, pts_bbox_NuScenes/mAAE: 0.2998, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.2173, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.4004, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.5213, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.5664, pts_bbox_NuScenes/truck_trans_err: 0.4468, pts_bbox_NuScenes/truck_scale_err: 0.2234, pts_bbox_NuScenes/truck_orient_err: 0.2226, pts_bbox_NuScenes/truck_vel_err: 0.3802, pts_bbox_NuScenes/truck_attr_err: 0.2477, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0046, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0741, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.2052, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.3159, pts_bbox_NuScenes/construction_vehicle_trans_err: 0.7676, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.4589, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.1709, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1374, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.3571, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.2617, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.5180, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.6898, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.7306, pts_bbox_NuScenes/bus_trans_err: 0.4589, pts_bbox_NuScenes/bus_scale_err: 0.2266, pts_bbox_NuScenes/bus_orient_err: 0.1960, pts_bbox_NuScenes/bus_vel_err: 1.3314, pts_bbox_NuScenes/bus_attr_err: 0.3176, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0732, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.1959, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.3432, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.4737, pts_bbox_NuScenes/trailer_trans_err: 0.6081, pts_bbox_NuScenes/trailer_scale_err: 0.2511, pts_bbox_NuScenes/trailer_orient_err: 0.8375, pts_bbox_NuScenes/trailer_vel_err: 0.3343, pts_bbox_NuScenes/trailer_attr_err: 0.1642, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.2965, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.5192, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.6367, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.6829, pts_bbox_NuScenes/barrier_trans_err: 0.4221, pts_bbox_NuScenes/barrier_scale_err: 0.2801, pts_bbox_NuScenes/barrier_orient_err: 0.1216, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.3673, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.4526, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.4794, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.5187, pts_bbox_NuScenes/motorcycle_trans_err: 0.2697, pts_bbox_NuScenes/motorcycle_scale_err: 0.2532, pts_bbox_NuScenes/motorcycle_orient_err: 0.5866, pts_bbox_NuScenes/motorcycle_vel_err: 0.9040, pts_bbox_NuScenes/motorcycle_attr_err: 0.2585, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.2863, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.3143, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.3317, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.3449, pts_bbox_NuScenes/bicycle_trans_err: 0.2283, pts_bbox_NuScenes/bicycle_scale_err: 0.2819, pts_bbox_NuScenes/bicycle_orient_err: 0.8125, pts_bbox_NuScenes/bicycle_vel_err: 0.3437, pts_bbox_NuScenes/bicycle_attr_err: 0.0124, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.5382, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.7289, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.7759, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.8021, pts_bbox_NuScenes/pedestrian_trans_err: 0.3517, pts_bbox_NuScenes/pedestrian_scale_err: 0.2861, pts_bbox_NuScenes/pedestrian_orient_err: 1.4338, pts_bbox_NuScenes/pedestrian_vel_err: 0.9987, pts_bbox_NuScenes/pedestrian_attr_err: 0.8112, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.5007, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.5581, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.6043, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.6508, pts_bbox_NuScenes/traffic_cone_trans_err: 0.2240, pts_bbox_NuScenes/traffic_cone_scale_err: 0.3566, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.5173, pts_bbox_NuScenes/mAP: 0.4750
2025-04-16 21:49:01,477 - mmdet - INFO - No ObjectSample now!
2025-04-16 21:49:52,950 - mmdet - INFO - Epoch [17][50/1104]	lr: 6.125e-05, eta: 1:14:05, time: 1.029, data_time: 0.078, memory: 13997, loss_cls: 0.3391, loss_bbox: 0.5782, d0.loss_cls: 0.4188, d0.loss_bbox: 0.7313, d1.loss_cls: 0.4135, d1.loss_bbox: 0.6701, d2.loss_cls: 0.4117, d2.loss_bbox: 0.6356, d3.loss_cls: 0.3660, d3.loss_bbox: 0.6116, d4.loss_cls: 0.3469, d4.loss_bbox: 0.5942, aux_task0.loss_heatmap: 0.4717, aux_task0.loss_bbox: 0.1862, aux_task1.loss_heatmap: 0.7677, aux_task1.loss_bbox: 0.2241, aux_task2.loss_heatmap: 0.8292, aux_task2.loss_bbox: 0.2555, aux_task3.loss_heatmap: 0.5873, aux_task3.loss_bbox: 0.2322, aux_task4.loss_heatmap: 0.6918, aux_task4.loss_bbox: 0.2211, aux_task5.loss_heatmap: 0.4044, aux_task5.loss_bbox: 0.2687, loss: 11.2571, grad_norm: 80.0862
2025-04-16 21:50:40,670 - mmdet - INFO - Epoch [17][100/1104]	lr: 5.998e-05, eta: 1:13:13, time: 0.954, data_time: 0.007, memory: 13997, loss_cls: 0.3351, loss_bbox: 0.5713, d0.loss_cls: 0.4135, d0.loss_bbox: 0.7229, d1.loss_cls: 0.4113, d1.loss_bbox: 0.6574, d2.loss_cls: 0.4133, d2.loss_bbox: 0.6235, d3.loss_cls: 0.3625, d3.loss_bbox: 0.6027, d4.loss_cls: 0.3441, d4.loss_bbox: 0.5871, aux_task0.loss_heatmap: 0.4503, aux_task0.loss_bbox: 0.1793, aux_task1.loss_heatmap: 0.8155, aux_task1.loss_bbox: 0.2366, aux_task2.loss_heatmap: 0.7838, aux_task2.loss_bbox: 0.2528, aux_task3.loss_heatmap: 0.5650, aux_task3.loss_bbox: 0.2396, aux_task4.loss_heatmap: 0.7283, aux_task4.loss_bbox: 0.2187, aux_task5.loss_heatmap: 0.4262, aux_task5.loss_bbox: 0.2673, loss: 11.2080, grad_norm: 23.0888
2025-04-16 21:51:28,608 - mmdet - INFO - Epoch [17][150/1104]	lr: 5.872e-05, eta: 1:12:20, time: 0.959, data_time: 0.008, memory: 13997, loss_cls: 0.3327, loss_bbox: 0.5656, d0.loss_cls: 0.4147, d0.loss_bbox: 0.7170, d1.loss_cls: 0.4085, d1.loss_bbox: 0.6574, d2.loss_cls: 0.4076, d2.loss_bbox: 0.6217, d3.loss_cls: 0.3641, d3.loss_bbox: 0.5995, d4.loss_cls: 0.3437, d4.loss_bbox: 0.5813, aux_task0.loss_heatmap: 0.4578, aux_task0.loss_bbox: 0.1838, aux_task1.loss_heatmap: 0.8042, aux_task1.loss_bbox: 0.2304, aux_task2.loss_heatmap: 0.7657, aux_task2.loss_bbox: 0.2437, aux_task3.loss_heatmap: 0.5935, aux_task3.loss_bbox: 0.2298, aux_task4.loss_heatmap: 0.7669, aux_task4.loss_bbox: 0.2300, aux_task5.loss_heatmap: 0.4069, aux_task5.loss_bbox: 0.2656, loss: 11.1921, grad_norm: 31.9767
2025-04-16 21:52:16,633 - mmdet - INFO - Epoch [17][200/1104]	lr: 5.746e-05, eta: 1:11:28, time: 0.960, data_time: 0.010, memory: 14026, loss_cls: 0.3343, loss_bbox: 0.5687, d0.loss_cls: 0.4162, d0.loss_bbox: 0.7337, d1.loss_cls: 0.4137, d1.loss_bbox: 0.6687, d2.loss_cls: 0.4138, d2.loss_bbox: 0.6256, d3.loss_cls: 0.3617, d3.loss_bbox: 0.6016, d4.loss_cls: 0.3433, d4.loss_bbox: 0.5854, aux_task0.loss_heatmap: 0.4518, aux_task0.loss_bbox: 0.1826, aux_task1.loss_heatmap: 0.8260, aux_task1.loss_bbox: 0.2277, aux_task2.loss_heatmap: 0.7953, aux_task2.loss_bbox: 0.2620, aux_task3.loss_heatmap: 0.6219, aux_task3.loss_bbox: 0.2223, aux_task4.loss_heatmap: 0.7424, aux_task4.loss_bbox: 0.2110, aux_task5.loss_heatmap: 0.4224, aux_task5.loss_bbox: 0.2644, loss: 11.2965, grad_norm: 26.9822
2025-04-16 21:53:04,462 - mmdet - INFO - Epoch [17][250/1104]	lr: 5.622e-05, eta: 1:10:36, time: 0.957, data_time: 0.008, memory: 14026, loss_cls: 0.3393, loss_bbox: 0.5855, d0.loss_cls: 0.4173, d0.loss_bbox: 0.7395, d1.loss_cls: 0.4137, d1.loss_bbox: 0.6787, d2.loss_cls: 0.4144, d2.loss_bbox: 0.6435, d3.loss_cls: 0.3670, d3.loss_bbox: 0.6195, d4.loss_cls: 0.3480, d4.loss_bbox: 0.6038, aux_task0.loss_heatmap: 0.4665, aux_task0.loss_bbox: 0.1879, aux_task1.loss_heatmap: 0.8178, aux_task1.loss_bbox: 0.2310, aux_task2.loss_heatmap: 0.7295, aux_task2.loss_bbox: 0.2486, aux_task3.loss_heatmap: 0.6581, aux_task3.loss_bbox: 0.2454, aux_task4.loss_heatmap: 0.6963, aux_task4.loss_bbox: 0.2053, aux_task5.loss_heatmap: 0.4289, aux_task5.loss_bbox: 0.2638, loss: 11.3494, grad_norm: 27.4838
2025-04-16 21:53:52,225 - mmdet - INFO - Epoch [17][300/1104]	lr: 5.499e-05, eta: 1:09:44, time: 0.955, data_time: 0.008, memory: 14026, loss_cls: 0.3342, loss_bbox: 0.5661, d0.loss_cls: 0.4169, d0.loss_bbox: 0.7228, d1.loss_cls: 0.4140, d1.loss_bbox: 0.6578, d2.loss_cls: 0.4145, d2.loss_bbox: 0.6209, d3.loss_cls: 0.3647, d3.loss_bbox: 0.5991, d4.loss_cls: 0.3438, d4.loss_bbox: 0.5834, aux_task0.loss_heatmap: 0.4584, aux_task0.loss_bbox: 0.1863, aux_task1.loss_heatmap: 0.8077, aux_task1.loss_bbox: 0.2354, aux_task2.loss_heatmap: 0.7697, aux_task2.loss_bbox: 0.2510, aux_task3.loss_heatmap: 0.5911, aux_task3.loss_bbox: 0.2382, aux_task4.loss_heatmap: 0.7244, aux_task4.loss_bbox: 0.2094, aux_task5.loss_heatmap: 0.4253, aux_task5.loss_bbox: 0.2658, loss: 11.2009, grad_norm: 24.6319
2025-04-16 21:54:39,989 - mmdet - INFO - Epoch [17][350/1104]	lr: 5.377e-05, eta: 1:08:51, time: 0.955, data_time: 0.008, memory: 14026, loss_cls: 0.3323, loss_bbox: 0.5647, d0.loss_cls: 0.4142, d0.loss_bbox: 0.7202, d1.loss_cls: 0.4073, d1.loss_bbox: 0.6588, d2.loss_cls: 0.4051, d2.loss_bbox: 0.6237, d3.loss_cls: 0.3594, d3.loss_bbox: 0.6017, d4.loss_cls: 0.3401, d4.loss_bbox: 0.5841, aux_task0.loss_heatmap: 0.4602, aux_task0.loss_bbox: 0.1811, aux_task1.loss_heatmap: 0.7970, aux_task1.loss_bbox: 0.2323, aux_task2.loss_heatmap: 0.7894, aux_task2.loss_bbox: 0.2621, aux_task3.loss_heatmap: 0.5654, aux_task3.loss_bbox: 0.2210, aux_task4.loss_heatmap: 0.7827, aux_task4.loss_bbox: 0.2234, aux_task5.loss_heatmap: 0.3984, aux_task5.loss_bbox: 0.2672, loss: 11.1918, grad_norm: 25.1036
2025-04-16 21:55:27,901 - mmdet - INFO - Epoch [17][400/1104]	lr: 5.255e-05, eta: 1:07:59, time: 0.958, data_time: 0.008, memory: 14026, loss_cls: 0.3299, loss_bbox: 0.5620, d0.loss_cls: 0.4072, d0.loss_bbox: 0.7105, d1.loss_cls: 0.4011, d1.loss_bbox: 0.6487, d2.loss_cls: 0.4007, d2.loss_bbox: 0.6143, d3.loss_cls: 0.3548, d3.loss_bbox: 0.5923, d4.loss_cls: 0.3373, d4.loss_bbox: 0.5761, aux_task0.loss_heatmap: 0.4582, aux_task0.loss_bbox: 0.1826, aux_task1.loss_heatmap: 0.7695, aux_task1.loss_bbox: 0.2248, aux_task2.loss_heatmap: 0.7659, aux_task2.loss_bbox: 0.2583, aux_task3.loss_heatmap: 0.6321, aux_task3.loss_bbox: 0.2298, aux_task4.loss_heatmap: 0.8054, aux_task4.loss_bbox: 0.2312, aux_task5.loss_heatmap: 0.3772, aux_task5.loss_bbox: 0.2615, loss: 11.1313, grad_norm: 28.4666
2025-04-16 21:56:15,798 - mmdet - INFO - Epoch [17][450/1104]	lr: 5.135e-05, eta: 1:07:07, time: 0.958, data_time: 0.008, memory: 14026, loss_cls: 0.3387, loss_bbox: 0.5740, d0.loss_cls: 0.4253, d0.loss_bbox: 0.7203, d1.loss_cls: 0.4215, d1.loss_bbox: 0.6621, d2.loss_cls: 0.4204, d2.loss_bbox: 0.6275, d3.loss_cls: 0.3690, d3.loss_bbox: 0.6055, d4.loss_cls: 0.3485, d4.loss_bbox: 0.5899, aux_task0.loss_heatmap: 0.4763, aux_task0.loss_bbox: 0.1832, aux_task1.loss_heatmap: 0.8112, aux_task1.loss_bbox: 0.2309, aux_task2.loss_heatmap: 0.7133, aux_task2.loss_bbox: 0.2446, aux_task3.loss_heatmap: 0.6253, aux_task3.loss_bbox: 0.2367, aux_task4.loss_heatmap: 0.7252, aux_task4.loss_bbox: 0.2147, aux_task5.loss_heatmap: 0.4009, aux_task5.loss_bbox: 0.2666, loss: 11.2318, grad_norm: 28.1207
2025-04-16 21:57:03,722 - mmdet - INFO - Epoch [17][500/1104]	lr: 5.016e-05, eta: 1:06:15, time: 0.958, data_time: 0.007, memory: 14026, loss_cls: 0.3347, loss_bbox: 0.5652, d0.loss_cls: 0.4171, d0.loss_bbox: 0.7208, d1.loss_cls: 0.4147, d1.loss_bbox: 0.6550, d2.loss_cls: 0.4133, d2.loss_bbox: 0.6183, d3.loss_cls: 0.3633, d3.loss_bbox: 0.5977, d4.loss_cls: 0.3429, d4.loss_bbox: 0.5799, aux_task0.loss_heatmap: 0.4635, aux_task0.loss_bbox: 0.1826, aux_task1.loss_heatmap: 0.8082, aux_task1.loss_bbox: 0.2284, aux_task2.loss_heatmap: 0.7843, aux_task2.loss_bbox: 0.2440, aux_task3.loss_heatmap: 0.5647, aux_task3.loss_bbox: 0.2143, aux_task4.loss_heatmap: 0.6719, aux_task4.loss_bbox: 0.2085, aux_task5.loss_heatmap: 0.3935, aux_task5.loss_bbox: 0.2648, loss: 11.0516, grad_norm: 26.6722
2025-04-16 21:57:51,534 - mmdet - INFO - Epoch [17][550/1104]	lr: 4.898e-05, eta: 1:05:23, time: 0.956, data_time: 0.008, memory: 14026, loss_cls: 0.3296, loss_bbox: 0.5664, d0.loss_cls: 0.4103, d0.loss_bbox: 0.7186, d1.loss_cls: 0.4065, d1.loss_bbox: 0.6585, d2.loss_cls: 0.4071, d2.loss_bbox: 0.6232, d3.loss_cls: 0.3561, d3.loss_bbox: 0.5992, d4.loss_cls: 0.3389, d4.loss_bbox: 0.5808, aux_task0.loss_heatmap: 0.4543, aux_task0.loss_bbox: 0.1814, aux_task1.loss_heatmap: 0.7743, aux_task1.loss_bbox: 0.2235, aux_task2.loss_heatmap: 0.7944, aux_task2.loss_bbox: 0.2572, aux_task3.loss_heatmap: 0.5904, aux_task3.loss_bbox: 0.2369, aux_task4.loss_heatmap: 0.6552, aux_task4.loss_bbox: 0.1993, aux_task5.loss_heatmap: 0.3780, aux_task5.loss_bbox: 0.2618, loss: 11.0018, grad_norm: 43.7123
2025-04-16 21:58:39,571 - mmdet - INFO - Epoch [17][600/1104]	lr: 4.781e-05, eta: 1:04:31, time: 0.961, data_time: 0.008, memory: 14026, loss_cls: 0.3354, loss_bbox: 0.5723, d0.loss_cls: 0.4196, d0.loss_bbox: 0.7221, d1.loss_cls: 0.4156, d1.loss_bbox: 0.6625, d2.loss_cls: 0.4131, d2.loss_bbox: 0.6284, d3.loss_cls: 0.3617, d3.loss_bbox: 0.6063, d4.loss_cls: 0.3436, d4.loss_bbox: 0.5880, aux_task0.loss_heatmap: 0.4579, aux_task0.loss_bbox: 0.1804, aux_task1.loss_heatmap: 0.7650, aux_task1.loss_bbox: 0.2248, aux_task2.loss_heatmap: 0.7963, aux_task2.loss_bbox: 0.2636, aux_task3.loss_heatmap: 0.5525, aux_task3.loss_bbox: 0.2304, aux_task4.loss_heatmap: 0.7647, aux_task4.loss_bbox: 0.2131, aux_task5.loss_heatmap: 0.4062, aux_task5.loss_bbox: 0.2660, loss: 11.1895, grad_norm: 30.9431
2025-04-16 21:59:27,779 - mmdet - INFO - Epoch [17][650/1104]	lr: 4.665e-05, eta: 1:03:40, time: 0.964, data_time: 0.008, memory: 14026, loss_cls: 0.3312, loss_bbox: 0.5701, d0.loss_cls: 0.4171, d0.loss_bbox: 0.7255, d1.loss_cls: 0.4096, d1.loss_bbox: 0.6637, d2.loss_cls: 0.4088, d2.loss_bbox: 0.6303, d3.loss_cls: 0.3605, d3.loss_bbox: 0.6050, d4.loss_cls: 0.3395, d4.loss_bbox: 0.5868, aux_task0.loss_heatmap: 0.4659, aux_task0.loss_bbox: 0.1835, aux_task1.loss_heatmap: 0.7555, aux_task1.loss_bbox: 0.2282, aux_task2.loss_heatmap: 0.7644, aux_task2.loss_bbox: 0.2441, aux_task3.loss_heatmap: 0.5640, aux_task3.loss_bbox: 0.2260, aux_task4.loss_heatmap: 0.7297, aux_task4.loss_bbox: 0.2196, aux_task5.loss_heatmap: 0.3914, aux_task5.loss_bbox: 0.2669, loss: 11.0873, grad_norm: 25.4858
2025-04-16 22:00:15,631 - mmdet - INFO - Epoch [17][700/1104]	lr: 4.550e-05, eta: 1:02:48, time: 0.957, data_time: 0.009, memory: 14026, loss_cls: 0.3336, loss_bbox: 0.5612, d0.loss_cls: 0.4152, d0.loss_bbox: 0.7172, d1.loss_cls: 0.4121, d1.loss_bbox: 0.6560, d2.loss_cls: 0.4070, d2.loss_bbox: 0.6207, d3.loss_cls: 0.3587, d3.loss_bbox: 0.5946, d4.loss_cls: 0.3409, d4.loss_bbox: 0.5777, aux_task0.loss_heatmap: 0.4555, aux_task0.loss_bbox: 0.1781, aux_task1.loss_heatmap: 0.7959, aux_task1.loss_bbox: 0.2250, aux_task2.loss_heatmap: 0.7132, aux_task2.loss_bbox: 0.2302, aux_task3.loss_heatmap: 0.5798, aux_task3.loss_bbox: 0.2371, aux_task4.loss_heatmap: 0.7994, aux_task4.loss_bbox: 0.2167, aux_task5.loss_heatmap: 0.4080, aux_task5.loss_bbox: 0.2619, loss: 11.0960, grad_norm: 27.6973
2025-04-16 22:01:03,445 - mmdet - INFO - Epoch [17][750/1104]	lr: 4.436e-05, eta: 1:01:56, time: 0.956, data_time: 0.008, memory: 14026, loss_cls: 0.3165, loss_bbox: 0.5542, d0.loss_cls: 0.4024, d0.loss_bbox: 0.7115, d1.loss_cls: 0.3976, d1.loss_bbox: 0.6464, d2.loss_cls: 0.3977, d2.loss_bbox: 0.6160, d3.loss_cls: 0.3484, d3.loss_bbox: 0.5907, d4.loss_cls: 0.3258, d4.loss_bbox: 0.5710, aux_task0.loss_heatmap: 0.4549, aux_task0.loss_bbox: 0.1813, aux_task1.loss_heatmap: 0.7264, aux_task1.loss_bbox: 0.2195, aux_task2.loss_heatmap: 0.7797, aux_task2.loss_bbox: 0.2526, aux_task3.loss_heatmap: 0.5189, aux_task3.loss_bbox: 0.2358, aux_task4.loss_heatmap: 0.6938, aux_task4.loss_bbox: 0.2156, aux_task5.loss_heatmap: 0.3880, aux_task5.loss_bbox: 0.2614, loss: 10.8061, grad_norm: 25.1224
2025-04-16 22:01:51,279 - mmdet - INFO - Epoch [17][800/1104]	lr: 4.323e-05, eta: 1:01:04, time: 0.957, data_time: 0.008, memory: 14026, loss_cls: 0.3221, loss_bbox: 0.5609, d0.loss_cls: 0.4059, d0.loss_bbox: 0.7120, d1.loss_cls: 0.4015, d1.loss_bbox: 0.6497, d2.loss_cls: 0.3996, d2.loss_bbox: 0.6166, d3.loss_cls: 0.3497, d3.loss_bbox: 0.5939, d4.loss_cls: 0.3313, d4.loss_bbox: 0.5762, aux_task0.loss_heatmap: 0.4480, aux_task0.loss_bbox: 0.1796, aux_task1.loss_heatmap: 0.7944, aux_task1.loss_bbox: 0.2269, aux_task2.loss_heatmap: 0.7056, aux_task2.loss_bbox: 0.2345, aux_task3.loss_heatmap: 0.5460, aux_task3.loss_bbox: 0.2287, aux_task4.loss_heatmap: 0.7346, aux_task4.loss_bbox: 0.2158, aux_task5.loss_heatmap: 0.3994, aux_task5.loss_bbox: 0.2650, loss: 10.8976, grad_norm: 25.1991
2025-04-16 22:02:38,953 - mmdet - INFO - Epoch [17][850/1104]	lr: 4.212e-05, eta: 1:00:13, time: 0.953, data_time: 0.008, memory: 14026, loss_cls: 0.3262, loss_bbox: 0.5647, d0.loss_cls: 0.4110, d0.loss_bbox: 0.7146, d1.loss_cls: 0.4051, d1.loss_bbox: 0.6543, d2.loss_cls: 0.4040, d2.loss_bbox: 0.6200, d3.loss_cls: 0.3519, d3.loss_bbox: 0.5982, d4.loss_cls: 0.3346, d4.loss_bbox: 0.5804, aux_task0.loss_heatmap: 0.4712, aux_task0.loss_bbox: 0.1858, aux_task1.loss_heatmap: 0.7806, aux_task1.loss_bbox: 0.2281, aux_task2.loss_heatmap: 0.7730, aux_task2.loss_bbox: 0.2531, aux_task3.loss_heatmap: 0.5554, aux_task3.loss_bbox: 0.2263, aux_task4.loss_heatmap: 0.7417, aux_task4.loss_bbox: 0.2077, aux_task5.loss_heatmap: 0.4225, aux_task5.loss_bbox: 0.2593, loss: 11.0697, grad_norm: 32.6103
2025-04-16 22:03:26,977 - mmdet - INFO - Epoch [17][900/1104]	lr: 4.101e-05, eta: 0:59:21, time: 0.960, data_time: 0.008, memory: 14026, loss_cls: 0.3147, loss_bbox: 0.5521, d0.loss_cls: 0.3967, d0.loss_bbox: 0.7080, d1.loss_cls: 0.3896, d1.loss_bbox: 0.6460, d2.loss_cls: 0.3903, d2.loss_bbox: 0.6116, d3.loss_cls: 0.3427, d3.loss_bbox: 0.5859, d4.loss_cls: 0.3223, d4.loss_bbox: 0.5673, aux_task0.loss_heatmap: 0.4634, aux_task0.loss_bbox: 0.1815, aux_task1.loss_heatmap: 0.7053, aux_task1.loss_bbox: 0.2116, aux_task2.loss_heatmap: 0.6776, aux_task2.loss_bbox: 0.2458, aux_task3.loss_heatmap: 0.5490, aux_task3.loss_bbox: 0.2134, aux_task4.loss_heatmap: 0.6955, aux_task4.loss_bbox: 0.2094, aux_task5.loss_heatmap: 0.3634, aux_task5.loss_bbox: 0.2585, loss: 10.6016, grad_norm: 20.9512
2025-04-16 22:04:15,292 - mmdet - INFO - Epoch [17][950/1104]	lr: 3.992e-05, eta: 0:58:29, time: 0.966, data_time: 0.008, memory: 14026, loss_cls: 0.3259, loss_bbox: 0.5744, d0.loss_cls: 0.4044, d0.loss_bbox: 0.7327, d1.loss_cls: 0.4022, d1.loss_bbox: 0.6693, d2.loss_cls: 0.3992, d2.loss_bbox: 0.6346, d3.loss_cls: 0.3513, d3.loss_bbox: 0.6089, d4.loss_cls: 0.3316, d4.loss_bbox: 0.5923, aux_task0.loss_heatmap: 0.4580, aux_task0.loss_bbox: 0.1824, aux_task1.loss_heatmap: 0.7516, aux_task1.loss_bbox: 0.2173, aux_task2.loss_heatmap: 0.7965, aux_task2.loss_bbox: 0.2474, aux_task3.loss_heatmap: 0.5322, aux_task3.loss_bbox: 0.2288, aux_task4.loss_heatmap: 0.7406, aux_task4.loss_bbox: 0.2140, aux_task5.loss_heatmap: 0.4011, aux_task5.loss_bbox: 0.2681, loss: 11.0647, grad_norm: 22.6331
2025-04-16 22:05:03,002 - mmdet - INFO - Epoch [17][1000/1104]	lr: 3.884e-05, eta: 0:57:38, time: 0.954, data_time: 0.008, memory: 14026, loss_cls: 0.3303, loss_bbox: 0.5675, d0.loss_cls: 0.4095, d0.loss_bbox: 0.7172, d1.loss_cls: 0.4028, d1.loss_bbox: 0.6590, d2.loss_cls: 0.4007, d2.loss_bbox: 0.6254, d3.loss_cls: 0.3559, d3.loss_bbox: 0.5996, d4.loss_cls: 0.3376, d4.loss_bbox: 0.5820, aux_task0.loss_heatmap: 0.4616, aux_task0.loss_bbox: 0.1804, aux_task1.loss_heatmap: 0.7765, aux_task1.loss_bbox: 0.2228, aux_task2.loss_heatmap: 0.7797, aux_task2.loss_bbox: 0.2586, aux_task3.loss_heatmap: 0.5443, aux_task3.loss_bbox: 0.2297, aux_task4.loss_heatmap: 0.7187, aux_task4.loss_bbox: 0.2049, aux_task5.loss_heatmap: 0.4023, aux_task5.loss_bbox: 0.2644, loss: 11.0314, grad_norm: 22.8217
2025-04-16 22:05:50,943 - mmdet - INFO - Epoch [17][1050/1104]	lr: 3.777e-05, eta: 0:56:46, time: 0.959, data_time: 0.008, memory: 14026, loss_cls: 0.3403, loss_bbox: 0.5735, d0.loss_cls: 0.4210, d0.loss_bbox: 0.7285, d1.loss_cls: 0.4158, d1.loss_bbox: 0.6689, d2.loss_cls: 0.4135, d2.loss_bbox: 0.6341, d3.loss_cls: 0.3673, d3.loss_bbox: 0.6083, d4.loss_cls: 0.3467, d4.loss_bbox: 0.5899, aux_task0.loss_heatmap: 0.4718, aux_task0.loss_bbox: 0.1874, aux_task1.loss_heatmap: 0.8087, aux_task1.loss_bbox: 0.2284, aux_task2.loss_heatmap: 0.7332, aux_task2.loss_bbox: 0.2436, aux_task3.loss_heatmap: 0.5824, aux_task3.loss_bbox: 0.2330, aux_task4.loss_heatmap: 0.6755, aux_task4.loss_bbox: 0.2123, aux_task5.loss_heatmap: 0.4258, aux_task5.loss_bbox: 0.2695, loss: 11.1792, grad_norm: 25.3667
2025-04-16 22:06:39,066 - mmdet - INFO - Epoch [17][1100/1104]	lr: 3.672e-05, eta: 0:55:55, time: 0.962, data_time: 0.008, memory: 14026, loss_cls: 0.3267, loss_bbox: 0.5647, d0.loss_cls: 0.4075, d0.loss_bbox: 0.7189, d1.loss_cls: 0.4039, d1.loss_bbox: 0.6603, d2.loss_cls: 0.4037, d2.loss_bbox: 0.6240, d3.loss_cls: 0.3547, d3.loss_bbox: 0.5975, d4.loss_cls: 0.3356, d4.loss_bbox: 0.5793, aux_task0.loss_heatmap: 0.4407, aux_task0.loss_bbox: 0.1818, aux_task1.loss_heatmap: 0.7657, aux_task1.loss_bbox: 0.2211, aux_task2.loss_heatmap: 0.8150, aux_task2.loss_bbox: 0.2672, aux_task3.loss_heatmap: 0.5362, aux_task3.loss_bbox: 0.2230, aux_task4.loss_heatmap: 0.7213, aux_task4.loss_bbox: 0.2231, aux_task5.loss_heatmap: 0.4085, aux_task5.loss_bbox: 0.2651, loss: 11.0454, grad_norm: 33.4075
2025-04-16 22:06:43,492 - mmdet - INFO - Saving checkpoint at 17 epochs
2025-04-16 22:18:33,134 - mmdet - INFO - Exp name: DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01.py
2025-04-16 22:18:33,134 - mmdet - INFO - Epoch(val) [17][3010]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.6264, pts_bbox_NuScenes/car_AP_dist_1.0: 0.7687, pts_bbox_NuScenes/car_AP_dist_2.0: 0.8260, pts_bbox_NuScenes/car_AP_dist_4.0: 0.8557, pts_bbox_NuScenes/car_trans_err: 0.2270, pts_bbox_NuScenes/car_scale_err: 0.1761, pts_bbox_NuScenes/car_orient_err: 0.1863, pts_bbox_NuScenes/car_vel_err: 0.4250, pts_bbox_NuScenes/car_attr_err: 0.2180, pts_bbox_NuScenes/mATE: 0.4088, pts_bbox_NuScenes/mASE: 0.2771, pts_bbox_NuScenes/mAOE: 0.5805, pts_bbox_NuScenes/mAVE: 0.5965, pts_bbox_NuScenes/mAAE: 0.2979, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.2120, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.4111, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.5367, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.5933, pts_bbox_NuScenes/truck_trans_err: 0.4620, pts_bbox_NuScenes/truck_scale_err: 0.2248, pts_bbox_NuScenes/truck_orient_err: 0.2148, pts_bbox_NuScenes/truck_vel_err: 0.4023, pts_bbox_NuScenes/truck_attr_err: 0.2452, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0035, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0916, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.2437, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.3583, pts_bbox_NuScenes/construction_vehicle_trans_err: 0.7614, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.4557, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.1435, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1333, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.3546, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.2262, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.5211, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.7101, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.7548, pts_bbox_NuScenes/bus_trans_err: 0.4878, pts_bbox_NuScenes/bus_scale_err: 0.2155, pts_bbox_NuScenes/bus_orient_err: 0.2089, pts_bbox_NuScenes/bus_vel_err: 1.0443, pts_bbox_NuScenes/bus_attr_err: 0.3119, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0660, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.2094, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.3640, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.4918, pts_bbox_NuScenes/trailer_trans_err: 0.6536, pts_bbox_NuScenes/trailer_scale_err: 0.2588, pts_bbox_NuScenes/trailer_orient_err: 0.7658, pts_bbox_NuScenes/trailer_vel_err: 0.3877, pts_bbox_NuScenes/trailer_attr_err: 0.1714, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.3353, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.5608, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.6759, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.7195, pts_bbox_NuScenes/barrier_trans_err: 0.4105, pts_bbox_NuScenes/barrier_scale_err: 0.2756, pts_bbox_NuScenes/barrier_orient_err: 0.1137, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.3654, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.4627, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.4941, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.5258, pts_bbox_NuScenes/motorcycle_trans_err: 0.2875, pts_bbox_NuScenes/motorcycle_scale_err: 0.2477, pts_bbox_NuScenes/motorcycle_orient_err: 0.4681, pts_bbox_NuScenes/motorcycle_vel_err: 1.0113, pts_bbox_NuScenes/motorcycle_attr_err: 0.2627, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.2844, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.3185, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.3303, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.3415, pts_bbox_NuScenes/bicycle_trans_err: 0.2224, pts_bbox_NuScenes/bicycle_scale_err: 0.2694, pts_bbox_NuScenes/bicycle_orient_err: 0.7460, pts_bbox_NuScenes/bicycle_vel_err: 0.3776, pts_bbox_NuScenes/bicycle_attr_err: 0.0168, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.5302, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.7280, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.7771, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.8038, pts_bbox_NuScenes/pedestrian_trans_err: 0.3589, pts_bbox_NuScenes/pedestrian_scale_err: 0.2833, pts_bbox_NuScenes/pedestrian_orient_err: 1.3774, pts_bbox_NuScenes/pedestrian_vel_err: 0.9908, pts_bbox_NuScenes/pedestrian_attr_err: 0.8025, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.5133, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.5652, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.6116, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.6573, pts_bbox_NuScenes/traffic_cone_trans_err: 0.2172, pts_bbox_NuScenes/traffic_cone_scale_err: 0.3642, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.5273, pts_bbox_NuScenes/mAP: 0.4868
2025-04-16 22:18:34,150 - mmdet - INFO - No ObjectSample now!
2025-04-16 22:19:24,981 - mmdet - INFO - Epoch [18][50/1104]	lr: 3.559e-05, eta: 0:54:59, time: 1.017, data_time: 0.070, memory: 14026, loss_cls: 0.3287, loss_bbox: 0.5637, d0.loss_cls: 0.4052, d0.loss_bbox: 0.7176, d1.loss_cls: 0.4011, d1.loss_bbox: 0.6566, d2.loss_cls: 0.4005, d2.loss_bbox: 0.6193, d3.loss_cls: 0.3550, d3.loss_bbox: 0.5955, d4.loss_cls: 0.3353, d4.loss_bbox: 0.5797, aux_task0.loss_heatmap: 0.4547, aux_task0.loss_bbox: 0.1783, aux_task1.loss_heatmap: 0.7965, aux_task1.loss_bbox: 0.2227, aux_task2.loss_heatmap: 0.7518, aux_task2.loss_bbox: 0.2406, aux_task3.loss_heatmap: 0.5176, aux_task3.loss_bbox: 0.2218, aux_task4.loss_heatmap: 0.7872, aux_task4.loss_bbox: 0.2154, aux_task5.loss_heatmap: 0.3959, aux_task5.loss_bbox: 0.2658, loss: 11.0065, grad_norm: 23.8085
2025-04-16 22:20:12,785 - mmdet - INFO - Epoch [18][100/1104]	lr: 3.456e-05, eta: 0:54:07, time: 0.956, data_time: 0.008, memory: 14026, loss_cls: 0.3202, loss_bbox: 0.5667, d0.loss_cls: 0.3984, d0.loss_bbox: 0.7193, d1.loss_cls: 0.3947, d1.loss_bbox: 0.6584, d2.loss_cls: 0.3914, d2.loss_bbox: 0.6260, d3.loss_cls: 0.3468, d3.loss_bbox: 0.6008, d4.loss_cls: 0.3300, d4.loss_bbox: 0.5826, aux_task0.loss_heatmap: 0.4490, aux_task0.loss_bbox: 0.1773, aux_task1.loss_heatmap: 0.7339, aux_task1.loss_bbox: 0.2173, aux_task2.loss_heatmap: 0.7630, aux_task2.loss_bbox: 0.2574, aux_task3.loss_heatmap: 0.5265, aux_task3.loss_bbox: 0.2448, aux_task4.loss_heatmap: 0.7052, aux_task4.loss_bbox: 0.2240, aux_task5.loss_heatmap: 0.3767, aux_task5.loss_bbox: 0.2621, loss: 10.8726, grad_norm: 25.6847
2025-04-16 22:21:00,453 - mmdet - INFO - Epoch [18][150/1104]	lr: 3.355e-05, eta: 0:53:16, time: 0.953, data_time: 0.008, memory: 14026, loss_cls: 0.3388, loss_bbox: 0.5740, d0.loss_cls: 0.4250, d0.loss_bbox: 0.7344, d1.loss_cls: 0.4183, d1.loss_bbox: 0.6751, d2.loss_cls: 0.4161, d2.loss_bbox: 0.6410, d3.loss_cls: 0.3670, d3.loss_bbox: 0.6101, d4.loss_cls: 0.3486, d4.loss_bbox: 0.5900, aux_task0.loss_heatmap: 0.4669, aux_task0.loss_bbox: 0.1842, aux_task1.loss_heatmap: 0.7609, aux_task1.loss_bbox: 0.2252, aux_task2.loss_heatmap: 0.7200, aux_task2.loss_bbox: 0.2545, aux_task3.loss_heatmap: 0.5624, aux_task3.loss_bbox: 0.2221, aux_task4.loss_heatmap: 0.7307, aux_task4.loss_bbox: 0.2242, aux_task5.loss_heatmap: 0.4396, aux_task5.loss_bbox: 0.2659, loss: 11.1948, grad_norm: 44.4014
2025-04-16 22:21:48,430 - mmdet - INFO - Epoch [18][200/1104]	lr: 3.254e-05, eta: 0:52:25, time: 0.960, data_time: 0.008, memory: 14026, loss_cls: 0.3195, loss_bbox: 0.5587, d0.loss_cls: 0.3995, d0.loss_bbox: 0.7062, d1.loss_cls: 0.3939, d1.loss_bbox: 0.6493, d2.loss_cls: 0.3924, d2.loss_bbox: 0.6132, d3.loss_cls: 0.3435, d3.loss_bbox: 0.5890, d4.loss_cls: 0.3251, d4.loss_bbox: 0.5742, aux_task0.loss_heatmap: 0.4398, aux_task0.loss_bbox: 0.1760, aux_task1.loss_heatmap: 0.7741, aux_task1.loss_bbox: 0.2236, aux_task2.loss_heatmap: 0.7277, aux_task2.loss_bbox: 0.2405, aux_task3.loss_heatmap: 0.5919, aux_task3.loss_bbox: 0.2235, aux_task4.loss_heatmap: 0.6595, aux_task4.loss_bbox: 0.2018, aux_task5.loss_heatmap: 0.4001, aux_task5.loss_bbox: 0.2642, loss: 10.7873, grad_norm: 25.6987
2025-04-16 22:22:36,419 - mmdet - INFO - Epoch [18][250/1104]	lr: 3.155e-05, eta: 0:51:33, time: 0.960, data_time: 0.007, memory: 14026, loss_cls: 0.3207, loss_bbox: 0.5611, d0.loss_cls: 0.4037, d0.loss_bbox: 0.7164, d1.loss_cls: 0.3984, d1.loss_bbox: 0.6565, d2.loss_cls: 0.3955, d2.loss_bbox: 0.6202, d3.loss_cls: 0.3474, d3.loss_bbox: 0.5963, d4.loss_cls: 0.3286, d4.loss_bbox: 0.5779, aux_task0.loss_heatmap: 0.4516, aux_task0.loss_bbox: 0.1779, aux_task1.loss_heatmap: 0.7643, aux_task1.loss_bbox: 0.2279, aux_task2.loss_heatmap: 0.7170, aux_task2.loss_bbox: 0.2429, aux_task3.loss_heatmap: 0.5298, aux_task3.loss_bbox: 0.2159, aux_task4.loss_heatmap: 0.7285, aux_task4.loss_bbox: 0.2115, aux_task5.loss_heatmap: 0.3950, aux_task5.loss_bbox: 0.2660, loss: 10.8511, grad_norm: 44.1428
2025-04-16 22:23:24,325 - mmdet - INFO - Epoch [18][300/1104]	lr: 3.057e-05, eta: 0:50:42, time: 0.958, data_time: 0.008, memory: 14026, loss_cls: 0.3154, loss_bbox: 0.5577, d0.loss_cls: 0.3988, d0.loss_bbox: 0.7110, d1.loss_cls: 0.3936, d1.loss_bbox: 0.6507, d2.loss_cls: 0.3902, d2.loss_bbox: 0.6176, d3.loss_cls: 0.3434, d3.loss_bbox: 0.5913, d4.loss_cls: 0.3247, d4.loss_bbox: 0.5724, aux_task0.loss_heatmap: 0.4495, aux_task0.loss_bbox: 0.1816, aux_task1.loss_heatmap: 0.7274, aux_task1.loss_bbox: 0.2153, aux_task2.loss_heatmap: 0.8031, aux_task2.loss_bbox: 0.2532, aux_task3.loss_heatmap: 0.5212, aux_task3.loss_bbox: 0.2189, aux_task4.loss_heatmap: 0.7163, aux_task4.loss_bbox: 0.2259, aux_task5.loss_heatmap: 0.4050, aux_task5.loss_bbox: 0.2633, loss: 10.8476, grad_norm: 23.0166
2025-04-16 22:24:12,101 - mmdet - INFO - Epoch [18][350/1104]	lr: 2.961e-05, eta: 0:49:51, time: 0.956, data_time: 0.008, memory: 14026, loss_cls: 0.3314, loss_bbox: 0.5571, d0.loss_cls: 0.4164, d0.loss_bbox: 0.7123, d1.loss_cls: 0.4119, d1.loss_bbox: 0.6481, d2.loss_cls: 0.4093, d2.loss_bbox: 0.6165, d3.loss_cls: 0.3595, d3.loss_bbox: 0.5925, d4.loss_cls: 0.3424, d4.loss_bbox: 0.5726, aux_task0.loss_heatmap: 0.4532, aux_task0.loss_bbox: 0.1794, aux_task1.loss_heatmap: 0.7837, aux_task1.loss_bbox: 0.2221, aux_task2.loss_heatmap: 0.7317, aux_task2.loss_bbox: 0.2410, aux_task3.loss_heatmap: 0.5387, aux_task3.loss_bbox: 0.2142, aux_task4.loss_heatmap: 0.7286, aux_task4.loss_bbox: 0.2201, aux_task5.loss_heatmap: 0.4298, aux_task5.loss_bbox: 0.2681, loss: 10.9806, grad_norm: 23.5311
2025-04-16 22:25:00,326 - mmdet - INFO - Epoch [18][400/1104]	lr: 2.866e-05, eta: 0:49:00, time: 0.964, data_time: 0.008, memory: 14026, loss_cls: 0.3124, loss_bbox: 0.5493, d0.loss_cls: 0.3964, d0.loss_bbox: 0.7004, d1.loss_cls: 0.3924, d1.loss_bbox: 0.6403, d2.loss_cls: 0.3892, d2.loss_bbox: 0.6054, d3.loss_cls: 0.3360, d3.loss_bbox: 0.5824, d4.loss_cls: 0.3187, d4.loss_bbox: 0.5667, aux_task0.loss_heatmap: 0.4454, aux_task0.loss_bbox: 0.1773, aux_task1.loss_heatmap: 0.7671, aux_task1.loss_bbox: 0.2263, aux_task2.loss_heatmap: 0.7563, aux_task2.loss_bbox: 0.2393, aux_task3.loss_heatmap: 0.5129, aux_task3.loss_bbox: 0.2050, aux_task4.loss_heatmap: 0.7706, aux_task4.loss_bbox: 0.2175, aux_task5.loss_heatmap: 0.3914, aux_task5.loss_bbox: 0.2637, loss: 10.7622, grad_norm: 28.5243
2025-04-16 22:25:48,160 - mmdet - INFO - Epoch [18][450/1104]	lr: 2.772e-05, eta: 0:48:08, time: 0.957, data_time: 0.008, memory: 14026, loss_cls: 0.3259, loss_bbox: 0.5654, d0.loss_cls: 0.4100, d0.loss_bbox: 0.7259, d1.loss_cls: 0.4029, d1.loss_bbox: 0.6627, d2.loss_cls: 0.3985, d2.loss_bbox: 0.6295, d3.loss_cls: 0.3531, d3.loss_bbox: 0.6026, d4.loss_cls: 0.3340, d4.loss_bbox: 0.5816, aux_task0.loss_heatmap: 0.4784, aux_task0.loss_bbox: 0.1845, aux_task1.loss_heatmap: 0.7934, aux_task1.loss_bbox: 0.2220, aux_task2.loss_heatmap: 0.6864, aux_task2.loss_bbox: 0.2423, aux_task3.loss_heatmap: 0.5932, aux_task3.loss_bbox: 0.2425, aux_task4.loss_heatmap: 0.7554, aux_task4.loss_bbox: 0.2179, aux_task5.loss_heatmap: 0.3996, aux_task5.loss_bbox: 0.2605, loss: 11.0680, grad_norm: 25.6831
2025-04-16 22:26:36,154 - mmdet - INFO - Epoch [18][500/1104]	lr: 2.680e-05, eta: 0:47:17, time: 0.960, data_time: 0.008, memory: 14026, loss_cls: 0.3201, loss_bbox: 0.5608, d0.loss_cls: 0.4010, d0.loss_bbox: 0.7139, d1.loss_cls: 0.3947, d1.loss_bbox: 0.6536, d2.loss_cls: 0.3931, d2.loss_bbox: 0.6178, d3.loss_cls: 0.3469, d3.loss_bbox: 0.5955, d4.loss_cls: 0.3296, d4.loss_bbox: 0.5784, aux_task0.loss_heatmap: 0.4461, aux_task0.loss_bbox: 0.1755, aux_task1.loss_heatmap: 0.7488, aux_task1.loss_bbox: 0.2182, aux_task2.loss_heatmap: 0.7152, aux_task2.loss_bbox: 0.2438, aux_task3.loss_heatmap: 0.5480, aux_task3.loss_bbox: 0.2345, aux_task4.loss_heatmap: 0.6890, aux_task4.loss_bbox: 0.2216, aux_task5.loss_heatmap: 0.4130, aux_task5.loss_bbox: 0.2669, loss: 10.8261, grad_norm: 75.3338
2025-04-16 22:27:23,861 - mmdet - INFO - Epoch [18][550/1104]	lr: 2.589e-05, eta: 0:46:26, time: 0.954, data_time: 0.007, memory: 14026, loss_cls: 0.3181, loss_bbox: 0.5603, d0.loss_cls: 0.3960, d0.loss_bbox: 0.7159, d1.loss_cls: 0.3894, d1.loss_bbox: 0.6541, d2.loss_cls: 0.3894, d2.loss_bbox: 0.6198, d3.loss_cls: 0.3426, d3.loss_bbox: 0.5975, d4.loss_cls: 0.3263, d4.loss_bbox: 0.5767, aux_task0.loss_heatmap: 0.4545, aux_task0.loss_bbox: 0.1793, aux_task1.loss_heatmap: 0.7783, aux_task1.loss_bbox: 0.2311, aux_task2.loss_heatmap: 0.7070, aux_task2.loss_bbox: 0.2327, aux_task3.loss_heatmap: 0.4898, aux_task3.loss_bbox: 0.2304, aux_task4.loss_heatmap: 0.6802, aux_task4.loss_bbox: 0.2155, aux_task5.loss_heatmap: 0.3948, aux_task5.loss_bbox: 0.2612, loss: 10.7408, grad_norm: 89.5451
2025-04-16 22:28:11,705 - mmdet - INFO - Epoch [18][600/1104]	lr: 2.499e-05, eta: 0:45:35, time: 0.957, data_time: 0.008, memory: 14026, loss_cls: 0.3225, loss_bbox: 0.5535, d0.loss_cls: 0.4011, d0.loss_bbox: 0.7073, d1.loss_cls: 0.3958, d1.loss_bbox: 0.6480, d2.loss_cls: 0.3944, d2.loss_bbox: 0.6121, d3.loss_cls: 0.3454, d3.loss_bbox: 0.5906, d4.loss_cls: 0.3296, d4.loss_bbox: 0.5720, aux_task0.loss_heatmap: 0.4484, aux_task0.loss_bbox: 0.1821, aux_task1.loss_heatmap: 0.7674, aux_task1.loss_bbox: 0.2182, aux_task2.loss_heatmap: 0.7054, aux_task2.loss_bbox: 0.2426, aux_task3.loss_heatmap: 0.5084, aux_task3.loss_bbox: 0.2235, aux_task4.loss_heatmap: 0.7291, aux_task4.loss_bbox: 0.2195, aux_task5.loss_heatmap: 0.4073, aux_task5.loss_bbox: 0.2610, loss: 10.7853, grad_norm: 28.1979
2025-04-16 22:28:59,844 - mmdet - INFO - Epoch [18][650/1104]	lr: 2.411e-05, eta: 0:44:44, time: 0.963, data_time: 0.008, memory: 14026, loss_cls: 0.3050, loss_bbox: 0.5423, d0.loss_cls: 0.3836, d0.loss_bbox: 0.6973, d1.loss_cls: 0.3761, d1.loss_bbox: 0.6359, d2.loss_cls: 0.3740, d2.loss_bbox: 0.6053, d3.loss_cls: 0.3291, d3.loss_bbox: 0.5800, d4.loss_cls: 0.3115, d4.loss_bbox: 0.5623, aux_task0.loss_heatmap: 0.4517, aux_task0.loss_bbox: 0.1763, aux_task1.loss_heatmap: 0.7686, aux_task1.loss_bbox: 0.2212, aux_task2.loss_heatmap: 0.6951, aux_task2.loss_bbox: 0.2320, aux_task3.loss_heatmap: 0.5691, aux_task3.loss_bbox: 0.2510, aux_task4.loss_heatmap: 0.8131, aux_task4.loss_bbox: 0.2173, aux_task5.loss_heatmap: 0.3786, aux_task5.loss_bbox: 0.2648, loss: 10.7410, grad_norm: 23.5884
2025-04-16 22:29:47,765 - mmdet - INFO - Epoch [18][700/1104]	lr: 2.324e-05, eta: 0:43:53, time: 0.958, data_time: 0.008, memory: 14026, loss_cls: 0.3233, loss_bbox: 0.5434, d0.loss_cls: 0.4040, d0.loss_bbox: 0.6996, d1.loss_cls: 0.3978, d1.loss_bbox: 0.6362, d2.loss_cls: 0.3956, d2.loss_bbox: 0.6027, d3.loss_cls: 0.3495, d3.loss_bbox: 0.5772, d4.loss_cls: 0.3310, d4.loss_bbox: 0.5599, aux_task0.loss_heatmap: 0.4478, aux_task0.loss_bbox: 0.1795, aux_task1.loss_heatmap: 0.7319, aux_task1.loss_bbox: 0.2109, aux_task2.loss_heatmap: 0.7488, aux_task2.loss_bbox: 0.2499, aux_task3.loss_heatmap: 0.5512, aux_task3.loss_bbox: 0.2174, aux_task4.loss_heatmap: 0.6154, aux_task4.loss_bbox: 0.1962, aux_task5.loss_heatmap: 0.4103, aux_task5.loss_bbox: 0.2660, loss: 10.6455, grad_norm: 21.9215
2025-04-16 22:30:35,983 - mmdet - INFO - Epoch [18][750/1104]	lr: 2.239e-05, eta: 0:43:02, time: 0.964, data_time: 0.009, memory: 14026, loss_cls: 0.3141, loss_bbox: 0.5427, d0.loss_cls: 0.3917, d0.loss_bbox: 0.6941, d1.loss_cls: 0.3856, d1.loss_bbox: 0.6314, d2.loss_cls: 0.3855, d2.loss_bbox: 0.5949, d3.loss_cls: 0.3415, d3.loss_bbox: 0.5733, d4.loss_cls: 0.3230, d4.loss_bbox: 0.5589, aux_task0.loss_heatmap: 0.4438, aux_task0.loss_bbox: 0.1827, aux_task1.loss_heatmap: 0.7573, aux_task1.loss_bbox: 0.2213, aux_task2.loss_heatmap: 0.7054, aux_task2.loss_bbox: 0.2459, aux_task3.loss_heatmap: 0.5462, aux_task3.loss_bbox: 0.2264, aux_task4.loss_heatmap: 0.7531, aux_task4.loss_bbox: 0.2025, aux_task5.loss_heatmap: 0.3967, aux_task5.loss_bbox: 0.2610, loss: 10.6792, grad_norm: 22.5048
2025-04-16 22:31:24,054 - mmdet - INFO - Epoch [18][800/1104]	lr: 2.155e-05, eta: 0:42:11, time: 0.961, data_time: 0.007, memory: 14026, loss_cls: 0.3238, loss_bbox: 0.5552, d0.loss_cls: 0.4021, d0.loss_bbox: 0.7108, d1.loss_cls: 0.3969, d1.loss_bbox: 0.6493, d2.loss_cls: 0.3962, d2.loss_bbox: 0.6145, d3.loss_cls: 0.3494, d3.loss_bbox: 0.5894, d4.loss_cls: 0.3314, d4.loss_bbox: 0.5717, aux_task0.loss_heatmap: 0.4632, aux_task0.loss_bbox: 0.1813, aux_task1.loss_heatmap: 0.7360, aux_task1.loss_bbox: 0.2172, aux_task2.loss_heatmap: 0.7178, aux_task2.loss_bbox: 0.2667, aux_task3.loss_heatmap: 0.6111, aux_task3.loss_bbox: 0.2397, aux_task4.loss_heatmap: 0.6136, aux_task4.loss_bbox: 0.1923, aux_task5.loss_heatmap: 0.4033, aux_task5.loss_bbox: 0.2607, loss: 10.7937, grad_norm: 22.1455
2025-04-16 22:32:13,776 - mmdet - INFO - Epoch [18][850/1104]	lr: 2.072e-05, eta: 0:41:21, time: 0.994, data_time: 0.010, memory: 14026, loss_cls: 0.3194, loss_bbox: 0.5467, d0.loss_cls: 0.4039, d0.loss_bbox: 0.7001, d1.loss_cls: 0.3980, d1.loss_bbox: 0.6377, d2.loss_cls: 0.3958, d2.loss_bbox: 0.6027, d3.loss_cls: 0.3459, d3.loss_bbox: 0.5803, d4.loss_cls: 0.3283, d4.loss_bbox: 0.5621, aux_task0.loss_heatmap: 0.4378, aux_task0.loss_bbox: 0.1769, aux_task1.loss_heatmap: 0.7496, aux_task1.loss_bbox: 0.2199, aux_task2.loss_heatmap: 0.7202, aux_task2.loss_bbox: 0.2528, aux_task3.loss_heatmap: 0.5744, aux_task3.loss_bbox: 0.2293, aux_task4.loss_heatmap: 0.6970, aux_task4.loss_bbox: 0.2188, aux_task5.loss_heatmap: 0.4063, aux_task5.loss_bbox: 0.2616, loss: 10.7656, grad_norm: 24.5439
2025-04-16 22:33:01,774 - mmdet - INFO - Epoch [18][900/1104]	lr: 1.991e-05, eta: 0:40:30, time: 0.960, data_time: 0.008, memory: 14026, loss_cls: 0.3193, loss_bbox: 0.5504, d0.loss_cls: 0.4041, d0.loss_bbox: 0.7065, d1.loss_cls: 0.3988, d1.loss_bbox: 0.6456, d2.loss_cls: 0.3958, d2.loss_bbox: 0.6106, d3.loss_cls: 0.3452, d3.loss_bbox: 0.5895, d4.loss_cls: 0.3272, d4.loss_bbox: 0.5679, aux_task0.loss_heatmap: 0.4580, aux_task0.loss_bbox: 0.1806, aux_task1.loss_heatmap: 0.7871, aux_task1.loss_bbox: 0.2296, aux_task2.loss_heatmap: 0.7036, aux_task2.loss_bbox: 0.2297, aux_task3.loss_heatmap: 0.5366, aux_task3.loss_bbox: 0.2230, aux_task4.loss_heatmap: 0.7076, aux_task4.loss_bbox: 0.2085, aux_task5.loss_heatmap: 0.4103, aux_task5.loss_bbox: 0.2636, loss: 10.7991, grad_norm: 28.4512
2025-04-16 22:33:49,671 - mmdet - INFO - Epoch [18][950/1104]	lr: 1.912e-05, eta: 0:39:39, time: 0.958, data_time: 0.009, memory: 14026, loss_cls: 0.3204, loss_bbox: 0.5587, d0.loss_cls: 0.4045, d0.loss_bbox: 0.7110, d1.loss_cls: 0.3981, d1.loss_bbox: 0.6498, d2.loss_cls: 0.3970, d2.loss_bbox: 0.6159, d3.loss_cls: 0.3473, d3.loss_bbox: 0.5899, d4.loss_cls: 0.3290, d4.loss_bbox: 0.5741, aux_task0.loss_heatmap: 0.4392, aux_task0.loss_bbox: 0.1786, aux_task1.loss_heatmap: 0.8192, aux_task1.loss_bbox: 0.2257, aux_task2.loss_heatmap: 0.7351, aux_task2.loss_bbox: 0.2287, aux_task3.loss_heatmap: 0.5493, aux_task3.loss_bbox: 0.2520, aux_task4.loss_heatmap: 0.6849, aux_task4.loss_bbox: 0.2070, aux_task5.loss_heatmap: 0.3826, aux_task5.loss_bbox: 0.2633, loss: 10.8612, grad_norm: 24.6627
2025-04-16 22:34:37,787 - mmdet - INFO - Epoch [18][1000/1104]	lr: 1.834e-05, eta: 0:38:48, time: 0.962, data_time: 0.008, memory: 14026, loss_cls: 0.3172, loss_bbox: 0.5490, d0.loss_cls: 0.3975, d0.loss_bbox: 0.7029, d1.loss_cls: 0.3895, d1.loss_bbox: 0.6428, d2.loss_cls: 0.3880, d2.loss_bbox: 0.6087, d3.loss_cls: 0.3409, d3.loss_bbox: 0.5846, d4.loss_cls: 0.3225, d4.loss_bbox: 0.5656, aux_task0.loss_heatmap: 0.4450, aux_task0.loss_bbox: 0.1794, aux_task1.loss_heatmap: 0.7548, aux_task1.loss_bbox: 0.2244, aux_task2.loss_heatmap: 0.7243, aux_task2.loss_bbox: 0.2388, aux_task3.loss_heatmap: 0.5200, aux_task3.loss_bbox: 0.2316, aux_task4.loss_heatmap: 0.6282, aux_task4.loss_bbox: 0.2010, aux_task5.loss_heatmap: 0.3864, aux_task5.loss_bbox: 0.2636, loss: 10.6070, grad_norm: 97.6491
2025-04-16 22:35:25,635 - mmdet - INFO - Epoch [18][1050/1104]	lr: 1.757e-05, eta: 0:37:57, time: 0.957, data_time: 0.008, memory: 14026, loss_cls: 0.3178, loss_bbox: 0.5469, d0.loss_cls: 0.3945, d0.loss_bbox: 0.7036, d1.loss_cls: 0.3889, d1.loss_bbox: 0.6427, d2.loss_cls: 0.3876, d2.loss_bbox: 0.6050, d3.loss_cls: 0.3402, d3.loss_bbox: 0.5834, d4.loss_cls: 0.3243, d4.loss_bbox: 0.5642, aux_task0.loss_heatmap: 0.4246, aux_task0.loss_bbox: 0.1760, aux_task1.loss_heatmap: 0.7722, aux_task1.loss_bbox: 0.2231, aux_task2.loss_heatmap: 0.7331, aux_task2.loss_bbox: 0.2389, aux_task3.loss_heatmap: 0.4907, aux_task3.loss_bbox: 0.2406, aux_task4.loss_heatmap: 0.6591, aux_task4.loss_bbox: 0.2089, aux_task5.loss_heatmap: 0.3847, aux_task5.loss_bbox: 0.2634, loss: 10.6145, grad_norm: 22.1811
2025-04-16 22:36:13,561 - mmdet - INFO - Epoch [18][1100/1104]	lr: 1.682e-05, eta: 0:37:06, time: 0.959, data_time: 0.008, memory: 14026, loss_cls: 0.3209, loss_bbox: 0.5529, d0.loss_cls: 0.4047, d0.loss_bbox: 0.7105, d1.loss_cls: 0.3990, d1.loss_bbox: 0.6498, d2.loss_cls: 0.3970, d2.loss_bbox: 0.6134, d3.loss_cls: 0.3479, d3.loss_bbox: 0.5887, d4.loss_cls: 0.3292, d4.loss_bbox: 0.5702, aux_task0.loss_heatmap: 0.4548, aux_task0.loss_bbox: 0.1772, aux_task1.loss_heatmap: 0.7177, aux_task1.loss_bbox: 0.2157, aux_task2.loss_heatmap: 0.7466, aux_task2.loss_bbox: 0.2499, aux_task3.loss_heatmap: 0.6216, aux_task3.loss_bbox: 0.2248, aux_task4.loss_heatmap: 0.6548, aux_task4.loss_bbox: 0.2181, aux_task5.loss_heatmap: 0.3862, aux_task5.loss_bbox: 0.2619, loss: 10.8135, grad_norm: 26.3979
2025-04-16 22:36:17,906 - mmdet - INFO - Saving checkpoint at 18 epochs
2025-04-16 22:47:51,972 - mmdet - INFO - Exp name: DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01.py
2025-04-16 22:47:51,972 - mmdet - INFO - Epoch(val) [18][3010]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.6386, pts_bbox_NuScenes/car_AP_dist_1.0: 0.7740, pts_bbox_NuScenes/car_AP_dist_2.0: 0.8296, pts_bbox_NuScenes/car_AP_dist_4.0: 0.8604, pts_bbox_NuScenes/car_trans_err: 0.2178, pts_bbox_NuScenes/car_scale_err: 0.1634, pts_bbox_NuScenes/car_orient_err: 0.1745, pts_bbox_NuScenes/car_vel_err: 0.3668, pts_bbox_NuScenes/car_attr_err: 0.2209, pts_bbox_NuScenes/mATE: 0.4055, pts_bbox_NuScenes/mASE: 0.2761, pts_bbox_NuScenes/mAOE: 0.5800, pts_bbox_NuScenes/mAVE: 0.5509, pts_bbox_NuScenes/mAAE: 0.2995, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.2432, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.4346, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.5507, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.6019, pts_bbox_NuScenes/truck_trans_err: 0.4367, pts_bbox_NuScenes/truck_scale_err: 0.2175, pts_bbox_NuScenes/truck_orient_err: 0.2079, pts_bbox_NuScenes/truck_vel_err: 0.3805, pts_bbox_NuScenes/truck_attr_err: 0.2450, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0026, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0819, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.2377, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.3499, pts_bbox_NuScenes/construction_vehicle_trans_err: 0.7769, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.4610, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.1091, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1355, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.3629, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.2299, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.5011, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.6896, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.7472, pts_bbox_NuScenes/bus_trans_err: 0.4890, pts_bbox_NuScenes/bus_scale_err: 0.2249, pts_bbox_NuScenes/bus_orient_err: 0.2232, pts_bbox_NuScenes/bus_vel_err: 1.0655, pts_bbox_NuScenes/bus_attr_err: 0.3064, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0579, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.2139, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.3776, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.5127, pts_bbox_NuScenes/trailer_trans_err: 0.6670, pts_bbox_NuScenes/trailer_scale_err: 0.2526, pts_bbox_NuScenes/trailer_orient_err: 0.7549, pts_bbox_NuScenes/trailer_vel_err: 0.3235, pts_bbox_NuScenes/trailer_attr_err: 0.1878, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.3501, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.5712, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.6887, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.7338, pts_bbox_NuScenes/barrier_trans_err: 0.3925, pts_bbox_NuScenes/barrier_scale_err: 0.2740, pts_bbox_NuScenes/barrier_orient_err: 0.1071, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.3943, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.4973, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.5283, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.5575, pts_bbox_NuScenes/motorcycle_trans_err: 0.2845, pts_bbox_NuScenes/motorcycle_scale_err: 0.2519, pts_bbox_NuScenes/motorcycle_orient_err: 0.5058, pts_bbox_NuScenes/motorcycle_vel_err: 0.8150, pts_bbox_NuScenes/motorcycle_attr_err: 0.2697, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.3061, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.3390, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.3576, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.3691, pts_bbox_NuScenes/bicycle_trans_err: 0.2317, pts_bbox_NuScenes/bicycle_scale_err: 0.2758, pts_bbox_NuScenes/bicycle_orient_err: 0.7477, pts_bbox_NuScenes/bicycle_vel_err: 0.3454, pts_bbox_NuScenes/bicycle_attr_err: 0.0131, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.5488, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.7467, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.7913, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.8161, pts_bbox_NuScenes/pedestrian_trans_err: 0.3509, pts_bbox_NuScenes/pedestrian_scale_err: 0.2853, pts_bbox_NuScenes/pedestrian_orient_err: 1.3900, pts_bbox_NuScenes/pedestrian_vel_err: 0.9747, pts_bbox_NuScenes/pedestrian_attr_err: 0.7900, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.5416, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.5949, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.6376, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.6804, pts_bbox_NuScenes/traffic_cone_trans_err: 0.2075, pts_bbox_NuScenes/traffic_cone_scale_err: 0.3548, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.5386, pts_bbox_NuScenes/mAP: 0.4996
2025-04-16 22:47:53,016 - mmdet - INFO - No ObjectSample now!
2025-04-16 22:48:43,392 - mmdet - INFO - Epoch [19][50/1104]	lr: 1.603e-05, eta: 0:36:11, time: 1.007, data_time: 0.067, memory: 14026, loss_cls: 0.3158, loss_bbox: 0.5365, d0.loss_cls: 0.3981, d0.loss_bbox: 0.6940, d1.loss_cls: 0.3894, d1.loss_bbox: 0.6328, d2.loss_cls: 0.3868, d2.loss_bbox: 0.5962, d3.loss_cls: 0.3395, d3.loss_bbox: 0.5712, d4.loss_cls: 0.3243, d4.loss_bbox: 0.5509, aux_task0.loss_heatmap: 0.4322, aux_task0.loss_bbox: 0.1725, aux_task1.loss_heatmap: 0.7098, aux_task1.loss_bbox: 0.2109, aux_task2.loss_heatmap: 0.6860, aux_task2.loss_bbox: 0.2343, aux_task3.loss_heatmap: 0.5545, aux_task3.loss_bbox: 0.2136, aux_task4.loss_heatmap: 0.7059, aux_task4.loss_bbox: 0.2127, aux_task5.loss_heatmap: 0.4136, aux_task5.loss_bbox: 0.2620, loss: 10.5436, grad_norm: 25.8020
2025-04-16 22:49:31,073 - mmdet - INFO - Epoch [19][100/1104]	lr: 1.531e-05, eta: 0:35:20, time: 0.954, data_time: 0.008, memory: 14026, loss_cls: 0.3184, loss_bbox: 0.5581, d0.loss_cls: 0.4012, d0.loss_bbox: 0.7135, d1.loss_cls: 0.3963, d1.loss_bbox: 0.6549, d2.loss_cls: 0.3948, d2.loss_bbox: 0.6159, d3.loss_cls: 0.3468, d3.loss_bbox: 0.5923, d4.loss_cls: 0.3274, d4.loss_bbox: 0.5732, aux_task0.loss_heatmap: 0.4351, aux_task0.loss_bbox: 0.1771, aux_task1.loss_heatmap: 0.7964, aux_task1.loss_bbox: 0.2246, aux_task2.loss_heatmap: 0.7129, aux_task2.loss_bbox: 0.2489, aux_task3.loss_heatmap: 0.5704, aux_task3.loss_bbox: 0.2177, aux_task4.loss_heatmap: 0.7280, aux_task4.loss_bbox: 0.2247, aux_task5.loss_heatmap: 0.3857, aux_task5.loss_bbox: 0.2601, loss: 10.8745, grad_norm: 23.1376
2025-04-16 22:50:26,669 - mmdet - INFO - Epoch [19][150/1104]	lr: 1.461e-05, eta: 0:34:31, time: 1.112, data_time: 0.009, memory: 14026, loss_cls: 0.3143, loss_bbox: 0.5570, d0.loss_cls: 0.4012, d0.loss_bbox: 0.7063, d1.loss_cls: 0.3928, d1.loss_bbox: 0.6463, d2.loss_cls: 0.3908, d2.loss_bbox: 0.6132, d3.loss_cls: 0.3415, d3.loss_bbox: 0.5916, d4.loss_cls: 0.3229, d4.loss_bbox: 0.5726, aux_task0.loss_heatmap: 0.4492, aux_task0.loss_bbox: 0.1787, aux_task1.loss_heatmap: 0.7644, aux_task1.loss_bbox: 0.2189, aux_task2.loss_heatmap: 0.8150, aux_task2.loss_bbox: 0.2397, aux_task3.loss_heatmap: 0.5495, aux_task3.loss_bbox: 0.2321, aux_task4.loss_heatmap: 0.7270, aux_task4.loss_bbox: 0.2118, aux_task5.loss_heatmap: 0.3864, aux_task5.loss_bbox: 0.2661, loss: 10.8896, grad_norm: 22.4225
2025-04-16 22:51:14,450 - mmdet - INFO - Epoch [19][200/1104]	lr: 1.392e-05, eta: 0:33:40, time: 0.956, data_time: 0.007, memory: 14026, loss_cls: 0.3132, loss_bbox: 0.5598, d0.loss_cls: 0.3923, d0.loss_bbox: 0.7076, d1.loss_cls: 0.3861, d1.loss_bbox: 0.6498, d2.loss_cls: 0.3833, d2.loss_bbox: 0.6184, d3.loss_cls: 0.3389, d3.loss_bbox: 0.5942, d4.loss_cls: 0.3200, d4.loss_bbox: 0.5770, aux_task0.loss_heatmap: 0.4575, aux_task0.loss_bbox: 0.1790, aux_task1.loss_heatmap: 0.7814, aux_task1.loss_bbox: 0.2252, aux_task2.loss_heatmap: 0.7506, aux_task2.loss_bbox: 0.2346, aux_task3.loss_heatmap: 0.5350, aux_task3.loss_bbox: 0.2333, aux_task4.loss_heatmap: 0.7035, aux_task4.loss_bbox: 0.2051, aux_task5.loss_heatmap: 0.3750, aux_task5.loss_bbox: 0.2627, loss: 10.7836, grad_norm: 27.3484
2025-04-16 22:52:02,391 - mmdet - INFO - Epoch [19][250/1104]	lr: 1.325e-05, eta: 0:32:49, time: 0.959, data_time: 0.007, memory: 14026, loss_cls: 0.3182, loss_bbox: 0.5581, d0.loss_cls: 0.3960, d0.loss_bbox: 0.7176, d1.loss_cls: 0.3889, d1.loss_bbox: 0.6569, d2.loss_cls: 0.3869, d2.loss_bbox: 0.6201, d3.loss_cls: 0.3410, d3.loss_bbox: 0.5953, d4.loss_cls: 0.3242, d4.loss_bbox: 0.5760, aux_task0.loss_heatmap: 0.4473, aux_task0.loss_bbox: 0.1791, aux_task1.loss_heatmap: 0.7196, aux_task1.loss_bbox: 0.2084, aux_task2.loss_heatmap: 0.7168, aux_task2.loss_bbox: 0.2296, aux_task3.loss_heatmap: 0.5396, aux_task3.loss_bbox: 0.2154, aux_task4.loss_heatmap: 0.7147, aux_task4.loss_bbox: 0.2225, aux_task5.loss_heatmap: 0.4020, aux_task5.loss_bbox: 0.2593, loss: 10.7334, grad_norm: 28.2988
2025-04-16 22:52:50,348 - mmdet - INFO - Epoch [19][300/1104]	lr: 1.259e-05, eta: 0:31:59, time: 0.959, data_time: 0.007, memory: 14026, loss_cls: 0.3099, loss_bbox: 0.5465, d0.loss_cls: 0.3879, d0.loss_bbox: 0.6986, d1.loss_cls: 0.3823, d1.loss_bbox: 0.6409, d2.loss_cls: 0.3820, d2.loss_bbox: 0.6064, d3.loss_cls: 0.3348, d3.loss_bbox: 0.5813, d4.loss_cls: 0.3170, d4.loss_bbox: 0.5632, aux_task0.loss_heatmap: 0.4307, aux_task0.loss_bbox: 0.1734, aux_task1.loss_heatmap: 0.7449, aux_task1.loss_bbox: 0.2201, aux_task2.loss_heatmap: 0.7264, aux_task2.loss_bbox: 0.2326, aux_task3.loss_heatmap: 0.5240, aux_task3.loss_bbox: 0.2243, aux_task4.loss_heatmap: 0.7497, aux_task4.loss_bbox: 0.2091, aux_task5.loss_heatmap: 0.3855, aux_task5.loss_bbox: 0.2603, loss: 10.6315, grad_norm: 26.3942
2025-04-16 22:53:38,537 - mmdet - INFO - Epoch [19][350/1104]	lr: 1.195e-05, eta: 0:31:08, time: 0.964, data_time: 0.008, memory: 14026, loss_cls: 0.3107, loss_bbox: 0.5461, d0.loss_cls: 0.3919, d0.loss_bbox: 0.6997, d1.loss_cls: 0.3833, d1.loss_bbox: 0.6408, d2.loss_cls: 0.3836, d2.loss_bbox: 0.6046, d3.loss_cls: 0.3383, d3.loss_bbox: 0.5793, d4.loss_cls: 0.3196, d4.loss_bbox: 0.5619, aux_task0.loss_heatmap: 0.4508, aux_task0.loss_bbox: 0.1788, aux_task1.loss_heatmap: 0.7774, aux_task1.loss_bbox: 0.2172, aux_task2.loss_heatmap: 0.6874, aux_task2.loss_bbox: 0.2364, aux_task3.loss_heatmap: 0.4579, aux_task3.loss_bbox: 0.2237, aux_task4.loss_heatmap: 0.6738, aux_task4.loss_bbox: 0.2056, aux_task5.loss_heatmap: 0.3884, aux_task5.loss_bbox: 0.2580, loss: 10.5153, grad_norm: 27.6723
2025-04-16 22:54:26,773 - mmdet - INFO - Epoch [19][400/1104]	lr: 1.133e-05, eta: 0:30:17, time: 0.965, data_time: 0.007, memory: 14026, loss_cls: 0.3171, loss_bbox: 0.5424, d0.loss_cls: 0.3982, d0.loss_bbox: 0.6962, d1.loss_cls: 0.3916, d1.loss_bbox: 0.6372, d2.loss_cls: 0.3901, d2.loss_bbox: 0.6035, d3.loss_cls: 0.3436, d3.loss_bbox: 0.5759, d4.loss_cls: 0.3244, d4.loss_bbox: 0.5583, aux_task0.loss_heatmap: 0.4159, aux_task0.loss_bbox: 0.1726, aux_task1.loss_heatmap: 0.7771, aux_task1.loss_bbox: 0.2259, aux_task2.loss_heatmap: 0.6271, aux_task2.loss_bbox: 0.2189, aux_task3.loss_heatmap: 0.5638, aux_task3.loss_bbox: 0.2190, aux_task4.loss_heatmap: 0.7343, aux_task4.loss_bbox: 0.2121, aux_task5.loss_heatmap: 0.4056, aux_task5.loss_bbox: 0.2625, loss: 10.6131, grad_norm: 25.4180
2025-04-16 22:55:14,942 - mmdet - INFO - Epoch [19][450/1104]	lr: 1.072e-05, eta: 0:29:27, time: 0.963, data_time: 0.008, memory: 14026, loss_cls: 0.3093, loss_bbox: 0.5398, d0.loss_cls: 0.3919, d0.loss_bbox: 0.6948, d1.loss_cls: 0.3851, d1.loss_bbox: 0.6345, d2.loss_cls: 0.3844, d2.loss_bbox: 0.6000, d3.loss_cls: 0.3350, d3.loss_bbox: 0.5766, d4.loss_cls: 0.3177, d4.loss_bbox: 0.5568, aux_task0.loss_heatmap: 0.4626, aux_task0.loss_bbox: 0.1793, aux_task1.loss_heatmap: 0.7135, aux_task1.loss_bbox: 0.2133, aux_task2.loss_heatmap: 0.6372, aux_task2.loss_bbox: 0.2200, aux_task3.loss_heatmap: 0.5129, aux_task3.loss_bbox: 0.2174, aux_task4.loss_heatmap: 0.7206, aux_task4.loss_bbox: 0.1984, aux_task5.loss_heatmap: 0.3615, aux_task5.loss_bbox: 0.2592, loss: 10.4215, grad_norm: 56.7821
2025-04-16 22:56:02,702 - mmdet - INFO - Epoch [19][500/1104]	lr: 1.013e-05, eta: 0:28:36, time: 0.955, data_time: 0.007, memory: 14026, loss_cls: 0.3142, loss_bbox: 0.5442, d0.loss_cls: 0.3978, d0.loss_bbox: 0.7049, d1.loss_cls: 0.3887, d1.loss_bbox: 0.6470, d2.loss_cls: 0.3838, d2.loss_bbox: 0.6120, d3.loss_cls: 0.3387, d3.loss_bbox: 0.5871, d4.loss_cls: 0.3225, d4.loss_bbox: 0.5645, aux_task0.loss_heatmap: 0.4508, aux_task0.loss_bbox: 0.1800, aux_task1.loss_heatmap: 0.7224, aux_task1.loss_bbox: 0.2159, aux_task2.loss_heatmap: 0.6899, aux_task2.loss_bbox: 0.2245, aux_task3.loss_heatmap: 0.5175, aux_task3.loss_bbox: 0.2324, aux_task4.loss_heatmap: 0.6581, aux_task4.loss_bbox: 0.1925, aux_task5.loss_heatmap: 0.3902, aux_task5.loss_bbox: 0.2640, loss: 10.5439, grad_norm: 33.0547
2025-04-16 22:56:50,478 - mmdet - INFO - Epoch [19][550/1104]	lr: 9.552e-06, eta: 0:27:46, time: 0.956, data_time: 0.007, memory: 14026, loss_cls: 0.3193, loss_bbox: 0.5458, d0.loss_cls: 0.4038, d0.loss_bbox: 0.7073, d1.loss_cls: 0.3950, d1.loss_bbox: 0.6493, d2.loss_cls: 0.3914, d2.loss_bbox: 0.6136, d3.loss_cls: 0.3431, d3.loss_bbox: 0.5873, d4.loss_cls: 0.3265, d4.loss_bbox: 0.5667, aux_task0.loss_heatmap: 0.4343, aux_task0.loss_bbox: 0.1782, aux_task1.loss_heatmap: 0.7631, aux_task1.loss_bbox: 0.2168, aux_task2.loss_heatmap: 0.7280, aux_task2.loss_bbox: 0.2540, aux_task3.loss_heatmap: 0.5243, aux_task3.loss_bbox: 0.2284, aux_task4.loss_heatmap: 0.6411, aux_task4.loss_bbox: 0.2074, aux_task5.loss_heatmap: 0.4017, aux_task5.loss_bbox: 0.2681, loss: 10.6943, grad_norm: 90.0547
2025-04-16 22:57:38,627 - mmdet - INFO - Epoch [19][600/1104]	lr: 8.992e-06, eta: 0:26:55, time: 0.963, data_time: 0.008, memory: 14026, loss_cls: 0.3084, loss_bbox: 0.5393, d0.loss_cls: 0.3918, d0.loss_bbox: 0.6953, d1.loss_cls: 0.3830, d1.loss_bbox: 0.6341, d2.loss_cls: 0.3802, d2.loss_bbox: 0.5978, d3.loss_cls: 0.3335, d3.loss_bbox: 0.5748, d4.loss_cls: 0.3166, d4.loss_bbox: 0.5559, aux_task0.loss_heatmap: 0.4234, aux_task0.loss_bbox: 0.1721, aux_task1.loss_heatmap: 0.7592, aux_task1.loss_bbox: 0.2141, aux_task2.loss_heatmap: 0.7006, aux_task2.loss_bbox: 0.2385, aux_task3.loss_heatmap: 0.5376, aux_task3.loss_bbox: 0.2289, aux_task4.loss_heatmap: 0.6632, aux_task4.loss_bbox: 0.1982, aux_task5.loss_heatmap: 0.3854, aux_task5.loss_bbox: 0.2631, loss: 10.4949, grad_norm: 24.3408
2025-04-16 22:58:26,737 - mmdet - INFO - Epoch [19][650/1104]	lr: 8.448e-06, eta: 0:26:05, time: 0.962, data_time: 0.008, memory: 14026, loss_cls: 0.3165, loss_bbox: 0.5436, d0.loss_cls: 0.3982, d0.loss_bbox: 0.7024, d1.loss_cls: 0.3909, d1.loss_bbox: 0.6400, d2.loss_cls: 0.3872, d2.loss_bbox: 0.6045, d3.loss_cls: 0.3412, d3.loss_bbox: 0.5791, d4.loss_cls: 0.3243, d4.loss_bbox: 0.5599, aux_task0.loss_heatmap: 0.4497, aux_task0.loss_bbox: 0.1753, aux_task1.loss_heatmap: 0.7686, aux_task1.loss_bbox: 0.2157, aux_task2.loss_heatmap: 0.7127, aux_task2.loss_bbox: 0.2532, aux_task3.loss_heatmap: 0.5271, aux_task3.loss_bbox: 0.2113, aux_task4.loss_heatmap: 0.6063, aux_task4.loss_bbox: 0.1987, aux_task5.loss_heatmap: 0.3711, aux_task5.loss_bbox: 0.2600, loss: 10.5378, grad_norm: 24.0790
2025-04-16 22:59:14,790 - mmdet - INFO - Epoch [19][700/1104]	lr: 7.920e-06, eta: 0:25:14, time: 0.961, data_time: 0.007, memory: 14026, loss_cls: 0.3106, loss_bbox: 0.5428, d0.loss_cls: 0.3899, d0.loss_bbox: 0.7022, d1.loss_cls: 0.3840, d1.loss_bbox: 0.6399, d2.loss_cls: 0.3820, d2.loss_bbox: 0.6050, d3.loss_cls: 0.3346, d3.loss_bbox: 0.5813, d4.loss_cls: 0.3177, d4.loss_bbox: 0.5593, aux_task0.loss_heatmap: 0.4526, aux_task0.loss_bbox: 0.1773, aux_task1.loss_heatmap: 0.7265, aux_task1.loss_bbox: 0.2213, aux_task2.loss_heatmap: 0.6771, aux_task2.loss_bbox: 0.2296, aux_task3.loss_heatmap: 0.5173, aux_task3.loss_bbox: 0.1976, aux_task4.loss_heatmap: 0.6700, aux_task4.loss_bbox: 0.2078, aux_task5.loss_heatmap: 0.3819, aux_task5.loss_bbox: 0.2628, loss: 10.4707, grad_norm: 64.3011
2025-04-16 23:00:02,811 - mmdet - INFO - Epoch [19][750/1104]	lr: 7.410e-06, eta: 0:24:24, time: 0.960, data_time: 0.008, memory: 14026, loss_cls: 0.3173, loss_bbox: 0.5543, d0.loss_cls: 0.4059, d0.loss_bbox: 0.7100, d1.loss_cls: 0.3964, d1.loss_bbox: 0.6514, d2.loss_cls: 0.3941, d2.loss_bbox: 0.6159, d3.loss_cls: 0.3446, d3.loss_bbox: 0.5902, d4.loss_cls: 0.3248, d4.loss_bbox: 0.5715, aux_task0.loss_heatmap: 0.4406, aux_task0.loss_bbox: 0.1757, aux_task1.loss_heatmap: 0.7653, aux_task1.loss_bbox: 0.2208, aux_task2.loss_heatmap: 0.7587, aux_task2.loss_bbox: 0.2688, aux_task3.loss_heatmap: 0.5628, aux_task3.loss_bbox: 0.2364, aux_task4.loss_heatmap: 0.7287, aux_task4.loss_bbox: 0.2145, aux_task5.loss_heatmap: 0.4058, aux_task5.loss_bbox: 0.2668, loss: 10.9213, grad_norm: 30.5624
2025-04-16 23:00:50,982 - mmdet - INFO - Epoch [19][800/1104]	lr: 6.915e-06, eta: 0:23:33, time: 0.963, data_time: 0.008, memory: 14026, loss_cls: 0.3171, loss_bbox: 0.5466, d0.loss_cls: 0.3963, d0.loss_bbox: 0.7036, d1.loss_cls: 0.3907, d1.loss_bbox: 0.6437, d2.loss_cls: 0.3887, d2.loss_bbox: 0.6067, d3.loss_cls: 0.3415, d3.loss_bbox: 0.5825, d4.loss_cls: 0.3232, d4.loss_bbox: 0.5640, aux_task0.loss_heatmap: 0.4449, aux_task0.loss_bbox: 0.1744, aux_task1.loss_heatmap: 0.7548, aux_task1.loss_bbox: 0.2118, aux_task2.loss_heatmap: 0.6833, aux_task2.loss_bbox: 0.2306, aux_task3.loss_heatmap: 0.5837, aux_task3.loss_bbox: 0.2326, aux_task4.loss_heatmap: 0.7215, aux_task4.loss_bbox: 0.2140, aux_task5.loss_heatmap: 0.3964, aux_task5.loss_bbox: 0.2650, loss: 10.7177, grad_norm: 32.3710
2025-04-16 23:01:39,008 - mmdet - INFO - Epoch [19][850/1104]	lr: 6.438e-06, eta: 0:22:43, time: 0.961, data_time: 0.010, memory: 14026, loss_cls: 0.3142, loss_bbox: 0.5444, d0.loss_cls: 0.3947, d0.loss_bbox: 0.6994, d1.loss_cls: 0.3844, d1.loss_bbox: 0.6412, d2.loss_cls: 0.3818, d2.loss_bbox: 0.6050, d3.loss_cls: 0.3375, d3.loss_bbox: 0.5822, d4.loss_cls: 0.3215, d4.loss_bbox: 0.5625, aux_task0.loss_heatmap: 0.4388, aux_task0.loss_bbox: 0.1763, aux_task1.loss_heatmap: 0.6962, aux_task1.loss_bbox: 0.2127, aux_task2.loss_heatmap: 0.7523, aux_task2.loss_bbox: 0.2306, aux_task3.loss_heatmap: 0.5175, aux_task3.loss_bbox: 0.2398, aux_task4.loss_heatmap: 0.6610, aux_task4.loss_bbox: 0.2138, aux_task5.loss_heatmap: 0.3834, aux_task5.loss_bbox: 0.2620, loss: 10.5530, grad_norm: 22.9169
2025-04-16 23:02:27,099 - mmdet - INFO - Epoch [19][900/1104]	lr: 5.976e-06, eta: 0:21:52, time: 0.962, data_time: 0.008, memory: 14026, loss_cls: 0.3060, loss_bbox: 0.5379, d0.loss_cls: 0.3933, d0.loss_bbox: 0.7017, d1.loss_cls: 0.3871, d1.loss_bbox: 0.6402, d2.loss_cls: 0.3851, d2.loss_bbox: 0.6043, d3.loss_cls: 0.3345, d3.loss_bbox: 0.5794, d4.loss_cls: 0.3141, d4.loss_bbox: 0.5594, aux_task0.loss_heatmap: 0.4665, aux_task0.loss_bbox: 0.1803, aux_task1.loss_heatmap: 0.7116, aux_task1.loss_bbox: 0.2056, aux_task2.loss_heatmap: 0.5940, aux_task2.loss_bbox: 0.2024, aux_task3.loss_heatmap: 0.4751, aux_task3.loss_bbox: 0.2148, aux_task4.loss_heatmap: 0.6099, aux_task4.loss_bbox: 0.1992, aux_task5.loss_heatmap: 0.3709, aux_task5.loss_bbox: 0.2601, loss: 10.2335, grad_norm: 25.0629
2025-04-16 23:03:15,333 - mmdet - INFO - Epoch [19][950/1104]	lr: 5.532e-06, eta: 0:21:02, time: 0.965, data_time: 0.008, memory: 14026, loss_cls: 0.3175, loss_bbox: 0.5573, d0.loss_cls: 0.3997, d0.loss_bbox: 0.7114, d1.loss_cls: 0.3954, d1.loss_bbox: 0.6558, d2.loss_cls: 0.3917, d2.loss_bbox: 0.6187, d3.loss_cls: 0.3444, d3.loss_bbox: 0.5929, d4.loss_cls: 0.3259, d4.loss_bbox: 0.5754, aux_task0.loss_heatmap: 0.4552, aux_task0.loss_bbox: 0.1826, aux_task1.loss_heatmap: 0.7496, aux_task1.loss_bbox: 0.2203, aux_task2.loss_heatmap: 0.7039, aux_task2.loss_bbox: 0.2433, aux_task3.loss_heatmap: 0.5685, aux_task3.loss_bbox: 0.2426, aux_task4.loss_heatmap: 0.7155, aux_task4.loss_bbox: 0.2134, aux_task5.loss_heatmap: 0.3932, aux_task5.loss_bbox: 0.2582, loss: 10.8321, grad_norm: 21.2254
2025-04-16 23:04:03,573 - mmdet - INFO - Epoch [19][1000/1104]	lr: 5.105e-06, eta: 0:20:11, time: 0.965, data_time: 0.009, memory: 14026, loss_cls: 0.3108, loss_bbox: 0.5342, d0.loss_cls: 0.3905, d0.loss_bbox: 0.6909, d1.loss_cls: 0.3840, d1.loss_bbox: 0.6295, d2.loss_cls: 0.3824, d2.loss_bbox: 0.5958, d3.loss_cls: 0.3365, d3.loss_bbox: 0.5723, d4.loss_cls: 0.3196, d4.loss_bbox: 0.5526, aux_task0.loss_heatmap: 0.4384, aux_task0.loss_bbox: 0.1756, aux_task1.loss_heatmap: 0.7657, aux_task1.loss_bbox: 0.2203, aux_task2.loss_heatmap: 0.7251, aux_task2.loss_bbox: 0.2398, aux_task3.loss_heatmap: 0.4764, aux_task3.loss_bbox: 0.2104, aux_task4.loss_heatmap: 0.6305, aux_task4.loss_bbox: 0.1997, aux_task5.loss_heatmap: 0.4217, aux_task5.loss_bbox: 0.2598, loss: 10.4624, grad_norm: 26.3212
2025-04-16 23:04:51,566 - mmdet - INFO - Epoch [19][1050/1104]	lr: 4.694e-06, eta: 0:19:21, time: 0.960, data_time: 0.008, memory: 14026, loss_cls: 0.3169, loss_bbox: 0.5477, d0.loss_cls: 0.3996, d0.loss_bbox: 0.7039, d1.loss_cls: 0.3950, d1.loss_bbox: 0.6422, d2.loss_cls: 0.3902, d2.loss_bbox: 0.6052, d3.loss_cls: 0.3451, d3.loss_bbox: 0.5820, d4.loss_cls: 0.3255, d4.loss_bbox: 0.5649, aux_task0.loss_heatmap: 0.4523, aux_task0.loss_bbox: 0.1791, aux_task1.loss_heatmap: 0.6994, aux_task1.loss_bbox: 0.2125, aux_task2.loss_heatmap: 0.7562, aux_task2.loss_bbox: 0.2552, aux_task3.loss_heatmap: 0.5110, aux_task3.loss_bbox: 0.2290, aux_task4.loss_heatmap: 0.6771, aux_task4.loss_bbox: 0.2142, aux_task5.loss_heatmap: 0.3846, aux_task5.loss_bbox: 0.2595, loss: 10.6482, grad_norm: 27.7026
2025-04-16 23:05:39,694 - mmdet - INFO - Epoch [19][1100/1104]	lr: 4.300e-06, eta: 0:18:31, time: 0.963, data_time: 0.011, memory: 14026, loss_cls: 0.3076, loss_bbox: 0.5519, d0.loss_cls: 0.3884, d0.loss_bbox: 0.7008, d1.loss_cls: 0.3832, d1.loss_bbox: 0.6433, d2.loss_cls: 0.3805, d2.loss_bbox: 0.6106, d3.loss_cls: 0.3367, d3.loss_bbox: 0.5838, d4.loss_cls: 0.3170, d4.loss_bbox: 0.5680, aux_task0.loss_heatmap: 0.4563, aux_task0.loss_bbox: 0.1761, aux_task1.loss_heatmap: 0.7314, aux_task1.loss_bbox: 0.2207, aux_task2.loss_heatmap: 0.6776, aux_task2.loss_bbox: 0.2222, aux_task3.loss_heatmap: 0.5545, aux_task3.loss_bbox: 0.2505, aux_task4.loss_heatmap: 0.6669, aux_task4.loss_bbox: 0.2059, aux_task5.loss_heatmap: 0.3798, aux_task5.loss_bbox: 0.2607, loss: 10.5744, grad_norm: 34.1565
2025-04-16 23:05:43,947 - mmdet - INFO - Saving checkpoint at 19 epochs
2025-04-16 23:17:33,983 - mmdet - INFO - Exp name: DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01.py
2025-04-16 23:17:33,983 - mmdet - INFO - Epoch(val) [19][3010]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.6419, pts_bbox_NuScenes/car_AP_dist_1.0: 0.7763, pts_bbox_NuScenes/car_AP_dist_2.0: 0.8322, pts_bbox_NuScenes/car_AP_dist_4.0: 0.8621, pts_bbox_NuScenes/car_trans_err: 0.2164, pts_bbox_NuScenes/car_scale_err: 0.1631, pts_bbox_NuScenes/car_orient_err: 0.1668, pts_bbox_NuScenes/car_vel_err: 0.3638, pts_bbox_NuScenes/car_attr_err: 0.2183, pts_bbox_NuScenes/mATE: 0.4007, pts_bbox_NuScenes/mASE: 0.2728, pts_bbox_NuScenes/mAOE: 0.5782, pts_bbox_NuScenes/mAVE: 0.5418, pts_bbox_NuScenes/mAAE: 0.2948, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.2484, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.4401, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.5567, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.6082, pts_bbox_NuScenes/truck_trans_err: 0.4310, pts_bbox_NuScenes/truck_scale_err: 0.2168, pts_bbox_NuScenes/truck_orient_err: 0.2069, pts_bbox_NuScenes/truck_vel_err: 0.3671, pts_bbox_NuScenes/truck_attr_err: 0.2382, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0034, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0837, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.2525, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.3621, pts_bbox_NuScenes/construction_vehicle_trans_err: 0.7752, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.4524, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.1227, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1337, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.3651, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.2351, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.5287, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.7122, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.7550, pts_bbox_NuScenes/bus_trans_err: 0.4770, pts_bbox_NuScenes/bus_scale_err: 0.2191, pts_bbox_NuScenes/bus_orient_err: 0.2054, pts_bbox_NuScenes/bus_vel_err: 1.0731, pts_bbox_NuScenes/bus_attr_err: 0.2939, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0581, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.2133, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.3829, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.5116, pts_bbox_NuScenes/trailer_trans_err: 0.6619, pts_bbox_NuScenes/trailer_scale_err: 0.2420, pts_bbox_NuScenes/trailer_orient_err: 0.8091, pts_bbox_NuScenes/trailer_vel_err: 0.3129, pts_bbox_NuScenes/trailer_attr_err: 0.1719, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.3592, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.5875, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.7032, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.7465, pts_bbox_NuScenes/barrier_trans_err: 0.3821, pts_bbox_NuScenes/barrier_scale_err: 0.2728, pts_bbox_NuScenes/barrier_orient_err: 0.0971, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.3897, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.5001, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.5359, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.5620, pts_bbox_NuScenes/motorcycle_trans_err: 0.2823, pts_bbox_NuScenes/motorcycle_scale_err: 0.2502, pts_bbox_NuScenes/motorcycle_orient_err: 0.4840, pts_bbox_NuScenes/motorcycle_vel_err: 0.7920, pts_bbox_NuScenes/motorcycle_attr_err: 0.2632, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.3075, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.3432, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.3585, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.3697, pts_bbox_NuScenes/bicycle_trans_err: 0.2302, pts_bbox_NuScenes/bicycle_scale_err: 0.2716, pts_bbox_NuScenes/bicycle_orient_err: 0.7530, pts_bbox_NuScenes/bicycle_vel_err: 0.3109, pts_bbox_NuScenes/bicycle_attr_err: 0.0133, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.5564, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.7481, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.7927, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.8180, pts_bbox_NuScenes/pedestrian_trans_err: 0.3465, pts_bbox_NuScenes/pedestrian_scale_err: 0.2867, pts_bbox_NuScenes/pedestrian_orient_err: 1.3586, pts_bbox_NuScenes/pedestrian_vel_err: 0.9809, pts_bbox_NuScenes/pedestrian_attr_err: 0.7941, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.5447, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.6008, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.6418, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.6851, pts_bbox_NuScenes/traffic_cone_trans_err: 0.2049, pts_bbox_NuScenes/traffic_cone_scale_err: 0.3533, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.5439, pts_bbox_NuScenes/mAP: 0.5054
2025-04-16 23:17:34,970 - mmdet - INFO - No ObjectSample now!
2025-04-16 23:18:26,001 - mmdet - INFO - Epoch [20][50/1104]	lr: 3.894e-06, eta: 0:17:36, time: 1.021, data_time: 0.074, memory: 14026, loss_cls: 0.3175, loss_bbox: 0.5518, d0.loss_cls: 0.4008, d0.loss_bbox: 0.7086, d1.loss_cls: 0.3943, d1.loss_bbox: 0.6492, d2.loss_cls: 0.3914, d2.loss_bbox: 0.6147, d3.loss_cls: 0.3447, d3.loss_bbox: 0.5889, d4.loss_cls: 0.3263, d4.loss_bbox: 0.5692, aux_task0.loss_heatmap: 0.4594, aux_task0.loss_bbox: 0.1794, aux_task1.loss_heatmap: 0.7393, aux_task1.loss_bbox: 0.2162, aux_task2.loss_heatmap: 0.6466, aux_task2.loss_bbox: 0.2306, aux_task3.loss_heatmap: 0.5355, aux_task3.loss_bbox: 0.2367, aux_task4.loss_heatmap: 0.7295, aux_task4.loss_bbox: 0.2286, aux_task5.loss_heatmap: 0.3916, aux_task5.loss_bbox: 0.2615, loss: 10.7123, grad_norm: 24.6231
2025-04-16 23:19:13,677 - mmdet - INFO - Epoch [20][100/1104]	lr: 3.536e-06, eta: 0:16:46, time: 0.954, data_time: 0.008, memory: 14026, loss_cls: 0.3189, loss_bbox: 0.5400, d0.loss_cls: 0.4023, d0.loss_bbox: 0.7028, d1.loss_cls: 0.3959, d1.loss_bbox: 0.6411, d2.loss_cls: 0.3923, d2.loss_bbox: 0.6050, d3.loss_cls: 0.3462, d3.loss_bbox: 0.5788, d4.loss_cls: 0.3289, d4.loss_bbox: 0.5594, aux_task0.loss_heatmap: 0.4380, aux_task0.loss_bbox: 0.1775, aux_task1.loss_heatmap: 0.7479, aux_task1.loss_bbox: 0.2126, aux_task2.loss_heatmap: 0.7254, aux_task2.loss_bbox: 0.2395, aux_task3.loss_heatmap: 0.5482, aux_task3.loss_bbox: 0.2044, aux_task4.loss_heatmap: 0.6703, aux_task4.loss_bbox: 0.2072, aux_task5.loss_heatmap: 0.4215, aux_task5.loss_bbox: 0.2614, loss: 10.6654, grad_norm: 59.1126
2025-04-16 23:20:01,663 - mmdet - INFO - Epoch [20][150/1104]	lr: 3.194e-06, eta: 0:15:56, time: 0.960, data_time: 0.007, memory: 14026, loss_cls: 0.3163, loss_bbox: 0.5466, d0.loss_cls: 0.3983, d0.loss_bbox: 0.7011, d1.loss_cls: 0.3914, d1.loss_bbox: 0.6391, d2.loss_cls: 0.3894, d2.loss_bbox: 0.6049, d3.loss_cls: 0.3428, d3.loss_bbox: 0.5818, d4.loss_cls: 0.3248, d4.loss_bbox: 0.5654, aux_task0.loss_heatmap: 0.4414, aux_task0.loss_bbox: 0.1763, aux_task1.loss_heatmap: 0.7396, aux_task1.loss_bbox: 0.2148, aux_task2.loss_heatmap: 0.7583, aux_task2.loss_bbox: 0.2367, aux_task3.loss_heatmap: 0.5279, aux_task3.loss_bbox: 0.2245, aux_task4.loss_heatmap: 0.6880, aux_task4.loss_bbox: 0.2099, aux_task5.loss_heatmap: 0.4167, aux_task5.loss_bbox: 0.2682, loss: 10.7041, grad_norm: 27.8613
2025-04-16 23:20:49,563 - mmdet - INFO - Epoch [20][200/1104]	lr: 2.870e-06, eta: 0:15:05, time: 0.958, data_time: 0.008, memory: 14026, loss_cls: 0.3046, loss_bbox: 0.5376, d0.loss_cls: 0.3887, d0.loss_bbox: 0.6922, d1.loss_cls: 0.3782, d1.loss_bbox: 0.6316, d2.loss_cls: 0.3770, d2.loss_bbox: 0.5976, d3.loss_cls: 0.3289, d3.loss_bbox: 0.5752, d4.loss_cls: 0.3131, d4.loss_bbox: 0.5546, aux_task0.loss_heatmap: 0.4337, aux_task0.loss_bbox: 0.1739, aux_task1.loss_heatmap: 0.7006, aux_task1.loss_bbox: 0.2099, aux_task2.loss_heatmap: 0.7277, aux_task2.loss_bbox: 0.2393, aux_task3.loss_heatmap: 0.5587, aux_task3.loss_bbox: 0.2085, aux_task4.loss_heatmap: 0.6205, aux_task4.loss_bbox: 0.1978, aux_task5.loss_heatmap: 0.3805, aux_task5.loss_bbox: 0.2593, loss: 10.3899, grad_norm: 23.2632
2025-04-16 23:21:37,189 - mmdet - INFO - Epoch [20][250/1104]	lr: 2.563e-06, eta: 0:14:15, time: 0.952, data_time: 0.008, memory: 14026, loss_cls: 0.3118, loss_bbox: 0.5379, d0.loss_cls: 0.3960, d0.loss_bbox: 0.6946, d1.loss_cls: 0.3887, d1.loss_bbox: 0.6339, d2.loss_cls: 0.3855, d2.loss_bbox: 0.5996, d3.loss_cls: 0.3361, d3.loss_bbox: 0.5710, d4.loss_cls: 0.3189, d4.loss_bbox: 0.5528, aux_task0.loss_heatmap: 0.4494, aux_task0.loss_bbox: 0.1754, aux_task1.loss_heatmap: 0.7645, aux_task1.loss_bbox: 0.2194, aux_task2.loss_heatmap: 0.6887, aux_task2.loss_bbox: 0.2343, aux_task3.loss_heatmap: 0.5626, aux_task3.loss_bbox: 0.2123, aux_task4.loss_heatmap: 0.6624, aux_task4.loss_bbox: 0.1941, aux_task5.loss_heatmap: 0.4026, aux_task5.loss_bbox: 0.2586, loss: 10.5513, grad_norm: 31.8399
2025-04-16 23:22:25,274 - mmdet - INFO - Epoch [20][300/1104]	lr: 2.273e-06, eta: 0:13:25, time: 0.962, data_time: 0.008, memory: 14026, loss_cls: 0.3030, loss_bbox: 0.5412, d0.loss_cls: 0.3883, d0.loss_bbox: 0.6950, d1.loss_cls: 0.3803, d1.loss_bbox: 0.6337, d2.loss_cls: 0.3774, d2.loss_bbox: 0.5992, d3.loss_cls: 0.3306, d3.loss_bbox: 0.5769, d4.loss_cls: 0.3111, d4.loss_bbox: 0.5577, aux_task0.loss_heatmap: 0.4383, aux_task0.loss_bbox: 0.1740, aux_task1.loss_heatmap: 0.7509, aux_task1.loss_bbox: 0.2185, aux_task2.loss_heatmap: 0.7388, aux_task2.loss_bbox: 0.2397, aux_task3.loss_heatmap: 0.5604, aux_task3.loss_bbox: 0.2357, aux_task4.loss_heatmap: 0.6941, aux_task4.loss_bbox: 0.2091, aux_task5.loss_heatmap: 0.3533, aux_task5.loss_bbox: 0.2591, loss: 10.5662, grad_norm: 23.6454
2025-04-16 23:23:13,155 - mmdet - INFO - Epoch [20][350/1104]	lr: 2.001e-06, eta: 0:12:35, time: 0.958, data_time: 0.008, memory: 14026, loss_cls: 0.3062, loss_bbox: 0.5440, d0.loss_cls: 0.3894, d0.loss_bbox: 0.6968, d1.loss_cls: 0.3834, d1.loss_bbox: 0.6381, d2.loss_cls: 0.3809, d2.loss_bbox: 0.6038, d3.loss_cls: 0.3321, d3.loss_bbox: 0.5805, d4.loss_cls: 0.3142, d4.loss_bbox: 0.5615, aux_task0.loss_heatmap: 0.4299, aux_task0.loss_bbox: 0.1735, aux_task1.loss_heatmap: 0.7220, aux_task1.loss_bbox: 0.2189, aux_task2.loss_heatmap: 0.7233, aux_task2.loss_bbox: 0.2387, aux_task3.loss_heatmap: 0.5241, aux_task3.loss_bbox: 0.2311, aux_task4.loss_heatmap: 0.6430, aux_task4.loss_bbox: 0.2026, aux_task5.loss_heatmap: 0.3907, aux_task5.loss_bbox: 0.2537, loss: 10.4824, grad_norm: 24.9889
2025-04-16 23:24:00,747 - mmdet - INFO - Epoch [20][400/1104]	lr: 1.745e-06, eta: 0:11:44, time: 0.952, data_time: 0.008, memory: 14026, loss_cls: 0.3141, loss_bbox: 0.5451, d0.loss_cls: 0.3955, d0.loss_bbox: 0.7042, d1.loss_cls: 0.3909, d1.loss_bbox: 0.6428, d2.loss_cls: 0.3880, d2.loss_bbox: 0.6058, d3.loss_cls: 0.3393, d3.loss_bbox: 0.5826, d4.loss_cls: 0.3224, d4.loss_bbox: 0.5630, aux_task0.loss_heatmap: 0.4470, aux_task0.loss_bbox: 0.1773, aux_task1.loss_heatmap: 0.7378, aux_task1.loss_bbox: 0.2144, aux_task2.loss_heatmap: 0.7360, aux_task2.loss_bbox: 0.2425, aux_task3.loss_heatmap: 0.5995, aux_task3.loss_bbox: 0.2360, aux_task4.loss_heatmap: 0.6860, aux_task4.loss_bbox: 0.2033, aux_task5.loss_heatmap: 0.4215, aux_task5.loss_bbox: 0.2602, loss: 10.7555, grad_norm: 56.2663
2025-04-16 23:24:48,715 - mmdet - INFO - Epoch [20][450/1104]	lr: 1.507e-06, eta: 0:10:54, time: 0.959, data_time: 0.008, memory: 14026, loss_cls: 0.3125, loss_bbox: 0.5426, d0.loss_cls: 0.3933, d0.loss_bbox: 0.7054, d1.loss_cls: 0.3860, d1.loss_bbox: 0.6451, d2.loss_cls: 0.3822, d2.loss_bbox: 0.6079, d3.loss_cls: 0.3356, d3.loss_bbox: 0.5835, d4.loss_cls: 0.3196, d4.loss_bbox: 0.5618, aux_task0.loss_heatmap: 0.4475, aux_task0.loss_bbox: 0.1793, aux_task1.loss_heatmap: 0.7201, aux_task1.loss_bbox: 0.2190, aux_task2.loss_heatmap: 0.7182, aux_task2.loss_bbox: 0.2496, aux_task3.loss_heatmap: 0.5363, aux_task3.loss_bbox: 0.2298, aux_task4.loss_heatmap: 0.6492, aux_task4.loss_bbox: 0.2039, aux_task5.loss_heatmap: 0.3919, aux_task5.loss_bbox: 0.2636, loss: 10.5839, grad_norm: 24.8397
2025-04-16 23:25:38,517 - mmdet - INFO - Epoch [20][500/1104]	lr: 1.287e-06, eta: 0:10:04, time: 0.996, data_time: 0.008, memory: 14026, loss_cls: 0.3077, loss_bbox: 0.5535, d0.loss_cls: 0.3923, d0.loss_bbox: 0.7083, d1.loss_cls: 0.3855, d1.loss_bbox: 0.6473, d2.loss_cls: 0.3843, d2.loss_bbox: 0.6116, d3.loss_cls: 0.3345, d3.loss_bbox: 0.5880, d4.loss_cls: 0.3174, d4.loss_bbox: 0.5694, aux_task0.loss_heatmap: 0.4542, aux_task0.loss_bbox: 0.1787, aux_task1.loss_heatmap: 0.7333, aux_task1.loss_bbox: 0.2155, aux_task2.loss_heatmap: 0.6202, aux_task2.loss_bbox: 0.2165, aux_task3.loss_heatmap: 0.5455, aux_task3.loss_bbox: 0.2261, aux_task4.loss_heatmap: 0.6131, aux_task4.loss_bbox: 0.1952, aux_task5.loss_heatmap: 0.3739, aux_task5.loss_bbox: 0.2621, loss: 10.4344, grad_norm: 31.0440
2025-04-16 23:26:26,858 - mmdet - INFO - Epoch [20][550/1104]	lr: 1.084e-06, eta: 0:09:14, time: 0.967, data_time: 0.008, memory: 14026, loss_cls: 0.3082, loss_bbox: 0.5450, d0.loss_cls: 0.3908, d0.loss_bbox: 0.6998, d1.loss_cls: 0.3828, d1.loss_bbox: 0.6427, d2.loss_cls: 0.3809, d2.loss_bbox: 0.6082, d3.loss_cls: 0.3339, d3.loss_bbox: 0.5826, d4.loss_cls: 0.3160, d4.loss_bbox: 0.5639, aux_task0.loss_heatmap: 0.4484, aux_task0.loss_bbox: 0.1790, aux_task1.loss_heatmap: 0.7699, aux_task1.loss_bbox: 0.2205, aux_task2.loss_heatmap: 0.6894, aux_task2.loss_bbox: 0.2330, aux_task3.loss_heatmap: 0.5377, aux_task3.loss_bbox: 0.2123, aux_task4.loss_heatmap: 0.6981, aux_task4.loss_bbox: 0.2173, aux_task5.loss_heatmap: 0.3756, aux_task5.loss_bbox: 0.2626, loss: 10.5988, grad_norm: 26.3997
2025-04-16 23:27:14,506 - mmdet - INFO - Epoch [20][600/1104]	lr: 8.977e-07, eta: 0:08:24, time: 0.953, data_time: 0.008, memory: 14026, loss_cls: 0.3114, loss_bbox: 0.5462, d0.loss_cls: 0.3950, d0.loss_bbox: 0.7036, d1.loss_cls: 0.3879, d1.loss_bbox: 0.6385, d2.loss_cls: 0.3855, d2.loss_bbox: 0.6019, d3.loss_cls: 0.3398, d3.loss_bbox: 0.5798, d4.loss_cls: 0.3196, d4.loss_bbox: 0.5639, aux_task0.loss_heatmap: 0.4336, aux_task0.loss_bbox: 0.1723, aux_task1.loss_heatmap: 0.7084, aux_task1.loss_bbox: 0.2116, aux_task2.loss_heatmap: 0.7443, aux_task2.loss_bbox: 0.2432, aux_task3.loss_heatmap: 0.5024, aux_task3.loss_bbox: 0.2326, aux_task4.loss_heatmap: 0.6724, aux_task4.loss_bbox: 0.1940, aux_task5.loss_heatmap: 0.3832, aux_task5.loss_bbox: 0.2574, loss: 10.5284, grad_norm: 24.1470
2025-04-16 23:28:02,284 - mmdet - INFO - Epoch [20][650/1104]	lr: 7.294e-07, eta: 0:07:34, time: 0.956, data_time: 0.008, memory: 14026, loss_cls: 0.3181, loss_bbox: 0.5500, d0.loss_cls: 0.4021, d0.loss_bbox: 0.7001, d1.loss_cls: 0.3964, d1.loss_bbox: 0.6413, d2.loss_cls: 0.3930, d2.loss_bbox: 0.6069, d3.loss_cls: 0.3457, d3.loss_bbox: 0.5848, d4.loss_cls: 0.3279, d4.loss_bbox: 0.5669, aux_task0.loss_heatmap: 0.4620, aux_task0.loss_bbox: 0.1786, aux_task1.loss_heatmap: 0.7412, aux_task1.loss_bbox: 0.2142, aux_task2.loss_heatmap: 0.6853, aux_task2.loss_bbox: 0.2451, aux_task3.loss_heatmap: 0.4832, aux_task3.loss_bbox: 0.2149, aux_task4.loss_heatmap: 0.7038, aux_task4.loss_bbox: 0.2121, aux_task5.loss_heatmap: 0.4101, aux_task5.loss_bbox: 0.2575, loss: 10.6412, grad_norm: 27.0879
2025-04-16 23:28:49,921 - mmdet - INFO - Epoch [20][700/1104]	lr: 5.785e-07, eta: 0:06:44, time: 0.953, data_time: 0.007, memory: 14026, loss_cls: 0.3087, loss_bbox: 0.5422, d0.loss_cls: 0.3915, d0.loss_bbox: 0.6980, d1.loss_cls: 0.3843, d1.loss_bbox: 0.6387, d2.loss_cls: 0.3817, d2.loss_bbox: 0.6016, d3.loss_cls: 0.3351, d3.loss_bbox: 0.5792, d4.loss_cls: 0.3160, d4.loss_bbox: 0.5617, aux_task0.loss_heatmap: 0.4448, aux_task0.loss_bbox: 0.1743, aux_task1.loss_heatmap: 0.7646, aux_task1.loss_bbox: 0.2133, aux_task2.loss_heatmap: 0.6550, aux_task2.loss_bbox: 0.2334, aux_task3.loss_heatmap: 0.4930, aux_task3.loss_bbox: 0.2184, aux_task4.loss_heatmap: 0.6750, aux_task4.loss_bbox: 0.1989, aux_task5.loss_heatmap: 0.3875, aux_task5.loss_bbox: 0.2609, loss: 10.4575, grad_norm: 25.6498
2025-04-16 23:29:37,997 - mmdet - INFO - Epoch [20][750/1104]	lr: 4.452e-07, eta: 0:05:54, time: 0.962, data_time: 0.008, memory: 14026, loss_cls: 0.3097, loss_bbox: 0.5484, d0.loss_cls: 0.3858, d0.loss_bbox: 0.7008, d1.loss_cls: 0.3791, d1.loss_bbox: 0.6424, d2.loss_cls: 0.3787, d2.loss_bbox: 0.6076, d3.loss_cls: 0.3359, d3.loss_bbox: 0.5866, d4.loss_cls: 0.3166, d4.loss_bbox: 0.5670, aux_task0.loss_heatmap: 0.4535, aux_task0.loss_bbox: 0.1788, aux_task1.loss_heatmap: 0.7694, aux_task1.loss_bbox: 0.2174, aux_task2.loss_heatmap: 0.6501, aux_task2.loss_bbox: 0.2153, aux_task3.loss_heatmap: 0.4870, aux_task3.loss_bbox: 0.2457, aux_task4.loss_heatmap: 0.6496, aux_task4.loss_bbox: 0.1917, aux_task5.loss_heatmap: 0.3611, aux_task5.loss_bbox: 0.2609, loss: 10.4392, grad_norm: 28.0093
2025-04-16 23:30:25,864 - mmdet - INFO - Epoch [20][800/1104]	lr: 3.293e-07, eta: 0:05:04, time: 0.957, data_time: 0.007, memory: 14026, loss_cls: 0.3159, loss_bbox: 0.5378, d0.loss_cls: 0.3967, d0.loss_bbox: 0.6942, d1.loss_cls: 0.3922, d1.loss_bbox: 0.6319, d2.loss_cls: 0.3872, d2.loss_bbox: 0.5975, d3.loss_cls: 0.3407, d3.loss_bbox: 0.5753, d4.loss_cls: 0.3232, d4.loss_bbox: 0.5554, aux_task0.loss_heatmap: 0.4405, aux_task0.loss_bbox: 0.1747, aux_task1.loss_heatmap: 0.7274, aux_task1.loss_bbox: 0.2166, aux_task2.loss_heatmap: 0.6807, aux_task2.loss_bbox: 0.2395, aux_task3.loss_heatmap: 0.5008, aux_task3.loss_bbox: 0.2272, aux_task4.loss_heatmap: 0.7208, aux_task4.loss_bbox: 0.2170, aux_task5.loss_heatmap: 0.3872, aux_task5.loss_bbox: 0.2610, loss: 10.5414, grad_norm: 24.8593
2025-04-16 23:31:13,888 - mmdet - INFO - Epoch [20][850/1104]	lr: 2.310e-07, eta: 0:04:14, time: 0.960, data_time: 0.008, memory: 14026, loss_cls: 0.3170, loss_bbox: 0.5545, d0.loss_cls: 0.4014, d0.loss_bbox: 0.7056, d1.loss_cls: 0.3933, d1.loss_bbox: 0.6456, d2.loss_cls: 0.3915, d2.loss_bbox: 0.6109, d3.loss_cls: 0.3400, d3.loss_bbox: 0.5916, d4.loss_cls: 0.3249, d4.loss_bbox: 0.5712, aux_task0.loss_heatmap: 0.4420, aux_task0.loss_bbox: 0.1775, aux_task1.loss_heatmap: 0.7557, aux_task1.loss_bbox: 0.2197, aux_task2.loss_heatmap: 0.7005, aux_task2.loss_bbox: 0.2254, aux_task3.loss_heatmap: 0.5534, aux_task3.loss_bbox: 0.2358, aux_task4.loss_heatmap: 0.6756, aux_task4.loss_bbox: 0.2025, aux_task5.loss_heatmap: 0.3852, aux_task5.loss_bbox: 0.2614, loss: 10.6826, grad_norm: 24.8419
2025-04-16 23:32:01,925 - mmdet - INFO - Epoch [20][900/1104]	lr: 1.502e-07, eta: 0:03:23, time: 0.961, data_time: 0.009, memory: 14026, loss_cls: 0.3139, loss_bbox: 0.5381, d0.loss_cls: 0.3965, d0.loss_bbox: 0.6924, d1.loss_cls: 0.3897, d1.loss_bbox: 0.6327, d2.loss_cls: 0.3876, d2.loss_bbox: 0.5974, d3.loss_cls: 0.3387, d3.loss_bbox: 0.5758, d4.loss_cls: 0.3198, d4.loss_bbox: 0.5574, aux_task0.loss_heatmap: 0.4440, aux_task0.loss_bbox: 0.1770, aux_task1.loss_heatmap: 0.7526, aux_task1.loss_bbox: 0.2128, aux_task2.loss_heatmap: 0.7077, aux_task2.loss_bbox: 0.2417, aux_task3.loss_heatmap: 0.5194, aux_task3.loss_bbox: 0.2144, aux_task4.loss_heatmap: 0.7290, aux_task4.loss_bbox: 0.2147, aux_task5.loss_heatmap: 0.3840, aux_task5.loss_bbox: 0.2600, loss: 10.5974, grad_norm: 31.1433
2025-04-16 23:32:49,739 - mmdet - INFO - Epoch [20][950/1104]	lr: 8.693e-08, eta: 0:02:33, time: 0.956, data_time: 0.007, memory: 14026, loss_cls: 0.3095, loss_bbox: 0.5402, d0.loss_cls: 0.3902, d0.loss_bbox: 0.6989, d1.loss_cls: 0.3885, d1.loss_bbox: 0.6368, d2.loss_cls: 0.3851, d2.loss_bbox: 0.6024, d3.loss_cls: 0.3346, d3.loss_bbox: 0.5780, d4.loss_cls: 0.3191, d4.loss_bbox: 0.5565, aux_task0.loss_heatmap: 0.4504, aux_task0.loss_bbox: 0.1797, aux_task1.loss_heatmap: 0.7522, aux_task1.loss_bbox: 0.2154, aux_task2.loss_heatmap: 0.7190, aux_task2.loss_bbox: 0.2460, aux_task3.loss_heatmap: 0.5444, aux_task3.loss_bbox: 0.2036, aux_task4.loss_heatmap: 0.6886, aux_task4.loss_bbox: 0.2087, aux_task5.loss_heatmap: 0.3829, aux_task5.loss_bbox: 0.2598, loss: 10.5905, grad_norm: 36.5770
2025-04-16 23:33:37,844 - mmdet - INFO - Epoch [20][1000/1104]	lr: 4.125e-08, eta: 0:01:43, time: 0.962, data_time: 0.008, memory: 14026, loss_cls: 0.3191, loss_bbox: 0.5550, d0.loss_cls: 0.4029, d0.loss_bbox: 0.7064, d1.loss_cls: 0.3930, d1.loss_bbox: 0.6477, d2.loss_cls: 0.3903, d2.loss_bbox: 0.6118, d3.loss_cls: 0.3424, d3.loss_bbox: 0.5893, d4.loss_cls: 0.3270, d4.loss_bbox: 0.5708, aux_task0.loss_heatmap: 0.4520, aux_task0.loss_bbox: 0.1774, aux_task1.loss_heatmap: 0.7825, aux_task1.loss_bbox: 0.2224, aux_task2.loss_heatmap: 0.6960, aux_task2.loss_bbox: 0.2432, aux_task3.loss_heatmap: 0.5438, aux_task3.loss_bbox: 0.2245, aux_task4.loss_heatmap: 0.6214, aux_task4.loss_bbox: 0.2059, aux_task5.loss_heatmap: 0.4030, aux_task5.loss_bbox: 0.2640, loss: 10.6916, grad_norm: 21.1160
2025-04-16 23:34:25,485 - mmdet - INFO - Epoch [20][1050/1104]	lr: 1.313e-08, eta: 0:00:53, time: 0.953, data_time: 0.008, memory: 14026, loss_cls: 0.3019, loss_bbox: 0.5369, d0.loss_cls: 0.3887, d0.loss_bbox: 0.6948, d1.loss_cls: 0.3806, d1.loss_bbox: 0.6323, d2.loss_cls: 0.3768, d2.loss_bbox: 0.5967, d3.loss_cls: 0.3275, d3.loss_bbox: 0.5744, d4.loss_cls: 0.3094, d4.loss_bbox: 0.5544, aux_task0.loss_heatmap: 0.4177, aux_task0.loss_bbox: 0.1731, aux_task1.loss_heatmap: 0.6901, aux_task1.loss_bbox: 0.2145, aux_task2.loss_heatmap: 0.6497, aux_task2.loss_bbox: 0.2344, aux_task3.loss_heatmap: 0.5586, aux_task3.loss_bbox: 0.2288, aux_task4.loss_heatmap: 0.6058, aux_task4.loss_bbox: 0.2015, aux_task5.loss_heatmap: 0.4023, aux_task5.loss_bbox: 0.2606, loss: 10.3114, grad_norm: 28.9668
2025-04-16 23:35:13,573 - mmdet - INFO - Epoch [20][1100/1104]	lr: 2.588e-09, eta: 0:00:03, time: 0.962, data_time: 0.008, memory: 14026, loss_cls: 0.3091, loss_bbox: 0.5393, d0.loss_cls: 0.3908, d0.loss_bbox: 0.6928, d1.loss_cls: 0.3836, d1.loss_bbox: 0.6346, d2.loss_cls: 0.3829, d2.loss_bbox: 0.5987, d3.loss_cls: 0.3362, d3.loss_bbox: 0.5765, d4.loss_cls: 0.3194, d4.loss_bbox: 0.5552, aux_task0.loss_heatmap: 0.4353, aux_task0.loss_bbox: 0.1755, aux_task1.loss_heatmap: 0.7679, aux_task1.loss_bbox: 0.2191, aux_task2.loss_heatmap: 0.6704, aux_task2.loss_bbox: 0.2362, aux_task3.loss_heatmap: 0.5475, aux_task3.loss_bbox: 0.2411, aux_task4.loss_heatmap: 0.7694, aux_task4.loss_bbox: 0.2127, aux_task5.loss_heatmap: 0.3956, aux_task5.loss_bbox: 0.2680, loss: 10.6578, grad_norm: 25.2760
2025-04-16 23:35:17,843 - mmdet - INFO - Saving checkpoint at 20 epochs
2025-04-16 23:47:02,752 - mmdet - INFO - Exp name: DSSMambaGigantic_layer3_morton_xy_hybrid12345_drop01.py
2025-04-16 23:47:02,753 - mmdet - INFO - Epoch(val) [20][3010]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.6430, pts_bbox_NuScenes/car_AP_dist_1.0: 0.7782, pts_bbox_NuScenes/car_AP_dist_2.0: 0.8339, pts_bbox_NuScenes/car_AP_dist_4.0: 0.8635, pts_bbox_NuScenes/car_trans_err: 0.2154, pts_bbox_NuScenes/car_scale_err: 0.1630, pts_bbox_NuScenes/car_orient_err: 0.1657, pts_bbox_NuScenes/car_vel_err: 0.3652, pts_bbox_NuScenes/car_attr_err: 0.2190, pts_bbox_NuScenes/mATE: 0.3990, pts_bbox_NuScenes/mASE: 0.2730, pts_bbox_NuScenes/mAOE: 0.5810, pts_bbox_NuScenes/mAVE: 0.5406, pts_bbox_NuScenes/mAAE: 0.2925, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.2514, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.4409, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.5612, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.6125, pts_bbox_NuScenes/truck_trans_err: 0.4351, pts_bbox_NuScenes/truck_scale_err: 0.2180, pts_bbox_NuScenes/truck_orient_err: 0.2073, pts_bbox_NuScenes/truck_vel_err: 0.3670, pts_bbox_NuScenes/truck_attr_err: 0.2378, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0037, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0931, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.2586, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.3659, pts_bbox_NuScenes/construction_vehicle_trans_err: 0.7697, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.4567, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.0997, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1347, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.3630, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.2372, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.5197, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.7128, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.7548, pts_bbox_NuScenes/bus_trans_err: 0.4787, pts_bbox_NuScenes/bus_scale_err: 0.2187, pts_bbox_NuScenes/bus_orient_err: 0.1922, pts_bbox_NuScenes/bus_vel_err: 1.0486, pts_bbox_NuScenes/bus_attr_err: 0.2902, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0626, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.2171, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.3862, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.5124, pts_bbox_NuScenes/trailer_trans_err: 0.6456, pts_bbox_NuScenes/trailer_scale_err: 0.2390, pts_bbox_NuScenes/trailer_orient_err: 0.8254, pts_bbox_NuScenes/trailer_vel_err: 0.3173, pts_bbox_NuScenes/trailer_attr_err: 0.1709, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.3623, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.5887, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.7053, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.7481, pts_bbox_NuScenes/barrier_trans_err: 0.3873, pts_bbox_NuScenes/barrier_scale_err: 0.2735, pts_bbox_NuScenes/barrier_orient_err: 0.0997, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.3961, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.5112, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.5438, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.5718, pts_bbox_NuScenes/motorcycle_trans_err: 0.2810, pts_bbox_NuScenes/motorcycle_scale_err: 0.2497, pts_bbox_NuScenes/motorcycle_orient_err: 0.5074, pts_bbox_NuScenes/motorcycle_vel_err: 0.8069, pts_bbox_NuScenes/motorcycle_attr_err: 0.2558, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.3190, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.3522, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.3708, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.3811, pts_bbox_NuScenes/bicycle_trans_err: 0.2299, pts_bbox_NuScenes/bicycle_scale_err: 0.2716, pts_bbox_NuScenes/bicycle_orient_err: 0.7597, pts_bbox_NuScenes/bicycle_vel_err: 0.3062, pts_bbox_NuScenes/bicycle_attr_err: 0.0133, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.5554, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.7473, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.7924, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.8180, pts_bbox_NuScenes/pedestrian_trans_err: 0.3450, pts_bbox_NuScenes/pedestrian_scale_err: 0.2856, pts_bbox_NuScenes/pedestrian_orient_err: 1.3719, pts_bbox_NuScenes/pedestrian_vel_err: 0.9790, pts_bbox_NuScenes/pedestrian_attr_err: 0.7899, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.5445, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.5980, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.6390, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.6836, pts_bbox_NuScenes/traffic_cone_trans_err: 0.2027, pts_bbox_NuScenes/traffic_cone_scale_err: 0.3540, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.5456, pts_bbox_NuScenes/mAP: 0.5084
