2025-04-25 07:15:31,337 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.20 (default, Oct  3 2024, 15:24:27) [GCC 11.2.0]
CUDA available: True
GPU 0,1,2,3: NVIDIA GeForce RTX 2080 Ti
CUDA_HOME: /usr/local/cuda
NVCC: Cuda compilation tools, release 11.6, V11.6.55
GCC: gcc (Ubuntu 9.4.0-1ubuntu1~18.04) 9.4.0
PyTorch: 1.13.0+cu116
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.6
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.6, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.14.0+cu116
OpenCV: 4.11.0
MMCV: 1.7.0
MMCV Compiler: GCC 9.4
MMCV CUDA Compiler: 11.6
MMDetection: 2.27.0
MMSegmentation: 0.30.0
MMDetection3D: 1.0.0rc6+
spconv2.0: True
------------------------------------------------------------

2025-04-25 07:15:33,874 - mmdet - INFO - 分布式训练: True
2025-04-25 07:15:36,271 - mmdet - INFO - 配置:
point_cloud_range = [-54, -54, -5.0, 54, 54, 3.0]
class_names = [
    'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',
    'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
]
dataset_type = 'NuScenesDataset'
data_root = 'data/nuscenes/'
input_modality = dict(
    use_lidar=True,
    use_camera=False,
    use_radar=False,
    use_map=False,
    use_external=False)
file_client_args = dict(backend='disk')
train_pipeline = [
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=5,
        file_client_args=dict(backend='disk')),
    dict(
        type='LoadPointsFromMultiSweeps',
        sweeps_num=9,
        use_dim=[0, 1, 2, 3, 4],
        file_client_args=dict(backend='disk'),
        pad_empty_sweeps=True,
        remove_close=True),
    dict(type='LoadAnnotations3D', with_bbox_3d=True, with_label_3d=True),
    dict(
        type='ObjectSample',
        db_sampler=dict(
            data_root='data/nuscenes/',
            info_path='data/nuscenes/nuscenes_dbinfos_train.pkl',
            rate=1.0,
            prepare=dict(
                filter_by_difficulty=[-1],
                filter_by_min_points=dict(
                    car=5,
                    truck=5,
                    bus=5,
                    trailer=5,
                    construction_vehicle=5,
                    traffic_cone=5,
                    barrier=5,
                    motorcycle=5,
                    bicycle=5,
                    pedestrian=5)),
            classes=[
                'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                'traffic_cone'
            ],
            sample_groups=dict(
                car=2,
                truck=3,
                construction_vehicle=7,
                bus=4,
                trailer=6,
                barrier=2,
                motorcycle=6,
                bicycle=6,
                pedestrian=2,
                traffic_cone=2),
            points_loader=dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=[0, 1, 2, 3, 4],
                file_client_args=dict(backend='disk')))),
    dict(
        type='GlobalRotScaleTrans',
        rot_range=[-0.785, 0.785],
        scale_ratio_range=[0.9, 1.1],
        translation_std=[0.5, 0.5, 0.5]),
    dict(
        type='RandomFlip3D',
        sync_2d=False,
        flip_ratio_bev_horizontal=0.5,
        flip_ratio_bev_vertical=0.5),
    dict(
        type='PointsRangeFilter',
        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
    dict(
        type='ObjectRangeFilter',
        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
    dict(
        type='ObjectNameFilter',
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ]),
    dict(type='PointShuffle'),
    dict(
        type='DefaultFormatBundle3D',
        class_names=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ]),
    dict(type='Collect3D', keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])
]
test_pipeline = [
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=5,
        file_client_args=dict(backend='disk')),
    dict(
        type='LoadPointsFromMultiSweeps',
        sweeps_num=9,
        use_dim=[0, 1, 2, 3, 4],
        file_client_args=dict(backend='disk'),
        pad_empty_sweeps=True,
        remove_close=True),
    dict(type='LoadAnnotations3D', with_bbox_3d=True, with_label_3d=True),
    dict(
        type='MultiScaleFlipAug3D',
        img_scale=(1333, 800),
        pts_scale_ratio=1,
        flip=False,
        transforms=[
            dict(
                type='GlobalRotScaleTrans',
                rot_range=[0, 0],
                scale_ratio_range=[1.0, 1.0],
                translation_std=[0, 0, 0]),
            dict(type='RandomFlip3D'),
            dict(
                type='PointsRangeFilter',
                point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
            dict(
                type='DefaultFormatBundle3D',
                class_names=[
                    'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                    'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                    'traffic_cone'
                ],
                with_label=False),
            dict(
                type='Collect3D',
                keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])
        ])
]
eval_pipeline = [
    dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=5,
        file_client_args=dict(backend='disk')),
    dict(
        type='LoadPointsFromMultiSweeps',
        sweeps_num=9,
        use_dim=[0, 1, 2, 3, 4],
        file_client_args=dict(backend='disk'),
        pad_empty_sweeps=True,
        remove_close=True),
    dict(
        type='DefaultFormatBundle3D',
        class_names=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ],
        with_label=False),
    dict(type='Collect3D', keys=['points'])
]
data = dict(
    samples_per_gpu=1,
    workers_per_gpu=4,
    train=dict(
        type='CBGSDataset',
        data_root='data/nuscenes/',
        ann_file='data/nuscenes/nuscenes_infos_train.pkl',
        pipeline=[
            dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                file_client_args=dict(backend='disk')),
            dict(
                type='LoadPointsFromMultiSweeps',
                sweeps_num=10,
                file_client_args=dict(backend='disk')),
            dict(
                type='LoadAnnotations3D',
                with_bbox_3d=True,
                with_label_3d=True),
            dict(
                type='GlobalRotScaleTrans',
                rot_range=[-0.3925, 0.3925],
                scale_ratio_range=[0.95, 1.05],
                translation_std=[0, 0, 0]),
            dict(type='RandomFlip3D', flip_ratio_bev_horizontal=0.5),
            dict(
                type='PointsRangeFilter',
                point_cloud_range=[-50, -50, -5, 50, 50, 3]),
            dict(
                type='ObjectRangeFilter',
                point_cloud_range=[-50, -50, -5, 50, 50, 3]),
            dict(
                type='ObjectNameFilter',
                classes=[
                    'car', 'truck', 'trailer', 'bus', 'construction_vehicle',
                    'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone',
                    'barrier'
                ]),
            dict(type='PointShuffle'),
            dict(
                type='DefaultFormatBundle3D',
                class_names=[
                    'car', 'truck', 'trailer', 'bus', 'construction_vehicle',
                    'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone',
                    'barrier'
                ]),
            dict(
                type='Collect3D',
                keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])
        ],
        classes=[
            'car', 'truck', 'trailer', 'bus', 'construction_vehicle',
            'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone', 'barrier'
        ],
        modality=dict(
            use_lidar=True,
            use_camera=False,
            use_radar=False,
            use_map=False,
            use_external=False),
        test_mode=False,
        box_type_3d='LiDAR',
        split=40,
        dataset=dict(
            type='NuScenesDataset',
            data_root='data/nuscenes/',
            ann_file='data/nuscenes/nuscenes_infos_train.pkl',
            pipeline=[
                dict(
                    type='LoadPointsFromFile',
                    coord_type='LIDAR',
                    load_dim=5,
                    use_dim=5,
                    file_client_args=dict(backend='disk')),
                dict(
                    type='LoadPointsFromMultiSweeps',
                    sweeps_num=9,
                    use_dim=[0, 1, 2, 3, 4],
                    file_client_args=dict(backend='disk'),
                    pad_empty_sweeps=True,
                    remove_close=True),
                dict(
                    type='LoadAnnotations3D',
                    with_bbox_3d=True,
                    with_label_3d=True),
                dict(
                    type='ObjectSample',
                    db_sampler=dict(
                        data_root='data/nuscenes/',
                        info_path='data/nuscenes/nuscenes_dbinfos_train.pkl',
                        rate=1.0,
                        prepare=dict(
                            filter_by_difficulty=[-1],
                            filter_by_min_points=dict(
                                car=5,
                                truck=5,
                                bus=5,
                                trailer=5,
                                construction_vehicle=5,
                                traffic_cone=5,
                                barrier=5,
                                motorcycle=5,
                                bicycle=5,
                                pedestrian=5)),
                        classes=[
                            'car', 'truck', 'construction_vehicle', 'bus',
                            'trailer', 'barrier', 'motorcycle', 'bicycle',
                            'pedestrian', 'traffic_cone'
                        ],
                        sample_groups=dict(
                            car=2,
                            truck=3,
                            construction_vehicle=7,
                            bus=4,
                            trailer=6,
                            barrier=2,
                            motorcycle=6,
                            bicycle=6,
                            pedestrian=2,
                            traffic_cone=2),
                        points_loader=dict(
                            type='LoadPointsFromFile',
                            coord_type='LIDAR',
                            load_dim=5,
                            use_dim=[0, 1, 2, 3, 4],
                            file_client_args=dict(backend='disk')))),
                dict(
                    type='GlobalRotScaleTrans',
                    rot_range=[-0.785, 0.785],
                    scale_ratio_range=[0.9, 1.1],
                    translation_std=[0.5, 0.5, 0.5]),
                dict(
                    type='RandomFlip3D',
                    sync_2d=False,
                    flip_ratio_bev_horizontal=0.5,
                    flip_ratio_bev_vertical=0.5),
                dict(
                    type='PointsRangeFilter',
                    point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
                dict(
                    type='ObjectRangeFilter',
                    point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
                dict(
                    type='ObjectNameFilter',
                    classes=[
                        'car', 'truck', 'construction_vehicle', 'bus',
                        'trailer', 'barrier', 'motorcycle', 'bicycle',
                        'pedestrian', 'traffic_cone'
                    ]),
                dict(type='PointShuffle'),
                dict(
                    type='DefaultFormatBundle3D',
                    class_names=[
                        'car', 'truck', 'construction_vehicle', 'bus',
                        'trailer', 'barrier', 'motorcycle', 'bicycle',
                        'pedestrian', 'traffic_cone'
                    ]),
                dict(
                    type='Collect3D',
                    keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])
            ],
            classes=[
                'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
                'barrier', 'motorcycle', 'bicycle', 'pedestrian',
                'traffic_cone'
            ],
            test_mode=False,
            use_valid_flag=True,
            box_type_3d='LiDAR')),
    val=dict(
        type='NuScenesDataset',
        data_root='data/nuscenes/',
        ann_file='data/nuscenes/nuscenes_infos_val.pkl',
        pipeline=[
            dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                file_client_args=dict(backend='disk')),
            dict(
                type='LoadPointsFromMultiSweeps',
                sweeps_num=9,
                use_dim=[0, 1, 2, 3, 4],
                file_client_args=dict(backend='disk'),
                pad_empty_sweeps=True,
                remove_close=True),
            dict(
                type='LoadAnnotations3D',
                with_bbox_3d=True,
                with_label_3d=True),
            dict(
                type='MultiScaleFlipAug3D',
                img_scale=(1333, 800),
                pts_scale_ratio=1,
                flip=False,
                transforms=[
                    dict(
                        type='GlobalRotScaleTrans',
                        rot_range=[0, 0],
                        scale_ratio_range=[1.0, 1.0],
                        translation_std=[0, 0, 0]),
                    dict(type='RandomFlip3D'),
                    dict(
                        type='PointsRangeFilter',
                        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
                    dict(
                        type='DefaultFormatBundle3D',
                        class_names=[
                            'car', 'truck', 'construction_vehicle', 'bus',
                            'trailer', 'barrier', 'motorcycle', 'bicycle',
                            'pedestrian', 'traffic_cone'
                        ],
                        with_label=False),
                    dict(
                        type='Collect3D',
                        keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])
                ])
        ],
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ],
        modality=dict(
            use_lidar=True,
            use_camera=False,
            use_radar=False,
            use_map=False,
            use_external=False),
        test_mode=True,
        box_type_3d='LiDAR'),
    test=dict(
        type='NuScenesDataset',
        data_root='data/nuscenes/',
        ann_file='data/nuscenes/nuscenes_infos_val.pkl',
        pipeline=[
            dict(
                type='LoadPointsFromFile',
                coord_type='LIDAR',
                load_dim=5,
                use_dim=5,
                file_client_args=dict(backend='disk')),
            dict(
                type='LoadPointsFromMultiSweeps',
                sweeps_num=9,
                use_dim=[0, 1, 2, 3, 4],
                file_client_args=dict(backend='disk'),
                pad_empty_sweeps=True,
                remove_close=True),
            dict(
                type='LoadAnnotations3D',
                with_bbox_3d=True,
                with_label_3d=True),
            dict(
                type='MultiScaleFlipAug3D',
                img_scale=(1333, 800),
                pts_scale_ratio=1,
                flip=False,
                transforms=[
                    dict(
                        type='GlobalRotScaleTrans',
                        rot_range=[0, 0],
                        scale_ratio_range=[1.0, 1.0],
                        translation_std=[0, 0, 0]),
                    dict(type='RandomFlip3D'),
                    dict(
                        type='PointsRangeFilter',
                        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
                    dict(
                        type='DefaultFormatBundle3D',
                        class_names=[
                            'car', 'truck', 'construction_vehicle', 'bus',
                            'trailer', 'barrier', 'motorcycle', 'bicycle',
                            'pedestrian', 'traffic_cone'
                        ],
                        with_label=False),
                    dict(
                        type='Collect3D',
                        keys=['points', 'gt_bboxes_3d', 'gt_labels_3d'])
                ])
        ],
        classes=[
            'car', 'truck', 'construction_vehicle', 'bus', 'trailer',
            'barrier', 'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
        ],
        modality=dict(
            use_lidar=True,
            use_camera=False,
            use_radar=False,
            use_map=False,
            use_external=False),
        test_mode=True,
        box_type_3d='LiDAR'))
evaluation = dict(
    interval=5,
    pipeline=[
        dict(
            type='LoadPointsFromFile',
            coord_type='LIDAR',
            load_dim=5,
            use_dim=5,
            file_client_args=dict(backend='disk')),
        dict(
            type='LoadPointsFromMultiSweeps',
            sweeps_num=10,
            file_client_args=dict(backend='disk')),
        dict(
            type='DefaultFormatBundle3D',
            class_names=[
                'car', 'truck', 'trailer', 'bus', 'construction_vehicle',
                'bicycle', 'motorcycle', 'pedestrian', 'traffic_cone',
                'barrier'
            ],
            with_label=False),
        dict(type='Collect3D', keys=['points'])
    ])
optimizer = dict(type='AdamW', lr=1.25e-05, weight_decay=0.01)
optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))
lr_config = dict(
    policy='cyclic',
    target_ratio=(10, 0.0001),
    cyclic_times=1,
    step_ratio_up=0.4)
momentum_config = dict(
    policy='cyclic',
    target_ratio=(0.8947368421052632, 1),
    cyclic_times=1,
    step_ratio_up=0.4)
runner = dict(type='EpochBasedRunner', max_epochs=20)
checkpoint_config = dict(interval=1, max_keep_ckpts=1)
log_config = dict(
    interval=50,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
work_dir = './work_dirs/lidar_0075v_900q_cascadeded_split40/2dbackbone更改SyncBN'
load_from = None
resume_from = None
workflow = [('train', 1)]
opencv_num_threads = 0
mp_start_method = 'fork'
plugin = 'plugin/futr3d'
voxel_size = [0.075, 0.075, 0.2]
center_head = dict(
    type='CenterHead',
    in_channels=512,
    tasks=[
        dict(num_class=1, class_names=['car']),
        dict(num_class=2, class_names=['truck', 'construction_vehicle']),
        dict(num_class=2, class_names=['bus', 'trailer']),
        dict(num_class=1, class_names=['barrier']),
        dict(num_class=2, class_names=['motorcycle', 'bicycle']),
        dict(num_class=2, class_names=['pedestrian', 'traffic_cone'])
    ],
    common_heads=dict(
        reg=(2, 2), height=(1, 2), dim=(3, 2), rot=(2, 2), vel=(2, 2)),
    share_conv_channel=64,
    bbox_coder=dict(
        type='CenterPointBBoxCoder',
        pc_range=[-54, -54],
        post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],
        max_num=500,
        score_threshold=0.1,
        out_size_factor=8,
        voxel_size=[0.075, 0.075],
        code_size=9),
    separate_head=dict(type='SeparateHead', init_bias=-2.19, final_kernel=3),
    loss_cls=dict(type='GaussianFocalLoss', reduction='mean'),
    loss_bbox=dict(type='L1Loss', reduction='mean', loss_weight=0.25),
    norm_bbox=True)
model = dict(
    type='FUTR3D',
    aux_weight=0.5,
    pts_voxel_layer=dict(
        max_num_points=10,
        voxel_size=[0.075, 0.075, 0.2],
        max_voxels=(120000, 160000),
        point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0]),
    pts_voxel_encoder=dict(type='HardSimpleVFE', num_features=5),
    pts_middle_encoder=dict(
        type='SparseEncoder',
        in_channels=5,
        sparse_shape=[41, 1440, 1440],
        output_channels=128,
        order=('conv', 'norm', 'act'),
        encoder_channels=((16, 16, 32), (32, 32, 64), (64, 64, 128), (128,
                                                                      128)),
        encoder_paddings=((0, 0, 1), (0, 0, 1), (0, 0, [0, 1, 1]), (0, 0)),
        block_type='basicblock'),
    pts_backbone=dict(
        type='CascadeDEDBackbone',
        in_channels=256,
        model_cfg=dict(
            FEATURE_DIM=256,
            NUM_LAYERS=4,
            NUM_SBB=[2, 1, 1],
            DOWN_STRIDES=[1, 2, 2])),
    pts_neck=dict(
        type='FPN',
        norm_cfg=dict(type='BN2d', eps=0.001, momentum=0.01),
        act_cfg=dict(type='ReLU', inplace=False),
        in_channels=[256],
        out_channels=256,
        start_level=0,
        add_extra_convs=True,
        num_outs=4,
        relu_before_extra_convs=True),
    pts_bbox_head=dict(
        type='FUTR3DHead',
        use_dab=True,
        anchor_size=3,
        use_aux=True,
        aux_head=dict(
            type='CenterHead',
            in_channels=512,
            tasks=[
                dict(num_class=1, class_names=['car']),
                dict(
                    num_class=2, class_names=['truck',
                                              'construction_vehicle']),
                dict(num_class=2, class_names=['bus', 'trailer']),
                dict(num_class=1, class_names=['barrier']),
                dict(num_class=2, class_names=['motorcycle', 'bicycle']),
                dict(num_class=2, class_names=['pedestrian', 'traffic_cone'])
            ],
            common_heads=dict(
                reg=(2, 2), height=(1, 2), dim=(3, 2), rot=(2, 2), vel=(2, 2)),
            share_conv_channel=64,
            bbox_coder=dict(
                type='CenterPointBBoxCoder',
                pc_range=[-54, -54],
                post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],
                max_num=500,
                score_threshold=0.1,
                out_size_factor=8,
                voxel_size=[0.075, 0.075],
                code_size=9),
            separate_head=dict(
                type='SeparateHead', init_bias=-2.19, final_kernel=3),
            loss_cls=dict(type='GaussianFocalLoss', reduction='mean'),
            loss_bbox=dict(type='L1Loss', reduction='mean', loss_weight=0.25),
            norm_bbox=True),
        mix_selection=False,
        num_query=900,
        num_classes=10,
        in_channels=256,
        pc_range=[-54, -54, -5.0, 54, 54, 3.0],
        sync_cls_avg_factor=True,
        with_box_refine=True,
        as_two_stage=False,
        code_weights=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2],
        transformer=dict(
            type='FUTR3DTransformer',
            use_dab=True,
            decoder=dict(
                type='FUTR3DTransformerDecoder',
                num_layers=6,
                use_dab=True,
                anchor_size=3,
                return_intermediate=True,
                transformerlayers=dict(
                    type='DetrTransformerDecoderLayer',
                    attn_cfgs=[
                        dict(
                            type='MultiheadAttention',
                            embed_dims=256,
                            num_heads=8,
                            dropout=0.1),
                        dict(type='FUTR3DAttention', embed_dims=256)
                    ],
                    feedforward_channels=1024,
                    ffn_dropout=0.1,
                    operation_order=('self_attn', 'norm', 'cross_attn', 'norm',
                                     'ffn', 'norm')))),
        positional_encoding=dict(
            type='SinePositionalEncoding',
            num_feats=128,
            normalize=True,
            offset=-0.5),
        loss_cls=dict(
            type='FocalLoss',
            use_sigmoid=True,
            gamma=2.0,
            alpha=0.25,
            loss_weight=2.0),
        loss_bbox=dict(type='L1Loss', loss_weight=0.25),
        loss_iou=dict(type='GIoULoss', loss_weight=0)),
    train_cfg=dict(
        pts=dict(
            point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0],
            pc_range=[-54, -54, -5.0, 54, 54, 3.0],
            grid_size=[1440, 1440, 40],
            voxel_size=[0.075, 0.075, 0.2],
            out_size_factor=8,
            dense_reg=1,
            gaussian_overlap=0.1,
            max_objs=500,
            min_radius=2,
            code_weights=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.2, 0.2],
            assigner=dict(
                type='HungarianAssigner3D',
                cls_cost=dict(type='FocalLossCost', weight=2.0),
                reg_cost=dict(type='BBox3DL1Cost', weight=0.25),
                iou_cost=dict(type='IoUCost', weight=0)))),
    test_cfg=dict(
        pts=dict(
            pc_range=[-54, -54],
            post_center_limit_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0],
            max_per_img=500,
            max_pool_nms=False,
            min_radius=[4, 12, 10, 1, 0.85, 0.175],
            out_size_factor=8,
            voxel_size=[0.075, 0.075],
            nms_type='circle',
            pre_max_size=1000,
            post_max_size=83,
            nms_thr=0.2,
            max_num=300,
            score_threshold=0,
            post_center_range=[-61.2, -61.2, -10.0, 61.2, 61.2, 10.0])))
db_sampler = dict(
    data_root='data/nuscenes/',
    info_path='data/nuscenes/nuscenes_dbinfos_train.pkl',
    rate=1.0,
    prepare=dict(
        filter_by_difficulty=[-1],
        filter_by_min_points=dict(
            car=5,
            truck=5,
            bus=5,
            trailer=5,
            construction_vehicle=5,
            traffic_cone=5,
            barrier=5,
            motorcycle=5,
            bicycle=5,
            pedestrian=5)),
    classes=[
        'car', 'truck', 'construction_vehicle', 'bus', 'trailer', 'barrier',
        'motorcycle', 'bicycle', 'pedestrian', 'traffic_cone'
    ],
    sample_groups=dict(
        car=2,
        truck=3,
        construction_vehicle=7,
        bus=4,
        trailer=6,
        barrier=2,
        motorcycle=6,
        bicycle=6,
        pedestrian=2,
        traffic_cone=2),
    points_loader=dict(
        type='LoadPointsFromFile',
        coord_type='LIDAR',
        load_dim=5,
        use_dim=[0, 1, 2, 3, 4],
        file_client_args=dict(backend='disk')))
find_unused_parameters = True
custom_hooks = [dict(type='FadeOjectSampleHook', num_last_epochs=5)]
gpu_ids = range(0, 4)

2025-04-25 07:15:36,272 - mmdet - INFO - 设置随机种子为 0, deterministic: False
2025-04-25 07:15:37,092 - mmdet - INFO - initialize FPN with init_cfg {'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
Name of parameter - Initialization information

pts_middle_encoder.conv_input.0.weight - torch.Size([16, 3, 3, 3, 5]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.conv_input.1.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.conv_input.1.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.0.conv1.weight - torch.Size([16, 3, 3, 3, 16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.0.bn1.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.0.bn1.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.0.conv2.weight - torch.Size([16, 3, 3, 3, 16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.0.bn2.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.0.bn2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.1.conv1.weight - torch.Size([16, 3, 3, 3, 16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.1.bn1.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.1.bn1.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.1.conv2.weight - torch.Size([16, 3, 3, 3, 16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.1.bn2.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.1.bn2.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.2.0.weight - torch.Size([32, 3, 3, 3, 16]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.2.1.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer1.2.1.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.0.conv1.weight - torch.Size([32, 3, 3, 3, 32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.0.bn1.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.0.bn1.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.0.conv2.weight - torch.Size([32, 3, 3, 3, 32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.0.bn2.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.0.bn2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.1.conv1.weight - torch.Size([32, 3, 3, 3, 32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.1.bn1.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.1.bn1.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.1.conv2.weight - torch.Size([32, 3, 3, 3, 32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.1.bn2.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.1.bn2.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.2.0.weight - torch.Size([64, 3, 3, 3, 32]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.2.1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer2.2.1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.0.conv1.weight - torch.Size([64, 3, 3, 3, 64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.0.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.0.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.0.conv2.weight - torch.Size([64, 3, 3, 3, 64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.0.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.0.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.1.conv1.weight - torch.Size([64, 3, 3, 3, 64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.1.bn1.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.1.bn1.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.1.conv2.weight - torch.Size([64, 3, 3, 3, 64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.1.bn2.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.1.bn2.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.2.0.weight - torch.Size([128, 3, 3, 3, 64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.2.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer3.2.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.0.conv1.weight - torch.Size([128, 3, 3, 3, 128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.0.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.0.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.0.conv2.weight - torch.Size([128, 3, 3, 3, 128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.0.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.0.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.1.conv1.weight - torch.Size([128, 3, 3, 3, 128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.1.bn1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.1.bn1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.1.conv2.weight - torch.Size([128, 3, 3, 3, 128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.1.bn2.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.encoder_layers.encoder_layer4.1.bn2.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.conv_out.0.weight - torch.Size([128, 3, 1, 1, 128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.conv_out.1.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_middle_encoder.conv_out.1.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.0.0.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.0.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.0.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.0.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.0.0.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.0.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.0.1.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.0.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.0.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.0.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.0.1.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.0.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.1.0.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.1.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.1.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.1.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.1.0.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.1.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.1.0.downsample_layer.0.weight - torch.Size([256, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.1.0.downsample_layer.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.1.0.downsample_layer.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.1.1.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.1.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.1.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.1.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.1.1.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.1.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.2.0.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.2.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.2.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.2.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.2.0.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.2.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.2.0.downsample_layer.0.weight - torch.Size([256, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.2.0.downsample_layer.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.2.0.downsample_layer.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.2.1.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.2.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.2.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.2.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.2.1.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.encoder.2.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.decoder.0.0.weight - torch.Size([256, 256, 2, 2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.decoder.0.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.decoder.0.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.decoder.1.0.weight - torch.Size([256, 256, 2, 2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.decoder.1.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.decoder.1.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.decoder_norm.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.decoder_norm.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.decoder_norm.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.0.decoder_norm.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.0.0.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.0.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.0.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.0.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.0.0.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.0.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.0.1.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.0.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.0.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.0.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.0.1.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.0.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.1.0.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.1.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.1.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.1.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.1.0.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.1.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.1.0.downsample_layer.0.weight - torch.Size([256, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.1.0.downsample_layer.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.1.0.downsample_layer.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.1.1.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.1.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.1.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.1.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.1.1.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.1.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.2.0.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.2.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.2.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.2.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.2.0.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.2.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.2.0.downsample_layer.0.weight - torch.Size([256, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.2.0.downsample_layer.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.2.0.downsample_layer.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.2.1.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.2.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.2.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.2.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.2.1.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.encoder.2.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.decoder.0.0.weight - torch.Size([256, 256, 2, 2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.decoder.0.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.decoder.0.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.decoder.1.0.weight - torch.Size([256, 256, 2, 2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.decoder.1.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.decoder.1.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.decoder_norm.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.decoder_norm.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.decoder_norm.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.1.decoder_norm.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.0.0.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.0.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.0.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.0.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.0.0.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.0.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.0.1.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.0.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.0.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.0.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.0.1.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.0.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.1.0.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.1.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.1.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.1.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.1.0.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.1.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.1.0.downsample_layer.0.weight - torch.Size([256, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.1.0.downsample_layer.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.1.0.downsample_layer.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.1.1.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.1.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.1.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.1.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.1.1.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.1.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.2.0.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.2.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.2.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.2.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.2.0.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.2.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.2.0.downsample_layer.0.weight - torch.Size([256, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.2.0.downsample_layer.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.2.0.downsample_layer.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.2.1.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.2.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.2.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.2.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.2.1.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.encoder.2.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.decoder.0.0.weight - torch.Size([256, 256, 2, 2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.decoder.0.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.decoder.0.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.decoder.1.0.weight - torch.Size([256, 256, 2, 2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.decoder.1.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.decoder.1.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.decoder_norm.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.decoder_norm.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.decoder_norm.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.2.decoder_norm.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.0.0.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.0.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.0.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.0.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.0.0.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.0.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.0.1.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.0.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.0.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.0.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.0.1.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.0.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.1.0.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.1.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.1.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.1.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.1.0.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.1.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.1.0.downsample_layer.0.weight - torch.Size([256, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.1.0.downsample_layer.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.1.0.downsample_layer.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.1.1.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.1.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.1.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.1.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.1.1.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.1.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.2.0.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.2.0.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.2.0.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.2.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.2.0.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.2.0.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.2.0.downsample_layer.0.weight - torch.Size([256, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.2.0.downsample_layer.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.2.0.downsample_layer.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.2.1.conv1.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.2.1.bn1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.2.1.bn1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.2.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.2.1.bn2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.encoder.2.1.bn2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.decoder.0.0.weight - torch.Size([256, 256, 2, 2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.decoder.0.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.decoder.0.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.decoder.1.0.weight - torch.Size([256, 256, 2, 2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.decoder.1.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.decoder.1.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.decoder_norm.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.decoder_norm.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.decoder_norm.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_backbone.layers.3.decoder_norm.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.lateral_convs.0.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

pts_neck.lateral_convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.lateral_convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

pts_neck.fpn_convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

pts_neck.fpn_convs.1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

pts_neck.fpn_convs.2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

pts_neck.fpn_convs.3.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_neck.fpn_convs.3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.level_embeds - torch.Size([4, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.attentions.0.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.attentions.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.attentions.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.attentions.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.ffns.0.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.ffns.0.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.ffns.0.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.0.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.0.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.ffns.0.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.ffns.0.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.ffns.0.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.1.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.1.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.ffns.0.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.ffns.0.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.ffns.0.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.2.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.2.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.ffns.0.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.ffns.0.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.ffns.0.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.3.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.3.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.ffns.0.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.ffns.0.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.ffns.0.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.4.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.4.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.attn.in_proj_weight - torch.Size([768, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.attn.in_proj_bias - torch.Size([768]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.attn.out_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.0.attn.out_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.sampling_offsets.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.sampling_offsets.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.attention_weights.weight - torch.Size([128, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.attention_weights.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.value_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.value_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.output_proj.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.attentions.1.output_proj.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.ffns.0.layers.0.0.weight - torch.Size([1024, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.ffns.0.layers.0.0.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.ffns.0.layers.1.weight - torch.Size([256, 1024]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.layers.5.ffns.0.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.norms.0.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.norms.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.norms.1.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.norms.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.norms.2.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.layers.5.norms.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.query_scale.layers.0.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.query_scale.layers.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.query_scale.layers.1.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.query_scale.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.ref_point_head.layers.0.weight - torch.Size([256, 384]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.ref_point_head.layers.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.transformer.decoder.ref_point_head.layers.1.weight - torch.Size([256, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.transformer.decoder.ref_point_head.layers.1.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.cls_branches.0.weight - torch.Size([10, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.cls_branches.0.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.cls_branches.1.weight - torch.Size([10, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.cls_branches.1.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.cls_branches.2.weight - torch.Size([10, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.cls_branches.2.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.cls_branches.3.weight - torch.Size([10, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.cls_branches.3.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.cls_branches.4.weight - torch.Size([10, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.cls_branches.4.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.cls_branches.5.weight - torch.Size([10, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.cls_branches.5.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.0.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.0.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.0.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.0.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.0.4.weight - torch.Size([10, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.0.4.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.1.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.1.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.1.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.1.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.1.4.weight - torch.Size([10, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.1.4.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.2.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.2.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.2.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.2.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.2.4.weight - torch.Size([10, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.2.4.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.3.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.3.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.3.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.3.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.3.4.weight - torch.Size([10, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.3.4.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.4.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.4.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.4.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.4.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.4.4.weight - torch.Size([10, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.4.4.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.5.0.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.5.0.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.5.2.weight - torch.Size([256, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.5.2.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.reg_branches.5.4.weight - torch.Size([10, 256]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.reg_branches.5.4.bias - torch.Size([10]): 
Initialized by user-defined `init_weights` in FUTR3DHead  

pts_bbox_head.tgt_embed.weight - torch.Size([900, 256]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.refpoint_embed.weight - torch.Size([900, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.shared_conv.conv.weight - torch.Size([64, 512, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.shared_conv.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.shared_conv.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.reg.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.reg.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.reg.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.reg.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.reg.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.height.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.height.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.height.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.height.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.height.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.dim.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.dim.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.dim.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.dim.1.weight - torch.Size([3, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.dim.1.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.rot.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.rot.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.rot.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.rot.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.rot.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.vel.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.vel.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.vel.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.vel.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.vel.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.heatmap.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.heatmap.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.heatmap.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.heatmap.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.0.heatmap.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.reg.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.reg.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.reg.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.reg.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.reg.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.height.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.height.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.height.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.height.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.height.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.dim.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.dim.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.dim.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.dim.1.weight - torch.Size([3, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.dim.1.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.rot.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.rot.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.rot.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.rot.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.rot.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.vel.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.vel.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.vel.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.vel.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.vel.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.heatmap.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.heatmap.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.heatmap.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.heatmap.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.1.heatmap.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.reg.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.reg.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.reg.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.reg.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.reg.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.height.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.height.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.height.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.height.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.height.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.dim.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.dim.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.dim.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.dim.1.weight - torch.Size([3, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.dim.1.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.rot.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.rot.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.rot.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.rot.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.rot.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.vel.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.vel.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.vel.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.vel.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.vel.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.heatmap.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.heatmap.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.heatmap.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.heatmap.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.2.heatmap.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.reg.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.reg.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.reg.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.reg.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.reg.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.height.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.height.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.height.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.height.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.height.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.dim.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.dim.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.dim.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.dim.1.weight - torch.Size([3, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.dim.1.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.rot.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.rot.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.rot.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.rot.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.rot.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.vel.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.vel.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.vel.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.vel.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.vel.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.heatmap.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.heatmap.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.heatmap.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.heatmap.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.3.heatmap.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.reg.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.reg.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.reg.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.reg.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.reg.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.height.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.height.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.height.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.height.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.height.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.dim.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.dim.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.dim.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.dim.1.weight - torch.Size([3, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.dim.1.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.rot.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.rot.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.rot.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.rot.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.rot.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.vel.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.vel.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.vel.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.vel.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.vel.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.heatmap.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.heatmap.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.heatmap.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.heatmap.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.4.heatmap.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.reg.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.reg.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.reg.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.reg.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.reg.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.height.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.height.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.height.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.height.1.weight - torch.Size([1, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.height.1.bias - torch.Size([1]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.dim.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.dim.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.dim.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.dim.1.weight - torch.Size([3, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.dim.1.bias - torch.Size([3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.rot.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.rot.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.rot.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.rot.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.rot.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.vel.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.vel.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.vel.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.vel.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.vel.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.heatmap.0.conv.weight - torch.Size([64, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.heatmap.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.heatmap.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.heatmap.1.weight - torch.Size([2, 64, 3, 3]): 
The value is the same before and after calling `init_weights` of FUTR3D  

pts_bbox_head.aux_head.task_heads.5.heatmap.1.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of FUTR3D  
2025-04-25 07:15:37,192 - mmdet - INFO - Model:
FUTR3D(
  (pts_voxel_layer): Voxelization(voxel_size=[0.075, 0.075, 0.2], point_cloud_range=[-54, -54, -5.0, 54, 54, 3.0], max_num_points=10, max_voxels=(120000, 160000), deterministic=True)
  (pts_voxel_encoder): HardSimpleVFE()
  (pts_middle_encoder): SparseEncoder(
    (conv_input): SparseSequential(
      (0): SubMConv3d(5, 16, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
      (1): SyncBatchNorm(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
    (encoder_layers): SparseSequential(
      (encoder_layer1): SparseSequential(
        (0): SparseBasicBlock(
          (conv1): SubMConv3d(16, 16, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): SyncBatchNorm(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(16, 16, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): SyncBatchNorm(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): SparseBasicBlock(
          (conv1): SubMConv3d(16, 16, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): SyncBatchNorm(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(16, 16, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): SyncBatchNorm(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): SparseSequential(
          (0): SparseConv3d(16, 32, kernel_size=[3, 3, 3], stride=[2, 2, 2], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (1): SyncBatchNorm(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (encoder_layer2): SparseSequential(
        (0): SparseBasicBlock(
          (conv1): SubMConv3d(32, 32, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): SyncBatchNorm(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(32, 32, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): SyncBatchNorm(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): SparseBasicBlock(
          (conv1): SubMConv3d(32, 32, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): SyncBatchNorm(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(32, 32, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): SyncBatchNorm(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): SparseSequential(
          (0): SparseConv3d(32, 64, kernel_size=[3, 3, 3], stride=[2, 2, 2], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (1): SyncBatchNorm(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (encoder_layer3): SparseSequential(
        (0): SparseBasicBlock(
          (conv1): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): SyncBatchNorm(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): SyncBatchNorm(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): SparseBasicBlock(
          (conv1): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): SyncBatchNorm(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(64, 64, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): SyncBatchNorm(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (2): SparseSequential(
          (0): SparseConv3d(64, 128, kernel_size=[3, 3, 3], stride=[2, 2, 2], padding=[0, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (1): SyncBatchNorm(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
      )
      (encoder_layer4): SparseSequential(
        (0): SparseBasicBlock(
          (conv1): SubMConv3d(128, 128, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): SyncBatchNorm(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(128, 128, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): SyncBatchNorm(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
        (1): SparseBasicBlock(
          (conv1): SubMConv3d(128, 128, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn1): SyncBatchNorm(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (conv2): SubMConv3d(128, 128, kernel_size=[3, 3, 3], stride=[1, 1, 1], padding=[1, 1, 1], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
          (bn2): SyncBatchNorm(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (relu): ReLU(inplace=True)
        )
      )
    )
    (conv_out): SparseSequential(
      (0): SparseConv3d(128, 128, kernel_size=[3, 1, 1], stride=[2, 1, 1], padding=[0, 0, 0], dilation=[1, 1, 1], output_padding=[0, 0, 0], bias=False, algo=ConvAlgo.MaskImplicitGemm)
      (1): SyncBatchNorm(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
      (2): ReLU(inplace=True)
    )
  )
  (pts_backbone): CascadeDEDBackbone(
    (layers): ModuleList(
      (0): DEDBackbone(
        (encoder): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
            )
            (1): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
              (downsample_layer): Sequential(
                (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
                (1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              )
            )
            (1): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
              (downsample_layer): Sequential(
                (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
                (1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              )
            )
            (1): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
            )
          )
        )
        (decoder): ModuleList(
          (0): Sequential(
            (0): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2), bias=False)
            (1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (1): Sequential(
            (0): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2), bias=False)
            (1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
        )
        (decoder_norm): ModuleList(
          (0): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
      (1): DEDBackbone(
        (encoder): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
            )
            (1): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
              (downsample_layer): Sequential(
                (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
                (1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              )
            )
            (1): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
              (downsample_layer): Sequential(
                (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
                (1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              )
            )
            (1): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
            )
          )
        )
        (decoder): ModuleList(
          (0): Sequential(
            (0): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2), bias=False)
            (1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (1): Sequential(
            (0): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2), bias=False)
            (1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
        )
        (decoder_norm): ModuleList(
          (0): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
      (2): DEDBackbone(
        (encoder): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
            )
            (1): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
              (downsample_layer): Sequential(
                (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
                (1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              )
            )
            (1): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
              (downsample_layer): Sequential(
                (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
                (1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              )
            )
            (1): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
            )
          )
        )
        (decoder): ModuleList(
          (0): Sequential(
            (0): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2), bias=False)
            (1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (1): Sequential(
            (0): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2), bias=False)
            (1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
        )
        (decoder_norm): ModuleList(
          (0): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
      (3): DEDBackbone(
        (encoder): ModuleList(
          (0): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
            )
            (1): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
            )
          )
          (1): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
              (downsample_layer): Sequential(
                (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
                (1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              )
            )
            (1): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
            )
          )
          (2): Sequential(
            (0): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
              (downsample_layer): Sequential(
                (0): Conv2d(256, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
                (1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              )
            )
            (1): BasicBlock(
              (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu1): ReLU()
              (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn2): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
              (relu2): ReLU()
            )
          )
        )
        (decoder): ModuleList(
          (0): Sequential(
            (0): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2), bias=False)
            (1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
          (1): Sequential(
            (0): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2), bias=False)
            (1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
            (2): ReLU()
          )
        )
        (decoder_norm): ModuleList(
          (0): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (1): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
  )
  (pts_neck): FPN(
    (lateral_convs): ModuleList(
      (0): ConvModule(
        (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
    )
    (fpn_convs): ModuleList(
      (0): ConvModule(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
      (1): ConvModule(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
      (2): ConvModule(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
      (3): ConvModule(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn): SyncBatchNorm(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
    )
  )
  init_cfg={'type': 'Xavier', 'layer': 'Conv2d', 'distribution': 'uniform'}
  (pts_bbox_head): FUTR3DHead(
    (loss_cls): FocalLoss()
    (loss_bbox): L1Loss()
    (loss_iou): GIoULoss()
    (activate): ReLU(inplace=True)
    (positional_encoding): SinePositionalEncoding(num_feats=128, temperature=10000, normalize=True, scale=6.283185307179586, eps=1e-06)
    (transformer): FUTR3DTransformer(
      (decoder): FUTR3DTransformerDecoder(
        (layers): ModuleList(
          (0): DetrTransformerDecoderLayer(
            (attentions): ModuleList(
              (0): MultiheadAttention(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.0, inplace=False)
                (dropout_layer): Dropout(p=0.1, inplace=False)
              )
              (1): FUTR3DAttention(
                (dropout): Dropout(p=0.1, inplace=False)
                (sampling_offsets): Linear(in_features=256, out_features=256, bias=True)
                (attention_weights): Linear(in_features=256, out_features=128, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
            )
            (ffns): ModuleList(
              (0): FFN(
                (activate): ReLU(inplace=True)
                (layers): Sequential(
                  (0): Sequential(
                    (0): Linear(in_features=256, out_features=1024, bias=True)
                    (1): ReLU(inplace=True)
                    (2): Dropout(p=0.1, inplace=False)
                  )
                  (1): Linear(in_features=1024, out_features=256, bias=True)
                  (2): Dropout(p=0.1, inplace=False)
                )
                (dropout_layer): Identity()
              )
            )
            (norms): ModuleList(
              (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (1): DetrTransformerDecoderLayer(
            (attentions): ModuleList(
              (0): MultiheadAttention(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.0, inplace=False)
                (dropout_layer): Dropout(p=0.1, inplace=False)
              )
              (1): FUTR3DAttention(
                (dropout): Dropout(p=0.1, inplace=False)
                (sampling_offsets): Linear(in_features=256, out_features=256, bias=True)
                (attention_weights): Linear(in_features=256, out_features=128, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
            )
            (ffns): ModuleList(
              (0): FFN(
                (activate): ReLU(inplace=True)
                (layers): Sequential(
                  (0): Sequential(
                    (0): Linear(in_features=256, out_features=1024, bias=True)
                    (1): ReLU(inplace=True)
                    (2): Dropout(p=0.1, inplace=False)
                  )
                  (1): Linear(in_features=1024, out_features=256, bias=True)
                  (2): Dropout(p=0.1, inplace=False)
                )
                (dropout_layer): Identity()
              )
            )
            (norms): ModuleList(
              (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (2): DetrTransformerDecoderLayer(
            (attentions): ModuleList(
              (0): MultiheadAttention(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.0, inplace=False)
                (dropout_layer): Dropout(p=0.1, inplace=False)
              )
              (1): FUTR3DAttention(
                (dropout): Dropout(p=0.1, inplace=False)
                (sampling_offsets): Linear(in_features=256, out_features=256, bias=True)
                (attention_weights): Linear(in_features=256, out_features=128, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
            )
            (ffns): ModuleList(
              (0): FFN(
                (activate): ReLU(inplace=True)
                (layers): Sequential(
                  (0): Sequential(
                    (0): Linear(in_features=256, out_features=1024, bias=True)
                    (1): ReLU(inplace=True)
                    (2): Dropout(p=0.1, inplace=False)
                  )
                  (1): Linear(in_features=1024, out_features=256, bias=True)
                  (2): Dropout(p=0.1, inplace=False)
                )
                (dropout_layer): Identity()
              )
            )
            (norms): ModuleList(
              (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (3): DetrTransformerDecoderLayer(
            (attentions): ModuleList(
              (0): MultiheadAttention(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.0, inplace=False)
                (dropout_layer): Dropout(p=0.1, inplace=False)
              )
              (1): FUTR3DAttention(
                (dropout): Dropout(p=0.1, inplace=False)
                (sampling_offsets): Linear(in_features=256, out_features=256, bias=True)
                (attention_weights): Linear(in_features=256, out_features=128, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
            )
            (ffns): ModuleList(
              (0): FFN(
                (activate): ReLU(inplace=True)
                (layers): Sequential(
                  (0): Sequential(
                    (0): Linear(in_features=256, out_features=1024, bias=True)
                    (1): ReLU(inplace=True)
                    (2): Dropout(p=0.1, inplace=False)
                  )
                  (1): Linear(in_features=1024, out_features=256, bias=True)
                  (2): Dropout(p=0.1, inplace=False)
                )
                (dropout_layer): Identity()
              )
            )
            (norms): ModuleList(
              (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (4): DetrTransformerDecoderLayer(
            (attentions): ModuleList(
              (0): MultiheadAttention(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.0, inplace=False)
                (dropout_layer): Dropout(p=0.1, inplace=False)
              )
              (1): FUTR3DAttention(
                (dropout): Dropout(p=0.1, inplace=False)
                (sampling_offsets): Linear(in_features=256, out_features=256, bias=True)
                (attention_weights): Linear(in_features=256, out_features=128, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
            )
            (ffns): ModuleList(
              (0): FFN(
                (activate): ReLU(inplace=True)
                (layers): Sequential(
                  (0): Sequential(
                    (0): Linear(in_features=256, out_features=1024, bias=True)
                    (1): ReLU(inplace=True)
                    (2): Dropout(p=0.1, inplace=False)
                  )
                  (1): Linear(in_features=1024, out_features=256, bias=True)
                  (2): Dropout(p=0.1, inplace=False)
                )
                (dropout_layer): Identity()
              )
            )
            (norms): ModuleList(
              (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
          (5): DetrTransformerDecoderLayer(
            (attentions): ModuleList(
              (0): MultiheadAttention(
                (attn): MultiheadAttention(
                  (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                )
                (proj_drop): Dropout(p=0.0, inplace=False)
                (dropout_layer): Dropout(p=0.1, inplace=False)
              )
              (1): FUTR3DAttention(
                (dropout): Dropout(p=0.1, inplace=False)
                (sampling_offsets): Linear(in_features=256, out_features=256, bias=True)
                (attention_weights): Linear(in_features=256, out_features=128, bias=True)
                (value_proj): Linear(in_features=256, out_features=256, bias=True)
                (output_proj): Linear(in_features=256, out_features=256, bias=True)
              )
            )
            (ffns): ModuleList(
              (0): FFN(
                (activate): ReLU(inplace=True)
                (layers): Sequential(
                  (0): Sequential(
                    (0): Linear(in_features=256, out_features=1024, bias=True)
                    (1): ReLU(inplace=True)
                    (2): Dropout(p=0.1, inplace=False)
                  )
                  (1): Linear(in_features=1024, out_features=256, bias=True)
                  (2): Dropout(p=0.1, inplace=False)
                )
                (dropout_layer): Identity()
              )
            )
            (norms): ModuleList(
              (0): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
              (2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
            )
          )
        )
        (query_scale): MLP(
          (layers): ModuleList(
            (0): Linear(in_features=256, out_features=256, bias=True)
            (1): Linear(in_features=256, out_features=256, bias=True)
          )
        )
        (ref_point_head): MLP(
          (layers): ModuleList(
            (0): Linear(in_features=384, out_features=256, bias=True)
            (1): Linear(in_features=256, out_features=256, bias=True)
          )
        )
      )
    )
    (cls_branches): ModuleList(
      (0): Linear(in_features=256, out_features=10, bias=True)
      (1): Linear(in_features=256, out_features=10, bias=True)
      (2): Linear(in_features=256, out_features=10, bias=True)
      (3): Linear(in_features=256, out_features=10, bias=True)
      (4): Linear(in_features=256, out_features=10, bias=True)
      (5): Linear(in_features=256, out_features=10, bias=True)
    )
    (reg_branches): ModuleList(
      (0): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (1): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (2): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (3): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (4): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
      (5): Sequential(
        (0): Linear(in_features=256, out_features=256, bias=True)
        (1): ReLU()
        (2): Linear(in_features=256, out_features=256, bias=True)
        (3): ReLU()
        (4): Linear(in_features=256, out_features=10, bias=True)
      )
    )
    (tgt_embed): Embedding(900, 256)
    (refpoint_embed): Embedding(900, 3)
    (aux_head): CenterHead(
      (loss_cls): GaussianFocalLoss()
      (loss_bbox): L1Loss()
      (shared_conv): ConvModule(
        (conv): Conv2d(512, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
      (task_heads): ModuleList(
        (0): SeparateHead(
          (reg): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (height): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (dim): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (rot): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (vel): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (heatmap): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
        (1): SeparateHead(
          (reg): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (height): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (dim): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (rot): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (vel): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (heatmap): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
        (2): SeparateHead(
          (reg): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (height): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (dim): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (rot): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (vel): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (heatmap): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
        (3): SeparateHead(
          (reg): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (height): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (dim): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (rot): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (vel): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (heatmap): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
        (4): SeparateHead(
          (reg): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (height): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (dim): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (rot): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (vel): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (heatmap): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
        (5): SeparateHead(
          (reg): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (height): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (dim): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (rot): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (vel): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
          (heatmap): Sequential(
            (0): ConvModule(
              (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
              (bn): SyncBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (activate): ReLU(inplace=True)
            )
            (1): Conv2d(64, 2, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
        init_cfg={'type': 'Kaiming', 'layer': 'Conv2d'}
      )
    )
  )
)
2025-04-25 07:16:10,824 - mmdet - INFO - Start running, host: root@mlkd-server2, work_dir: /root/disk/projects/FUTR3D/work_dirs/lidar_0075v_900q_cascadeded_split40/2dbackbone更改SyncBN
2025-04-25 07:16:10,825 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) CyclicLrUpdaterHook                
(HIGH        ) CyclicMomentumUpdaterHook          
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) CyclicLrUpdaterHook                
(HIGH        ) CyclicMomentumUpdaterHook          
(NORMAL      ) FadeOjectSampleHook                
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) CyclicLrUpdaterHook                
(HIGH        ) CyclicMomentumUpdaterHook          
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2025-04-25 07:16:10,825 - mmdet - INFO - workflow: [('train', 1)], max: 20 epochs
2025-04-25 07:16:10,825 - mmdet - INFO - Checkpoints will be saved to /root/disk/projects/FUTR3D/work_dirs/lidar_0075v_900q_cascadeded_split40/2dbackbone更改SyncBN by HardDiskBackend.
2025-04-25 07:17:29,259 - mmdet - INFO - Epoch [1][50/773]	lr: 1.252e-05, eta: 6:42:20, time: 1.567, data_time: 0.309, memory: 5774, loss_cls: 1.5683, loss_bbox: 2.2751, d0.loss_cls: 1.9309, d0.loss_bbox: 4.4662, d1.loss_cls: 1.8087, d1.loss_bbox: 2.3245, d2.loss_cls: 1.7037, d2.loss_bbox: 2.3045, d3.loss_cls: 1.6618, d3.loss_bbox: 2.2916, d4.loss_cls: 1.5907, d4.loss_bbox: 2.2811, aux_task0.loss_heatmap: 672.6782, aux_task0.loss_bbox: 1.0059, aux_task1.loss_heatmap: 633.6318, aux_task1.loss_bbox: 1.0168, aux_task2.loss_heatmap: 830.9053, aux_task2.loss_bbox: 1.1564, aux_task3.loss_heatmap: 1481.1636, aux_task3.loss_bbox: 0.8675, aux_task4.loss_heatmap: 536.2030, aux_task4.loss_bbox: 0.8672, aux_task5.loss_heatmap: 989.3472, aux_task5.loss_bbox: 0.9249, loss: 5175.9750, grad_norm: 27547.6704
2025-04-25 07:18:20,178 - mmdet - INFO - Epoch [1][100/773]	lr: 1.257e-05, eta: 5:30:52, time: 1.018, data_time: 0.004, memory: 5774, loss_cls: 1.1981, loss_bbox: 2.1711, d0.loss_cls: 1.6438, d0.loss_bbox: 4.4186, d1.loss_cls: 1.3173, d1.loss_bbox: 2.2725, d2.loss_cls: 1.2270, d2.loss_bbox: 2.2354, d3.loss_cls: 1.2318, d3.loss_bbox: 2.2094, d4.loss_cls: 1.1951, d4.loss_bbox: 2.1873, aux_task0.loss_heatmap: 329.7616, aux_task0.loss_bbox: 0.8676, aux_task1.loss_heatmap: 354.1936, aux_task1.loss_bbox: 0.8536, aux_task2.loss_heatmap: 535.1501, aux_task2.loss_bbox: 1.0611, aux_task3.loss_heatmap: 930.9954, aux_task3.loss_bbox: 0.7256, aux_task4.loss_heatmap: 348.0471, aux_task4.loss_bbox: 0.6662, aux_task5.loss_heatmap: 610.1414, aux_task5.loss_bbox: 0.7480, loss: 3136.5188, grad_norm: 17388.0801
2025-04-25 07:19:11,936 - mmdet - INFO - Epoch [1][150/773]	lr: 1.266e-05, eta: 5:07:54, time: 1.035, data_time: 0.004, memory: 5813, loss_cls: 1.1831, loss_bbox: 1.9398, d0.loss_cls: 1.3663, d0.loss_bbox: 4.1918, d1.loss_cls: 1.1820, d1.loss_bbox: 2.1343, d2.loss_cls: 1.1798, d2.loss_bbox: 2.0644, d3.loss_cls: 1.1860, d3.loss_bbox: 2.0134, d4.loss_cls: 1.1799, d4.loss_bbox: 1.9707, aux_task0.loss_heatmap: 187.5950, aux_task0.loss_bbox: 0.7149, aux_task1.loss_heatmap: 203.4922, aux_task1.loss_bbox: 0.7651, aux_task2.loss_heatmap: 262.2775, aux_task2.loss_bbox: 0.9054, aux_task3.loss_heatmap: 517.4589, aux_task3.loss_bbox: 0.5848, aux_task4.loss_heatmap: 190.2127, aux_task4.loss_bbox: 0.5706, aux_task5.loss_heatmap: 336.3048, aux_task5.loss_bbox: 0.6169, loss: 1723.0904, grad_norm: 11096.1951
2025-04-25 07:20:04,007 - mmdet - INFO - Epoch [1][200/773]	lr: 1.279e-05, eta: 4:56:23, time: 1.041, data_time: 0.004, memory: 5813, loss_cls: 1.1568, loss_bbox: 1.8404, d0.loss_cls: 1.1970, d0.loss_bbox: 3.5316, d1.loss_cls: 1.1591, d1.loss_bbox: 1.8827, d2.loss_cls: 1.1586, d2.loss_bbox: 1.8138, d3.loss_cls: 1.1613, d3.loss_bbox: 1.7967, d4.loss_cls: 1.1580, d4.loss_bbox: 1.8068, aux_task0.loss_heatmap: 131.2965, aux_task0.loss_bbox: 0.6176, aux_task1.loss_heatmap: 112.5641, aux_task1.loss_bbox: 0.6924, aux_task2.loss_heatmap: 150.8830, aux_task2.loss_bbox: 0.7965, aux_task3.loss_heatmap: 333.9082, aux_task3.loss_bbox: 0.5210, aux_task4.loss_heatmap: 104.8002, aux_task4.loss_bbox: 0.4862, aux_task5.loss_heatmap: 202.5851, aux_task5.loss_bbox: 0.5345, loss: 1059.3482, grad_norm: 7702.0949
2025-04-25 07:20:56,373 - mmdet - INFO - Epoch [1][250/773]	lr: 1.295e-05, eta: 4:49:26, time: 1.047, data_time: 0.004, memory: 5813, loss_cls: 1.1579, loss_bbox: 1.9607, d0.loss_cls: 1.1611, d0.loss_bbox: 2.3293, d1.loss_cls: 1.1619, d1.loss_bbox: 1.7801, d2.loss_cls: 1.1628, d2.loss_bbox: 1.8242, d3.loss_cls: 1.1627, d3.loss_bbox: 1.8769, d4.loss_cls: 1.1599, d4.loss_bbox: 1.9253, aux_task0.loss_heatmap: 77.5593, aux_task0.loss_bbox: 0.5497, aux_task1.loss_heatmap: 67.3793, aux_task1.loss_bbox: 0.6234, aux_task2.loss_heatmap: 96.1103, aux_task2.loss_bbox: 0.7086, aux_task3.loss_heatmap: 225.3246, aux_task3.loss_bbox: 0.4893, aux_task4.loss_heatmap: 67.1658, aux_task4.loss_bbox: 0.4765, aux_task5.loss_heatmap: 143.0454, aux_task5.loss_bbox: 0.5406, loss: 698.6355, grad_norm: 5496.4221
2025-04-25 07:21:48,570 - mmdet - INFO - Epoch [1][300/773]	lr: 1.315e-05, eta: 4:44:21, time: 1.044, data_time: 0.004, memory: 5813, loss_cls: 1.1661, loss_bbox: 1.8661, d0.loss_cls: 1.1601, d0.loss_bbox: 1.8731, d1.loss_cls: 1.1662, d1.loss_bbox: 1.8292, d2.loss_cls: 1.1649, d2.loss_bbox: 1.8500, d3.loss_cls: 1.1639, d3.loss_bbox: 1.8752, d4.loss_cls: 1.1637, d4.loss_bbox: 1.8721, aux_task0.loss_heatmap: 57.6746, aux_task0.loss_bbox: 0.5026, aux_task1.loss_heatmap: 49.9774, aux_task1.loss_bbox: 0.5738, aux_task2.loss_heatmap: 59.4514, aux_task2.loss_bbox: 0.6616, aux_task3.loss_heatmap: 175.6969, aux_task3.loss_bbox: 0.4573, aux_task4.loss_heatmap: 47.3838, aux_task4.loss_bbox: 0.4732, aux_task5.loss_heatmap: 91.3273, aux_task5.loss_bbox: 0.4949, loss: 502.8256, grad_norm: 4264.9833
2025-04-25 07:22:39,938 - mmdet - INFO - Epoch [1][350/773]	lr: 1.338e-05, eta: 4:39:53, time: 1.027, data_time: 0.004, memory: 5813, loss_cls: 1.1586, loss_bbox: 1.7852, d0.loss_cls: 1.1544, d0.loss_bbox: 1.8301, d1.loss_cls: 1.1576, d1.loss_bbox: 1.7968, d2.loss_cls: 1.1599, d2.loss_bbox: 1.7979, d3.loss_cls: 1.1601, d3.loss_bbox: 1.7980, d4.loss_cls: 1.1603, d4.loss_bbox: 1.7884, aux_task0.loss_heatmap: 33.9345, aux_task0.loss_bbox: 0.4904, aux_task1.loss_heatmap: 33.5658, aux_task1.loss_bbox: 0.5688, aux_task2.loss_heatmap: 39.8667, aux_task2.loss_bbox: 0.6311, aux_task3.loss_heatmap: 129.9462, aux_task3.loss_bbox: 0.4398, aux_task4.loss_heatmap: 31.3995, aux_task4.loss_bbox: 0.4576, aux_task5.loss_heatmap: 57.9812, aux_task5.loss_bbox: 0.4902, loss: 347.5193, grad_norm: 3158.2117
2025-04-25 07:23:31,523 - mmdet - INFO - Epoch [1][400/773]	lr: 1.365e-05, eta: 4:36:28, time: 1.032, data_time: 0.004, memory: 5816, loss_cls: 1.1600, loss_bbox: 1.7738, d0.loss_cls: 1.1567, d0.loss_bbox: 1.8097, d1.loss_cls: 1.1600, d1.loss_bbox: 1.7781, d2.loss_cls: 1.1606, d2.loss_bbox: 1.7706, d3.loss_cls: 1.1610, d3.loss_bbox: 1.7667, d4.loss_cls: 1.1597, d4.loss_bbox: 1.7663, aux_task0.loss_heatmap: 28.6375, aux_task0.loss_bbox: 0.4933, aux_task1.loss_heatmap: 24.8728, aux_task1.loss_bbox: 0.5527, aux_task2.loss_heatmap: 27.3963, aux_task2.loss_bbox: 0.6007, aux_task3.loss_heatmap: 89.7998, aux_task3.loss_bbox: 0.4434, aux_task4.loss_heatmap: 22.2538, aux_task4.loss_bbox: 0.4569, aux_task5.loss_heatmap: 42.9886, aux_task5.loss_bbox: 0.4780, loss: 256.5969, grad_norm: 2344.9525
2025-04-25 07:24:23,517 - mmdet - INFO - Epoch [1][450/773]	lr: 1.396e-05, eta: 4:33:50, time: 1.040, data_time: 0.004, memory: 5816, loss_cls: 1.1461, loss_bbox: 1.7625, d0.loss_cls: 1.1485, d0.loss_bbox: 1.7902, d1.loss_cls: 1.1512, d1.loss_bbox: 1.7645, d2.loss_cls: 1.1503, d2.loss_bbox: 1.7568, d3.loss_cls: 1.1487, d3.loss_bbox: 1.7543, d4.loss_cls: 1.1493, d4.loss_bbox: 1.7554, aux_task0.loss_heatmap: 19.9259, aux_task0.loss_bbox: 0.4643, aux_task1.loss_heatmap: 15.2852, aux_task1.loss_bbox: 0.5294, aux_task2.loss_heatmap: 18.5446, aux_task2.loss_bbox: 0.5668, aux_task3.loss_heatmap: 68.0851, aux_task3.loss_bbox: 0.4473, aux_task4.loss_heatmap: 15.7467, aux_task4.loss_bbox: 0.4483, aux_task5.loss_heatmap: 29.6708, aux_task5.loss_bbox: 0.4658, loss: 187.6582, grad_norm: 1764.1562
2025-04-25 07:25:15,805 - mmdet - INFO - Epoch [1][500/773]	lr: 1.430e-05, eta: 4:31:42, time: 1.046, data_time: 0.004, memory: 5816, loss_cls: 1.1339, loss_bbox: 1.7482, d0.loss_cls: 1.1328, d0.loss_bbox: 1.7724, d1.loss_cls: 1.1332, d1.loss_bbox: 1.7510, d2.loss_cls: 1.1364, d2.loss_bbox: 1.7477, d3.loss_cls: 1.1356, d3.loss_bbox: 1.7465, d4.loss_cls: 1.1338, d4.loss_bbox: 1.7500, aux_task0.loss_heatmap: 12.9708, aux_task0.loss_bbox: 0.4699, aux_task1.loss_heatmap: 11.5129, aux_task1.loss_bbox: 0.5145, aux_task2.loss_heatmap: 14.2798, aux_task2.loss_bbox: 0.5416, aux_task3.loss_heatmap: 46.3883, aux_task3.loss_bbox: 0.4271, aux_task4.loss_heatmap: 11.3427, aux_task4.loss_bbox: 0.4382, aux_task5.loss_heatmap: 19.5412, aux_task5.loss_bbox: 0.4735, loss: 136.2220, grad_norm: 1245.0956
2025-04-25 07:26:10,398 - mmdet - INFO - Epoch [1][550/773]	lr: 1.467e-05, eta: 4:30:50, time: 1.092, data_time: 0.004, memory: 5816, loss_cls: 1.1348, loss_bbox: 1.7176, d0.loss_cls: 1.1323, d0.loss_bbox: 1.7484, d1.loss_cls: 1.1342, d1.loss_bbox: 1.7211, d2.loss_cls: 1.1348, d2.loss_bbox: 1.7163, d3.loss_cls: 1.1331, d3.loss_bbox: 1.7166, d4.loss_cls: 1.1358, d4.loss_bbox: 1.7170, aux_task0.loss_heatmap: 9.4949, aux_task0.loss_bbox: 0.4650, aux_task1.loss_heatmap: 7.8442, aux_task1.loss_bbox: 0.5128, aux_task2.loss_heatmap: 9.2838, aux_task2.loss_bbox: 0.5319, aux_task3.loss_heatmap: 34.3813, aux_task3.loss_bbox: 0.4274, aux_task4.loss_heatmap: 7.6679, aux_task4.loss_bbox: 0.4311, aux_task5.loss_heatmap: 13.5782, aux_task5.loss_bbox: 0.4687, loss: 102.2292, grad_norm: 901.2536
2025-04-25 07:27:03,139 - mmdet - INFO - Epoch [1][600/773]	lr: 1.508e-05, eta: 4:29:12, time: 1.055, data_time: 0.004, memory: 5816, loss_cls: 1.1394, loss_bbox: 1.7391, d0.loss_cls: 1.1386, d0.loss_bbox: 1.7688, d1.loss_cls: 1.1423, d1.loss_bbox: 1.7423, d2.loss_cls: 1.1426, d2.loss_bbox: 1.7412, d3.loss_cls: 1.1433, d3.loss_bbox: 1.7364, d4.loss_cls: 1.1419, d4.loss_bbox: 1.7367, aux_task0.loss_heatmap: 7.2730, aux_task0.loss_bbox: 0.4685, aux_task1.loss_heatmap: 5.6787, aux_task1.loss_bbox: 0.5061, aux_task2.loss_heatmap: 7.5080, aux_task2.loss_bbox: 0.5230, aux_task3.loss_heatmap: 24.1747, aux_task3.loss_bbox: 0.4189, aux_task4.loss_heatmap: 5.4837, aux_task4.loss_bbox: 0.4349, aux_task5.loss_heatmap: 10.2543, aux_task5.loss_bbox: 0.4754, loss: 80.5116, grad_norm: 656.6540
2025-04-25 07:27:54,927 - mmdet - INFO - Epoch [1][650/773]	lr: 1.553e-05, eta: 4:27:20, time: 1.036, data_time: 0.004, memory: 5816, loss_cls: 1.1348, loss_bbox: 1.7194, d0.loss_cls: 1.1350, d0.loss_bbox: 1.7441, d1.loss_cls: 1.1381, d1.loss_bbox: 1.7228, d2.loss_cls: 1.1367, d2.loss_bbox: 1.7218, d3.loss_cls: 1.1348, d3.loss_bbox: 1.7219, d4.loss_cls: 1.1345, d4.loss_bbox: 1.7217, aux_task0.loss_heatmap: 4.7201, aux_task0.loss_bbox: 0.4670, aux_task1.loss_heatmap: 4.1875, aux_task1.loss_bbox: 0.5045, aux_task2.loss_heatmap: 5.1606, aux_task2.loss_bbox: 0.5133, aux_task3.loss_heatmap: 17.1704, aux_task3.loss_bbox: 0.4257, aux_task4.loss_heatmap: 4.0710, aux_task4.loss_bbox: 0.4319, aux_task5.loss_heatmap: 7.0560, aux_task5.loss_bbox: 0.4812, loss: 62.3548, grad_norm: 459.3537
2025-04-25 07:28:51,197 - mmdet - INFO - Epoch [1][700/773]	lr: 1.601e-05, eta: 4:27:10, time: 1.125, data_time: 0.004, memory: 5816, loss_cls: 1.1321, loss_bbox: 1.7136, d0.loss_cls: 1.1267, d0.loss_bbox: 1.7464, d1.loss_cls: 1.1309, d1.loss_bbox: 1.7220, d2.loss_cls: 1.1297, d2.loss_bbox: 1.7190, d3.loss_cls: 1.1296, d3.loss_bbox: 1.7181, d4.loss_cls: 1.1307, d4.loss_bbox: 1.7169, aux_task0.loss_heatmap: 3.7171, aux_task0.loss_bbox: 0.4630, aux_task1.loss_heatmap: 3.2307, aux_task1.loss_bbox: 0.5064, aux_task2.loss_heatmap: 3.9671, aux_task2.loss_bbox: 0.4925, aux_task3.loss_heatmap: 12.1550, aux_task3.loss_bbox: 0.4145, aux_task4.loss_heatmap: 3.1848, aux_task4.loss_bbox: 0.4300, aux_task5.loss_heatmap: 4.9306, aux_task5.loss_bbox: 0.4713, loss: 51.0789, grad_norm: 319.6483
2025-04-25 07:29:47,603 - mmdet - INFO - Epoch [1][750/773]	lr: 1.652e-05, eta: 4:26:57, time: 1.128, data_time: 0.004, memory: 5816, loss_cls: 1.1332, loss_bbox: 1.7283, d0.loss_cls: 1.1274, d0.loss_bbox: 1.7503, d1.loss_cls: 1.1336, d1.loss_bbox: 1.7290, d2.loss_cls: 1.1329, d2.loss_bbox: 1.7279, d3.loss_cls: 1.1322, d3.loss_bbox: 1.7275, d4.loss_cls: 1.1316, d4.loss_bbox: 1.7283, aux_task0.loss_heatmap: 2.7571, aux_task0.loss_bbox: 0.4605, aux_task1.loss_heatmap: 2.6354, aux_task1.loss_bbox: 0.5116, aux_task2.loss_heatmap: 3.1192, aux_task2.loss_bbox: 0.5194, aux_task3.loss_heatmap: 8.0010, aux_task3.loss_bbox: 0.3962, aux_task4.loss_heatmap: 2.5124, aux_task4.loss_bbox: 0.4384, aux_task5.loss_heatmap: 4.0210, aux_task5.loss_bbox: 0.4748, loss: 43.0292, grad_norm: 211.8604
2025-04-25 07:30:11,283 - mmdet - INFO - Saving checkpoint at 1 epochs
2025-04-25 07:31:13,019 - mmdet - INFO - Epoch [2][50/773]	lr: 1.733e-05, eta: 4:19:57, time: 1.207, data_time: 0.153, memory: 5816, loss_cls: 1.1416, loss_bbox: 1.7202, d0.loss_cls: 1.1352, d0.loss_bbox: 1.7411, d1.loss_cls: 1.1431, d1.loss_bbox: 1.7164, d2.loss_cls: 1.1431, d2.loss_bbox: 1.7190, d3.loss_cls: 1.1406, d3.loss_bbox: 1.7159, d4.loss_cls: 1.1398, d4.loss_bbox: 1.7145, aux_task0.loss_heatmap: 2.2450, aux_task0.loss_bbox: 0.4536, aux_task1.loss_heatmap: 2.0422, aux_task1.loss_bbox: 0.5002, aux_task2.loss_heatmap: 2.2027, aux_task2.loss_bbox: 0.5007, aux_task3.loss_heatmap: 4.9533, aux_task3.loss_bbox: 0.4052, aux_task4.loss_heatmap: 1.9970, aux_task4.loss_bbox: 0.4302, aux_task5.loss_heatmap: 2.8175, aux_task5.loss_bbox: 0.4607, loss: 36.1789, grad_norm: 119.9314
2025-04-25 07:32:04,774 - mmdet - INFO - Epoch [2][100/773]	lr: 1.793e-05, eta: 4:18:39, time: 1.036, data_time: 0.004, memory: 5816, loss_cls: 1.1293, loss_bbox: 1.7142, d0.loss_cls: 1.1202, d0.loss_bbox: 1.7429, d1.loss_cls: 1.1277, d1.loss_bbox: 1.7192, d2.loss_cls: 1.1292, d2.loss_bbox: 1.7189, d3.loss_cls: 1.1294, d3.loss_bbox: 1.7166, d4.loss_cls: 1.1251, d4.loss_bbox: 1.7199, aux_task0.loss_heatmap: 1.9272, aux_task0.loss_bbox: 0.4521, aux_task1.loss_heatmap: 1.8506, aux_task1.loss_bbox: 0.4912, aux_task2.loss_heatmap: 1.9960, aux_task2.loss_bbox: 0.5094, aux_task3.loss_heatmap: 3.3547, aux_task3.loss_bbox: 0.3998, aux_task4.loss_heatmap: 1.7631, aux_task4.loss_bbox: 0.4259, aux_task5.loss_heatmap: 2.2508, aux_task5.loss_bbox: 0.4666, loss: 32.9801, grad_norm: 73.1853
2025-04-25 07:32:58,555 - mmdet - INFO - Epoch [2][150/773]	lr: 1.856e-05, eta: 4:17:55, time: 1.075, data_time: 0.004, memory: 5816, loss_cls: 1.1339, loss_bbox: 1.7030, d0.loss_cls: 1.1262, d0.loss_bbox: 1.7416, d1.loss_cls: 1.1330, d1.loss_bbox: 1.7096, d2.loss_cls: 1.1304, d2.loss_bbox: 1.7090, d3.loss_cls: 1.1281, d3.loss_bbox: 1.7063, d4.loss_cls: 1.1255, d4.loss_bbox: 1.7031, aux_task0.loss_heatmap: 1.7644, aux_task0.loss_bbox: 0.4711, aux_task1.loss_heatmap: 1.7245, aux_task1.loss_bbox: 0.4977, aux_task2.loss_heatmap: 1.8875, aux_task2.loss_bbox: 0.5048, aux_task3.loss_heatmap: 2.5043, aux_task3.loss_bbox: 0.4166, aux_task4.loss_heatmap: 1.6294, aux_task4.loss_bbox: 0.4323, aux_task5.loss_heatmap: 1.9086, aux_task5.loss_bbox: 0.4707, loss: 31.2619, grad_norm: 49.5863
2025-04-25 07:33:50,270 - mmdet - INFO - Epoch [2][200/773]	lr: 1.922e-05, eta: 4:16:39, time: 1.034, data_time: 0.004, memory: 5816, loss_cls: 1.0978, loss_bbox: 1.6824, d0.loss_cls: 1.1107, d0.loss_bbox: 1.7335, d1.loss_cls: 1.1091, d1.loss_bbox: 1.7067, d2.loss_cls: 1.1015, d2.loss_bbox: 1.7031, d3.loss_cls: 1.0895, d3.loss_bbox: 1.6938, d4.loss_cls: 1.0816, d4.loss_bbox: 1.6873, aux_task0.loss_heatmap: 1.6028, aux_task0.loss_bbox: 0.4495, aux_task1.loss_heatmap: 1.6300, aux_task1.loss_bbox: 0.4812, aux_task2.loss_heatmap: 1.8305, aux_task2.loss_bbox: 0.5102, aux_task3.loss_heatmap: 2.0863, aux_task3.loss_bbox: 0.4236, aux_task4.loss_heatmap: 1.4888, aux_task4.loss_bbox: 0.4235, aux_task5.loss_heatmap: 1.7047, aux_task5.loss_bbox: 0.4533, loss: 29.8814, grad_norm: 38.7250
2025-04-25 07:34:42,475 - mmdet - INFO - Epoch [2][250/773]	lr: 1.991e-05, eta: 4:15:32, time: 1.044, data_time: 0.004, memory: 5816, loss_cls: 1.0477, loss_bbox: 1.6557, d0.loss_cls: 1.0990, d0.loss_bbox: 1.7183, d1.loss_cls: 1.0803, d1.loss_bbox: 1.6820, d2.loss_cls: 1.0495, d2.loss_bbox: 1.6703, d3.loss_cls: 1.0342, d3.loss_bbox: 1.6633, d4.loss_cls: 1.0295, d4.loss_bbox: 1.6614, aux_task0.loss_heatmap: 1.5235, aux_task0.loss_bbox: 0.4399, aux_task1.loss_heatmap: 1.5810, aux_task1.loss_bbox: 0.4898, aux_task2.loss_heatmap: 1.7927, aux_task2.loss_bbox: 0.4773, aux_task3.loss_heatmap: 1.8608, aux_task3.loss_bbox: 0.4143, aux_task4.loss_heatmap: 1.4007, aux_task4.loss_bbox: 0.4244, aux_task5.loss_heatmap: 1.5934, aux_task5.loss_bbox: 0.4433, loss: 28.8323, grad_norm: 35.1377
2025-04-25 07:35:34,083 - mmdet - INFO - Epoch [2][300/773]	lr: 2.064e-05, eta: 4:14:19, time: 1.032, data_time: 0.004, memory: 5839, loss_cls: 1.0238, loss_bbox: 1.6705, d0.loss_cls: 1.0988, d0.loss_bbox: 1.7394, d1.loss_cls: 1.0525, d1.loss_bbox: 1.6918, d2.loss_cls: 1.0156, d2.loss_bbox: 1.6807, d3.loss_cls: 1.0061, d3.loss_bbox: 1.6724, d4.loss_cls: 1.0075, d4.loss_bbox: 1.6703, aux_task0.loss_heatmap: 1.4937, aux_task0.loss_bbox: 0.4240, aux_task1.loss_heatmap: 1.5533, aux_task1.loss_bbox: 0.4594, aux_task2.loss_heatmap: 1.7417, aux_task2.loss_bbox: 0.4781, aux_task3.loss_heatmap: 1.7389, aux_task3.loss_bbox: 0.3745, aux_task4.loss_heatmap: 1.2916, aux_task4.loss_bbox: 0.4178, aux_task5.loss_heatmap: 1.5383, aux_task5.loss_bbox: 0.4403, loss: 28.2808, grad_norm: 33.9408
2025-04-25 07:36:25,235 - mmdet - INFO - Epoch [2][350/773]	lr: 2.139e-05, eta: 4:13:02, time: 1.023, data_time: 0.004, memory: 5839, loss_cls: 1.0043, loss_bbox: 1.6424, d0.loss_cls: 1.0794, d0.loss_bbox: 1.7356, d1.loss_cls: 1.0159, d1.loss_bbox: 1.6679, d2.loss_cls: 0.9916, d2.loss_bbox: 1.6470, d3.loss_cls: 0.9890, d3.loss_bbox: 1.6412, d4.loss_cls: 0.9872, d4.loss_bbox: 1.6453, aux_task0.loss_heatmap: 1.4479, aux_task0.loss_bbox: 0.4173, aux_task1.loss_heatmap: 1.5415, aux_task1.loss_bbox: 0.4471, aux_task2.loss_heatmap: 1.7561, aux_task2.loss_bbox: 0.4833, aux_task3.loss_heatmap: 1.5967, aux_task3.loss_bbox: 0.3760, aux_task4.loss_heatmap: 1.2122, aux_task4.loss_bbox: 0.4037, aux_task5.loss_heatmap: 1.4550, aux_task5.loss_bbox: 0.4176, loss: 27.6012, grad_norm: 32.0546
2025-04-25 07:37:16,537 - mmdet - INFO - Epoch [2][400/773]	lr: 2.218e-05, eta: 4:11:49, time: 1.026, data_time: 0.004, memory: 5839, loss_cls: 0.9880, loss_bbox: 1.6423, d0.loss_cls: 1.0749, d0.loss_bbox: 1.7576, d1.loss_cls: 0.9932, d1.loss_bbox: 1.6764, d2.loss_cls: 0.9768, d2.loss_bbox: 1.6471, d3.loss_cls: 0.9771, d3.loss_bbox: 1.6431, d4.loss_cls: 0.9769, d4.loss_bbox: 1.6450, aux_task0.loss_heatmap: 1.3993, aux_task0.loss_bbox: 0.4164, aux_task1.loss_heatmap: 1.5453, aux_task1.loss_bbox: 0.4451, aux_task2.loss_heatmap: 1.7389, aux_task2.loss_bbox: 0.4780, aux_task3.loss_heatmap: 1.5549, aux_task3.loss_bbox: 0.3837, aux_task4.loss_heatmap: 1.1306, aux_task4.loss_bbox: 0.4021, aux_task5.loss_heatmap: 1.4014, aux_task5.loss_bbox: 0.4150, loss: 27.3090, grad_norm: 33.9133
2025-04-25 07:38:08,254 - mmdet - INFO - Epoch [2][450/773]	lr: 2.300e-05, eta: 4:10:43, time: 1.034, data_time: 0.004, memory: 5839, loss_cls: 0.9682, loss_bbox: 1.5820, d0.loss_cls: 1.0644, d0.loss_bbox: 1.7160, d1.loss_cls: 0.9755, d1.loss_bbox: 1.6071, d2.loss_cls: 0.9600, d2.loss_bbox: 1.5824, d3.loss_cls: 0.9621, d3.loss_bbox: 1.5829, d4.loss_cls: 0.9617, d4.loss_bbox: 1.5854, aux_task0.loss_heatmap: 1.3530, aux_task0.loss_bbox: 0.4030, aux_task1.loss_heatmap: 1.4747, aux_task1.loss_bbox: 0.4254, aux_task2.loss_heatmap: 1.7152, aux_task2.loss_bbox: 0.4470, aux_task3.loss_heatmap: 1.4893, aux_task3.loss_bbox: 0.3724, aux_task4.loss_heatmap: 1.0922, aux_task4.loss_bbox: 0.3872, aux_task5.loss_heatmap: 1.3613, aux_task5.loss_bbox: 0.4084, loss: 26.4769, grad_norm: 33.6566
2025-04-25 07:38:59,661 - mmdet - INFO - Epoch [2][500/773]	lr: 2.384e-05, eta: 4:09:34, time: 1.028, data_time: 0.004, memory: 5839, loss_cls: 0.9583, loss_bbox: 1.5713, d0.loss_cls: 1.0514, d0.loss_bbox: 1.7184, d1.loss_cls: 0.9627, d1.loss_bbox: 1.5908, d2.loss_cls: 0.9504, d2.loss_bbox: 1.5699, d3.loss_cls: 0.9524, d3.loss_bbox: 1.5709, d4.loss_cls: 0.9525, d4.loss_bbox: 1.5685, aux_task0.loss_heatmap: 1.3469, aux_task0.loss_bbox: 0.3968, aux_task1.loss_heatmap: 1.4874, aux_task1.loss_bbox: 0.4202, aux_task2.loss_heatmap: 1.7019, aux_task2.loss_bbox: 0.4571, aux_task3.loss_heatmap: 1.4464, aux_task3.loss_bbox: 0.3698, aux_task4.loss_heatmap: 1.0500, aux_task4.loss_bbox: 0.3816, aux_task5.loss_heatmap: 1.3240, aux_task5.loss_bbox: 0.4010, loss: 26.2002, grad_norm: 33.8732
2025-04-25 07:39:52,371 - mmdet - INFO - Epoch [2][550/773]	lr: 2.472e-05, eta: 4:08:40, time: 1.054, data_time: 0.004, memory: 5839, loss_cls: 0.9487, loss_bbox: 1.5417, d0.loss_cls: 1.0369, d0.loss_bbox: 1.7186, d1.loss_cls: 0.9585, d1.loss_bbox: 1.5682, d2.loss_cls: 0.9456, d2.loss_bbox: 1.5538, d3.loss_cls: 0.9462, d3.loss_bbox: 1.5482, d4.loss_cls: 0.9444, d4.loss_bbox: 1.5413, aux_task0.loss_heatmap: 1.3436, aux_task0.loss_bbox: 0.4021, aux_task1.loss_heatmap: 1.4578, aux_task1.loss_bbox: 0.4139, aux_task2.loss_heatmap: 1.6824, aux_task2.loss_bbox: 0.4588, aux_task3.loss_heatmap: 1.4179, aux_task3.loss_bbox: 0.3553, aux_task4.loss_heatmap: 1.0040, aux_task4.loss_bbox: 0.3645, aux_task5.loss_heatmap: 1.2778, aux_task5.loss_bbox: 0.3995, loss: 25.8300, grad_norm: 31.6995
2025-04-25 07:40:43,990 - mmdet - INFO - Epoch [2][600/773]	lr: 2.562e-05, eta: 4:07:36, time: 1.033, data_time: 0.004, memory: 5839, loss_cls: 0.9427, loss_bbox: 1.5247, d0.loss_cls: 1.0311, d0.loss_bbox: 1.7232, d1.loss_cls: 0.9519, d1.loss_bbox: 1.5678, d2.loss_cls: 0.9419, d2.loss_bbox: 1.5464, d3.loss_cls: 0.9405, d3.loss_bbox: 1.5387, d4.loss_cls: 0.9389, d4.loss_bbox: 1.5291, aux_task0.loss_heatmap: 1.3157, aux_task0.loss_bbox: 0.3989, aux_task1.loss_heatmap: 1.4649, aux_task1.loss_bbox: 0.4254, aux_task2.loss_heatmap: 1.7160, aux_task2.loss_bbox: 0.4558, aux_task3.loss_heatmap: 1.4021, aux_task3.loss_bbox: 0.3652, aux_task4.loss_heatmap: 1.0009, aux_task4.loss_bbox: 0.3703, aux_task5.loss_heatmap: 1.2561, aux_task5.loss_bbox: 0.3928, loss: 25.7412, grad_norm: 33.4127
2025-04-25 07:41:36,595 - mmdet - INFO - Epoch [2][650/773]	lr: 2.655e-05, eta: 4:06:42, time: 1.052, data_time: 0.004, memory: 5839, loss_cls: 0.9329, loss_bbox: 1.4861, d0.loss_cls: 1.0140, d0.loss_bbox: 1.6869, d1.loss_cls: 0.9433, d1.loss_bbox: 1.5374, d2.loss_cls: 0.9279, d2.loss_bbox: 1.5175, d3.loss_cls: 0.9287, d3.loss_bbox: 1.5044, d4.loss_cls: 0.9282, d4.loss_bbox: 1.4893, aux_task0.loss_heatmap: 1.2688, aux_task0.loss_bbox: 0.3897, aux_task1.loss_heatmap: 1.4398, aux_task1.loss_bbox: 0.4125, aux_task2.loss_heatmap: 1.6743, aux_task2.loss_bbox: 0.4497, aux_task3.loss_heatmap: 1.3333, aux_task3.loss_bbox: 0.3496, aux_task4.loss_heatmap: 0.9872, aux_task4.loss_bbox: 0.3680, aux_task5.loss_heatmap: 1.2355, aux_task5.loss_bbox: 0.3916, loss: 25.1964, grad_norm: 34.4148
2025-04-25 07:42:28,562 - mmdet - INFO - Epoch [2][700/773]	lr: 2.751e-05, eta: 4:05:42, time: 1.039, data_time: 0.004, memory: 5839, loss_cls: 0.9267, loss_bbox: 1.4632, d0.loss_cls: 1.0125, d0.loss_bbox: 1.6718, d1.loss_cls: 0.9396, d1.loss_bbox: 1.5061, d2.loss_cls: 0.9272, d2.loss_bbox: 1.4815, d3.loss_cls: 0.9246, d3.loss_bbox: 1.4696, d4.loss_cls: 0.9225, d4.loss_bbox: 1.4590, aux_task0.loss_heatmap: 1.2379, aux_task0.loss_bbox: 0.3835, aux_task1.loss_heatmap: 1.3917, aux_task1.loss_bbox: 0.4069, aux_task2.loss_heatmap: 1.6924, aux_task2.loss_bbox: 0.4395, aux_task3.loss_heatmap: 1.3503, aux_task3.loss_bbox: 0.3457, aux_task4.loss_heatmap: 0.9931, aux_task4.loss_bbox: 0.3609, aux_task5.loss_heatmap: 1.2482, aux_task5.loss_bbox: 0.3863, loss: 24.9409, grad_norm: 35.0258
2025-04-25 07:43:20,847 - mmdet - INFO - Epoch [2][750/773]	lr: 2.849e-05, eta: 4:04:46, time: 1.046, data_time: 0.004, memory: 5839, loss_cls: 0.9272, loss_bbox: 1.4499, d0.loss_cls: 1.0087, d0.loss_bbox: 1.6950, d1.loss_cls: 0.9388, d1.loss_bbox: 1.5173, d2.loss_cls: 0.9221, d2.loss_bbox: 1.4909, d3.loss_cls: 0.9208, d3.loss_bbox: 1.4725, d4.loss_cls: 0.9230, d4.loss_bbox: 1.4509, aux_task0.loss_heatmap: 1.2658, aux_task0.loss_bbox: 0.4112, aux_task1.loss_heatmap: 1.3995, aux_task1.loss_bbox: 0.4156, aux_task2.loss_heatmap: 1.6609, aux_task2.loss_bbox: 0.4453, aux_task3.loss_heatmap: 1.3291, aux_task3.loss_bbox: 0.3375, aux_task4.loss_heatmap: 0.9555, aux_task4.loss_bbox: 0.3711, aux_task5.loss_heatmap: 1.2120, aux_task5.loss_bbox: 0.3881, loss: 24.9086, grad_norm: 35.7074
2025-04-25 07:43:44,722 - mmdet - INFO - Saving checkpoint at 2 epochs
2025-04-25 07:44:47,749 - mmdet - INFO - Epoch [3][50/773]	lr: 2.998e-05, eta: 4:01:16, time: 1.233, data_time: 0.153, memory: 5839, loss_cls: 0.9186, loss_bbox: 1.3899, d0.loss_cls: 0.9944, d0.loss_bbox: 1.6525, d1.loss_cls: 0.9314, d1.loss_bbox: 1.4715, d2.loss_cls: 0.9160, d2.loss_bbox: 1.4309, d3.loss_cls: 0.9178, d3.loss_bbox: 1.4089, d4.loss_cls: 0.9182, d4.loss_bbox: 1.3918, aux_task0.loss_heatmap: 1.2242, aux_task0.loss_bbox: 0.3876, aux_task1.loss_heatmap: 1.4070, aux_task1.loss_bbox: 0.4040, aux_task2.loss_heatmap: 1.6804, aux_task2.loss_bbox: 0.4575, aux_task3.loss_heatmap: 1.3456, aux_task3.loss_bbox: 0.3387, aux_task4.loss_heatmap: 0.9448, aux_task4.loss_bbox: 0.3647, aux_task5.loss_heatmap: 1.1649, aux_task5.loss_bbox: 0.3783, loss: 24.4396, grad_norm: 35.3263
2025-04-25 07:45:39,264 - mmdet - INFO - Epoch [3][100/773]	lr: 3.103e-05, eta: 4:00:18, time: 1.030, data_time: 0.004, memory: 5839, loss_cls: 0.9099, loss_bbox: 1.3538, d0.loss_cls: 0.9826, d0.loss_bbox: 1.6229, d1.loss_cls: 0.9191, d1.loss_bbox: 1.4409, d2.loss_cls: 0.9062, d2.loss_bbox: 1.3935, d3.loss_cls: 0.9043, d3.loss_bbox: 1.3745, d4.loss_cls: 0.9040, d4.loss_bbox: 1.3541, aux_task0.loss_heatmap: 1.1845, aux_task0.loss_bbox: 0.3864, aux_task1.loss_heatmap: 1.4085, aux_task1.loss_bbox: 0.4113, aux_task2.loss_heatmap: 1.6481, aux_task2.loss_bbox: 0.4442, aux_task3.loss_heatmap: 1.2940, aux_task3.loss_bbox: 0.3501, aux_task4.loss_heatmap: 0.9132, aux_task4.loss_bbox: 0.3693, aux_task5.loss_heatmap: 1.1510, aux_task5.loss_bbox: 0.3770, loss: 24.0034, grad_norm: 36.4203
2025-04-25 07:46:31,104 - mmdet - INFO - Epoch [3][150/773]	lr: 3.210e-05, eta: 3:59:23, time: 1.037, data_time: 0.004, memory: 5839, loss_cls: 0.9197, loss_bbox: 1.3733, d0.loss_cls: 0.9710, d0.loss_bbox: 1.6292, d1.loss_cls: 0.9296, d1.loss_bbox: 1.4611, d2.loss_cls: 0.9156, d2.loss_bbox: 1.4100, d3.loss_cls: 0.9139, d3.loss_bbox: 1.3901, d4.loss_cls: 0.9138, d4.loss_bbox: 1.3728, aux_task0.loss_heatmap: 1.1844, aux_task0.loss_bbox: 0.3758, aux_task1.loss_heatmap: 1.3702, aux_task1.loss_bbox: 0.4027, aux_task2.loss_heatmap: 1.6069, aux_task2.loss_bbox: 0.4578, aux_task3.loss_heatmap: 1.2607, aux_task3.loss_bbox: 0.3450, aux_task4.loss_heatmap: 0.9109, aux_task4.loss_bbox: 0.3613, aux_task5.loss_heatmap: 1.1581, aux_task5.loss_bbox: 0.3790, loss: 24.0130, grad_norm: 36.5480
2025-04-25 07:47:22,636 - mmdet - INFO - Epoch [3][200/773]	lr: 3.319e-05, eta: 3:58:26, time: 1.031, data_time: 0.004, memory: 5839, loss_cls: 0.9069, loss_bbox: 1.3310, d0.loss_cls: 0.9684, d0.loss_bbox: 1.5934, d1.loss_cls: 0.9180, d1.loss_bbox: 1.4229, d2.loss_cls: 0.9036, d2.loss_bbox: 1.3695, d3.loss_cls: 0.9026, d3.loss_bbox: 1.3495, d4.loss_cls: 0.9045, d4.loss_bbox: 1.3311, aux_task0.loss_heatmap: 1.1661, aux_task0.loss_bbox: 0.3754, aux_task1.loss_heatmap: 1.3713, aux_task1.loss_bbox: 0.3926, aux_task2.loss_heatmap: 1.6424, aux_task2.loss_bbox: 0.4453, aux_task3.loss_heatmap: 1.2380, aux_task3.loss_bbox: 0.3330, aux_task4.loss_heatmap: 0.9047, aux_task4.loss_bbox: 0.3638, aux_task5.loss_heatmap: 1.1545, aux_task5.loss_bbox: 0.3662, loss: 23.6548, grad_norm: 35.1092
2025-04-25 07:48:15,971 - mmdet - INFO - Epoch [3][250/773]	lr: 3.431e-05, eta: 3:57:42, time: 1.067, data_time: 0.004, memory: 5839, loss_cls: 0.9124, loss_bbox: 1.3137, d0.loss_cls: 0.9654, d0.loss_bbox: 1.5819, d1.loss_cls: 0.9205, d1.loss_bbox: 1.4051, d2.loss_cls: 0.9034, d2.loss_bbox: 1.3529, d3.loss_cls: 0.9038, d3.loss_bbox: 1.3333, d4.loss_cls: 0.9075, d4.loss_bbox: 1.3138, aux_task0.loss_heatmap: 1.1716, aux_task0.loss_bbox: 0.3911, aux_task1.loss_heatmap: 1.3324, aux_task1.loss_bbox: 0.4006, aux_task2.loss_heatmap: 1.6250, aux_task2.loss_bbox: 0.4324, aux_task3.loss_heatmap: 1.1908, aux_task3.loss_bbox: 0.3432, aux_task4.loss_heatmap: 0.9124, aux_task4.loss_bbox: 0.3624, aux_task5.loss_heatmap: 1.0915, aux_task5.loss_bbox: 0.3663, loss: 23.4336, grad_norm: 36.5598
2025-04-25 07:49:08,734 - mmdet - INFO - Epoch [3][300/773]	lr: 3.545e-05, eta: 3:56:54, time: 1.055, data_time: 0.004, memory: 5839, loss_cls: 0.8931, loss_bbox: 1.3010, d0.loss_cls: 0.9410, d0.loss_bbox: 1.5732, d1.loss_cls: 0.8980, d1.loss_bbox: 1.3924, d2.loss_cls: 0.8860, d2.loss_bbox: 1.3394, d3.loss_cls: 0.8901, d3.loss_bbox: 1.3212, d4.loss_cls: 0.8907, d4.loss_bbox: 1.3039, aux_task0.loss_heatmap: 1.1409, aux_task0.loss_bbox: 0.3691, aux_task1.loss_heatmap: 1.3778, aux_task1.loss_bbox: 0.3911, aux_task2.loss_heatmap: 1.6094, aux_task2.loss_bbox: 0.4303, aux_task3.loss_heatmap: 1.2936, aux_task3.loss_bbox: 0.3327, aux_task4.loss_heatmap: 0.8472, aux_task4.loss_bbox: 0.3607, aux_task5.loss_heatmap: 1.1087, aux_task5.loss_bbox: 0.3664, loss: 23.2580, grad_norm: 36.1746
2025-04-25 07:50:00,338 - mmdet - INFO - Epoch [3][350/773]	lr: 3.661e-05, eta: 3:55:58, time: 1.032, data_time: 0.004, memory: 5839, loss_cls: 0.8948, loss_bbox: 1.2997, d0.loss_cls: 0.9413, d0.loss_bbox: 1.5642, d1.loss_cls: 0.9000, d1.loss_bbox: 1.3892, d2.loss_cls: 0.8888, d2.loss_bbox: 1.3365, d3.loss_cls: 0.8887, d3.loss_bbox: 1.3217, d4.loss_cls: 0.8902, d4.loss_bbox: 1.3025, aux_task0.loss_heatmap: 1.1663, aux_task0.loss_bbox: 0.3775, aux_task1.loss_heatmap: 1.3618, aux_task1.loss_bbox: 0.4055, aux_task2.loss_heatmap: 1.6248, aux_task2.loss_bbox: 0.4463, aux_task3.loss_heatmap: 1.2032, aux_task3.loss_bbox: 0.3367, aux_task4.loss_heatmap: 0.8630, aux_task4.loss_bbox: 0.3577, aux_task5.loss_heatmap: 1.0833, aux_task5.loss_bbox: 0.3664, loss: 23.2102, grad_norm: 36.2488
2025-04-25 07:50:52,295 - mmdet - INFO - Epoch [3][400/773]	lr: 3.780e-05, eta: 3:55:04, time: 1.039, data_time: 0.004, memory: 5839, loss_cls: 0.8801, loss_bbox: 1.2874, d0.loss_cls: 0.9233, d0.loss_bbox: 1.5432, d1.loss_cls: 0.8878, d1.loss_bbox: 1.3745, d2.loss_cls: 0.8746, d2.loss_bbox: 1.3169, d3.loss_cls: 0.8758, d3.loss_bbox: 1.3009, d4.loss_cls: 0.8768, d4.loss_bbox: 1.2874, aux_task0.loss_heatmap: 1.1287, aux_task0.loss_bbox: 0.3691, aux_task1.loss_heatmap: 1.3709, aux_task1.loss_bbox: 0.3946, aux_task2.loss_heatmap: 1.6160, aux_task2.loss_bbox: 0.4368, aux_task3.loss_heatmap: 1.1919, aux_task3.loss_bbox: 0.3526, aux_task4.loss_heatmap: 0.8361, aux_task4.loss_bbox: 0.3647, aux_task5.loss_heatmap: 1.0531, aux_task5.loss_bbox: 0.3624, loss: 22.9053, grad_norm: 37.8555
2025-04-25 07:51:43,376 - mmdet - INFO - Epoch [3][450/773]	lr: 3.900e-05, eta: 3:54:04, time: 1.022, data_time: 0.004, memory: 5839, loss_cls: 0.8902, loss_bbox: 1.2658, d0.loss_cls: 0.9313, d0.loss_bbox: 1.5308, d1.loss_cls: 0.8949, d1.loss_bbox: 1.3429, d2.loss_cls: 0.8845, d2.loss_bbox: 1.2920, d3.loss_cls: 0.8855, d3.loss_bbox: 1.2775, d4.loss_cls: 0.8882, d4.loss_bbox: 1.2656, aux_task0.loss_heatmap: 1.1301, aux_task0.loss_bbox: 0.3804, aux_task1.loss_heatmap: 1.2872, aux_task1.loss_bbox: 0.3958, aux_task2.loss_heatmap: 1.6120, aux_task2.loss_bbox: 0.4149, aux_task3.loss_heatmap: 1.2214, aux_task3.loss_bbox: 0.3366, aux_task4.loss_heatmap: 0.8518, aux_task4.loss_bbox: 0.3575, aux_task5.loss_heatmap: 1.0386, aux_task5.loss_bbox: 0.3676, loss: 22.7430, grad_norm: 40.2352
2025-04-25 07:52:34,968 - mmdet - INFO - Epoch [3][500/773]	lr: 4.022e-05, eta: 3:53:08, time: 1.032, data_time: 0.004, memory: 5839, loss_cls: 0.8800, loss_bbox: 1.2584, d0.loss_cls: 0.9166, d0.loss_bbox: 1.5179, d1.loss_cls: 0.8830, d1.loss_bbox: 1.3425, d2.loss_cls: 0.8756, d2.loss_bbox: 1.2873, d3.loss_cls: 0.8744, d3.loss_bbox: 1.2712, d4.loss_cls: 0.8764, d4.loss_bbox: 1.2583, aux_task0.loss_heatmap: 1.1212, aux_task0.loss_bbox: 0.3810, aux_task1.loss_heatmap: 1.3147, aux_task1.loss_bbox: 0.4013, aux_task2.loss_heatmap: 1.5987, aux_task2.loss_bbox: 0.4400, aux_task3.loss_heatmap: 1.2014, aux_task3.loss_bbox: 0.3461, aux_task4.loss_heatmap: 0.8498, aux_task4.loss_bbox: 0.3584, aux_task5.loss_heatmap: 1.0101, aux_task5.loss_bbox: 0.3600, loss: 22.6243, grad_norm: 37.5776
2025-04-25 07:53:28,031 - mmdet - INFO - Epoch [3][550/773]	lr: 4.146e-05, eta: 3:52:22, time: 1.061, data_time: 0.004, memory: 5839, loss_cls: 0.8639, loss_bbox: 1.2451, d0.loss_cls: 0.8948, d0.loss_bbox: 1.5056, d1.loss_cls: 0.8599, d1.loss_bbox: 1.3342, d2.loss_cls: 0.8539, d2.loss_bbox: 1.2786, d3.loss_cls: 0.8596, d3.loss_bbox: 1.2625, d4.loss_cls: 0.8592, d4.loss_bbox: 1.2481, aux_task0.loss_heatmap: 1.1478, aux_task0.loss_bbox: 0.3721, aux_task1.loss_heatmap: 1.2970, aux_task1.loss_bbox: 0.3948, aux_task2.loss_heatmap: 1.5600, aux_task2.loss_bbox: 0.4455, aux_task3.loss_heatmap: 1.1427, aux_task3.loss_bbox: 0.3397, aux_task4.loss_heatmap: 0.8296, aux_task4.loss_bbox: 0.3433, aux_task5.loss_heatmap: 0.9909, aux_task5.loss_bbox: 0.3607, loss: 22.2895, grad_norm: 36.9403
2025-04-25 07:54:21,258 - mmdet - INFO - Epoch [3][600/773]	lr: 4.272e-05, eta: 3:51:37, time: 1.065, data_time: 0.004, memory: 5839, loss_cls: 0.8612, loss_bbox: 1.2565, d0.loss_cls: 0.8970, d0.loss_bbox: 1.5144, d1.loss_cls: 0.8661, d1.loss_bbox: 1.3501, d2.loss_cls: 0.8598, d2.loss_bbox: 1.2880, d3.loss_cls: 0.8589, d3.loss_bbox: 1.2715, d4.loss_cls: 0.8574, d4.loss_bbox: 1.2579, aux_task0.loss_heatmap: 1.0808, aux_task0.loss_bbox: 0.3546, aux_task1.loss_heatmap: 1.2865, aux_task1.loss_bbox: 0.3973, aux_task2.loss_heatmap: 1.5731, aux_task2.loss_bbox: 0.4374, aux_task3.loss_heatmap: 1.1504, aux_task3.loss_bbox: 0.3384, aux_task4.loss_heatmap: 0.7927, aux_task4.loss_bbox: 0.3527, aux_task5.loss_heatmap: 1.0004, aux_task5.loss_bbox: 0.3655, loss: 22.2684, grad_norm: 40.9321
2025-04-25 07:55:13,088 - mmdet - INFO - Epoch [3][650/773]	lr: 4.400e-05, eta: 3:50:42, time: 1.037, data_time: 0.004, memory: 5839, loss_cls: 0.8630, loss_bbox: 1.2170, d0.loss_cls: 0.8986, d0.loss_bbox: 1.4735, d1.loss_cls: 0.8657, d1.loss_bbox: 1.3034, d2.loss_cls: 0.8571, d2.loss_bbox: 1.2492, d3.loss_cls: 0.8563, d3.loss_bbox: 1.2369, d4.loss_cls: 0.8598, d4.loss_bbox: 1.2216, aux_task0.loss_heatmap: 1.0795, aux_task0.loss_bbox: 0.3652, aux_task1.loss_heatmap: 1.2738, aux_task1.loss_bbox: 0.3837, aux_task2.loss_heatmap: 1.5380, aux_task2.loss_bbox: 0.4223, aux_task3.loss_heatmap: 1.1115, aux_task3.loss_bbox: 0.3299, aux_task4.loss_heatmap: 0.8082, aux_task4.loss_bbox: 0.3420, aux_task5.loss_heatmap: 1.0173, aux_task5.loss_bbox: 0.3619, loss: 21.9355, grad_norm: 39.0904
2025-04-25 07:56:04,188 - mmdet - INFO - Epoch [3][700/773]	lr: 4.529e-05, eta: 3:49:44, time: 1.022, data_time: 0.004, memory: 5839, loss_cls: 0.8534, loss_bbox: 1.2196, d0.loss_cls: 0.8908, d0.loss_bbox: 1.4665, d1.loss_cls: 0.8620, d1.loss_bbox: 1.3026, d2.loss_cls: 0.8495, d2.loss_bbox: 1.2473, d3.loss_cls: 0.8501, d3.loss_bbox: 1.2348, d4.loss_cls: 0.8511, d4.loss_bbox: 1.2211, aux_task0.loss_heatmap: 1.1044, aux_task0.loss_bbox: 0.3624, aux_task1.loss_heatmap: 1.2330, aux_task1.loss_bbox: 0.3808, aux_task2.loss_heatmap: 1.5311, aux_task2.loss_bbox: 0.4128, aux_task3.loss_heatmap: 1.1349, aux_task3.loss_bbox: 0.3325, aux_task4.loss_heatmap: 0.7983, aux_task4.loss_bbox: 0.3391, aux_task5.loss_heatmap: 0.9715, aux_task5.loss_bbox: 0.3588, loss: 21.8084, grad_norm: 39.0586
2025-04-25 07:56:56,715 - mmdet - INFO - Epoch [3][750/773]	lr: 4.659e-05, eta: 3:48:54, time: 1.051, data_time: 0.004, memory: 5839, loss_cls: 0.8475, loss_bbox: 1.2277, d0.loss_cls: 0.8825, d0.loss_bbox: 1.4767, d1.loss_cls: 0.8548, d1.loss_bbox: 1.3095, d2.loss_cls: 0.8476, d2.loss_bbox: 1.2520, d3.loss_cls: 0.8460, d3.loss_bbox: 1.2418, d4.loss_cls: 0.8462, d4.loss_bbox: 1.2291, aux_task0.loss_heatmap: 1.0572, aux_task0.loss_bbox: 0.3676, aux_task1.loss_heatmap: 1.2550, aux_task1.loss_bbox: 0.3958, aux_task2.loss_heatmap: 1.5247, aux_task2.loss_bbox: 0.4276, aux_task3.loss_heatmap: 1.1341, aux_task3.loss_bbox: 0.3311, aux_task4.loss_heatmap: 0.7857, aux_task4.loss_bbox: 0.3529, aux_task5.loss_heatmap: 0.9574, aux_task5.loss_bbox: 0.3579, loss: 21.8084, grad_norm: 39.6911
2025-04-25 07:57:21,191 - mmdet - INFO - Saving checkpoint at 3 epochs
2025-04-25 07:58:24,291 - mmdet - INFO - Epoch [4][50/773]	lr: 4.852e-05, eta: 3:46:17, time: 1.232, data_time: 0.150, memory: 5839, loss_cls: 0.8512, loss_bbox: 1.2048, d0.loss_cls: 0.8805, d0.loss_bbox: 1.4463, d1.loss_cls: 0.8555, d1.loss_bbox: 1.2822, d2.loss_cls: 0.8450, d2.loss_bbox: 1.2294, d3.loss_cls: 0.8449, d3.loss_bbox: 1.2181, d4.loss_cls: 0.8475, d4.loss_bbox: 1.2067, aux_task0.loss_heatmap: 1.0433, aux_task0.loss_bbox: 0.3509, aux_task1.loss_heatmap: 1.2624, aux_task1.loss_bbox: 0.3874, aux_task2.loss_heatmap: 1.5424, aux_task2.loss_bbox: 0.4366, aux_task3.loss_heatmap: 1.1173, aux_task3.loss_bbox: 0.3221, aux_task4.loss_heatmap: 0.8079, aux_task4.loss_bbox: 0.3467, aux_task5.loss_heatmap: 0.9169, aux_task5.loss_bbox: 0.3500, loss: 21.5958, grad_norm: 42.9669
2025-04-25 07:59:16,459 - mmdet - INFO - Epoch [4][100/773]	lr: 4.986e-05, eta: 3:45:27, time: 1.043, data_time: 0.004, memory: 5839, loss_cls: 0.8365, loss_bbox: 1.1964, d0.loss_cls: 0.8653, d0.loss_bbox: 1.4471, d1.loss_cls: 0.8400, d1.loss_bbox: 1.2784, d2.loss_cls: 0.8334, d2.loss_bbox: 1.2218, d3.loss_cls: 0.8320, d3.loss_bbox: 1.2125, d4.loss_cls: 0.8347, d4.loss_bbox: 1.1986, aux_task0.loss_heatmap: 1.0498, aux_task0.loss_bbox: 0.3572, aux_task1.loss_heatmap: 1.2900, aux_task1.loss_bbox: 0.3994, aux_task2.loss_heatmap: 1.5466, aux_task2.loss_bbox: 0.4237, aux_task3.loss_heatmap: 1.1434, aux_task3.loss_bbox: 0.3351, aux_task4.loss_heatmap: 0.7996, aux_task4.loss_bbox: 0.3517, aux_task5.loss_heatmap: 0.9162, aux_task5.loss_bbox: 0.3524, loss: 21.5617, grad_norm: 39.8930
2025-04-25 08:00:09,150 - mmdet - INFO - Epoch [4][150/773]	lr: 5.122e-05, eta: 3:44:39, time: 1.054, data_time: 0.004, memory: 5839, loss_cls: 0.8426, loss_bbox: 1.1879, d0.loss_cls: 0.8703, d0.loss_bbox: 1.4327, d1.loss_cls: 0.8445, d1.loss_bbox: 1.2717, d2.loss_cls: 0.8346, d2.loss_bbox: 1.2158, d3.loss_cls: 0.8362, d3.loss_bbox: 1.2043, d4.loss_cls: 0.8407, d4.loss_bbox: 1.1892, aux_task0.loss_heatmap: 1.0646, aux_task0.loss_bbox: 0.3630, aux_task1.loss_heatmap: 1.2459, aux_task1.loss_bbox: 0.3904, aux_task2.loss_heatmap: 1.4761, aux_task2.loss_bbox: 0.4395, aux_task3.loss_heatmap: 1.1105, aux_task3.loss_bbox: 0.3303, aux_task4.loss_heatmap: 0.8007, aux_task4.loss_bbox: 0.3470, aux_task5.loss_heatmap: 0.9130, aux_task5.loss_bbox: 0.3444, loss: 21.3957, grad_norm: 41.4649
2025-04-25 08:01:01,109 - mmdet - INFO - Epoch [4][200/773]	lr: 5.258e-05, eta: 3:43:48, time: 1.039, data_time: 0.004, memory: 5839, loss_cls: 0.8298, loss_bbox: 1.1648, d0.loss_cls: 0.8552, d0.loss_bbox: 1.4207, d1.loss_cls: 0.8303, d1.loss_bbox: 1.2540, d2.loss_cls: 0.8252, d2.loss_bbox: 1.1936, d3.loss_cls: 0.8264, d3.loss_bbox: 1.1810, d4.loss_cls: 0.8266, d4.loss_bbox: 1.1684, aux_task0.loss_heatmap: 1.0048, aux_task0.loss_bbox: 0.3501, aux_task1.loss_heatmap: 1.2515, aux_task1.loss_bbox: 0.3826, aux_task2.loss_heatmap: 1.4822, aux_task2.loss_bbox: 0.4191, aux_task3.loss_heatmap: 1.1208, aux_task3.loss_bbox: 0.3286, aux_task4.loss_heatmap: 0.7991, aux_task4.loss_bbox: 0.3489, aux_task5.loss_heatmap: 0.9160, aux_task5.loss_bbox: 0.3487, loss: 21.1286, grad_norm: 38.1516
2025-04-25 08:01:54,369 - mmdet - INFO - Epoch [4][250/773]	lr: 5.395e-05, eta: 3:43:03, time: 1.065, data_time: 0.004, memory: 5839, loss_cls: 0.8173, loss_bbox: 1.1651, d0.loss_cls: 0.8367, d0.loss_bbox: 1.4098, d1.loss_cls: 0.8145, d1.loss_bbox: 1.2532, d2.loss_cls: 0.8115, d2.loss_bbox: 1.1980, d3.loss_cls: 0.8118, d3.loss_bbox: 1.1839, d4.loss_cls: 0.8146, d4.loss_bbox: 1.1684, aux_task0.loss_heatmap: 1.0136, aux_task0.loss_bbox: 0.3660, aux_task1.loss_heatmap: 1.2411, aux_task1.loss_bbox: 0.3945, aux_task2.loss_heatmap: 1.4858, aux_task2.loss_bbox: 0.4146, aux_task3.loss_heatmap: 1.0717, aux_task3.loss_bbox: 0.3274, aux_task4.loss_heatmap: 0.7997, aux_task4.loss_bbox: 0.3493, aux_task5.loss_heatmap: 0.8779, aux_task5.loss_bbox: 0.3478, loss: 20.9740, grad_norm: 41.2367
2025-04-25 08:02:46,607 - mmdet - INFO - Epoch [4][300/773]	lr: 5.534e-05, eta: 3:42:13, time: 1.045, data_time: 0.004, memory: 5839, loss_cls: 0.8111, loss_bbox: 1.1551, d0.loss_cls: 0.8368, d0.loss_bbox: 1.3936, d1.loss_cls: 0.8131, d1.loss_bbox: 1.2360, d2.loss_cls: 0.8072, d2.loss_bbox: 1.1812, d3.loss_cls: 0.8044, d3.loss_bbox: 1.1691, d4.loss_cls: 0.8077, d4.loss_bbox: 1.1581, aux_task0.loss_heatmap: 0.9875, aux_task0.loss_bbox: 0.3643, aux_task1.loss_heatmap: 1.2400, aux_task1.loss_bbox: 0.3763, aux_task2.loss_heatmap: 1.4079, aux_task2.loss_bbox: 0.4099, aux_task3.loss_heatmap: 1.0903, aux_task3.loss_bbox: 0.3182, aux_task4.loss_heatmap: 0.7419, aux_task4.loss_bbox: 0.3457, aux_task5.loss_heatmap: 0.8791, aux_task5.loss_bbox: 0.3472, loss: 20.6818, grad_norm: 42.5683
2025-04-25 08:03:39,207 - mmdet - INFO - Epoch [4][350/773]	lr: 5.673e-05, eta: 3:41:24, time: 1.052, data_time: 0.004, memory: 5839, loss_cls: 0.8233, loss_bbox: 1.1502, d0.loss_cls: 0.8378, d0.loss_bbox: 1.3987, d1.loss_cls: 0.8176, d1.loss_bbox: 1.2421, d2.loss_cls: 0.8122, d2.loss_bbox: 1.1877, d3.loss_cls: 0.8164, d3.loss_bbox: 1.1692, d4.loss_cls: 0.8202, d4.loss_bbox: 1.1558, aux_task0.loss_heatmap: 1.0428, aux_task0.loss_bbox: 0.3616, aux_task1.loss_heatmap: 1.2543, aux_task1.loss_bbox: 0.3906, aux_task2.loss_heatmap: 1.4599, aux_task2.loss_bbox: 0.4165, aux_task3.loss_heatmap: 1.1275, aux_task3.loss_bbox: 0.3288, aux_task4.loss_heatmap: 0.7501, aux_task4.loss_bbox: 0.3490, aux_task5.loss_heatmap: 0.8589, aux_task5.loss_bbox: 0.3403, loss: 20.9114, grad_norm: 40.3685
2025-04-25 08:04:31,078 - mmdet - INFO - Epoch [4][400/773]	lr: 5.813e-05, eta: 3:40:32, time: 1.037, data_time: 0.004, memory: 5839, loss_cls: 0.8057, loss_bbox: 1.1649, d0.loss_cls: 0.8206, d0.loss_bbox: 1.3946, d1.loss_cls: 0.8085, d1.loss_bbox: 1.2404, d2.loss_cls: 0.8029, d2.loss_bbox: 1.1925, d3.loss_cls: 0.8029, d3.loss_bbox: 1.1789, d4.loss_cls: 0.8041, d4.loss_bbox: 1.1661, aux_task0.loss_heatmap: 1.0052, aux_task0.loss_bbox: 0.3584, aux_task1.loss_heatmap: 1.2410, aux_task1.loss_bbox: 0.3874, aux_task2.loss_heatmap: 1.4687, aux_task2.loss_bbox: 0.4179, aux_task3.loss_heatmap: 1.0745, aux_task3.loss_bbox: 0.3360, aux_task4.loss_heatmap: 0.7761, aux_task4.loss_bbox: 0.3594, aux_task5.loss_heatmap: 0.8583, aux_task5.loss_bbox: 0.3424, loss: 20.8074, grad_norm: 40.3038
2025-04-25 08:05:22,790 - mmdet - INFO - Epoch [4][450/773]	lr: 5.953e-05, eta: 3:39:39, time: 1.034, data_time: 0.004, memory: 5839, loss_cls: 0.8118, loss_bbox: 1.1559, d0.loss_cls: 0.8358, d0.loss_bbox: 1.3913, d1.loss_cls: 0.8100, d1.loss_bbox: 1.2347, d2.loss_cls: 0.8050, d2.loss_bbox: 1.1831, d3.loss_cls: 0.8068, d3.loss_bbox: 1.1687, d4.loss_cls: 0.8093, d4.loss_bbox: 1.1560, aux_task0.loss_heatmap: 1.0110, aux_task0.loss_bbox: 0.3647, aux_task1.loss_heatmap: 1.1852, aux_task1.loss_bbox: 0.3812, aux_task2.loss_heatmap: 1.4270, aux_task2.loss_bbox: 0.4091, aux_task3.loss_heatmap: 1.0450, aux_task3.loss_bbox: 0.3288, aux_task4.loss_heatmap: 0.7598, aux_task4.loss_bbox: 0.3436, aux_task5.loss_heatmap: 0.8105, aux_task5.loss_bbox: 0.3364, loss: 20.5708, grad_norm: 43.7102
2025-04-25 08:06:14,239 - mmdet - INFO - Epoch [4][500/773]	lr: 6.095e-05, eta: 3:38:45, time: 1.029, data_time: 0.004, memory: 5839, loss_cls: 0.7972, loss_bbox: 1.1392, d0.loss_cls: 0.8197, d0.loss_bbox: 1.3638, d1.loss_cls: 0.7981, d1.loss_bbox: 1.2182, d2.loss_cls: 0.7897, d2.loss_bbox: 1.1707, d3.loss_cls: 0.7907, d3.loss_bbox: 1.1577, d4.loss_cls: 0.7919, d4.loss_bbox: 1.1448, aux_task0.loss_heatmap: 1.0067, aux_task0.loss_bbox: 0.3628, aux_task1.loss_heatmap: 1.1932, aux_task1.loss_bbox: 0.3875, aux_task2.loss_heatmap: 1.4002, aux_task2.loss_bbox: 0.4190, aux_task3.loss_heatmap: 1.0684, aux_task3.loss_bbox: 0.3402, aux_task4.loss_heatmap: 0.7051, aux_task4.loss_bbox: 0.3500, aux_task5.loss_heatmap: 0.7906, aux_task5.loss_bbox: 0.3461, loss: 20.3516, grad_norm: 41.1657
2025-04-25 08:07:06,666 - mmdet - INFO - Epoch [4][550/773]	lr: 6.236e-05, eta: 3:37:55, time: 1.049, data_time: 0.004, memory: 5839, loss_cls: 0.7964, loss_bbox: 1.1262, d0.loss_cls: 0.8110, d0.loss_bbox: 1.3427, d1.loss_cls: 0.7931, d1.loss_bbox: 1.1922, d2.loss_cls: 0.7881, d2.loss_bbox: 1.1479, d3.loss_cls: 0.7894, d3.loss_bbox: 1.1364, d4.loss_cls: 0.7928, d4.loss_bbox: 1.1287, aux_task0.loss_heatmap: 0.9766, aux_task0.loss_bbox: 0.3586, aux_task1.loss_heatmap: 1.1620, aux_task1.loss_bbox: 0.3810, aux_task2.loss_heatmap: 1.4209, aux_task2.loss_bbox: 0.4175, aux_task3.loss_heatmap: 1.0364, aux_task3.loss_bbox: 0.3282, aux_task4.loss_heatmap: 0.7320, aux_task4.loss_bbox: 0.3334, aux_task5.loss_heatmap: 0.8146, aux_task5.loss_bbox: 0.3449, loss: 20.1508, grad_norm: 39.7629
2025-04-25 08:07:58,476 - mmdet - INFO - Epoch [4][600/773]	lr: 6.378e-05, eta: 3:37:03, time: 1.036, data_time: 0.004, memory: 5839, loss_cls: 0.7779, loss_bbox: 1.1414, d0.loss_cls: 0.8026, d0.loss_bbox: 1.3699, d1.loss_cls: 0.7798, d1.loss_bbox: 1.2212, d2.loss_cls: 0.7760, d2.loss_bbox: 1.1753, d3.loss_cls: 0.7753, d3.loss_bbox: 1.1625, d4.loss_cls: 0.7762, d4.loss_bbox: 1.1459, aux_task0.loss_heatmap: 1.0280, aux_task0.loss_bbox: 0.3632, aux_task1.loss_heatmap: 1.2127, aux_task1.loss_bbox: 0.3867, aux_task2.loss_heatmap: 1.3945, aux_task2.loss_bbox: 0.4232, aux_task3.loss_heatmap: 1.0316, aux_task3.loss_bbox: 0.3231, aux_task4.loss_heatmap: 0.7147, aux_task4.loss_bbox: 0.3400, aux_task5.loss_heatmap: 0.7998, aux_task5.loss_bbox: 0.3460, loss: 20.2676, grad_norm: 40.5778
2025-04-25 08:08:50,333 - mmdet - INFO - Epoch [4][650/773]	lr: 6.521e-05, eta: 3:36:11, time: 1.037, data_time: 0.004, memory: 5839, loss_cls: 0.7726, loss_bbox: 1.1007, d0.loss_cls: 0.7960, d0.loss_bbox: 1.3297, d1.loss_cls: 0.7744, d1.loss_bbox: 1.1821, d2.loss_cls: 0.7661, d2.loss_bbox: 1.1335, d3.loss_cls: 0.7649, d3.loss_bbox: 1.1233, d4.loss_cls: 0.7685, d4.loss_bbox: 1.1070, aux_task0.loss_heatmap: 0.9638, aux_task0.loss_bbox: 0.3527, aux_task1.loss_heatmap: 1.1705, aux_task1.loss_bbox: 0.3774, aux_task2.loss_heatmap: 1.3200, aux_task2.loss_bbox: 0.4151, aux_task3.loss_heatmap: 0.9936, aux_task3.loss_bbox: 0.3178, aux_task4.loss_heatmap: 0.7377, aux_task4.loss_bbox: 0.3342, aux_task5.loss_heatmap: 0.7851, aux_task5.loss_bbox: 0.3387, loss: 19.7254, grad_norm: 41.6425
2025-04-25 08:09:42,122 - mmdet - INFO - Epoch [4][700/773]	lr: 6.664e-05, eta: 3:35:18, time: 1.036, data_time: 0.004, memory: 5839, loss_cls: 0.7742, loss_bbox: 1.0924, d0.loss_cls: 0.7953, d0.loss_bbox: 1.3223, d1.loss_cls: 0.7762, d1.loss_bbox: 1.1731, d2.loss_cls: 0.7690, d2.loss_bbox: 1.1278, d3.loss_cls: 0.7680, d3.loss_bbox: 1.1132, d4.loss_cls: 0.7690, d4.loss_bbox: 1.0952, aux_task0.loss_heatmap: 0.9653, aux_task0.loss_bbox: 0.3545, aux_task1.loss_heatmap: 1.1239, aux_task1.loss_bbox: 0.3723, aux_task2.loss_heatmap: 1.3485, aux_task2.loss_bbox: 0.3989, aux_task3.loss_heatmap: 1.0102, aux_task3.loss_bbox: 0.3153, aux_task4.loss_heatmap: 0.7024, aux_task4.loss_bbox: 0.3336, aux_task5.loss_heatmap: 0.7959, aux_task5.loss_bbox: 0.3421, loss: 19.6385, grad_norm: 43.0389
2025-04-25 08:10:35,108 - mmdet - INFO - Epoch [4][750/773]	lr: 6.806e-05, eta: 3:34:30, time: 1.060, data_time: 0.004, memory: 5839, loss_cls: 0.7758, loss_bbox: 1.1054, d0.loss_cls: 0.7952, d0.loss_bbox: 1.3208, d1.loss_cls: 0.7728, d1.loss_bbox: 1.1766, d2.loss_cls: 0.7683, d2.loss_bbox: 1.1355, d3.loss_cls: 0.7706, d3.loss_bbox: 1.1219, d4.loss_cls: 0.7728, d4.loss_bbox: 1.1071, aux_task0.loss_heatmap: 0.9648, aux_task0.loss_bbox: 0.3501, aux_task1.loss_heatmap: 1.1597, aux_task1.loss_bbox: 0.3841, aux_task2.loss_heatmap: 1.3596, aux_task2.loss_bbox: 0.4033, aux_task3.loss_heatmap: 0.9739, aux_task3.loss_bbox: 0.3181, aux_task4.loss_heatmap: 0.7146, aux_task4.loss_bbox: 0.3444, aux_task5.loss_heatmap: 0.7829, aux_task5.loss_bbox: 0.3378, loss: 19.7160, grad_norm: 40.0880
2025-04-25 08:10:59,307 - mmdet - INFO - Saving checkpoint at 4 epochs
2025-04-25 08:12:00,633 - mmdet - INFO - Epoch [5][50/773]	lr: 7.015e-05, eta: 3:32:12, time: 1.197, data_time: 0.154, memory: 5839, loss_cls: 0.7680, loss_bbox: 1.0885, d0.loss_cls: 0.7900, d0.loss_bbox: 1.3058, d1.loss_cls: 0.7683, d1.loss_bbox: 1.1655, d2.loss_cls: 0.7648, d2.loss_bbox: 1.1235, d3.loss_cls: 0.7633, d3.loss_bbox: 1.1097, d4.loss_cls: 0.7647, d4.loss_bbox: 1.0926, aux_task0.loss_heatmap: 0.9524, aux_task0.loss_bbox: 0.3552, aux_task1.loss_heatmap: 1.1509, aux_task1.loss_bbox: 0.3821, aux_task2.loss_heatmap: 1.3799, aux_task2.loss_bbox: 0.4192, aux_task3.loss_heatmap: 0.9755, aux_task3.loss_bbox: 0.3105, aux_task4.loss_heatmap: 0.7391, aux_task4.loss_bbox: 0.3370, aux_task5.loss_heatmap: 0.7606, aux_task5.loss_bbox: 0.3306, loss: 19.5977, grad_norm: 40.7722
2025-04-25 08:12:52,107 - mmdet - INFO - Epoch [5][100/773]	lr: 7.158e-05, eta: 3:31:20, time: 1.029, data_time: 0.004, memory: 5839, loss_cls: 0.7648, loss_bbox: 1.0760, d0.loss_cls: 0.7851, d0.loss_bbox: 1.2944, d1.loss_cls: 0.7629, d1.loss_bbox: 1.1492, d2.loss_cls: 0.7557, d2.loss_bbox: 1.1104, d3.loss_cls: 0.7551, d3.loss_bbox: 1.0948, d4.loss_cls: 0.7618, d4.loss_bbox: 1.0806, aux_task0.loss_heatmap: 0.9300, aux_task0.loss_bbox: 0.3508, aux_task1.loss_heatmap: 1.1747, aux_task1.loss_bbox: 0.3835, aux_task2.loss_heatmap: 1.3564, aux_task2.loss_bbox: 0.3999, aux_task3.loss_heatmap: 1.0124, aux_task3.loss_bbox: 0.3198, aux_task4.loss_heatmap: 0.7248, aux_task4.loss_bbox: 0.3378, aux_task5.loss_heatmap: 0.7524, aux_task5.loss_bbox: 0.3249, loss: 19.4583, grad_norm: 40.1032
2025-04-25 08:13:44,603 - mmdet - INFO - Epoch [5][150/773]	lr: 7.300e-05, eta: 3:30:31, time: 1.050, data_time: 0.004, memory: 5839, loss_cls: 0.7547, loss_bbox: 1.0861, d0.loss_cls: 0.7734, d0.loss_bbox: 1.3051, d1.loss_cls: 0.7520, d1.loss_bbox: 1.1633, d2.loss_cls: 0.7463, d2.loss_bbox: 1.1191, d3.loss_cls: 0.7453, d3.loss_bbox: 1.1029, d4.loss_cls: 0.7483, d4.loss_bbox: 1.0897, aux_task0.loss_heatmap: 0.9298, aux_task0.loss_bbox: 0.3426, aux_task1.loss_heatmap: 1.1126, aux_task1.loss_bbox: 0.3747, aux_task2.loss_heatmap: 1.2756, aux_task2.loss_bbox: 0.4206, aux_task3.loss_heatmap: 0.9858, aux_task3.loss_bbox: 0.3185, aux_task4.loss_heatmap: 0.7168, aux_task4.loss_bbox: 0.3334, aux_task5.loss_heatmap: 0.7855, aux_task5.loss_bbox: 0.3362, loss: 19.3183, grad_norm: 44.4464
2025-04-25 08:14:37,611 - mmdet - INFO - Epoch [5][200/773]	lr: 7.443e-05, eta: 3:29:44, time: 1.060, data_time: 0.004, memory: 5839, loss_cls: 0.7498, loss_bbox: 1.0775, d0.loss_cls: 0.7728, d0.loss_bbox: 1.2942, d1.loss_cls: 0.7461, d1.loss_bbox: 1.1566, d2.loss_cls: 0.7421, d2.loss_bbox: 1.1146, d3.loss_cls: 0.7415, d3.loss_bbox: 1.0970, d4.loss_cls: 0.7450, d4.loss_bbox: 1.0833, aux_task0.loss_heatmap: 0.8978, aux_task0.loss_bbox: 0.3456, aux_task1.loss_heatmap: 1.1542, aux_task1.loss_bbox: 0.3726, aux_task2.loss_heatmap: 1.2863, aux_task2.loss_bbox: 0.3998, aux_task3.loss_heatmap: 0.9644, aux_task3.loss_bbox: 0.3197, aux_task4.loss_heatmap: 0.7275, aux_task4.loss_bbox: 0.3441, aux_task5.loss_heatmap: 0.7310, aux_task5.loss_bbox: 0.3329, loss: 19.1962, grad_norm: 41.7779
2025-04-25 08:15:30,134 - mmdet - INFO - Epoch [5][250/773]	lr: 7.585e-05, eta: 3:28:55, time: 1.050, data_time: 0.004, memory: 5839, loss_cls: 0.7496, loss_bbox: 1.0602, d0.loss_cls: 0.7674, d0.loss_bbox: 1.2786, d1.loss_cls: 0.7493, d1.loss_bbox: 1.1367, d2.loss_cls: 0.7450, d2.loss_bbox: 1.0934, d3.loss_cls: 0.7462, d3.loss_bbox: 1.0773, d4.loss_cls: 0.7509, d4.loss_bbox: 1.0618, aux_task0.loss_heatmap: 0.9352, aux_task0.loss_bbox: 0.3556, aux_task1.loss_heatmap: 1.1172, aux_task1.loss_bbox: 0.3810, aux_task2.loss_heatmap: 1.2684, aux_task2.loss_bbox: 0.4000, aux_task3.loss_heatmap: 0.9420, aux_task3.loss_bbox: 0.3182, aux_task4.loss_heatmap: 0.7402, aux_task4.loss_bbox: 0.3372, aux_task5.loss_heatmap: 0.7851, aux_task5.loss_bbox: 0.3337, loss: 19.1301, grad_norm: 41.9606
2025-04-25 08:16:22,288 - mmdet - INFO - Epoch [5][300/773]	lr: 7.726e-05, eta: 3:28:05, time: 1.043, data_time: 0.004, memory: 5839, loss_cls: 0.7397, loss_bbox: 1.0608, d0.loss_cls: 0.7617, d0.loss_bbox: 1.2789, d1.loss_cls: 0.7400, d1.loss_bbox: 1.1369, d2.loss_cls: 0.7334, d2.loss_bbox: 1.0945, d3.loss_cls: 0.7333, d3.loss_bbox: 1.0790, d4.loss_cls: 0.7353, d4.loss_bbox: 1.0673, aux_task0.loss_heatmap: 0.8971, aux_task0.loss_bbox: 0.3459, aux_task1.loss_heatmap: 1.1512, aux_task1.loss_bbox: 0.3676, aux_task2.loss_heatmap: 1.2315, aux_task2.loss_bbox: 0.4062, aux_task3.loss_heatmap: 0.9342, aux_task3.loss_bbox: 0.3143, aux_task4.loss_heatmap: 0.6640, aux_task4.loss_bbox: 0.3353, aux_task5.loss_heatmap: 0.7360, aux_task5.loss_bbox: 0.3353, loss: 18.8794, grad_norm: 42.0443
2025-04-25 08:17:13,847 - mmdet - INFO - Epoch [5][350/773]	lr: 7.867e-05, eta: 3:27:13, time: 1.031, data_time: 0.004, memory: 5839, loss_cls: 0.7260, loss_bbox: 1.0788, d0.loss_cls: 0.7520, d0.loss_bbox: 1.2796, d1.loss_cls: 0.7264, d1.loss_bbox: 1.1471, d2.loss_cls: 0.7195, d2.loss_bbox: 1.1057, d3.loss_cls: 0.7210, d3.loss_bbox: 1.0930, d4.loss_cls: 0.7222, d4.loss_bbox: 1.0827, aux_task0.loss_heatmap: 0.8900, aux_task0.loss_bbox: 0.3397, aux_task1.loss_heatmap: 1.1535, aux_task1.loss_bbox: 0.3762, aux_task2.loss_heatmap: 1.2878, aux_task2.loss_bbox: 0.4062, aux_task3.loss_heatmap: 0.9860, aux_task3.loss_bbox: 0.3239, aux_task4.loss_heatmap: 0.6984, aux_task4.loss_bbox: 0.3350, aux_task5.loss_heatmap: 0.7341, aux_task5.loss_bbox: 0.3255, loss: 19.0104, grad_norm: 40.4465
2025-04-25 08:18:04,942 - mmdet - INFO - Epoch [5][400/773]	lr: 8.007e-05, eta: 3:26:19, time: 1.022, data_time: 0.004, memory: 5839, loss_cls: 0.7274, loss_bbox: 1.0797, d0.loss_cls: 0.7521, d0.loss_bbox: 1.2787, d1.loss_cls: 0.7274, d1.loss_bbox: 1.1428, d2.loss_cls: 0.7204, d2.loss_bbox: 1.1041, d3.loss_cls: 0.7224, d3.loss_bbox: 1.0912, d4.loss_cls: 0.7227, d4.loss_bbox: 1.0839, aux_task0.loss_heatmap: 0.9062, aux_task0.loss_bbox: 0.3502, aux_task1.loss_heatmap: 1.1422, aux_task1.loss_bbox: 0.3817, aux_task2.loss_heatmap: 1.2800, aux_task2.loss_bbox: 0.4051, aux_task3.loss_heatmap: 1.0202, aux_task3.loss_bbox: 0.3322, aux_task4.loss_heatmap: 0.6932, aux_task4.loss_bbox: 0.3449, aux_task5.loss_heatmap: 0.6835, aux_task5.loss_bbox: 0.3276, loss: 19.0201, grad_norm: 42.8000
2025-04-25 08:18:57,258 - mmdet - INFO - Epoch [5][450/773]	lr: 8.147e-05, eta: 3:25:29, time: 1.046, data_time: 0.004, memory: 5839, loss_cls: 0.7136, loss_bbox: 1.0494, d0.loss_cls: 0.7426, d0.loss_bbox: 1.2589, d1.loss_cls: 0.7187, d1.loss_bbox: 1.1214, d2.loss_cls: 0.7136, d2.loss_bbox: 1.0768, d3.loss_cls: 0.7096, d3.loss_bbox: 1.0660, d4.loss_cls: 0.7116, d4.loss_bbox: 1.0558, aux_task0.loss_heatmap: 0.9015, aux_task0.loss_bbox: 0.3395, aux_task1.loss_heatmap: 1.0690, aux_task1.loss_bbox: 0.3690, aux_task2.loss_heatmap: 1.2769, aux_task2.loss_bbox: 0.3829, aux_task3.loss_heatmap: 0.9536, aux_task3.loss_bbox: 0.3236, aux_task4.loss_heatmap: 0.6954, aux_task4.loss_bbox: 0.3332, aux_task5.loss_heatmap: 0.6995, aux_task5.loss_bbox: 0.3258, loss: 18.6079, grad_norm: 41.9570
2025-04-25 08:19:48,902 - mmdet - INFO - Epoch [5][500/773]	lr: 8.286e-05, eta: 3:24:37, time: 1.033, data_time: 0.004, memory: 5839, loss_cls: 0.7180, loss_bbox: 1.0414, d0.loss_cls: 0.7389, d0.loss_bbox: 1.2559, d1.loss_cls: 0.7175, d1.loss_bbox: 1.1164, d2.loss_cls: 0.7118, d2.loss_bbox: 1.0697, d3.loss_cls: 0.7088, d3.loss_bbox: 1.0582, d4.loss_cls: 0.7115, d4.loss_bbox: 1.0472, aux_task0.loss_heatmap: 0.8994, aux_task0.loss_bbox: 0.3368, aux_task1.loss_heatmap: 1.0825, aux_task1.loss_bbox: 0.3825, aux_task2.loss_heatmap: 1.2645, aux_task2.loss_bbox: 0.4032, aux_task3.loss_heatmap: 0.9302, aux_task3.loss_bbox: 0.3215, aux_task4.loss_heatmap: 0.6866, aux_task4.loss_bbox: 0.3335, aux_task5.loss_heatmap: 0.6919, aux_task5.loss_bbox: 0.3255, loss: 18.5533, grad_norm: 42.9639
2025-04-25 08:20:40,217 - mmdet - INFO - Epoch [5][550/773]	lr: 8.424e-05, eta: 3:23:44, time: 1.026, data_time: 0.004, memory: 5839, loss_cls: 0.7129, loss_bbox: 1.0380, d0.loss_cls: 0.7379, d0.loss_bbox: 1.2407, d1.loss_cls: 0.7131, d1.loss_bbox: 1.1047, d2.loss_cls: 0.7067, d2.loss_bbox: 1.0646, d3.loss_cls: 0.7061, d3.loss_bbox: 1.0546, d4.loss_cls: 0.7101, d4.loss_bbox: 1.0422, aux_task0.loss_heatmap: 0.9032, aux_task0.loss_bbox: 0.3366, aux_task1.loss_heatmap: 1.1027, aux_task1.loss_bbox: 0.3679, aux_task2.loss_heatmap: 1.2322, aux_task2.loss_bbox: 0.4052, aux_task3.loss_heatmap: 0.9235, aux_task3.loss_bbox: 0.3158, aux_task4.loss_heatmap: 0.6781, aux_task4.loss_bbox: 0.3242, aux_task5.loss_heatmap: 0.6570, aux_task5.loss_bbox: 0.3260, loss: 18.4040, grad_norm: 39.3909
2025-04-25 08:21:31,260 - mmdet - INFO - Epoch [5][600/773]	lr: 8.560e-05, eta: 3:22:50, time: 1.021, data_time: 0.004, memory: 5846, loss_cls: 0.7040, loss_bbox: 1.0440, d0.loss_cls: 0.7335, d0.loss_bbox: 1.2464, d1.loss_cls: 0.7118, d1.loss_bbox: 1.1046, d2.loss_cls: 0.7007, d2.loss_bbox: 1.0666, d3.loss_cls: 0.6993, d3.loss_bbox: 1.0568, d4.loss_cls: 0.7024, d4.loss_bbox: 1.0484, aux_task0.loss_heatmap: 0.9028, aux_task0.loss_bbox: 0.3399, aux_task1.loss_heatmap: 1.1285, aux_task1.loss_bbox: 0.3784, aux_task2.loss_heatmap: 1.2059, aux_task2.loss_bbox: 0.4045, aux_task3.loss_heatmap: 0.9087, aux_task3.loss_bbox: 0.3143, aux_task4.loss_heatmap: 0.6522, aux_task4.loss_bbox: 0.3324, aux_task5.loss_heatmap: 0.6883, aux_task5.loss_bbox: 0.3304, loss: 18.4048, grad_norm: 42.2149
2025-04-25 08:22:22,905 - mmdet - INFO - Epoch [5][650/773]	lr: 8.696e-05, eta: 3:21:58, time: 1.033, data_time: 0.004, memory: 5846, loss_cls: 0.7072, loss_bbox: 1.0389, d0.loss_cls: 0.7316, d0.loss_bbox: 1.2221, d1.loss_cls: 0.7074, d1.loss_bbox: 1.0955, d2.loss_cls: 0.7023, d2.loss_bbox: 1.0585, d3.loss_cls: 0.7008, d3.loss_bbox: 1.0477, d4.loss_cls: 0.7013, d4.loss_bbox: 1.0402, aux_task0.loss_heatmap: 0.9421, aux_task0.loss_bbox: 0.3360, aux_task1.loss_heatmap: 1.0882, aux_task1.loss_bbox: 0.3692, aux_task2.loss_heatmap: 1.1690, aux_task2.loss_bbox: 0.3924, aux_task3.loss_heatmap: 0.9197, aux_task3.loss_bbox: 0.3235, aux_task4.loss_heatmap: 0.6650, aux_task4.loss_bbox: 0.3249, aux_task5.loss_heatmap: 0.7126, aux_task5.loss_bbox: 0.3277, loss: 18.3239, grad_norm: 40.3833
2025-04-25 08:23:16,982 - mmdet - INFO - Epoch [5][700/773]	lr: 8.831e-05, eta: 3:21:14, time: 1.082, data_time: 0.005, memory: 5846, loss_cls: 0.7024, loss_bbox: 1.0261, d0.loss_cls: 0.7257, d0.loss_bbox: 1.2234, d1.loss_cls: 0.7031, d1.loss_bbox: 1.0900, d2.loss_cls: 0.6960, d2.loss_bbox: 1.0510, d3.loss_cls: 0.6962, d3.loss_bbox: 1.0403, d4.loss_cls: 0.7004, d4.loss_bbox: 1.0311, aux_task0.loss_heatmap: 0.9081, aux_task0.loss_bbox: 0.3319, aux_task1.loss_heatmap: 1.0589, aux_task1.loss_bbox: 0.3654, aux_task2.loss_heatmap: 1.1931, aux_task2.loss_bbox: 0.3909, aux_task3.loss_heatmap: 0.8890, aux_task3.loss_bbox: 0.3066, aux_task4.loss_heatmap: 0.6654, aux_task4.loss_bbox: 0.3218, aux_task5.loss_heatmap: 0.7017, aux_task5.loss_bbox: 0.3258, loss: 18.1442, grad_norm: 42.5802
2025-04-25 08:24:08,585 - mmdet - INFO - Epoch [5][750/773]	lr: 8.964e-05, eta: 3:20:22, time: 1.032, data_time: 0.004, memory: 5846, loss_cls: 0.7006, loss_bbox: 1.0282, d0.loss_cls: 0.7216, d0.loss_bbox: 1.2296, d1.loss_cls: 0.7009, d1.loss_bbox: 1.0930, d2.loss_cls: 0.6941, d2.loss_bbox: 1.0538, d3.loss_cls: 0.6963, d3.loss_bbox: 1.0414, d4.loss_cls: 0.7011, d4.loss_bbox: 1.0292, aux_task0.loss_heatmap: 0.9394, aux_task0.loss_bbox: 0.3554, aux_task1.loss_heatmap: 1.0714, aux_task1.loss_bbox: 0.3760, aux_task2.loss_heatmap: 1.1698, aux_task2.loss_bbox: 0.3983, aux_task3.loss_heatmap: 0.9171, aux_task3.loss_bbox: 0.3071, aux_task4.loss_heatmap: 0.6543, aux_task4.loss_bbox: 0.3338, aux_task5.loss_heatmap: 0.7241, aux_task5.loss_bbox: 0.3315, loss: 18.2681, grad_norm: 38.8795
2025-04-25 08:24:32,235 - mmdet - INFO - Saving checkpoint at 5 epochs
2025-04-25 08:47:46,906 - mmdet - INFO - Exp name: lidar_0075v_900q_cascadeded_split40.py
2025-04-25 08:47:48,899 - mmdet - INFO - Epoch(val) [5][1505]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.0315, pts_bbox_NuScenes/car_AP_dist_1.0: 0.1551, pts_bbox_NuScenes/car_AP_dist_2.0: 0.2424, pts_bbox_NuScenes/car_AP_dist_4.0: 0.3144, pts_bbox_NuScenes/car_trans_err: 0.6656, pts_bbox_NuScenes/car_scale_err: 0.1939, pts_bbox_NuScenes/car_orient_err: 1.3638, pts_bbox_NuScenes/car_vel_err: 1.2697, pts_bbox_NuScenes/car_attr_err: 0.4284, pts_bbox_NuScenes/mATE: 0.7872, pts_bbox_NuScenes/mASE: 0.3717, pts_bbox_NuScenes/mAOE: 1.4627, pts_bbox_NuScenes/mAVE: 1.1427, pts_bbox_NuScenes/mAAE: 0.4419, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.0000, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.0166, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.0342, pts_bbox_NuScenes/truck_trans_err: 1.0056, pts_bbox_NuScenes/truck_scale_err: 0.3910, pts_bbox_NuScenes/truck_orient_err: 1.4421, pts_bbox_NuScenes/truck_vel_err: 0.9639, pts_bbox_NuScenes/truck_attr_err: 0.4194, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0000, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.0000, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.0000, pts_bbox_NuScenes/construction_vehicle_trans_err: 1.0589, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.5909, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.6209, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1266, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.3391, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.0018, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.0260, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.0616, pts_bbox_NuScenes/bus_trans_err: 1.0173, pts_bbox_NuScenes/bus_scale_err: 0.2794, pts_bbox_NuScenes/bus_orient_err: 1.8977, pts_bbox_NuScenes/bus_vel_err: 2.6835, pts_bbox_NuScenes/bus_attr_err: 0.6620, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.0000, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.0000, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.0000, pts_bbox_NuScenes/trailer_trans_err: 1.1654, pts_bbox_NuScenes/trailer_scale_err: 0.3870, pts_bbox_NuScenes/trailer_orient_err: 1.4632, pts_bbox_NuScenes/trailer_vel_err: 0.5152, pts_bbox_NuScenes/trailer_attr_err: 0.1848, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.0038, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.0480, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.1210, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.1842, pts_bbox_NuScenes/barrier_trans_err: 0.9208, pts_bbox_NuScenes/barrier_scale_err: 0.4186, pts_bbox_NuScenes/barrier_orient_err: 1.1033, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.0005, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.0010, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.0015, pts_bbox_NuScenes/motorcycle_trans_err: 0.4762, pts_bbox_NuScenes/motorcycle_scale_err: 0.3472, pts_bbox_NuScenes/motorcycle_orient_err: 1.3360, pts_bbox_NuScenes/motorcycle_vel_err: 1.9337, pts_bbox_NuScenes/motorcycle_attr_err: 0.5430, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.0000, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.0000, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.0000, pts_bbox_NuScenes/bicycle_trans_err: 0.6602, pts_bbox_NuScenes/bicycle_scale_err: 0.3392, pts_bbox_NuScenes/bicycle_orient_err: 1.5255, pts_bbox_NuScenes/bicycle_vel_err: 0.7180, pts_bbox_NuScenes/bicycle_attr_err: 0.1695, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.1246, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.2675, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.3266, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.3695, pts_bbox_NuScenes/pedestrian_trans_err: 0.5064, pts_bbox_NuScenes/pedestrian_scale_err: 0.3023, pts_bbox_NuScenes/pedestrian_orient_err: 1.4120, pts_bbox_NuScenes/pedestrian_vel_err: 0.9308, pts_bbox_NuScenes/pedestrian_attr_err: 0.7887, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.0351, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.0504, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.0665, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.1179, pts_bbox_NuScenes/traffic_cone_trans_err: 0.3952, pts_bbox_NuScenes/traffic_cone_scale_err: 0.4671, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.1725, pts_bbox_NuScenes/mAP: 0.0650
2025-04-25 08:48:49,260 - mmdet - INFO - Epoch [6][50/773]	lr: 9.156e-05, eta: 3:18:21, time: 1.207, data_time: 0.168, memory: 5846, loss_cls: 0.7045, loss_bbox: 1.0186, d0.loss_cls: 0.7213, d0.loss_bbox: 1.2000, d1.loss_cls: 0.7036, d1.loss_bbox: 1.0669, d2.loss_cls: 0.6958, d2.loss_bbox: 1.0368, d3.loss_cls: 0.6952, d3.loss_bbox: 1.0275, d4.loss_cls: 0.6994, d4.loss_bbox: 1.0212, aux_task0.loss_heatmap: 0.8340, aux_task0.loss_bbox: 0.3335, aux_task1.loss_heatmap: 1.0768, aux_task1.loss_bbox: 0.3738, aux_task2.loss_heatmap: 1.2327, aux_task2.loss_bbox: 0.4075, aux_task3.loss_heatmap: 0.8994, aux_task3.loss_bbox: 0.3039, aux_task4.loss_heatmap: 0.7071, aux_task4.loss_bbox: 0.3306, aux_task5.loss_heatmap: 0.6525, aux_task5.loss_bbox: 0.3188, loss: 18.0612, grad_norm: 41.8777
2025-04-25 08:49:40,349 - mmdet - INFO - Epoch [6][100/773]	lr: 9.286e-05, eta: 3:17:28, time: 1.022, data_time: 0.004, memory: 5846, loss_cls: 0.6872, loss_bbox: 1.0274, d0.loss_cls: 0.7127, d0.loss_bbox: 1.2246, d1.loss_cls: 0.6918, d1.loss_bbox: 1.0845, d2.loss_cls: 0.6857, d2.loss_bbox: 1.0534, d3.loss_cls: 0.6835, d3.loss_bbox: 1.0411, d4.loss_cls: 0.6829, d4.loss_bbox: 1.0336, aux_task0.loss_heatmap: 0.8586, aux_task0.loss_bbox: 0.3409, aux_task1.loss_heatmap: 1.1074, aux_task1.loss_bbox: 0.3768, aux_task2.loss_heatmap: 1.2328, aux_task2.loss_bbox: 0.3994, aux_task3.loss_heatmap: 0.9280, aux_task3.loss_bbox: 0.3058, aux_task4.loss_heatmap: 0.6825, aux_task4.loss_bbox: 0.3313, aux_task5.loss_heatmap: 0.6730, aux_task5.loss_bbox: 0.3203, loss: 18.1652, grad_norm: 38.1028
2025-04-25 08:50:31,806 - mmdet - INFO - Epoch [6][150/773]	lr: 9.414e-05, eta: 3:16:37, time: 1.029, data_time: 0.004, memory: 5891, loss_cls: 0.6912, loss_bbox: 1.0075, d0.loss_cls: 0.7105, d0.loss_bbox: 1.1904, d1.loss_cls: 0.6919, d1.loss_bbox: 1.0623, d2.loss_cls: 0.6823, d2.loss_bbox: 1.0311, d3.loss_cls: 0.6857, d3.loss_bbox: 1.0204, d4.loss_cls: 0.6886, d4.loss_bbox: 1.0101, aux_task0.loss_heatmap: 0.8620, aux_task0.loss_bbox: 0.3310, aux_task1.loss_heatmap: 1.0343, aux_task1.loss_bbox: 0.3646, aux_task2.loss_heatmap: 1.1515, aux_task2.loss_bbox: 0.4062, aux_task3.loss_heatmap: 0.8491, aux_task3.loss_bbox: 0.3085, aux_task4.loss_heatmap: 0.6647, aux_task4.loss_bbox: 0.3176, aux_task5.loss_heatmap: 0.6844, aux_task5.loss_bbox: 0.3241, loss: 17.7699, grad_norm: 42.2022
2025-04-25 08:51:24,945 - mmdet - INFO - Epoch [6][200/773]	lr: 9.541e-05, eta: 3:15:50, time: 1.063, data_time: 0.004, memory: 5891, loss_cls: 0.6899, loss_bbox: 1.0075, d0.loss_cls: 0.7138, d0.loss_bbox: 1.1976, d1.loss_cls: 0.6921, d1.loss_bbox: 1.0674, d2.loss_cls: 0.6841, d2.loss_bbox: 1.0345, d3.loss_cls: 0.6836, d3.loss_bbox: 1.0205, d4.loss_cls: 0.6846, d4.loss_bbox: 1.0119, aux_task0.loss_heatmap: 0.8603, aux_task0.loss_bbox: 0.3321, aux_task1.loss_heatmap: 1.0656, aux_task1.loss_bbox: 0.3586, aux_task2.loss_heatmap: 1.1811, aux_task2.loss_bbox: 0.3866, aux_task3.loss_heatmap: 0.8264, aux_task3.loss_bbox: 0.3035, aux_task4.loss_heatmap: 0.6549, aux_task4.loss_bbox: 0.3304, aux_task5.loss_heatmap: 0.6871, aux_task5.loss_bbox: 0.3225, loss: 17.7967, grad_norm: 39.4166
2025-04-25 08:52:18,535 - mmdet - INFO - Epoch [6][250/773]	lr: 9.666e-05, eta: 3:15:04, time: 1.072, data_time: 0.004, memory: 5891, loss_cls: 0.6833, loss_bbox: 0.9861, d0.loss_cls: 0.7084, d0.loss_bbox: 1.1667, d1.loss_cls: 0.6847, d1.loss_bbox: 1.0397, d2.loss_cls: 0.6795, d2.loss_bbox: 1.0088, d3.loss_cls: 0.6814, d3.loss_bbox: 0.9992, d4.loss_cls: 0.6829, d4.loss_bbox: 0.9898, aux_task0.loss_heatmap: 0.8169, aux_task0.loss_bbox: 0.3334, aux_task1.loss_heatmap: 1.0074, aux_task1.loss_bbox: 0.3677, aux_task2.loss_heatmap: 1.1366, aux_task2.loss_bbox: 0.3757, aux_task3.loss_heatmap: 0.8991, aux_task3.loss_bbox: 0.3058, aux_task4.loss_heatmap: 0.6945, aux_task4.loss_bbox: 0.3332, aux_task5.loss_heatmap: 0.6583, aux_task5.loss_bbox: 0.3123, loss: 17.5514, grad_norm: 39.2985
2025-04-25 08:53:14,962 - mmdet - INFO - Epoch [6][300/773]	lr: 9.789e-05, eta: 3:14:25, time: 1.129, data_time: 0.004, memory: 5891, loss_cls: 0.6651, loss_bbox: 1.0011, d0.loss_cls: 0.6941, d0.loss_bbox: 1.1917, d1.loss_cls: 0.6698, d1.loss_bbox: 1.0565, d2.loss_cls: 0.6640, d2.loss_bbox: 1.0203, d3.loss_cls: 0.6625, d3.loss_bbox: 1.0120, d4.loss_cls: 0.6624, d4.loss_bbox: 1.0055, aux_task0.loss_heatmap: 0.8754, aux_task0.loss_bbox: 0.3308, aux_task1.loss_heatmap: 1.0968, aux_task1.loss_bbox: 0.3672, aux_task2.loss_heatmap: 1.0760, aux_task2.loss_bbox: 0.3844, aux_task3.loss_heatmap: 0.8838, aux_task3.loss_bbox: 0.3038, aux_task4.loss_heatmap: 0.6295, aux_task4.loss_bbox: 0.3245, aux_task5.loss_heatmap: 0.6747, aux_task5.loss_bbox: 0.3205, loss: 17.5726, grad_norm: 40.0119
2025-04-25 08:54:09,530 - mmdet - INFO - Epoch [6][350/773]	lr: 9.910e-05, eta: 3:13:41, time: 1.091, data_time: 0.004, memory: 5891, loss_cls: 0.6823, loss_bbox: 1.0130, d0.loss_cls: 0.7004, d0.loss_bbox: 1.1913, d1.loss_cls: 0.6839, d1.loss_bbox: 1.0686, d2.loss_cls: 0.6788, d2.loss_bbox: 1.0356, d3.loss_cls: 0.6783, d3.loss_bbox: 1.0255, d4.loss_cls: 0.6798, d4.loss_bbox: 1.0168, aux_task0.loss_heatmap: 0.8696, aux_task0.loss_bbox: 0.3355, aux_task1.loss_heatmap: 1.0869, aux_task1.loss_bbox: 0.3710, aux_task2.loss_heatmap: 1.1798, aux_task2.loss_bbox: 0.3980, aux_task3.loss_heatmap: 0.8879, aux_task3.loss_bbox: 0.3104, aux_task4.loss_heatmap: 0.6669, aux_task4.loss_bbox: 0.3245, aux_task5.loss_heatmap: 0.6713, aux_task5.loss_bbox: 0.3201, loss: 17.8761, grad_norm: 35.1937
2025-04-25 08:55:01,906 - mmdet - INFO - Epoch [6][400/773]	lr: 1.003e-04, eta: 3:12:52, time: 1.047, data_time: 0.004, memory: 5891, loss_cls: 0.6694, loss_bbox: 1.0191, d0.loss_cls: 0.6849, d0.loss_bbox: 1.1974, d1.loss_cls: 0.6689, d1.loss_bbox: 1.0754, d2.loss_cls: 0.6639, d2.loss_bbox: 1.0398, d3.loss_cls: 0.6644, d3.loss_bbox: 1.0275, d4.loss_cls: 0.6668, d4.loss_bbox: 1.0213, aux_task0.loss_heatmap: 0.8098, aux_task0.loss_bbox: 0.3310, aux_task1.loss_heatmap: 1.0723, aux_task1.loss_bbox: 0.3787, aux_task2.loss_heatmap: 1.1864, aux_task2.loss_bbox: 0.4000, aux_task3.loss_heatmap: 0.8598, aux_task3.loss_bbox: 0.3120, aux_task4.loss_heatmap: 0.6327, aux_task4.loss_bbox: 0.3327, aux_task5.loss_heatmap: 0.6477, aux_task5.loss_bbox: 0.3204, loss: 17.6823, grad_norm: 38.1483
2025-04-25 08:55:54,184 - mmdet - INFO - Epoch [6][450/773]	lr: 1.015e-04, eta: 3:12:01, time: 1.046, data_time: 0.004, memory: 5891, loss_cls: 0.6829, loss_bbox: 0.9974, d0.loss_cls: 0.7011, d0.loss_bbox: 1.1792, d1.loss_cls: 0.6837, d1.loss_bbox: 1.0477, d2.loss_cls: 0.6789, d2.loss_bbox: 1.0199, d3.loss_cls: 0.6779, d3.loss_bbox: 1.0101, d4.loss_cls: 0.6809, d4.loss_bbox: 1.0007, aux_task0.loss_heatmap: 0.8344, aux_task0.loss_bbox: 0.3342, aux_task1.loss_heatmap: 1.0142, aux_task1.loss_bbox: 0.3584, aux_task2.loss_heatmap: 1.1692, aux_task2.loss_bbox: 0.3809, aux_task3.loss_heatmap: 0.8538, aux_task3.loss_bbox: 0.3108, aux_task4.loss_heatmap: 0.6453, aux_task4.loss_bbox: 0.3277, aux_task5.loss_heatmap: 0.6245, aux_task5.loss_bbox: 0.3220, loss: 17.5359, grad_norm: 40.3301
2025-04-25 08:56:46,034 - mmdet - INFO - Epoch [6][500/773]	lr: 1.026e-04, eta: 3:11:10, time: 1.037, data_time: 0.004, memory: 5891, loss_cls: 0.6682, loss_bbox: 0.9809, d0.loss_cls: 0.6934, d0.loss_bbox: 1.1664, d1.loss_cls: 0.6756, d1.loss_bbox: 1.0381, d2.loss_cls: 0.6647, d2.loss_bbox: 1.0050, d3.loss_cls: 0.6673, d3.loss_bbox: 0.9945, d4.loss_cls: 0.6669, d4.loss_bbox: 0.9859, aux_task0.loss_heatmap: 0.8656, aux_task0.loss_bbox: 0.3308, aux_task1.loss_heatmap: 1.0130, aux_task1.loss_bbox: 0.3652, aux_task2.loss_heatmap: 1.1212, aux_task2.loss_bbox: 0.3886, aux_task3.loss_heatmap: 0.8257, aux_task3.loss_bbox: 0.3226, aux_task4.loss_heatmap: 0.6350, aux_task4.loss_bbox: 0.3286, aux_task5.loss_heatmap: 0.6606, aux_task5.loss_bbox: 0.3194, loss: 17.3832, grad_norm: 42.7610
2025-04-25 08:57:37,159 - mmdet - INFO - Epoch [6][550/773]	lr: 1.038e-04, eta: 3:10:17, time: 1.022, data_time: 0.004, memory: 5891, loss_cls: 0.6574, loss_bbox: 0.9896, d0.loss_cls: 0.6839, d0.loss_bbox: 1.1636, d1.loss_cls: 0.6622, d1.loss_bbox: 1.0398, d2.loss_cls: 0.6523, d2.loss_bbox: 1.0130, d3.loss_cls: 0.6513, d3.loss_bbox: 1.0028, d4.loss_cls: 0.6542, d4.loss_bbox: 0.9945, aux_task0.loss_heatmap: 0.8024, aux_task0.loss_bbox: 0.3281, aux_task1.loss_heatmap: 1.0362, aux_task1.loss_bbox: 0.3653, aux_task2.loss_heatmap: 1.0688, aux_task2.loss_bbox: 0.3949, aux_task3.loss_heatmap: 0.8585, aux_task3.loss_bbox: 0.3252, aux_task4.loss_heatmap: 0.6272, aux_task4.loss_bbox: 0.3167, aux_task5.loss_heatmap: 0.6162, aux_task5.loss_bbox: 0.3226, loss: 17.2269, grad_norm: 39.6431
2025-04-25 08:58:29,144 - mmdet - INFO - Epoch [6][600/773]	lr: 1.049e-04, eta: 3:09:26, time: 1.040, data_time: 0.004, memory: 5891, loss_cls: 0.6441, loss_bbox: 0.9857, d0.loss_cls: 0.6730, d0.loss_bbox: 1.1604, d1.loss_cls: 0.6489, d1.loss_bbox: 1.0341, d2.loss_cls: 0.6413, d2.loss_bbox: 1.0050, d3.loss_cls: 0.6428, d3.loss_bbox: 0.9924, d4.loss_cls: 0.6440, d4.loss_bbox: 0.9861, aux_task0.loss_heatmap: 0.8349, aux_task0.loss_bbox: 0.3262, aux_task1.loss_heatmap: 1.0698, aux_task1.loss_bbox: 0.3677, aux_task2.loss_heatmap: 1.0417, aux_task2.loss_bbox: 0.3857, aux_task3.loss_heatmap: 0.8995, aux_task3.loss_bbox: 0.3232, aux_task4.loss_heatmap: 0.6093, aux_task4.loss_bbox: 0.3250, aux_task5.loss_heatmap: 0.6330, aux_task5.loss_bbox: 0.3256, loss: 17.1995, grad_norm: 40.5864
2025-04-25 08:59:21,146 - mmdet - INFO - Epoch [6][650/773]	lr: 1.059e-04, eta: 3:08:35, time: 1.040, data_time: 0.004, memory: 5891, loss_cls: 0.6503, loss_bbox: 0.9630, d0.loss_cls: 0.6745, d0.loss_bbox: 1.1427, d1.loss_cls: 0.6537, d1.loss_bbox: 1.0148, d2.loss_cls: 0.6460, d2.loss_bbox: 0.9862, d3.loss_cls: 0.6462, d3.loss_bbox: 0.9760, d4.loss_cls: 0.6496, d4.loss_bbox: 0.9693, aux_task0.loss_heatmap: 0.8076, aux_task0.loss_bbox: 0.3175, aux_task1.loss_heatmap: 0.9982, aux_task1.loss_bbox: 0.3594, aux_task2.loss_heatmap: 1.0740, aux_task2.loss_bbox: 0.3765, aux_task3.loss_heatmap: 0.8691, aux_task3.loss_bbox: 0.3127, aux_task4.loss_heatmap: 0.6158, aux_task4.loss_bbox: 0.3136, aux_task5.loss_heatmap: 0.6520, aux_task5.loss_bbox: 0.3220, loss: 16.9909, grad_norm: 38.2880
2025-04-25 09:00:12,979 - mmdet - INFO - Epoch [6][700/773]	lr: 1.070e-04, eta: 3:07:44, time: 1.036, data_time: 0.004, memory: 5891, loss_cls: 0.6426, loss_bbox: 0.9662, d0.loss_cls: 0.6714, d0.loss_bbox: 1.1407, d1.loss_cls: 0.6486, d1.loss_bbox: 1.0142, d2.loss_cls: 0.6400, d2.loss_bbox: 0.9867, d3.loss_cls: 0.6396, d3.loss_bbox: 0.9765, d4.loss_cls: 0.6416, d4.loss_bbox: 0.9694, aux_task0.loss_heatmap: 0.8367, aux_task0.loss_bbox: 0.3254, aux_task1.loss_heatmap: 0.9464, aux_task1.loss_bbox: 0.3582, aux_task2.loss_heatmap: 1.1395, aux_task2.loss_bbox: 0.3830, aux_task3.loss_heatmap: 0.8445, aux_task3.loss_bbox: 0.3061, aux_task4.loss_heatmap: 0.6103, aux_task4.loss_bbox: 0.3109, aux_task5.loss_heatmap: 0.6759, aux_task5.loss_bbox: 0.3226, loss: 16.9971, grad_norm: 41.1196
2025-04-25 09:01:06,054 - mmdet - INFO - Epoch [6][750/773]	lr: 1.080e-04, eta: 3:06:55, time: 1.062, data_time: 0.004, memory: 5891, loss_cls: 0.6435, loss_bbox: 0.9722, d0.loss_cls: 0.6685, d0.loss_bbox: 1.1457, d1.loss_cls: 0.6476, d1.loss_bbox: 1.0214, d2.loss_cls: 0.6396, d2.loss_bbox: 0.9929, d3.loss_cls: 0.6392, d3.loss_bbox: 0.9812, d4.loss_cls: 0.6430, d4.loss_bbox: 0.9746, aux_task0.loss_heatmap: 0.8146, aux_task0.loss_bbox: 0.3220, aux_task1.loss_heatmap: 1.0253, aux_task1.loss_bbox: 0.3693, aux_task2.loss_heatmap: 1.0808, aux_task2.loss_bbox: 0.3921, aux_task3.loss_heatmap: 0.8205, aux_task3.loss_bbox: 0.3114, aux_task4.loss_heatmap: 0.6157, aux_task4.loss_bbox: 0.3250, aux_task5.loss_heatmap: 0.6564, aux_task5.loss_bbox: 0.3185, loss: 17.0210, grad_norm: 35.9195
2025-04-25 09:04:02,774 - mmdet - INFO - Saving checkpoint at 6 epochs
2025-04-25 09:05:13,741 - mmdet - INFO - Epoch [7][50/773]	lr: 1.095e-04, eta: 3:05:26, time: 1.389, data_time: 0.180, memory: 5891, loss_cls: 0.6522, loss_bbox: 0.9777, d0.loss_cls: 0.6757, d0.loss_bbox: 1.1473, d1.loss_cls: 0.6538, d1.loss_bbox: 1.0241, d2.loss_cls: 0.6476, d2.loss_bbox: 0.9969, d3.loss_cls: 0.6481, d3.loss_bbox: 0.9858, d4.loss_cls: 0.6516, d4.loss_bbox: 0.9791, aux_task0.loss_heatmap: 0.8171, aux_task0.loss_bbox: 0.3204, aux_task1.loss_heatmap: 1.0284, aux_task1.loss_bbox: 0.3653, aux_task2.loss_heatmap: 1.1368, aux_task2.loss_bbox: 0.3928, aux_task3.loss_heatmap: 0.7891, aux_task3.loss_bbox: 0.2941, aux_task4.loss_heatmap: 0.6531, aux_task4.loss_bbox: 0.3234, aux_task5.loss_heatmap: 0.6233, aux_task5.loss_bbox: 0.3145, loss: 17.0982, grad_norm: 34.8403
2025-04-25 09:06:05,928 - mmdet - INFO - Epoch [7][100/773]	lr: 1.105e-04, eta: 3:04:35, time: 1.044, data_time: 0.004, memory: 5891, loss_cls: 0.6511, loss_bbox: 0.9727, d0.loss_cls: 0.6766, d0.loss_bbox: 1.1299, d1.loss_cls: 0.6528, d1.loss_bbox: 1.0130, d2.loss_cls: 0.6467, d2.loss_bbox: 0.9868, d3.loss_cls: 0.6451, d3.loss_bbox: 0.9797, d4.loss_cls: 0.6482, d4.loss_bbox: 0.9741, aux_task0.loss_heatmap: 0.8169, aux_task0.loss_bbox: 0.3243, aux_task1.loss_heatmap: 1.0437, aux_task1.loss_bbox: 0.3664, aux_task2.loss_heatmap: 1.1322, aux_task2.loss_bbox: 0.3837, aux_task3.loss_heatmap: 0.8329, aux_task3.loss_bbox: 0.2984, aux_task4.loss_heatmap: 0.6452, aux_task4.loss_bbox: 0.3227, aux_task5.loss_heatmap: 0.6395, aux_task5.loss_bbox: 0.3121, loss: 17.0945, grad_norm: 34.6098
2025-04-25 09:07:07,028 - mmdet - INFO - Epoch [7][150/773]	lr: 1.114e-04, eta: 3:04:05, time: 1.222, data_time: 0.004, memory: 5891, loss_cls: 0.6401, loss_bbox: 0.9561, d0.loss_cls: 0.6671, d0.loss_bbox: 1.1135, d1.loss_cls: 0.6453, d1.loss_bbox: 0.9981, d2.loss_cls: 0.6369, d2.loss_bbox: 0.9748, d3.loss_cls: 0.6369, d3.loss_bbox: 0.9673, d4.loss_cls: 0.6370, d4.loss_bbox: 0.9600, aux_task0.loss_heatmap: 0.8083, aux_task0.loss_bbox: 0.3245, aux_task1.loss_heatmap: 0.9737, aux_task1.loss_bbox: 0.3564, aux_task2.loss_heatmap: 1.0644, aux_task2.loss_bbox: 0.4069, aux_task3.loss_heatmap: 0.7953, aux_task3.loss_bbox: 0.3083, aux_task4.loss_heatmap: 0.6396, aux_task4.loss_bbox: 0.3165, aux_task5.loss_heatmap: 0.6603, aux_task5.loss_bbox: 0.3138, loss: 16.8014, grad_norm: 39.1002
2025-04-25 09:08:03,453 - mmdet - INFO - Epoch [7][200/773]	lr: 1.123e-04, eta: 3:03:23, time: 1.128, data_time: 0.004, memory: 5891, loss_cls: 0.6565, loss_bbox: 0.9577, d0.loss_cls: 0.6747, d0.loss_bbox: 1.1246, d1.loss_cls: 0.6568, d1.loss_bbox: 1.0053, d2.loss_cls: 0.6513, d2.loss_bbox: 0.9776, d3.loss_cls: 0.6521, d3.loss_bbox: 0.9681, d4.loss_cls: 0.6552, d4.loss_bbox: 0.9608, aux_task0.loss_heatmap: 0.8379, aux_task0.loss_bbox: 0.3189, aux_task1.loss_heatmap: 0.9996, aux_task1.loss_bbox: 0.3508, aux_task2.loss_heatmap: 1.0544, aux_task2.loss_bbox: 0.3853, aux_task3.loss_heatmap: 0.8445, aux_task3.loss_bbox: 0.3032, aux_task4.loss_heatmap: 0.6457, aux_task4.loss_bbox: 0.3248, aux_task5.loss_heatmap: 0.6413, aux_task5.loss_bbox: 0.3174, loss: 16.9647, grad_norm: 38.4811
2025-04-25 09:08:55,489 - mmdet - INFO - Epoch [7][250/773]	lr: 1.132e-04, eta: 3:02:32, time: 1.041, data_time: 0.004, memory: 5891, loss_cls: 0.6229, loss_bbox: 0.9404, d0.loss_cls: 0.6439, d0.loss_bbox: 1.1053, d1.loss_cls: 0.6229, d1.loss_bbox: 0.9875, d2.loss_cls: 0.6190, d2.loss_bbox: 0.9600, d3.loss_cls: 0.6194, d3.loss_bbox: 0.9488, d4.loss_cls: 0.6202, d4.loss_bbox: 0.9417, aux_task0.loss_heatmap: 0.7774, aux_task0.loss_bbox: 0.3178, aux_task1.loss_heatmap: 0.9667, aux_task1.loss_bbox: 0.3577, aux_task2.loss_heatmap: 1.0331, aux_task2.loss_bbox: 0.3752, aux_task3.loss_heatmap: 0.7833, aux_task3.loss_bbox: 0.3121, aux_task4.loss_heatmap: 0.6261, aux_task4.loss_bbox: 0.3257, aux_task5.loss_heatmap: 0.6318, aux_task5.loss_bbox: 0.3141, loss: 16.4533, grad_norm: 36.2328
2025-04-25 09:09:47,411 - mmdet - INFO - Epoch [7][300/773]	lr: 1.141e-04, eta: 3:01:41, time: 1.038, data_time: 0.004, memory: 5891, loss_cls: 0.6320, loss_bbox: 0.9459, d0.loss_cls: 0.6530, d0.loss_bbox: 1.1179, d1.loss_cls: 0.6347, d1.loss_bbox: 0.9950, d2.loss_cls: 0.6271, d2.loss_bbox: 0.9654, d3.loss_cls: 0.6290, d3.loss_bbox: 0.9563, d4.loss_cls: 0.6312, d4.loss_bbox: 0.9495, aux_task0.loss_heatmap: 0.7656, aux_task0.loss_bbox: 0.3185, aux_task1.loss_heatmap: 1.0214, aux_task1.loss_bbox: 0.3579, aux_task2.loss_heatmap: 1.0021, aux_task2.loss_bbox: 0.3774, aux_task3.loss_heatmap: 0.8403, aux_task3.loss_bbox: 0.3039, aux_task4.loss_heatmap: 0.5775, aux_task4.loss_bbox: 0.3113, aux_task5.loss_heatmap: 0.6463, aux_task5.loss_bbox: 0.3118, loss: 16.5711, grad_norm: 36.7016
2025-04-25 09:10:38,679 - mmdet - INFO - Epoch [7][350/773]	lr: 1.149e-04, eta: 3:00:48, time: 1.026, data_time: 0.004, memory: 5891, loss_cls: 0.6238, loss_bbox: 0.9487, d0.loss_cls: 0.6550, d0.loss_bbox: 1.1065, d1.loss_cls: 0.6322, d1.loss_bbox: 0.9932, d2.loss_cls: 0.6240, d2.loss_bbox: 0.9677, d3.loss_cls: 0.6206, d3.loss_bbox: 0.9581, d4.loss_cls: 0.6212, d4.loss_bbox: 0.9525, aux_task0.loss_heatmap: 0.7620, aux_task0.loss_bbox: 0.3073, aux_task1.loss_heatmap: 1.0245, aux_task1.loss_bbox: 0.3621, aux_task2.loss_heatmap: 1.0481, aux_task2.loss_bbox: 0.3878, aux_task3.loss_heatmap: 0.8399, aux_task3.loss_bbox: 0.3023, aux_task4.loss_heatmap: 0.6109, aux_task4.loss_bbox: 0.3196, aux_task5.loss_heatmap: 0.6191, aux_task5.loss_bbox: 0.3098, loss: 16.5967, grad_norm: 36.2116
2025-04-25 09:11:29,949 - mmdet - INFO - Epoch [7][400/773]	lr: 1.157e-04, eta: 2:59:55, time: 1.025, data_time: 0.004, memory: 5891, loss_cls: 0.6352, loss_bbox: 0.9782, d0.loss_cls: 0.6585, d0.loss_bbox: 1.1450, d1.loss_cls: 0.6359, d1.loss_bbox: 1.0290, d2.loss_cls: 0.6294, d2.loss_bbox: 1.0014, d3.loss_cls: 0.6305, d3.loss_bbox: 0.9887, d4.loss_cls: 0.6328, d4.loss_bbox: 0.9813, aux_task0.loss_heatmap: 0.8178, aux_task0.loss_bbox: 0.3280, aux_task1.loss_heatmap: 1.0364, aux_task1.loss_bbox: 0.3696, aux_task2.loss_heatmap: 1.0931, aux_task2.loss_bbox: 0.3851, aux_task3.loss_heatmap: 0.7981, aux_task3.loss_bbox: 0.3132, aux_task4.loss_heatmap: 0.6007, aux_task4.loss_bbox: 0.3285, aux_task5.loss_heatmap: 0.6315, aux_task5.loss_bbox: 0.3100, loss: 16.9576, grad_norm: 38.1742
2025-04-25 09:12:21,509 - mmdet - INFO - Epoch [7][450/773]	lr: 1.165e-04, eta: 2:59:03, time: 1.031, data_time: 0.004, memory: 5891, loss_cls: 0.6304, loss_bbox: 0.9391, d0.loss_cls: 0.6499, d0.loss_bbox: 1.0955, d1.loss_cls: 0.6328, d1.loss_bbox: 0.9835, d2.loss_cls: 0.6283, d2.loss_bbox: 0.9563, d3.loss_cls: 0.6273, d3.loss_bbox: 0.9486, d4.loss_cls: 0.6295, d4.loss_bbox: 0.9432, aux_task0.loss_heatmap: 0.7689, aux_task0.loss_bbox: 0.3105, aux_task1.loss_heatmap: 0.9588, aux_task1.loss_bbox: 0.3572, aux_task2.loss_heatmap: 1.0863, aux_task2.loss_bbox: 0.3699, aux_task3.loss_heatmap: 0.8762, aux_task3.loss_bbox: 0.3116, aux_task4.loss_heatmap: 0.6307, aux_task4.loss_bbox: 0.3156, aux_task5.loss_heatmap: 0.5875, aux_task5.loss_bbox: 0.3085, loss: 16.5464, grad_norm: 37.5713
2025-04-25 09:13:12,937 - mmdet - INFO - Epoch [7][500/773]	lr: 1.172e-04, eta: 2:58:10, time: 1.029, data_time: 0.004, memory: 5891, loss_cls: 0.6158, loss_bbox: 0.9367, d0.loss_cls: 0.6362, d0.loss_bbox: 1.0905, d1.loss_cls: 0.6169, d1.loss_bbox: 0.9807, d2.loss_cls: 0.6117, d2.loss_bbox: 0.9538, d3.loss_cls: 0.6097, d3.loss_bbox: 0.9462, d4.loss_cls: 0.6132, d4.loss_bbox: 0.9404, aux_task0.loss_heatmap: 0.7752, aux_task0.loss_bbox: 0.3119, aux_task1.loss_heatmap: 0.9620, aux_task1.loss_bbox: 0.3537, aux_task2.loss_heatmap: 1.0637, aux_task2.loss_bbox: 0.3836, aux_task3.loss_heatmap: 0.8016, aux_task3.loss_bbox: 0.3100, aux_task4.loss_heatmap: 0.5967, aux_task4.loss_bbox: 0.3126, aux_task5.loss_heatmap: 0.5911, aux_task5.loss_bbox: 0.3138, loss: 16.3280, grad_norm: 37.2579
2025-04-25 09:14:04,648 - mmdet - INFO - Epoch [7][550/773]	lr: 1.179e-04, eta: 2:57:18, time: 1.034, data_time: 0.004, memory: 5891, loss_cls: 0.6110, loss_bbox: 0.9244, d0.loss_cls: 0.6322, d0.loss_bbox: 1.0849, d1.loss_cls: 0.6127, d1.loss_bbox: 0.9688, d2.loss_cls: 0.6094, d2.loss_bbox: 0.9407, d3.loss_cls: 0.6085, d3.loss_bbox: 0.9316, d4.loss_cls: 0.6099, d4.loss_bbox: 0.9268, aux_task0.loss_heatmap: 0.7536, aux_task0.loss_bbox: 0.3063, aux_task1.loss_heatmap: 0.9700, aux_task1.loss_bbox: 0.3481, aux_task2.loss_heatmap: 1.0162, aux_task2.loss_bbox: 0.3859, aux_task3.loss_heatmap: 0.8062, aux_task3.loss_bbox: 0.3115, aux_task4.loss_heatmap: 0.5906, aux_task4.loss_bbox: 0.3081, aux_task5.loss_heatmap: 0.5905, aux_task5.loss_bbox: 0.3144, loss: 16.1624, grad_norm: 34.3923
2025-04-25 09:14:58,374 - mmdet - INFO - Epoch [7][600/773]	lr: 1.186e-04, eta: 2:56:30, time: 1.074, data_time: 0.004, memory: 5891, loss_cls: 0.5975, loss_bbox: 0.9475, d0.loss_cls: 0.6248, d0.loss_bbox: 1.1081, d1.loss_cls: 0.6024, d1.loss_bbox: 0.9935, d2.loss_cls: 0.5969, d2.loss_bbox: 0.9655, d3.loss_cls: 0.5964, d3.loss_bbox: 0.9554, d4.loss_cls: 0.5968, d4.loss_bbox: 0.9499, aux_task0.loss_heatmap: 0.7751, aux_task0.loss_bbox: 0.3204, aux_task1.loss_heatmap: 1.0007, aux_task1.loss_bbox: 0.3630, aux_task2.loss_heatmap: 0.9901, aux_task2.loss_bbox: 0.3805, aux_task3.loss_heatmap: 0.8175, aux_task3.loss_bbox: 0.3113, aux_task4.loss_heatmap: 0.5675, aux_task4.loss_bbox: 0.3204, aux_task5.loss_heatmap: 0.6021, aux_task5.loss_bbox: 0.3194, loss: 16.3026, grad_norm: 35.4805
2025-04-25 09:15:50,422 - mmdet - INFO - Epoch [7][650/773]	lr: 1.193e-04, eta: 2:55:39, time: 1.041, data_time: 0.004, memory: 5891, loss_cls: 0.6121, loss_bbox: 0.9219, d0.loss_cls: 0.6310, d0.loss_bbox: 1.0781, d1.loss_cls: 0.6094, d1.loss_bbox: 0.9702, d2.loss_cls: 0.6068, d2.loss_bbox: 0.9442, d3.loss_cls: 0.6075, d3.loss_bbox: 0.9340, d4.loss_cls: 0.6102, d4.loss_bbox: 0.9282, aux_task0.loss_heatmap: 0.7709, aux_task0.loss_bbox: 0.3042, aux_task1.loss_heatmap: 0.9325, aux_task1.loss_bbox: 0.3535, aux_task2.loss_heatmap: 0.9534, aux_task2.loss_bbox: 0.3712, aux_task3.loss_heatmap: 0.8744, aux_task3.loss_bbox: 0.3076, aux_task4.loss_heatmap: 0.5782, aux_task4.loss_bbox: 0.3070, aux_task5.loss_heatmap: 0.6124, aux_task5.loss_bbox: 0.3169, loss: 16.1360, grad_norm: 35.9250
2025-04-25 09:16:42,161 - mmdet - INFO - Epoch [7][700/773]	lr: 1.199e-04, eta: 2:54:47, time: 1.034, data_time: 0.004, memory: 5891, loss_cls: 0.6019, loss_bbox: 0.9273, d0.loss_cls: 0.6288, d0.loss_bbox: 1.0826, d1.loss_cls: 0.6088, d1.loss_bbox: 0.9696, d2.loss_cls: 0.6007, d2.loss_bbox: 0.9450, d3.loss_cls: 0.5983, d3.loss_bbox: 0.9367, d4.loss_cls: 0.6003, d4.loss_bbox: 0.9298, aux_task0.loss_heatmap: 0.7543, aux_task0.loss_bbox: 0.3082, aux_task1.loss_heatmap: 0.9089, aux_task1.loss_bbox: 0.3501, aux_task2.loss_heatmap: 1.0361, aux_task2.loss_bbox: 0.3758, aux_task3.loss_heatmap: 0.7786, aux_task3.loss_bbox: 0.2958, aux_task4.loss_heatmap: 0.5774, aux_task4.loss_bbox: 0.3070, aux_task5.loss_heatmap: 0.6354, aux_task5.loss_bbox: 0.3123, loss: 16.0697, grad_norm: 34.1699
2025-04-25 09:17:34,280 - mmdet - INFO - Epoch [7][750/773]	lr: 1.205e-04, eta: 2:53:56, time: 1.043, data_time: 0.004, memory: 5891, loss_cls: 0.6014, loss_bbox: 0.9274, d0.loss_cls: 0.6282, d0.loss_bbox: 1.0929, d1.loss_cls: 0.6101, d1.loss_bbox: 0.9686, d2.loss_cls: 0.5999, d2.loss_bbox: 0.9410, d3.loss_cls: 0.5994, d3.loss_bbox: 0.9334, d4.loss_cls: 0.6001, d4.loss_bbox: 0.9284, aux_task0.loss_heatmap: 0.7698, aux_task0.loss_bbox: 0.3011, aux_task1.loss_heatmap: 0.9451, aux_task1.loss_bbox: 0.3551, aux_task2.loss_heatmap: 0.9955, aux_task2.loss_bbox: 0.3825, aux_task3.loss_heatmap: 0.7814, aux_task3.loss_bbox: 0.2996, aux_task4.loss_heatmap: 0.5679, aux_task4.loss_bbox: 0.3146, aux_task5.loss_heatmap: 0.6094, aux_task5.loss_bbox: 0.3208, loss: 16.0737, grad_norm: 35.9465
2025-04-25 09:17:58,796 - mmdet - INFO - Saving checkpoint at 7 epochs
2025-04-25 09:19:02,273 - mmdet - INFO - Epoch [8][50/773]	lr: 1.212e-04, eta: 2:52:15, time: 1.242, data_time: 0.170, memory: 5891, loss_cls: 0.6058, loss_bbox: 0.9222, d0.loss_cls: 0.6302, d0.loss_bbox: 1.0683, d1.loss_cls: 0.6104, d1.loss_bbox: 0.9589, d2.loss_cls: 0.6064, d2.loss_bbox: 0.9331, d3.loss_cls: 0.6024, d3.loss_bbox: 0.9286, d4.loss_cls: 0.6042, d4.loss_bbox: 0.9249, aux_task0.loss_heatmap: 0.7227, aux_task0.loss_bbox: 0.3073, aux_task1.loss_heatmap: 0.9480, aux_task1.loss_bbox: 0.3531, aux_task2.loss_heatmap: 1.0405, aux_task2.loss_bbox: 0.3834, aux_task3.loss_heatmap: 0.7987, aux_task3.loss_bbox: 0.2940, aux_task4.loss_heatmap: 0.6112, aux_task4.loss_bbox: 0.3132, aux_task5.loss_heatmap: 0.5693, aux_task5.loss_bbox: 0.3102, loss: 16.0470, grad_norm: 38.1992
2025-04-25 09:19:54,103 - mmdet - INFO - Epoch [8][100/773]	lr: 1.217e-04, eta: 2:51:24, time: 1.037, data_time: 0.004, memory: 5907, loss_cls: 0.6065, loss_bbox: 0.9194, d0.loss_cls: 0.6293, d0.loss_bbox: 1.0775, d1.loss_cls: 0.6114, d1.loss_bbox: 0.9581, d2.loss_cls: 0.6031, d2.loss_bbox: 0.9344, d3.loss_cls: 0.6028, d3.loss_bbox: 0.9256, d4.loss_cls: 0.6036, d4.loss_bbox: 0.9211, aux_task0.loss_heatmap: 0.7356, aux_task0.loss_bbox: 0.2968, aux_task1.loss_heatmap: 0.9878, aux_task1.loss_bbox: 0.3651, aux_task2.loss_heatmap: 1.0590, aux_task2.loss_bbox: 0.3792, aux_task3.loss_heatmap: 0.7992, aux_task3.loss_bbox: 0.2896, aux_task4.loss_heatmap: 0.5911, aux_task4.loss_bbox: 0.3177, aux_task5.loss_heatmap: 0.5976, aux_task5.loss_bbox: 0.3080, loss: 16.1195, grad_norm: 39.1242
2025-04-25 09:20:46,132 - mmdet - INFO - Epoch [8][150/773]	lr: 1.222e-04, eta: 2:50:33, time: 1.041, data_time: 0.004, memory: 5907, loss_cls: 0.6073, loss_bbox: 0.9226, d0.loss_cls: 0.6313, d0.loss_bbox: 1.0725, d1.loss_cls: 0.6115, d1.loss_bbox: 0.9638, d2.loss_cls: 0.6064, d2.loss_bbox: 0.9396, d3.loss_cls: 0.6038, d3.loss_bbox: 0.9322, d4.loss_cls: 0.6038, d4.loss_bbox: 0.9271, aux_task0.loss_heatmap: 0.7615, aux_task0.loss_bbox: 0.3033, aux_task1.loss_heatmap: 0.9061, aux_task1.loss_bbox: 0.3465, aux_task2.loss_heatmap: 0.9721, aux_task2.loss_bbox: 0.3909, aux_task3.loss_heatmap: 0.8473, aux_task3.loss_bbox: 0.3097, aux_task4.loss_heatmap: 0.5988, aux_task4.loss_bbox: 0.3048, aux_task5.loss_heatmap: 0.6473, aux_task5.loss_bbox: 0.3101, loss: 16.1202, grad_norm: 36.0919
2025-04-25 09:21:38,540 - mmdet - INFO - Epoch [8][200/773]	lr: 1.226e-04, eta: 2:49:42, time: 1.048, data_time: 0.004, memory: 5907, loss_cls: 0.6013, loss_bbox: 0.9220, d0.loss_cls: 0.6259, d0.loss_bbox: 1.0761, d1.loss_cls: 0.6043, d1.loss_bbox: 0.9642, d2.loss_cls: 0.5978, d2.loss_bbox: 0.9415, d3.loss_cls: 0.5972, d3.loss_bbox: 0.9336, d4.loss_cls: 0.5992, d4.loss_bbox: 0.9252, aux_task0.loss_heatmap: 0.7578, aux_task0.loss_bbox: 0.3071, aux_task1.loss_heatmap: 0.9481, aux_task1.loss_bbox: 0.3418, aux_task2.loss_heatmap: 0.9914, aux_task2.loss_bbox: 0.3735, aux_task3.loss_heatmap: 0.7801, aux_task3.loss_bbox: 0.2963, aux_task4.loss_heatmap: 0.6044, aux_task4.loss_bbox: 0.3135, aux_task5.loss_heatmap: 0.6314, aux_task5.loss_bbox: 0.3088, loss: 16.0427, grad_norm: 34.0130
2025-04-25 09:22:31,739 - mmdet - INFO - Epoch [8][250/773]	lr: 1.230e-04, eta: 2:48:53, time: 1.064, data_time: 0.004, memory: 5907, loss_cls: 0.5918, loss_bbox: 0.9057, d0.loss_cls: 0.6197, d0.loss_bbox: 1.0573, d1.loss_cls: 0.6027, d1.loss_bbox: 0.9492, d2.loss_cls: 0.5950, d2.loss_bbox: 0.9231, d3.loss_cls: 0.5915, d3.loss_bbox: 0.9161, d4.loss_cls: 0.5914, d4.loss_bbox: 0.9094, aux_task0.loss_heatmap: 0.7477, aux_task0.loss_bbox: 0.3036, aux_task1.loss_heatmap: 0.9450, aux_task1.loss_bbox: 0.3550, aux_task2.loss_heatmap: 0.9803, aux_task2.loss_bbox: 0.3609, aux_task3.loss_heatmap: 0.7501, aux_task3.loss_bbox: 0.3035, aux_task4.loss_heatmap: 0.6120, aux_task4.loss_bbox: 0.3201, aux_task5.loss_heatmap: 0.6166, aux_task5.loss_bbox: 0.3106, loss: 15.8581, grad_norm: 36.7488
2025-04-25 09:23:24,410 - mmdet - INFO - Epoch [8][300/773]	lr: 1.234e-04, eta: 2:48:03, time: 1.054, data_time: 0.005, memory: 5907, loss_cls: 0.5812, loss_bbox: 0.8947, d0.loss_cls: 0.6063, d0.loss_bbox: 1.0502, d1.loss_cls: 0.5843, d1.loss_bbox: 0.9378, d2.loss_cls: 0.5786, d2.loss_bbox: 0.9132, d3.loss_cls: 0.5771, d3.loss_bbox: 0.9035, d4.loss_cls: 0.5804, d4.loss_bbox: 0.8975, aux_task0.loss_heatmap: 0.7326, aux_task0.loss_bbox: 0.3036, aux_task1.loss_heatmap: 0.9958, aux_task1.loss_bbox: 0.3420, aux_task2.loss_heatmap: 0.9030, aux_task2.loss_bbox: 0.3607, aux_task3.loss_heatmap: 0.7613, aux_task3.loss_bbox: 0.2965, aux_task4.loss_heatmap: 0.5498, aux_task4.loss_bbox: 0.3059, aux_task5.loss_heatmap: 0.5591, aux_task5.loss_bbox: 0.3018, loss: 15.5168, grad_norm: 35.1109
2025-04-25 09:24:16,976 - mmdet - INFO - Epoch [8][350/773]	lr: 1.237e-04, eta: 2:47:13, time: 1.051, data_time: 0.004, memory: 5907, loss_cls: 0.5836, loss_bbox: 0.9191, d0.loss_cls: 0.6098, d0.loss_bbox: 1.0668, d1.loss_cls: 0.5921, d1.loss_bbox: 0.9569, d2.loss_cls: 0.5831, d2.loss_bbox: 0.9334, d3.loss_cls: 0.5801, d3.loss_bbox: 0.9266, d4.loss_cls: 0.5828, d4.loss_bbox: 0.9220, aux_task0.loss_heatmap: 0.7328, aux_task0.loss_bbox: 0.3048, aux_task1.loss_heatmap: 0.9785, aux_task1.loss_bbox: 0.3556, aux_task2.loss_heatmap: 1.0122, aux_task2.loss_bbox: 0.3749, aux_task3.loss_heatmap: 0.8298, aux_task3.loss_bbox: 0.3063, aux_task4.loss_heatmap: 0.5790, aux_task4.loss_bbox: 0.3043, aux_task5.loss_heatmap: 0.5857, aux_task5.loss_bbox: 0.3083, loss: 15.9286, grad_norm: 35.9537
2025-04-25 09:25:08,737 - mmdet - INFO - Epoch [8][400/773]	lr: 1.240e-04, eta: 2:46:21, time: 1.035, data_time: 0.004, memory: 5907, loss_cls: 0.5926, loss_bbox: 0.9222, d0.loss_cls: 0.6133, d0.loss_bbox: 1.0721, d1.loss_cls: 0.5966, d1.loss_bbox: 0.9640, d2.loss_cls: 0.5895, d2.loss_bbox: 0.9396, d3.loss_cls: 0.5883, d3.loss_bbox: 0.9314, d4.loss_cls: 0.5904, d4.loss_bbox: 0.9248, aux_task0.loss_heatmap: 0.7857, aux_task0.loss_bbox: 0.3105, aux_task1.loss_heatmap: 0.9629, aux_task1.loss_bbox: 0.3555, aux_task2.loss_heatmap: 0.9808, aux_task2.loss_bbox: 0.3754, aux_task3.loss_heatmap: 0.7606, aux_task3.loss_bbox: 0.2961, aux_task4.loss_heatmap: 0.5752, aux_task4.loss_bbox: 0.3151, aux_task5.loss_heatmap: 0.5755, aux_task5.loss_bbox: 0.2992, loss: 15.9171, grad_norm: 34.6049
2025-04-25 09:26:01,378 - mmdet - INFO - Epoch [8][450/773]	lr: 1.242e-04, eta: 2:45:31, time: 1.053, data_time: 0.004, memory: 5907, loss_cls: 0.5896, loss_bbox: 0.9222, d0.loss_cls: 0.6135, d0.loss_bbox: 1.0656, d1.loss_cls: 0.5943, d1.loss_bbox: 0.9608, d2.loss_cls: 0.5888, d2.loss_bbox: 0.9374, d3.loss_cls: 0.5867, d3.loss_bbox: 0.9309, d4.loss_cls: 0.5879, d4.loss_bbox: 0.9233, aux_task0.loss_heatmap: 0.7361, aux_task0.loss_bbox: 0.2957, aux_task1.loss_heatmap: 0.9185, aux_task1.loss_bbox: 0.3501, aux_task2.loss_heatmap: 0.9951, aux_task2.loss_bbox: 0.3631, aux_task3.loss_heatmap: 0.7896, aux_task3.loss_bbox: 0.3143, aux_task4.loss_heatmap: 0.6169, aux_task4.loss_bbox: 0.3137, aux_task5.loss_heatmap: 0.5647, aux_task5.loss_bbox: 0.3001, loss: 15.8592, grad_norm: 32.9410
2025-04-25 09:26:53,366 - mmdet - INFO - Epoch [8][500/773]	lr: 1.245e-04, eta: 2:44:40, time: 1.040, data_time: 0.004, memory: 5907, loss_cls: 0.5820, loss_bbox: 0.9106, d0.loss_cls: 0.6100, d0.loss_bbox: 1.0611, d1.loss_cls: 0.5901, d1.loss_bbox: 0.9479, d2.loss_cls: 0.5821, d2.loss_bbox: 0.9261, d3.loss_cls: 0.5808, d3.loss_bbox: 0.9181, d4.loss_cls: 0.5801, d4.loss_bbox: 0.9139, aux_task0.loss_heatmap: 0.7471, aux_task0.loss_bbox: 0.2971, aux_task1.loss_heatmap: 0.8992, aux_task1.loss_bbox: 0.3484, aux_task2.loss_heatmap: 0.9894, aux_task2.loss_bbox: 0.3793, aux_task3.loss_heatmap: 0.7898, aux_task3.loss_bbox: 0.3107, aux_task4.loss_heatmap: 0.5660, aux_task4.loss_bbox: 0.3072, aux_task5.loss_heatmap: 0.5885, aux_task5.loss_bbox: 0.3094, loss: 15.7349, grad_norm: 35.6069
2025-04-25 09:27:44,490 - mmdet - INFO - Epoch [8][550/773]	lr: 1.246e-04, eta: 2:43:47, time: 1.022, data_time: 0.004, memory: 5907, loss_cls: 0.5981, loss_bbox: 0.9019, d0.loss_cls: 0.6245, d0.loss_bbox: 1.0542, d1.loss_cls: 0.6080, d1.loss_bbox: 0.9441, d2.loss_cls: 0.6003, d2.loss_bbox: 0.9196, d3.loss_cls: 0.5971, d3.loss_bbox: 0.9103, d4.loss_cls: 0.5966, d4.loss_bbox: 0.9035, aux_task0.loss_heatmap: 0.7423, aux_task0.loss_bbox: 0.3035, aux_task1.loss_heatmap: 0.9295, aux_task1.loss_bbox: 0.3452, aux_task2.loss_heatmap: 0.9688, aux_task2.loss_bbox: 0.3744, aux_task3.loss_heatmap: 0.8087, aux_task3.loss_bbox: 0.3058, aux_task4.loss_heatmap: 0.5773, aux_task4.loss_bbox: 0.3001, aux_task5.loss_heatmap: 0.5746, aux_task5.loss_bbox: 0.3090, loss: 15.7976, grad_norm: 34.8899
2025-04-25 09:28:36,017 - mmdet - INFO - Epoch [8][600/773]	lr: 1.248e-04, eta: 2:42:55, time: 1.031, data_time: 0.004, memory: 5907, loss_cls: 0.5697, loss_bbox: 0.9109, d0.loss_cls: 0.5967, d0.loss_bbox: 1.0505, d1.loss_cls: 0.5782, d1.loss_bbox: 0.9472, d2.loss_cls: 0.5709, d2.loss_bbox: 0.9243, d3.loss_cls: 0.5686, d3.loss_bbox: 0.9168, d4.loss_cls: 0.5702, d4.loss_bbox: 0.9124, aux_task0.loss_heatmap: 0.7207, aux_task0.loss_bbox: 0.3023, aux_task1.loss_heatmap: 0.9342, aux_task1.loss_bbox: 0.3559, aux_task2.loss_heatmap: 0.9372, aux_task2.loss_bbox: 0.3721, aux_task3.loss_heatmap: 0.8080, aux_task3.loss_bbox: 0.2999, aux_task4.loss_heatmap: 0.5460, aux_task4.loss_bbox: 0.3112, aux_task5.loss_heatmap: 0.5745, aux_task5.loss_bbox: 0.3155, loss: 15.5938, grad_norm: 32.9296
2025-04-25 09:29:27,529 - mmdet - INFO - Epoch [8][650/773]	lr: 1.249e-04, eta: 2:42:03, time: 1.030, data_time: 0.004, memory: 5907, loss_cls: 0.5757, loss_bbox: 0.9036, d0.loss_cls: 0.6067, d0.loss_bbox: 1.0458, d1.loss_cls: 0.5876, d1.loss_bbox: 0.9397, d2.loss_cls: 0.5786, d2.loss_bbox: 0.9177, d3.loss_cls: 0.5766, d3.loss_bbox: 0.9107, d4.loss_cls: 0.5771, d4.loss_bbox: 0.9061, aux_task0.loss_heatmap: 0.7408, aux_task0.loss_bbox: 0.2966, aux_task1.loss_heatmap: 0.8891, aux_task1.loss_bbox: 0.3469, aux_task2.loss_heatmap: 0.9175, aux_task2.loss_bbox: 0.3633, aux_task3.loss_heatmap: 0.7952, aux_task3.loss_bbox: 0.2997, aux_task4.loss_heatmap: 0.5619, aux_task4.loss_bbox: 0.2977, aux_task5.loss_heatmap: 0.5785, aux_task5.loss_bbox: 0.3129, loss: 15.5261, grad_norm: 31.8155
2025-04-25 09:30:18,751 - mmdet - INFO - Epoch [8][700/773]	lr: 1.250e-04, eta: 2:41:10, time: 1.025, data_time: 0.004, memory: 5907, loss_cls: 0.5705, loss_bbox: 0.9037, d0.loss_cls: 0.5980, d0.loss_bbox: 1.0438, d1.loss_cls: 0.5804, d1.loss_bbox: 0.9336, d2.loss_cls: 0.5733, d2.loss_bbox: 0.9160, d3.loss_cls: 0.5712, d3.loss_bbox: 0.9099, d4.loss_cls: 0.5716, d4.loss_bbox: 0.9046, aux_task0.loss_heatmap: 0.7193, aux_task0.loss_bbox: 0.2829, aux_task1.loss_heatmap: 0.8946, aux_task1.loss_bbox: 0.3484, aux_task2.loss_heatmap: 0.9760, aux_task2.loss_bbox: 0.3721, aux_task3.loss_heatmap: 0.7723, aux_task3.loss_bbox: 0.2943, aux_task4.loss_heatmap: 0.5565, aux_task4.loss_bbox: 0.2993, aux_task5.loss_heatmap: 0.5808, aux_task5.loss_bbox: 0.3085, loss: 15.4816, grad_norm: 35.9110
2025-04-25 09:31:09,897 - mmdet - INFO - Epoch [8][750/773]	lr: 1.250e-04, eta: 2:40:18, time: 1.023, data_time: 0.004, memory: 5907, loss_cls: 0.5744, loss_bbox: 0.9038, d0.loss_cls: 0.6028, d0.loss_bbox: 1.0524, d1.loss_cls: 0.5856, d1.loss_bbox: 0.9429, d2.loss_cls: 0.5771, d2.loss_bbox: 0.9176, d3.loss_cls: 0.5743, d3.loss_bbox: 0.9094, d4.loss_cls: 0.5747, d4.loss_bbox: 0.9055, aux_task0.loss_heatmap: 0.6988, aux_task0.loss_bbox: 0.2949, aux_task1.loss_heatmap: 0.9156, aux_task1.loss_bbox: 0.3524, aux_task2.loss_heatmap: 0.9148, aux_task2.loss_bbox: 0.3741, aux_task3.loss_heatmap: 0.7737, aux_task3.loss_bbox: 0.2889, aux_task4.loss_heatmap: 0.5280, aux_task4.loss_bbox: 0.3064, aux_task5.loss_heatmap: 0.6112, aux_task5.loss_bbox: 0.3111, loss: 15.4903, grad_norm: 35.2524
2025-04-25 09:31:33,858 - mmdet - INFO - Saving checkpoint at 8 epochs
2025-04-25 09:32:37,491 - mmdet - INFO - Epoch [9][50/773]	lr: 1.250e-04, eta: 2:38:42, time: 1.242, data_time: 0.180, memory: 5907, loss_cls: 0.5809, loss_bbox: 0.9134, d0.loss_cls: 0.6013, d0.loss_bbox: 1.0483, d1.loss_cls: 0.5857, d1.loss_bbox: 0.9477, d2.loss_cls: 0.5791, d2.loss_bbox: 0.9268, d3.loss_cls: 0.5783, d3.loss_bbox: 0.9195, d4.loss_cls: 0.5800, d4.loss_bbox: 0.9153, aux_task0.loss_heatmap: 0.7119, aux_task0.loss_bbox: 0.2915, aux_task1.loss_heatmap: 0.9065, aux_task1.loss_bbox: 0.3477, aux_task2.loss_heatmap: 1.0045, aux_task2.loss_bbox: 0.3804, aux_task3.loss_heatmap: 0.7605, aux_task3.loss_bbox: 0.2884, aux_task4.loss_heatmap: 0.6078, aux_task4.loss_bbox: 0.3041, aux_task5.loss_heatmap: 0.5446, aux_task5.loss_bbox: 0.3053, loss: 15.6299, grad_norm: 33.3086
2025-04-25 09:33:28,637 - mmdet - INFO - Epoch [9][100/773]	lr: 1.250e-04, eta: 2:37:50, time: 1.023, data_time: 0.004, memory: 5907, loss_cls: 0.5750, loss_bbox: 0.9004, d0.loss_cls: 0.5997, d0.loss_bbox: 1.0407, d1.loss_cls: 0.5838, d1.loss_bbox: 0.9392, d2.loss_cls: 0.5760, d2.loss_bbox: 0.9165, d3.loss_cls: 0.5744, d3.loss_bbox: 0.9079, d4.loss_cls: 0.5751, d4.loss_bbox: 0.9031, aux_task0.loss_heatmap: 0.6885, aux_task0.loss_bbox: 0.2836, aux_task1.loss_heatmap: 0.9485, aux_task1.loss_bbox: 0.3493, aux_task2.loss_heatmap: 1.0084, aux_task2.loss_bbox: 0.3751, aux_task3.loss_heatmap: 0.7805, aux_task3.loss_bbox: 0.2826, aux_task4.loss_heatmap: 0.5635, aux_task4.loss_bbox: 0.3085, aux_task5.loss_heatmap: 0.6010, aux_task5.loss_bbox: 0.3082, loss: 15.5894, grad_norm: 30.8093
2025-04-25 09:34:20,098 - mmdet - INFO - Epoch [9][150/773]	lr: 1.249e-04, eta: 2:36:58, time: 1.029, data_time: 0.004, memory: 5907, loss_cls: 0.5690, loss_bbox: 0.8809, d0.loss_cls: 0.5985, d0.loss_bbox: 1.0111, d1.loss_cls: 0.5775, d1.loss_bbox: 0.9155, d2.loss_cls: 0.5708, d2.loss_bbox: 0.8955, d3.loss_cls: 0.5684, d3.loss_bbox: 0.8893, d4.loss_cls: 0.5691, d4.loss_bbox: 0.8844, aux_task0.loss_heatmap: 0.7077, aux_task0.loss_bbox: 0.2838, aux_task1.loss_heatmap: 0.8656, aux_task1.loss_bbox: 0.3384, aux_task2.loss_heatmap: 0.9220, aux_task2.loss_bbox: 0.3806, aux_task3.loss_heatmap: 0.7295, aux_task3.loss_bbox: 0.3048, aux_task4.loss_heatmap: 0.5935, aux_task4.loss_bbox: 0.2988, aux_task5.loss_heatmap: 0.5817, aux_task5.loss_bbox: 0.3012, loss: 15.2376, grad_norm: 32.0212
2025-04-25 09:35:11,693 - mmdet - INFO - Epoch [9][200/773]	lr: 1.249e-04, eta: 2:36:07, time: 1.032, data_time: 0.004, memory: 5907, loss_cls: 0.5573, loss_bbox: 0.8825, d0.loss_cls: 0.5870, d0.loss_bbox: 1.0261, d1.loss_cls: 0.5670, d1.loss_bbox: 0.9237, d2.loss_cls: 0.5587, d2.loss_bbox: 0.8978, d3.loss_cls: 0.5554, d3.loss_bbox: 0.8901, d4.loss_cls: 0.5570, d4.loss_bbox: 0.8864, aux_task0.loss_heatmap: 0.6646, aux_task0.loss_bbox: 0.2787, aux_task1.loss_heatmap: 0.9083, aux_task1.loss_bbox: 0.3301, aux_task2.loss_heatmap: 0.9459, aux_task2.loss_bbox: 0.3690, aux_task3.loss_heatmap: 0.7411, aux_task3.loss_bbox: 0.2898, aux_task4.loss_heatmap: 0.5534, aux_task4.loss_bbox: 0.3046, aux_task5.loss_heatmap: 0.5713, aux_task5.loss_bbox: 0.2965, loss: 15.1424, grad_norm: 31.1853
2025-04-25 09:36:03,921 - mmdet - INFO - Epoch [9][250/773]	lr: 1.248e-04, eta: 2:35:16, time: 1.044, data_time: 0.004, memory: 5907, loss_cls: 0.5730, loss_bbox: 0.9000, d0.loss_cls: 0.5964, d0.loss_bbox: 1.0390, d1.loss_cls: 0.5779, d1.loss_bbox: 0.9403, d2.loss_cls: 0.5736, d2.loss_bbox: 0.9168, d3.loss_cls: 0.5716, d3.loss_bbox: 0.9082, d4.loss_cls: 0.5742, d4.loss_bbox: 0.9038, aux_task0.loss_heatmap: 0.7438, aux_task0.loss_bbox: 0.2932, aux_task1.loss_heatmap: 0.8758, aux_task1.loss_bbox: 0.3432, aux_task2.loss_heatmap: 0.8990, aux_task2.loss_bbox: 0.3600, aux_task3.loss_heatmap: 0.7440, aux_task3.loss_bbox: 0.3042, aux_task4.loss_heatmap: 0.5916, aux_task4.loss_bbox: 0.3124, aux_task5.loss_heatmap: 0.5979, aux_task5.loss_bbox: 0.3041, loss: 15.4441, grad_norm: 33.1861
2025-04-25 09:36:56,745 - mmdet - INFO - Epoch [9][300/773]	lr: 1.247e-04, eta: 2:34:26, time: 1.056, data_time: 0.004, memory: 5907, loss_cls: 0.5510, loss_bbox: 0.8653, d0.loss_cls: 0.5744, d0.loss_bbox: 1.0012, d1.loss_cls: 0.5571, d1.loss_bbox: 0.9025, d2.loss_cls: 0.5491, d2.loss_bbox: 0.8801, d3.loss_cls: 0.5469, d3.loss_bbox: 0.8725, d4.loss_cls: 0.5478, d4.loss_bbox: 0.8675, aux_task0.loss_heatmap: 0.6843, aux_task0.loss_bbox: 0.2779, aux_task1.loss_heatmap: 0.9535, aux_task1.loss_bbox: 0.3443, aux_task2.loss_heatmap: 0.8497, aux_task2.loss_bbox: 0.3522, aux_task3.loss_heatmap: 0.7333, aux_task3.loss_bbox: 0.2974, aux_task4.loss_heatmap: 0.5261, aux_task4.loss_bbox: 0.2994, aux_task5.loss_heatmap: 0.6152, aux_task5.loss_bbox: 0.3064, loss: 14.9552, grad_norm: 31.2905
2025-04-25 09:37:48,164 - mmdet - INFO - Epoch [9][350/773]	lr: 1.246e-04, eta: 2:33:34, time: 1.029, data_time: 0.004, memory: 5907, loss_cls: 0.5637, loss_bbox: 0.8861, d0.loss_cls: 0.5850, d0.loss_bbox: 1.0212, d1.loss_cls: 0.5675, d1.loss_bbox: 0.9248, d2.loss_cls: 0.5611, d2.loss_bbox: 0.9009, d3.loss_cls: 0.5596, d3.loss_bbox: 0.8967, d4.loss_cls: 0.5629, d4.loss_bbox: 0.8896, aux_task0.loss_heatmap: 0.6776, aux_task0.loss_bbox: 0.2860, aux_task1.loss_heatmap: 0.9458, aux_task1.loss_bbox: 0.3480, aux_task2.loss_heatmap: 0.9338, aux_task2.loss_bbox: 0.3638, aux_task3.loss_heatmap: 0.7525, aux_task3.loss_bbox: 0.2899, aux_task4.loss_heatmap: 0.5503, aux_task4.loss_bbox: 0.3041, aux_task5.loss_heatmap: 0.5535, aux_task5.loss_bbox: 0.2994, loss: 15.2238, grad_norm: 33.6221
2025-04-25 09:38:39,809 - mmdet - INFO - Epoch [9][400/773]	lr: 1.244e-04, eta: 2:32:42, time: 1.033, data_time: 0.004, memory: 5907, loss_cls: 0.5788, loss_bbox: 0.9019, d0.loss_cls: 0.6021, d0.loss_bbox: 1.0491, d1.loss_cls: 0.5851, d1.loss_bbox: 0.9439, d2.loss_cls: 0.5767, d2.loss_bbox: 0.9207, d3.loss_cls: 0.5754, d3.loss_bbox: 0.9134, d4.loss_cls: 0.5768, d4.loss_bbox: 0.9062, aux_task0.loss_heatmap: 0.7110, aux_task0.loss_bbox: 0.2912, aux_task1.loss_heatmap: 0.9008, aux_task1.loss_bbox: 0.3514, aux_task2.loss_heatmap: 0.9696, aux_task2.loss_bbox: 0.3675, aux_task3.loss_heatmap: 0.7858, aux_task3.loss_bbox: 0.2989, aux_task4.loss_heatmap: 0.5677, aux_task4.loss_bbox: 0.3086, aux_task5.loss_heatmap: 0.5681, aux_task5.loss_bbox: 0.3009, loss: 15.5518, grad_norm: 33.2851
2025-04-25 09:39:31,755 - mmdet - INFO - Epoch [9][450/773]	lr: 1.243e-04, eta: 2:31:51, time: 1.039, data_time: 0.004, memory: 5907, loss_cls: 0.5574, loss_bbox: 0.8869, d0.loss_cls: 0.5845, d0.loss_bbox: 1.0244, d1.loss_cls: 0.5666, d1.loss_bbox: 0.9269, d2.loss_cls: 0.5640, d2.loss_bbox: 0.9008, d3.loss_cls: 0.5606, d3.loss_bbox: 0.8930, d4.loss_cls: 0.5589, d4.loss_bbox: 0.8905, aux_task0.loss_heatmap: 0.7004, aux_task0.loss_bbox: 0.2830, aux_task1.loss_heatmap: 0.8755, aux_task1.loss_bbox: 0.3436, aux_task2.loss_heatmap: 0.9503, aux_task2.loss_bbox: 0.3550, aux_task3.loss_heatmap: 0.7475, aux_task3.loss_bbox: 0.2994, aux_task4.loss_heatmap: 0.5562, aux_task4.loss_bbox: 0.3020, aux_task5.loss_heatmap: 0.5529, aux_task5.loss_bbox: 0.3046, loss: 15.1850, grad_norm: 29.1560
2025-04-25 09:40:23,112 - mmdet - INFO - Epoch [9][500/773]	lr: 1.241e-04, eta: 2:30:59, time: 1.027, data_time: 0.004, memory: 5907, loss_cls: 0.5626, loss_bbox: 0.8789, d0.loss_cls: 0.5903, d0.loss_bbox: 1.0250, d1.loss_cls: 0.5703, d1.loss_bbox: 0.9197, d2.loss_cls: 0.5631, d2.loss_bbox: 0.8968, d3.loss_cls: 0.5607, d3.loss_bbox: 0.8898, d4.loss_cls: 0.5618, d4.loss_bbox: 0.8840, aux_task0.loss_heatmap: 0.7042, aux_task0.loss_bbox: 0.2809, aux_task1.loss_heatmap: 0.8838, aux_task1.loss_bbox: 0.3469, aux_task2.loss_heatmap: 0.9315, aux_task2.loss_bbox: 0.3718, aux_task3.loss_heatmap: 0.7005, aux_task3.loss_bbox: 0.3018, aux_task4.loss_heatmap: 0.5264, aux_task4.loss_bbox: 0.2964, aux_task5.loss_heatmap: 0.5943, aux_task5.loss_bbox: 0.3070, loss: 15.1485, grad_norm: 32.3744
2025-04-25 09:41:14,246 - mmdet - INFO - Epoch [9][550/773]	lr: 1.239e-04, eta: 2:30:07, time: 1.022, data_time: 0.004, memory: 5907, loss_cls: 0.5408, loss_bbox: 0.8601, d0.loss_cls: 0.5700, d0.loss_bbox: 0.9988, d1.loss_cls: 0.5509, d1.loss_bbox: 0.8990, d2.loss_cls: 0.5420, d2.loss_bbox: 0.8790, d3.loss_cls: 0.5378, d3.loss_bbox: 0.8732, d4.loss_cls: 0.5394, d4.loss_bbox: 0.8663, aux_task0.loss_heatmap: 0.7097, aux_task0.loss_bbox: 0.2822, aux_task1.loss_heatmap: 0.8614, aux_task1.loss_bbox: 0.3345, aux_task2.loss_heatmap: 0.8701, aux_task2.loss_bbox: 0.3676, aux_task3.loss_heatmap: 0.7968, aux_task3.loss_bbox: 0.3002, aux_task4.loss_heatmap: 0.5229, aux_task4.loss_bbox: 0.2889, aux_task5.loss_heatmap: 0.5206, aux_task5.loss_bbox: 0.3033, loss: 14.8155, grad_norm: 31.7490
2025-04-25 09:42:05,707 - mmdet - INFO - Epoch [9][600/773]	lr: 1.237e-04, eta: 2:29:15, time: 1.029, data_time: 0.004, memory: 5907, loss_cls: 0.5505, loss_bbox: 0.8814, d0.loss_cls: 0.5833, d0.loss_bbox: 1.0207, d1.loss_cls: 0.5610, d1.loss_bbox: 0.9244, d2.loss_cls: 0.5516, d2.loss_bbox: 0.9028, d3.loss_cls: 0.5508, d3.loss_bbox: 0.8936, d4.loss_cls: 0.5511, d4.loss_bbox: 0.8865, aux_task0.loss_heatmap: 0.7279, aux_task0.loss_bbox: 0.2805, aux_task1.loss_heatmap: 0.9218, aux_task1.loss_bbox: 0.3473, aux_task2.loss_heatmap: 0.8611, aux_task2.loss_bbox: 0.3694, aux_task3.loss_heatmap: 0.7527, aux_task3.loss_bbox: 0.3023, aux_task4.loss_heatmap: 0.5196, aux_task4.loss_bbox: 0.3016, aux_task5.loss_heatmap: 0.5617, aux_task5.loss_bbox: 0.3108, loss: 15.1144, grad_norm: 31.6125
2025-04-25 09:42:57,360 - mmdet - INFO - Epoch [9][650/773]	lr: 1.235e-04, eta: 2:28:24, time: 1.033, data_time: 0.004, memory: 5907, loss_cls: 0.5350, loss_bbox: 0.8529, d0.loss_cls: 0.5696, d0.loss_bbox: 1.0018, d1.loss_cls: 0.5464, d1.loss_bbox: 0.9014, d2.loss_cls: 0.5366, d2.loss_bbox: 0.8782, d3.loss_cls: 0.5343, d3.loss_bbox: 0.8711, d4.loss_cls: 0.5348, d4.loss_bbox: 0.8618, aux_task0.loss_heatmap: 0.7311, aux_task0.loss_bbox: 0.2868, aux_task1.loss_heatmap: 0.8597, aux_task1.loss_bbox: 0.3392, aux_task2.loss_heatmap: 0.8472, aux_task2.loss_bbox: 0.3554, aux_task3.loss_heatmap: 0.7455, aux_task3.loss_bbox: 0.2930, aux_task4.loss_heatmap: 0.5255, aux_task4.loss_bbox: 0.2922, aux_task5.loss_heatmap: 0.5459, aux_task5.loss_bbox: 0.3058, loss: 14.7512, grad_norm: 34.1022
2025-04-25 09:43:49,515 - mmdet - INFO - Epoch [9][700/773]	lr: 1.233e-04, eta: 2:27:33, time: 1.043, data_time: 0.004, memory: 5907, loss_cls: 0.5350, loss_bbox: 0.8593, d0.loss_cls: 0.5671, d0.loss_bbox: 0.9977, d1.loss_cls: 0.5485, d1.loss_bbox: 0.8987, d2.loss_cls: 0.5397, d2.loss_bbox: 0.8771, d3.loss_cls: 0.5352, d3.loss_bbox: 0.8719, d4.loss_cls: 0.5361, d4.loss_bbox: 0.8648, aux_task0.loss_heatmap: 0.7074, aux_task0.loss_bbox: 0.2810, aux_task1.loss_heatmap: 0.8495, aux_task1.loss_bbox: 0.3314, aux_task2.loss_heatmap: 0.9263, aux_task2.loss_bbox: 0.3548, aux_task3.loss_heatmap: 0.7550, aux_task3.loss_bbox: 0.2976, aux_task4.loss_heatmap: 0.5105, aux_task4.loss_bbox: 0.2876, aux_task5.loss_heatmap: 0.5539, aux_task5.loss_bbox: 0.3012, loss: 14.7874, grad_norm: 29.0939
2025-04-25 09:44:41,526 - mmdet - INFO - Epoch [9][750/773]	lr: 1.230e-04, eta: 2:26:42, time: 1.040, data_time: 0.004, memory: 5907, loss_cls: 0.5406, loss_bbox: 0.8560, d0.loss_cls: 0.5640, d0.loss_bbox: 0.9995, d1.loss_cls: 0.5470, d1.loss_bbox: 0.9048, d2.loss_cls: 0.5406, d2.loss_bbox: 0.8817, d3.loss_cls: 0.5382, d3.loss_bbox: 0.8743, d4.loss_cls: 0.5413, d4.loss_bbox: 0.8619, aux_task0.loss_heatmap: 0.6807, aux_task0.loss_bbox: 0.2757, aux_task1.loss_heatmap: 0.8703, aux_task1.loss_bbox: 0.3454, aux_task2.loss_heatmap: 0.8847, aux_task2.loss_bbox: 0.3677, aux_task3.loss_heatmap: 0.7784, aux_task3.loss_bbox: 0.2890, aux_task4.loss_heatmap: 0.5160, aux_task4.loss_bbox: 0.2969, aux_task5.loss_heatmap: 0.5406, aux_task5.loss_bbox: 0.3068, loss: 14.8021, grad_norm: 31.6264
2025-04-25 09:45:06,234 - mmdet - INFO - Saving checkpoint at 9 epochs
2025-04-25 09:46:09,176 - mmdet - INFO - Epoch [10][50/773]	lr: 1.226e-04, eta: 2:25:09, time: 1.228, data_time: 0.168, memory: 5907, loss_cls: 0.5420, loss_bbox: 0.8631, d0.loss_cls: 0.5703, d0.loss_bbox: 1.0057, d1.loss_cls: 0.5497, d1.loss_bbox: 0.9069, d2.loss_cls: 0.5429, d2.loss_bbox: 0.8855, d3.loss_cls: 0.5399, d3.loss_bbox: 0.8775, d4.loss_cls: 0.5404, d4.loss_bbox: 0.8670, aux_task0.loss_heatmap: 0.6680, aux_task0.loss_bbox: 0.2776, aux_task1.loss_heatmap: 0.8814, aux_task1.loss_bbox: 0.3359, aux_task2.loss_heatmap: 0.9296, aux_task2.loss_bbox: 0.3722, aux_task3.loss_heatmap: 0.7477, aux_task3.loss_bbox: 0.2721, aux_task4.loss_heatmap: 0.5541, aux_task4.loss_bbox: 0.2945, aux_task5.loss_heatmap: 0.5216, aux_task5.loss_bbox: 0.2998, loss: 14.8454, grad_norm: 29.9285
2025-04-25 09:47:00,895 - mmdet - INFO - Epoch [10][100/773]	lr: 1.223e-04, eta: 2:24:18, time: 1.034, data_time: 0.004, memory: 5907, loss_cls: 0.5537, loss_bbox: 0.8794, d0.loss_cls: 0.5765, d0.loss_bbox: 1.0172, d1.loss_cls: 0.5576, d1.loss_bbox: 0.9203, d2.loss_cls: 0.5510, d2.loss_bbox: 0.9004, d3.loss_cls: 0.5489, d3.loss_bbox: 0.8923, d4.loss_cls: 0.5522, d4.loss_bbox: 0.8827, aux_task0.loss_heatmap: 0.6886, aux_task0.loss_bbox: 0.2776, aux_task1.loss_heatmap: 0.9349, aux_task1.loss_bbox: 0.3445, aux_task2.loss_heatmap: 0.9731, aux_task2.loss_bbox: 0.3692, aux_task3.loss_heatmap: 0.7224, aux_task3.loss_bbox: 0.2732, aux_task4.loss_heatmap: 0.5595, aux_task4.loss_bbox: 0.2971, aux_task5.loss_heatmap: 0.5614, aux_task5.loss_bbox: 0.3074, loss: 15.1410, grad_norm: 32.8490
2025-04-25 09:47:53,503 - mmdet - INFO - Epoch [10][150/773]	lr: 1.220e-04, eta: 2:23:28, time: 1.052, data_time: 0.004, memory: 5907, loss_cls: 0.5423, loss_bbox: 0.8527, d0.loss_cls: 0.5710, d0.loss_bbox: 0.9940, d1.loss_cls: 0.5504, d1.loss_bbox: 0.8999, d2.loss_cls: 0.5438, d2.loss_bbox: 0.8762, d3.loss_cls: 0.5430, d3.loss_bbox: 0.8662, d4.loss_cls: 0.5433, d4.loss_bbox: 0.8570, aux_task0.loss_heatmap: 0.6669, aux_task0.loss_bbox: 0.2707, aux_task1.loss_heatmap: 0.8495, aux_task1.loss_bbox: 0.3336, aux_task2.loss_heatmap: 0.8710, aux_task2.loss_bbox: 0.3753, aux_task3.loss_heatmap: 0.7366, aux_task3.loss_bbox: 0.2933, aux_task4.loss_heatmap: 0.5499, aux_task4.loss_bbox: 0.2910, aux_task5.loss_heatmap: 0.5584, aux_task5.loss_bbox: 0.2960, loss: 14.7322, grad_norm: 33.4635
2025-04-25 09:48:46,193 - mmdet - INFO - Epoch [10][200/773]	lr: 1.216e-04, eta: 2:22:38, time: 1.054, data_time: 0.004, memory: 5907, loss_cls: 0.5550, loss_bbox: 0.8561, d0.loss_cls: 0.5849, d0.loss_bbox: 0.9932, d1.loss_cls: 0.5613, d1.loss_bbox: 0.9008, d2.loss_cls: 0.5549, d2.loss_bbox: 0.8796, d3.loss_cls: 0.5530, d3.loss_bbox: 0.8716, d4.loss_cls: 0.5542, d4.loss_bbox: 0.8604, aux_task0.loss_heatmap: 0.7071, aux_task0.loss_bbox: 0.2762, aux_task1.loss_heatmap: 0.8742, aux_task1.loss_bbox: 0.3247, aux_task2.loss_heatmap: 0.8890, aux_task2.loss_bbox: 0.3657, aux_task3.loss_heatmap: 0.6884, aux_task3.loss_bbox: 0.2789, aux_task4.loss_heatmap: 0.5824, aux_task4.loss_bbox: 0.3006, aux_task5.loss_heatmap: 0.5802, aux_task5.loss_bbox: 0.3024, loss: 14.8947, grad_norm: 32.1763
2025-04-25 09:49:38,448 - mmdet - INFO - Epoch [10][250/773]	lr: 1.213e-04, eta: 2:21:47, time: 1.045, data_time: 0.004, memory: 5907, loss_cls: 0.5389, loss_bbox: 0.8505, d0.loss_cls: 0.5691, d0.loss_bbox: 0.9924, d1.loss_cls: 0.5509, d1.loss_bbox: 0.8956, d2.loss_cls: 0.5405, d2.loss_bbox: 0.8746, d3.loss_cls: 0.5375, d3.loss_bbox: 0.8652, d4.loss_cls: 0.5384, d4.loss_bbox: 0.8556, aux_task0.loss_heatmap: 0.6819, aux_task0.loss_bbox: 0.2675, aux_task1.loss_heatmap: 0.8344, aux_task1.loss_bbox: 0.3349, aux_task2.loss_heatmap: 0.8919, aux_task2.loss_bbox: 0.3519, aux_task3.loss_heatmap: 0.7102, aux_task3.loss_bbox: 0.2917, aux_task4.loss_heatmap: 0.5606, aux_task4.loss_bbox: 0.3033, aux_task5.loss_heatmap: 0.5573, aux_task5.loss_bbox: 0.2991, loss: 14.6939, grad_norm: 29.4136
2025-04-25 09:50:31,129 - mmdet - INFO - Epoch [10][300/773]	lr: 1.209e-04, eta: 2:20:57, time: 1.054, data_time: 0.004, memory: 5907, loss_cls: 0.5323, loss_bbox: 0.8518, d0.loss_cls: 0.5592, d0.loss_bbox: 0.9956, d1.loss_cls: 0.5433, d1.loss_bbox: 0.8976, d2.loss_cls: 0.5356, d2.loss_bbox: 0.8770, d3.loss_cls: 0.5336, d3.loss_bbox: 0.8673, d4.loss_cls: 0.5322, d4.loss_bbox: 0.8578, aux_task0.loss_heatmap: 0.6719, aux_task0.loss_bbox: 0.2752, aux_task1.loss_heatmap: 0.9155, aux_task1.loss_bbox: 0.3309, aux_task2.loss_heatmap: 0.8465, aux_task2.loss_bbox: 0.3432, aux_task3.loss_heatmap: 0.7655, aux_task3.loss_bbox: 0.2917, aux_task4.loss_heatmap: 0.5152, aux_task4.loss_bbox: 0.2944, aux_task5.loss_heatmap: 0.6019, aux_task5.loss_bbox: 0.3004, loss: 14.7358, grad_norm: 31.0904
2025-04-25 09:51:22,266 - mmdet - INFO - Epoch [10][350/773]	lr: 1.205e-04, eta: 2:20:05, time: 1.023, data_time: 0.004, memory: 5907, loss_cls: 0.5272, loss_bbox: 0.8492, d0.loss_cls: 0.5596, d0.loss_bbox: 0.9888, d1.loss_cls: 0.5326, d1.loss_bbox: 0.8952, d2.loss_cls: 0.5267, d2.loss_bbox: 0.8778, d3.loss_cls: 0.5248, d3.loss_bbox: 0.8652, d4.loss_cls: 0.5278, d4.loss_bbox: 0.8513, aux_task0.loss_heatmap: 0.6355, aux_task0.loss_bbox: 0.2614, aux_task1.loss_heatmap: 0.9081, aux_task1.loss_bbox: 0.3420, aux_task2.loss_heatmap: 0.8773, aux_task2.loss_bbox: 0.3525, aux_task3.loss_heatmap: 0.6643, aux_task3.loss_bbox: 0.2934, aux_task4.loss_heatmap: 0.5201, aux_task4.loss_bbox: 0.2923, aux_task5.loss_heatmap: 0.5177, aux_task5.loss_bbox: 0.2951, loss: 14.4857, grad_norm: 33.6391
2025-04-25 09:52:14,670 - mmdet - INFO - Epoch [10][400/773]	lr: 1.201e-04, eta: 2:19:14, time: 1.048, data_time: 0.004, memory: 5907, loss_cls: 0.5356, loss_bbox: 0.8611, d0.loss_cls: 0.5654, d0.loss_bbox: 1.0042, d1.loss_cls: 0.5475, d1.loss_bbox: 0.9112, d2.loss_cls: 0.5390, d2.loss_bbox: 0.8900, d3.loss_cls: 0.5347, d3.loss_bbox: 0.8759, d4.loss_cls: 0.5347, d4.loss_bbox: 0.8659, aux_task0.loss_heatmap: 0.6828, aux_task0.loss_bbox: 0.2795, aux_task1.loss_heatmap: 0.8838, aux_task1.loss_bbox: 0.3417, aux_task2.loss_heatmap: 0.9066, aux_task2.loss_bbox: 0.3591, aux_task3.loss_heatmap: 0.6933, aux_task3.loss_bbox: 0.2890, aux_task4.loss_heatmap: 0.5174, aux_task4.loss_bbox: 0.3002, aux_task5.loss_heatmap: 0.5585, aux_task5.loss_bbox: 0.2972, loss: 14.7744, grad_norm: 30.8985
2025-04-25 09:53:07,022 - mmdet - INFO - Epoch [10][450/773]	lr: 1.197e-04, eta: 2:18:23, time: 1.047, data_time: 0.004, memory: 5907, loss_cls: 0.5241, loss_bbox: 0.8389, d0.loss_cls: 0.5562, d0.loss_bbox: 0.9720, d1.loss_cls: 0.5331, d1.loss_bbox: 0.8848, d2.loss_cls: 0.5250, d2.loss_bbox: 0.8657, d3.loss_cls: 0.5229, d3.loss_bbox: 0.8526, d4.loss_cls: 0.5230, d4.loss_bbox: 0.8437, aux_task0.loss_heatmap: 0.6721, aux_task0.loss_bbox: 0.2696, aux_task1.loss_heatmap: 0.8358, aux_task1.loss_bbox: 0.3330, aux_task2.loss_heatmap: 0.8787, aux_task2.loss_bbox: 0.3426, aux_task3.loss_heatmap: 0.7380, aux_task3.loss_bbox: 0.2938, aux_task4.loss_heatmap: 0.5445, aux_task4.loss_bbox: 0.2949, aux_task5.loss_heatmap: 0.5247, aux_task5.loss_bbox: 0.2981, loss: 14.4679, grad_norm: 30.5697
2025-04-25 09:53:58,947 - mmdet - INFO - Epoch [10][500/773]	lr: 1.193e-04, eta: 2:17:32, time: 1.039, data_time: 0.004, memory: 5907, loss_cls: 0.5189, loss_bbox: 0.8425, d0.loss_cls: 0.5508, d0.loss_bbox: 0.9796, d1.loss_cls: 0.5283, d1.loss_bbox: 0.8887, d2.loss_cls: 0.5216, d2.loss_bbox: 0.8709, d3.loss_cls: 0.5191, d3.loss_bbox: 0.8557, d4.loss_cls: 0.5178, d4.loss_bbox: 0.8488, aux_task0.loss_heatmap: 0.6495, aux_task0.loss_bbox: 0.2710, aux_task1.loss_heatmap: 0.8509, aux_task1.loss_bbox: 0.3411, aux_task2.loss_heatmap: 0.8594, aux_task2.loss_bbox: 0.3661, aux_task3.loss_heatmap: 0.6811, aux_task3.loss_bbox: 0.2975, aux_task4.loss_heatmap: 0.4983, aux_task4.loss_bbox: 0.2912, aux_task5.loss_heatmap: 0.5114, aux_task5.loss_bbox: 0.2974, loss: 14.3575, grad_norm: 29.5946
2025-04-25 09:54:51,004 - mmdet - INFO - Epoch [10][550/773]	lr: 1.188e-04, eta: 2:16:41, time: 1.041, data_time: 0.004, memory: 5907, loss_cls: 0.5188, loss_bbox: 0.8380, d0.loss_cls: 0.5507, d0.loss_bbox: 0.9616, d1.loss_cls: 0.5288, d1.loss_bbox: 0.8791, d2.loss_cls: 0.5200, d2.loss_bbox: 0.8593, d3.loss_cls: 0.5203, d3.loss_bbox: 0.8453, d4.loss_cls: 0.5178, d4.loss_bbox: 0.8408, aux_task0.loss_heatmap: 0.6507, aux_task0.loss_bbox: 0.2695, aux_task1.loss_heatmap: 0.8579, aux_task1.loss_bbox: 0.3339, aux_task2.loss_heatmap: 0.8592, aux_task2.loss_bbox: 0.3605, aux_task3.loss_heatmap: 0.7045, aux_task3.loss_bbox: 0.2946, aux_task4.loss_heatmap: 0.5042, aux_task4.loss_bbox: 0.2836, aux_task5.loss_heatmap: 0.5135, aux_task5.loss_bbox: 0.3065, loss: 14.3191, grad_norm: 28.0029
2025-04-25 09:55:43,214 - mmdet - INFO - Epoch [10][600/773]	lr: 1.184e-04, eta: 2:15:50, time: 1.044, data_time: 0.004, memory: 5907, loss_cls: 0.5041, loss_bbox: 0.8329, d0.loss_cls: 0.5347, d0.loss_bbox: 0.9698, d1.loss_cls: 0.5109, d1.loss_bbox: 0.8776, d2.loss_cls: 0.5040, d2.loss_bbox: 0.8583, d3.loss_cls: 0.5025, d3.loss_bbox: 0.8442, d4.loss_cls: 0.5020, d4.loss_bbox: 0.8385, aux_task0.loss_heatmap: 0.6574, aux_task0.loss_bbox: 0.2600, aux_task1.loss_heatmap: 0.8649, aux_task1.loss_bbox: 0.3293, aux_task2.loss_heatmap: 0.7900, aux_task2.loss_bbox: 0.3464, aux_task3.loss_heatmap: 0.7235, aux_task3.loss_bbox: 0.2917, aux_task4.loss_heatmap: 0.4907, aux_task4.loss_bbox: 0.2932, aux_task5.loss_heatmap: 0.5079, aux_task5.loss_bbox: 0.3008, loss: 14.1354, grad_norm: 32.1301
2025-04-25 09:56:35,205 - mmdet - INFO - Epoch [10][650/773]	lr: 1.179e-04, eta: 2:14:59, time: 1.040, data_time: 0.004, memory: 5907, loss_cls: 0.5202, loss_bbox: 0.8262, d0.loss_cls: 0.5493, d0.loss_bbox: 0.9710, d1.loss_cls: 0.5306, d1.loss_bbox: 0.8759, d2.loss_cls: 0.5215, d2.loss_bbox: 0.8539, d3.loss_cls: 0.5195, d3.loss_bbox: 0.8380, d4.loss_cls: 0.5204, d4.loss_bbox: 0.8309, aux_task0.loss_heatmap: 0.6696, aux_task0.loss_bbox: 0.2611, aux_task1.loss_heatmap: 0.8246, aux_task1.loss_bbox: 0.3266, aux_task2.loss_heatmap: 0.8160, aux_task2.loss_bbox: 0.3446, aux_task3.loss_heatmap: 0.7639, aux_task3.loss_bbox: 0.2954, aux_task4.loss_heatmap: 0.5047, aux_task4.loss_bbox: 0.2845, aux_task5.loss_heatmap: 0.5474, aux_task5.loss_bbox: 0.3048, loss: 14.3007, grad_norm: 29.0740
2025-04-25 09:57:27,194 - mmdet - INFO - Epoch [10][700/773]	lr: 1.174e-04, eta: 2:14:08, time: 1.040, data_time: 0.004, memory: 5907, loss_cls: 0.5065, loss_bbox: 0.8365, d0.loss_cls: 0.5436, d0.loss_bbox: 0.9754, d1.loss_cls: 0.5207, d1.loss_bbox: 0.8846, d2.loss_cls: 0.5118, d2.loss_bbox: 0.8642, d3.loss_cls: 0.5086, d3.loss_bbox: 0.8456, d4.loss_cls: 0.5082, d4.loss_bbox: 0.8412, aux_task0.loss_heatmap: 0.6524, aux_task0.loss_bbox: 0.2673, aux_task1.loss_heatmap: 0.8199, aux_task1.loss_bbox: 0.3210, aux_task2.loss_heatmap: 0.8996, aux_task2.loss_bbox: 0.3535, aux_task3.loss_heatmap: 0.7278, aux_task3.loss_bbox: 0.2973, aux_task4.loss_heatmap: 0.4925, aux_task4.loss_bbox: 0.2835, aux_task5.loss_heatmap: 0.5411, aux_task5.loss_bbox: 0.3063, loss: 14.3087, grad_norm: 27.2440
2025-04-25 09:58:30,744 - mmdet - INFO - Epoch [10][750/773]	lr: 1.169e-04, eta: 2:13:29, time: 1.271, data_time: 0.004, memory: 5907, loss_cls: 0.5162, loss_bbox: 0.8398, d0.loss_cls: 0.5495, d0.loss_bbox: 0.9814, d1.loss_cls: 0.5273, d1.loss_bbox: 0.8865, d2.loss_cls: 0.5186, d2.loss_bbox: 0.8684, d3.loss_cls: 0.5152, d3.loss_bbox: 0.8516, d4.loss_cls: 0.5155, d4.loss_bbox: 0.8447, aux_task0.loss_heatmap: 0.6554, aux_task0.loss_bbox: 0.2610, aux_task1.loss_heatmap: 0.8484, aux_task1.loss_bbox: 0.3365, aux_task2.loss_heatmap: 0.8680, aux_task2.loss_bbox: 0.3707, aux_task3.loss_heatmap: 0.7220, aux_task3.loss_bbox: 0.2719, aux_task4.loss_heatmap: 0.4953, aux_task4.loss_bbox: 0.2910, aux_task5.loss_heatmap: 0.5401, aux_task5.loss_bbox: 0.3091, loss: 14.3840, grad_norm: 30.6164
2025-04-25 09:58:54,487 - mmdet - INFO - Saving checkpoint at 10 epochs
2025-04-25 10:20:49,225 - mmdet - INFO - Exp name: lidar_0075v_900q_cascadeded_split40.py
2025-04-25 10:20:51,219 - mmdet - INFO - Epoch(val) [10][1505]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.3158, pts_bbox_NuScenes/car_AP_dist_1.0: 0.4887, pts_bbox_NuScenes/car_AP_dist_2.0: 0.5759, pts_bbox_NuScenes/car_AP_dist_4.0: 0.6393, pts_bbox_NuScenes/car_trans_err: 0.3930, pts_bbox_NuScenes/car_scale_err: 0.2092, pts_bbox_NuScenes/car_orient_err: 0.9717, pts_bbox_NuScenes/car_vel_err: 1.1331, pts_bbox_NuScenes/car_attr_err: 0.3802, pts_bbox_NuScenes/mATE: 0.5239, pts_bbox_NuScenes/mASE: 0.3393, pts_bbox_NuScenes/mAOE: 1.3327, pts_bbox_NuScenes/mAVE: 1.0348, pts_bbox_NuScenes/mAAE: 0.4227, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.0473, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.1466, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.2280, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.2751, pts_bbox_NuScenes/truck_trans_err: 0.5958, pts_bbox_NuScenes/truck_scale_err: 0.2961, pts_bbox_NuScenes/truck_orient_err: 1.1374, pts_bbox_NuScenes/truck_vel_err: 1.0208, pts_bbox_NuScenes/truck_attr_err: 0.3778, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0068, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.0293, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.0648, pts_bbox_NuScenes/construction_vehicle_trans_err: 0.8311, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.4993, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.4972, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1289, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.3191, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.0472, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.2104, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.4130, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.4876, pts_bbox_NuScenes/bus_trans_err: 0.6922, pts_bbox_NuScenes/bus_scale_err: 0.3257, pts_bbox_NuScenes/bus_orient_err: 1.6883, pts_bbox_NuScenes/bus_vel_err: 2.4657, pts_bbox_NuScenes/bus_attr_err: 0.6678, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0040, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.0462, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.0708, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.0940, pts_bbox_NuScenes/trailer_trans_err: 0.6514, pts_bbox_NuScenes/trailer_scale_err: 0.3301, pts_bbox_NuScenes/trailer_orient_err: 1.5121, pts_bbox_NuScenes/trailer_vel_err: 0.3649, pts_bbox_NuScenes/trailer_attr_err: 0.2007, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.0818, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.2461, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.4036, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.4733, pts_bbox_NuScenes/barrier_trans_err: 0.6289, pts_bbox_NuScenes/barrier_scale_err: 0.3376, pts_bbox_NuScenes/barrier_orient_err: 0.9035, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.0586, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.0817, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.0928, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.1001, pts_bbox_NuScenes/motorcycle_trans_err: 0.3702, pts_bbox_NuScenes/motorcycle_scale_err: 0.2855, pts_bbox_NuScenes/motorcycle_orient_err: 1.3270, pts_bbox_NuScenes/motorcycle_vel_err: 1.7268, pts_bbox_NuScenes/motorcycle_attr_err: 0.5171, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.0000, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.0000, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.0000, pts_bbox_NuScenes/bicycle_trans_err: 0.4044, pts_bbox_NuScenes/bicycle_scale_err: 0.3658, pts_bbox_NuScenes/bicycle_orient_err: 1.4559, pts_bbox_NuScenes/bicycle_vel_err: 0.4979, pts_bbox_NuScenes/bicycle_attr_err: 0.1276, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.3203, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.5157, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.5665, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.6012, pts_bbox_NuScenes/pedestrian_trans_err: 0.4066, pts_bbox_NuScenes/pedestrian_scale_err: 0.3091, pts_bbox_NuScenes/pedestrian_orient_err: 1.5011, pts_bbox_NuScenes/pedestrian_vel_err: 0.9405, pts_bbox_NuScenes/pedestrian_attr_err: 0.7912, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.2159, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.2484, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.2761, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.3279, pts_bbox_NuScenes/traffic_cone_trans_err: 0.2651, pts_bbox_NuScenes/traffic_cone_scale_err: 0.4346, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.2814, pts_bbox_NuScenes/mAP: 0.2200
2025-04-25 10:21:53,953 - mmdet - INFO - Epoch [11][50/773]	lr: 1.161e-04, eta: 2:12:01, time: 1.254, data_time: 0.187, memory: 5907, loss_cls: 0.5178, loss_bbox: 0.8311, d0.loss_cls: 0.5454, d0.loss_bbox: 0.9674, d1.loss_cls: 0.5253, d1.loss_bbox: 0.8760, d2.loss_cls: 0.5178, d2.loss_bbox: 0.8584, d3.loss_cls: 0.5152, d3.loss_bbox: 0.8433, d4.loss_cls: 0.5156, d4.loss_bbox: 0.8369, aux_task0.loss_heatmap: 0.6608, aux_task0.loss_bbox: 0.2637, aux_task1.loss_heatmap: 0.8340, aux_task1.loss_bbox: 0.3264, aux_task2.loss_heatmap: 0.8987, aux_task2.loss_bbox: 0.3609, aux_task3.loss_heatmap: 0.6910, aux_task3.loss_bbox: 0.2712, aux_task4.loss_heatmap: 0.5541, aux_task4.loss_bbox: 0.2813, aux_task5.loss_heatmap: 0.5334, aux_task5.loss_bbox: 0.2928, loss: 14.3183, grad_norm: 32.5799
2025-04-25 10:22:45,848 - mmdet - INFO - Epoch [11][100/773]	lr: 1.155e-04, eta: 2:11:09, time: 1.038, data_time: 0.004, memory: 5907, loss_cls: 0.5144, loss_bbox: 0.8443, d0.loss_cls: 0.5446, d0.loss_bbox: 0.9708, d1.loss_cls: 0.5227, d1.loss_bbox: 0.8865, d2.loss_cls: 0.5144, d2.loss_bbox: 0.8681, d3.loss_cls: 0.5121, d3.loss_bbox: 0.8527, d4.loss_cls: 0.5128, d4.loss_bbox: 0.8478, aux_task0.loss_heatmap: 0.6498, aux_task0.loss_bbox: 0.2597, aux_task1.loss_heatmap: 0.8818, aux_task1.loss_bbox: 0.3330, aux_task2.loss_heatmap: 0.9493, aux_task2.loss_bbox: 0.3598, aux_task3.loss_heatmap: 0.6442, aux_task3.loss_bbox: 0.2842, aux_task4.loss_heatmap: 0.5304, aux_task4.loss_bbox: 0.2893, aux_task5.loss_heatmap: 0.5429, aux_task5.loss_bbox: 0.2895, loss: 14.4050, grad_norm: 29.9082
2025-04-25 10:23:37,761 - mmdet - INFO - Epoch [11][150/773]	lr: 1.150e-04, eta: 2:10:18, time: 1.038, data_time: 0.004, memory: 5907, loss_cls: 0.5001, loss_bbox: 0.8264, d0.loss_cls: 0.5350, d0.loss_bbox: 0.9625, d1.loss_cls: 0.5140, d1.loss_bbox: 0.8750, d2.loss_cls: 0.5050, d2.loss_bbox: 0.8570, d3.loss_cls: 0.5017, d3.loss_bbox: 0.8389, d4.loss_cls: 0.5004, d4.loss_bbox: 0.8322, aux_task0.loss_heatmap: 0.6547, aux_task0.loss_bbox: 0.2598, aux_task1.loss_heatmap: 0.8281, aux_task1.loss_bbox: 0.3294, aux_task2.loss_heatmap: 0.8548, aux_task2.loss_bbox: 0.3741, aux_task3.loss_heatmap: 0.6966, aux_task3.loss_bbox: 0.2892, aux_task4.loss_heatmap: 0.5301, aux_task4.loss_bbox: 0.2818, aux_task5.loss_heatmap: 0.5049, aux_task5.loss_bbox: 0.2933, loss: 14.1449, grad_norm: 31.9371
2025-04-25 10:24:29,772 - mmdet - INFO - Epoch [11][200/773]	lr: 1.144e-04, eta: 2:09:27, time: 1.040, data_time: 0.004, memory: 5963, loss_cls: 0.5195, loss_bbox: 0.8235, d0.loss_cls: 0.5510, d0.loss_bbox: 0.9623, d1.loss_cls: 0.5293, d1.loss_bbox: 0.8714, d2.loss_cls: 0.5229, d2.loss_bbox: 0.8495, d3.loss_cls: 0.5192, d3.loss_bbox: 0.8339, d4.loss_cls: 0.5179, d4.loss_bbox: 0.8268, aux_task0.loss_heatmap: 0.6275, aux_task0.loss_bbox: 0.2598, aux_task1.loss_heatmap: 0.8496, aux_task1.loss_bbox: 0.3168, aux_task2.loss_heatmap: 0.8352, aux_task2.loss_bbox: 0.3508, aux_task3.loss_heatmap: 0.6474, aux_task3.loss_bbox: 0.2808, aux_task4.loss_heatmap: 0.5202, aux_task4.loss_bbox: 0.2874, aux_task5.loss_heatmap: 0.5520, aux_task5.loss_bbox: 0.2971, loss: 14.1517, grad_norm: 29.5272
2025-04-25 10:25:23,953 - mmdet - INFO - Epoch [11][250/773]	lr: 1.138e-04, eta: 2:08:38, time: 1.084, data_time: 0.004, memory: 5963, loss_cls: 0.5186, loss_bbox: 0.8224, d0.loss_cls: 0.5507, d0.loss_bbox: 0.9600, d1.loss_cls: 0.5306, d1.loss_bbox: 0.8684, d2.loss_cls: 0.5198, d2.loss_bbox: 0.8495, d3.loss_cls: 0.5170, d3.loss_bbox: 0.8331, d4.loss_cls: 0.5189, d4.loss_bbox: 0.8256, aux_task0.loss_heatmap: 0.6321, aux_task0.loss_bbox: 0.2610, aux_task1.loss_heatmap: 0.8065, aux_task1.loss_bbox: 0.3334, aux_task2.loss_heatmap: 0.7992, aux_task2.loss_bbox: 0.3444, aux_task3.loss_heatmap: 0.6693, aux_task3.loss_bbox: 0.2891, aux_task4.loss_heatmap: 0.5678, aux_task4.loss_bbox: 0.2969, aux_task5.loss_heatmap: 0.5422, aux_task5.loss_bbox: 0.2970, loss: 14.1533, grad_norm: 29.2099
2025-04-25 10:26:16,251 - mmdet - INFO - Epoch [11][300/773]	lr: 1.132e-04, eta: 2:07:47, time: 1.046, data_time: 0.004, memory: 5963, loss_cls: 0.5087, loss_bbox: 0.8227, d0.loss_cls: 0.5405, d0.loss_bbox: 0.9596, d1.loss_cls: 0.5180, d1.loss_bbox: 0.8732, d2.loss_cls: 0.5092, d2.loss_bbox: 0.8505, d3.loss_cls: 0.5071, d3.loss_bbox: 0.8344, d4.loss_cls: 0.5075, d4.loss_bbox: 0.8285, aux_task0.loss_heatmap: 0.6217, aux_task0.loss_bbox: 0.2474, aux_task1.loss_heatmap: 0.8862, aux_task1.loss_bbox: 0.3273, aux_task2.loss_heatmap: 0.7783, aux_task2.loss_bbox: 0.3436, aux_task3.loss_heatmap: 0.7157, aux_task3.loss_bbox: 0.2889, aux_task4.loss_heatmap: 0.4930, aux_task4.loss_bbox: 0.2837, aux_task5.loss_heatmap: 0.5581, aux_task5.loss_bbox: 0.2986, loss: 14.1025, grad_norm: 27.0127
2025-04-25 10:27:08,968 - mmdet - INFO - Epoch [11][350/773]	lr: 1.126e-04, eta: 2:06:56, time: 1.054, data_time: 0.005, memory: 5963, loss_cls: 0.5017, loss_bbox: 0.8368, d0.loss_cls: 0.5372, d0.loss_bbox: 0.9702, d1.loss_cls: 0.5146, d1.loss_bbox: 0.8818, d2.loss_cls: 0.5049, d2.loss_bbox: 0.8586, d3.loss_cls: 0.4996, d3.loss_bbox: 0.8479, d4.loss_cls: 0.5007, d4.loss_bbox: 0.8406, aux_task0.loss_heatmap: 0.6513, aux_task0.loss_bbox: 0.2678, aux_task1.loss_heatmap: 0.8632, aux_task1.loss_bbox: 0.3357, aux_task2.loss_heatmap: 0.8603, aux_task2.loss_bbox: 0.3439, aux_task3.loss_heatmap: 0.6931, aux_task3.loss_bbox: 0.2827, aux_task4.loss_heatmap: 0.5038, aux_task4.loss_bbox: 0.2862, aux_task5.loss_heatmap: 0.5240, aux_task5.loss_bbox: 0.2932, loss: 14.1998, grad_norm: 27.7182
2025-04-25 10:28:03,009 - mmdet - INFO - Epoch [11][400/773]	lr: 1.119e-04, eta: 2:06:07, time: 1.081, data_time: 0.004, memory: 5963, loss_cls: 0.5081, loss_bbox: 0.8298, d0.loss_cls: 0.5387, d0.loss_bbox: 0.9683, d1.loss_cls: 0.5196, d1.loss_bbox: 0.8793, d2.loss_cls: 0.5144, d2.loss_bbox: 0.8520, d3.loss_cls: 0.5086, d3.loss_bbox: 0.8408, d4.loss_cls: 0.5088, d4.loss_bbox: 0.8354, aux_task0.loss_heatmap: 0.6306, aux_task0.loss_bbox: 0.2572, aux_task1.loss_heatmap: 0.8510, aux_task1.loss_bbox: 0.3346, aux_task2.loss_heatmap: 0.8901, aux_task2.loss_bbox: 0.3576, aux_task3.loss_heatmap: 0.6633, aux_task3.loss_bbox: 0.2835, aux_task4.loss_heatmap: 0.5036, aux_task4.loss_bbox: 0.2917, aux_task5.loss_heatmap: 0.5216, aux_task5.loss_bbox: 0.3006, loss: 14.1893, grad_norm: 26.7798
2025-04-25 10:28:56,916 - mmdet - INFO - Epoch [11][450/773]	lr: 1.113e-04, eta: 2:05:17, time: 1.078, data_time: 0.004, memory: 5963, loss_cls: 0.5058, loss_bbox: 0.8181, d0.loss_cls: 0.5340, d0.loss_bbox: 0.9540, d1.loss_cls: 0.5151, d1.loss_bbox: 0.8677, d2.loss_cls: 0.5086, d2.loss_bbox: 0.8381, d3.loss_cls: 0.5038, d3.loss_bbox: 0.8285, d4.loss_cls: 0.5046, d4.loss_bbox: 0.8234, aux_task0.loss_heatmap: 0.6310, aux_task0.loss_bbox: 0.2508, aux_task1.loss_heatmap: 0.8204, aux_task1.loss_bbox: 0.3281, aux_task2.loss_heatmap: 0.8517, aux_task2.loss_bbox: 0.3425, aux_task3.loss_heatmap: 0.6929, aux_task3.loss_bbox: 0.2902, aux_task4.loss_heatmap: 0.5273, aux_task4.loss_bbox: 0.2889, aux_task5.loss_heatmap: 0.4914, aux_task5.loss_bbox: 0.2945, loss: 14.0114, grad_norm: 29.0061
2025-04-25 10:29:49,260 - mmdet - INFO - Epoch [11][500/773]	lr: 1.106e-04, eta: 2:04:26, time: 1.047, data_time: 0.004, memory: 5963, loss_cls: 0.5028, loss_bbox: 0.8161, d0.loss_cls: 0.5384, d0.loss_bbox: 0.9571, d1.loss_cls: 0.5150, d1.loss_bbox: 0.8669, d2.loss_cls: 0.5072, d2.loss_bbox: 0.8408, d3.loss_cls: 0.5047, d3.loss_bbox: 0.8278, d4.loss_cls: 0.5031, d4.loss_bbox: 0.8218, aux_task0.loss_heatmap: 0.6367, aux_task0.loss_bbox: 0.2568, aux_task1.loss_heatmap: 0.8324, aux_task1.loss_bbox: 0.3240, aux_task2.loss_heatmap: 0.8195, aux_task2.loss_bbox: 0.3554, aux_task3.loss_heatmap: 0.7001, aux_task3.loss_bbox: 0.2959, aux_task4.loss_heatmap: 0.4831, aux_task4.loss_bbox: 0.2777, aux_task5.loss_heatmap: 0.4972, aux_task5.loss_bbox: 0.2946, loss: 13.9750, grad_norm: 27.9327
2025-04-25 10:30:40,607 - mmdet - INFO - Epoch [11][550/773]	lr: 1.099e-04, eta: 2:03:34, time: 1.027, data_time: 0.004, memory: 5963, loss_cls: 0.5037, loss_bbox: 0.8119, d0.loss_cls: 0.5388, d0.loss_bbox: 0.9453, d1.loss_cls: 0.5159, d1.loss_bbox: 0.8553, d2.loss_cls: 0.5092, d2.loss_bbox: 0.8300, d3.loss_cls: 0.5042, d3.loss_bbox: 0.8193, d4.loss_cls: 0.5035, d4.loss_bbox: 0.8158, aux_task0.loss_heatmap: 0.6170, aux_task0.loss_bbox: 0.2474, aux_task1.loss_heatmap: 0.8181, aux_task1.loss_bbox: 0.3214, aux_task2.loss_heatmap: 0.8639, aux_task2.loss_bbox: 0.3489, aux_task3.loss_heatmap: 0.7186, aux_task3.loss_bbox: 0.2885, aux_task4.loss_heatmap: 0.4828, aux_task4.loss_bbox: 0.2797, aux_task5.loss_heatmap: 0.5408, aux_task5.loss_bbox: 0.3012, loss: 13.9810, grad_norm: 31.2144
2025-04-25 10:31:32,260 - mmdet - INFO - Epoch [11][600/773]	lr: 1.092e-04, eta: 2:02:43, time: 1.033, data_time: 0.004, memory: 5963, loss_cls: 0.5069, loss_bbox: 0.8257, d0.loss_cls: 0.5423, d0.loss_bbox: 0.9635, d1.loss_cls: 0.5195, d1.loss_bbox: 0.8717, d2.loss_cls: 0.5107, d2.loss_bbox: 0.8476, d3.loss_cls: 0.5054, d3.loss_bbox: 0.8380, d4.loss_cls: 0.5057, d4.loss_bbox: 0.8304, aux_task0.loss_heatmap: 0.6332, aux_task0.loss_bbox: 0.2672, aux_task1.loss_heatmap: 0.8582, aux_task1.loss_bbox: 0.3273, aux_task2.loss_heatmap: 0.7719, aux_task2.loss_bbox: 0.3457, aux_task3.loss_heatmap: 0.7645, aux_task3.loss_bbox: 0.2899, aux_task4.loss_heatmap: 0.4828, aux_task4.loss_bbox: 0.2868, aux_task5.loss_heatmap: 0.5019, aux_task5.loss_bbox: 0.3008, loss: 14.0974, grad_norm: 28.8594
2025-04-25 10:32:23,738 - mmdet - INFO - Epoch [11][650/773]	lr: 1.085e-04, eta: 2:01:51, time: 1.030, data_time: 0.004, memory: 5963, loss_cls: 0.4908, loss_bbox: 0.7998, d0.loss_cls: 0.5238, d0.loss_bbox: 0.9339, d1.loss_cls: 0.5062, d1.loss_bbox: 0.8381, d2.loss_cls: 0.4962, d2.loss_bbox: 0.8167, d3.loss_cls: 0.4936, d3.loss_bbox: 0.8075, d4.loss_cls: 0.4921, d4.loss_bbox: 0.8026, aux_task0.loss_heatmap: 0.6220, aux_task0.loss_bbox: 0.2443, aux_task1.loss_heatmap: 0.7924, aux_task1.loss_bbox: 0.3241, aux_task2.loss_heatmap: 0.7490, aux_task2.loss_bbox: 0.3297, aux_task3.loss_heatmap: 0.6963, aux_task3.loss_bbox: 0.2860, aux_task4.loss_heatmap: 0.5020, aux_task4.loss_bbox: 0.2790, aux_task5.loss_heatmap: 0.5352, aux_task5.loss_bbox: 0.3013, loss: 13.6625, grad_norm: 31.1158
2025-04-25 10:33:15,277 - mmdet - INFO - Epoch [11][700/773]	lr: 1.078e-04, eta: 2:00:59, time: 1.031, data_time: 0.005, memory: 5963, loss_cls: 0.4944, loss_bbox: 0.8024, d0.loss_cls: 0.5260, d0.loss_bbox: 0.9418, d1.loss_cls: 0.5081, d1.loss_bbox: 0.8449, d2.loss_cls: 0.4985, d2.loss_bbox: 0.8246, d3.loss_cls: 0.4938, d3.loss_bbox: 0.8139, d4.loss_cls: 0.4955, d4.loss_bbox: 0.8063, aux_task0.loss_heatmap: 0.6407, aux_task0.loss_bbox: 0.2505, aux_task1.loss_heatmap: 0.7917, aux_task1.loss_bbox: 0.3183, aux_task2.loss_heatmap: 0.8321, aux_task2.loss_bbox: 0.3378, aux_task3.loss_heatmap: 0.6892, aux_task3.loss_bbox: 0.2744, aux_task4.loss_heatmap: 0.4772, aux_task4.loss_bbox: 0.2769, aux_task5.loss_heatmap: 0.5388, aux_task5.loss_bbox: 0.2990, loss: 13.7768, grad_norm: 29.8578
2025-04-25 10:34:07,940 - mmdet - INFO - Epoch [11][750/773]	lr: 1.071e-04, eta: 2:00:09, time: 1.053, data_time: 0.004, memory: 5963, loss_cls: 0.4959, loss_bbox: 0.8190, d0.loss_cls: 0.5301, d0.loss_bbox: 0.9587, d1.loss_cls: 0.5101, d1.loss_bbox: 0.8634, d2.loss_cls: 0.5004, d2.loss_bbox: 0.8420, d3.loss_cls: 0.4963, d3.loss_bbox: 0.8308, d4.loss_cls: 0.4962, d4.loss_bbox: 0.8249, aux_task0.loss_heatmap: 0.6422, aux_task0.loss_bbox: 0.2565, aux_task1.loss_heatmap: 0.8065, aux_task1.loss_bbox: 0.3290, aux_task2.loss_heatmap: 0.8192, aux_task2.loss_bbox: 0.3553, aux_task3.loss_heatmap: 0.6545, aux_task3.loss_bbox: 0.2809, aux_task4.loss_heatmap: 0.4803, aux_task4.loss_bbox: 0.2828, aux_task5.loss_heatmap: 0.5381, aux_task5.loss_bbox: 0.3012, loss: 13.9141, grad_norm: 25.6212
2025-04-25 10:35:15,264 - mmdet - INFO - Saving checkpoint at 11 epochs
2025-04-25 10:36:23,235 - mmdet - INFO - Epoch [12][50/773]	lr: 1.060e-04, eta: 1:58:46, time: 1.330, data_time: 0.167, memory: 5963, loss_cls: 0.4962, loss_bbox: 0.8125, d0.loss_cls: 0.5290, d0.loss_bbox: 0.9475, d1.loss_cls: 0.5078, d1.loss_bbox: 0.8515, d2.loss_cls: 0.5020, d2.loss_bbox: 0.8303, d3.loss_cls: 0.4977, d3.loss_bbox: 0.8208, d4.loss_cls: 0.4985, d4.loss_bbox: 0.8156, aux_task0.loss_heatmap: 0.6319, aux_task0.loss_bbox: 0.2520, aux_task1.loss_heatmap: 0.8120, aux_task1.loss_bbox: 0.3220, aux_task2.loss_heatmap: 0.8597, aux_task2.loss_bbox: 0.3484, aux_task3.loss_heatmap: 0.6559, aux_task3.loss_bbox: 0.2735, aux_task4.loss_heatmap: 0.5367, aux_task4.loss_bbox: 0.2796, aux_task5.loss_heatmap: 0.4887, aux_task5.loss_bbox: 0.2963, loss: 13.8663, grad_norm: 32.0293
2025-04-25 10:37:19,070 - mmdet - INFO - Epoch [12][100/773]	lr: 1.052e-04, eta: 1:57:58, time: 1.117, data_time: 0.004, memory: 5963, loss_cls: 0.4956, loss_bbox: 0.8040, d0.loss_cls: 0.5232, d0.loss_bbox: 0.9455, d1.loss_cls: 0.5068, d1.loss_bbox: 0.8493, d2.loss_cls: 0.4998, d2.loss_bbox: 0.8255, d3.loss_cls: 0.4957, d3.loss_bbox: 0.8152, d4.loss_cls: 0.4943, d4.loss_bbox: 0.8088, aux_task0.loss_heatmap: 0.6088, aux_task0.loss_bbox: 0.2473, aux_task1.loss_heatmap: 0.8498, aux_task1.loss_bbox: 0.3278, aux_task2.loss_heatmap: 0.8716, aux_task2.loss_bbox: 0.3436, aux_task3.loss_heatmap: 0.6331, aux_task3.loss_bbox: 0.2726, aux_task4.loss_heatmap: 0.5113, aux_task4.loss_bbox: 0.2852, aux_task5.loss_heatmap: 0.5188, aux_task5.loss_bbox: 0.2946, loss: 13.8283, grad_norm: 29.6944
2025-04-25 10:38:10,665 - mmdet - INFO - Epoch [12][150/773]	lr: 1.044e-04, eta: 1:57:06, time: 1.032, data_time: 0.004, memory: 5963, loss_cls: 0.5055, loss_bbox: 0.7995, d0.loss_cls: 0.5407, d0.loss_bbox: 0.9427, d1.loss_cls: 0.5188, d1.loss_bbox: 0.8454, d2.loss_cls: 0.5079, d2.loss_bbox: 0.8239, d3.loss_cls: 0.5051, d3.loss_bbox: 0.8115, d4.loss_cls: 0.5076, d4.loss_bbox: 0.8034, aux_task0.loss_heatmap: 0.6055, aux_task0.loss_bbox: 0.2490, aux_task1.loss_heatmap: 0.7729, aux_task1.loss_bbox: 0.3189, aux_task2.loss_heatmap: 0.7907, aux_task2.loss_bbox: 0.3677, aux_task3.loss_heatmap: 0.7033, aux_task3.loss_bbox: 0.2845, aux_task4.loss_heatmap: 0.4980, aux_task4.loss_bbox: 0.2707, aux_task5.loss_heatmap: 0.5626, aux_task5.loss_bbox: 0.2965, loss: 13.8321, grad_norm: 32.0335
2025-04-25 10:39:03,381 - mmdet - INFO - Epoch [12][200/773]	lr: 1.036e-04, eta: 1:56:15, time: 1.054, data_time: 0.004, memory: 5963, loss_cls: 0.4827, loss_bbox: 0.7994, d0.loss_cls: 0.5147, d0.loss_bbox: 0.9394, d1.loss_cls: 0.4949, d1.loss_bbox: 0.8417, d2.loss_cls: 0.4847, d2.loss_bbox: 0.8217, d3.loss_cls: 0.4825, d3.loss_bbox: 0.8119, d4.loss_cls: 0.4819, d4.loss_bbox: 0.8050, aux_task0.loss_heatmap: 0.6036, aux_task0.loss_bbox: 0.2432, aux_task1.loss_heatmap: 0.8116, aux_task1.loss_bbox: 0.3088, aux_task2.loss_heatmap: 0.7968, aux_task2.loss_bbox: 0.3468, aux_task3.loss_heatmap: 0.6379, aux_task3.loss_bbox: 0.2823, aux_task4.loss_heatmap: 0.5174, aux_task4.loss_bbox: 0.2821, aux_task5.loss_heatmap: 0.5120, aux_task5.loss_bbox: 0.2892, loss: 13.5924, grad_norm: 30.7376
2025-04-25 10:39:59,801 - mmdet - INFO - Epoch [12][250/773]	lr: 1.028e-04, eta: 1:55:27, time: 1.128, data_time: 0.004, memory: 5963, loss_cls: 0.4806, loss_bbox: 0.7860, d0.loss_cls: 0.5159, d0.loss_bbox: 0.9292, d1.loss_cls: 0.4927, d1.loss_bbox: 0.8325, d2.loss_cls: 0.4843, d2.loss_bbox: 0.8098, d3.loss_cls: 0.4804, d3.loss_bbox: 0.7974, d4.loss_cls: 0.4801, d4.loss_bbox: 0.7907, aux_task0.loss_heatmap: 0.5948, aux_task0.loss_bbox: 0.2367, aux_task1.loss_heatmap: 0.7778, aux_task1.loss_bbox: 0.3180, aux_task2.loss_heatmap: 0.7878, aux_task2.loss_bbox: 0.3269, aux_task3.loss_heatmap: 0.6299, aux_task3.loss_bbox: 0.2853, aux_task4.loss_heatmap: 0.5171, aux_task4.loss_bbox: 0.2924, aux_task5.loss_heatmap: 0.5238, aux_task5.loss_bbox: 0.2954, loss: 13.4654, grad_norm: 28.5304
2025-04-25 10:40:51,917 - mmdet - INFO - Epoch [12][300/773]	lr: 1.020e-04, eta: 1:54:36, time: 1.042, data_time: 0.004, memory: 5963, loss_cls: 0.4817, loss_bbox: 0.7918, d0.loss_cls: 0.5170, d0.loss_bbox: 0.9257, d1.loss_cls: 0.4960, d1.loss_bbox: 0.8309, d2.loss_cls: 0.4882, d2.loss_bbox: 0.8113, d3.loss_cls: 0.4822, d3.loss_bbox: 0.8031, d4.loss_cls: 0.4827, d4.loss_bbox: 0.7962, aux_task0.loss_heatmap: 0.6078, aux_task0.loss_bbox: 0.2365, aux_task1.loss_heatmap: 0.8449, aux_task1.loss_bbox: 0.3214, aux_task2.loss_heatmap: 0.7518, aux_task2.loss_bbox: 0.3282, aux_task3.loss_heatmap: 0.6707, aux_task3.loss_bbox: 0.2834, aux_task4.loss_heatmap: 0.4627, aux_task4.loss_bbox: 0.2743, aux_task5.loss_heatmap: 0.5387, aux_task5.loss_bbox: 0.2973, loss: 13.5244, grad_norm: 26.9353
2025-04-25 10:41:43,405 - mmdet - INFO - Epoch [12][350/773]	lr: 1.012e-04, eta: 1:53:44, time: 1.030, data_time: 0.004, memory: 5963, loss_cls: 0.4899, loss_bbox: 0.7992, d0.loss_cls: 0.5257, d0.loss_bbox: 0.9341, d1.loss_cls: 0.5016, d1.loss_bbox: 0.8408, d2.loss_cls: 0.4954, d2.loss_bbox: 0.8211, d3.loss_cls: 0.4886, d3.loss_bbox: 0.8130, d4.loss_cls: 0.4887, d4.loss_bbox: 0.8057, aux_task0.loss_heatmap: 0.5896, aux_task0.loss_bbox: 0.2375, aux_task1.loss_heatmap: 0.8572, aux_task1.loss_bbox: 0.3314, aux_task2.loss_heatmap: 0.8063, aux_task2.loss_bbox: 0.3426, aux_task3.loss_heatmap: 0.6981, aux_task3.loss_bbox: 0.2863, aux_task4.loss_heatmap: 0.4970, aux_task4.loss_bbox: 0.2810, aux_task5.loss_heatmap: 0.5263, aux_task5.loss_bbox: 0.2918, loss: 13.7490, grad_norm: 27.8338
2025-04-25 10:42:34,757 - mmdet - INFO - Epoch [12][400/773]	lr: 1.003e-04, eta: 1:52:52, time: 1.027, data_time: 0.004, memory: 5963, loss_cls: 0.4756, loss_bbox: 0.8024, d0.loss_cls: 0.5168, d0.loss_bbox: 0.9338, d1.loss_cls: 0.4934, d1.loss_bbox: 0.8447, d2.loss_cls: 0.4822, d2.loss_bbox: 0.8250, d3.loss_cls: 0.4761, d3.loss_bbox: 0.8154, d4.loss_cls: 0.4759, d4.loss_bbox: 0.8079, aux_task0.loss_heatmap: 0.6307, aux_task0.loss_bbox: 0.2440, aux_task1.loss_heatmap: 0.8306, aux_task1.loss_bbox: 0.3302, aux_task2.loss_heatmap: 0.8354, aux_task2.loss_bbox: 0.3437, aux_task3.loss_heatmap: 0.6996, aux_task3.loss_bbox: 0.2837, aux_task4.loss_heatmap: 0.4930, aux_task4.loss_bbox: 0.2851, aux_task5.loss_heatmap: 0.4950, aux_task5.loss_bbox: 0.2913, loss: 13.7113, grad_norm: 29.0487
2025-04-25 10:43:26,762 - mmdet - INFO - Epoch [12][450/773]	lr: 9.949e-05, eta: 1:52:01, time: 1.040, data_time: 0.004, memory: 5963, loss_cls: 0.4929, loss_bbox: 0.7990, d0.loss_cls: 0.5285, d0.loss_bbox: 0.9343, d1.loss_cls: 0.5078, d1.loss_bbox: 0.8430, d2.loss_cls: 0.4979, d2.loss_bbox: 0.8231, d3.loss_cls: 0.4916, d3.loss_bbox: 0.8153, d4.loss_cls: 0.4923, d4.loss_bbox: 0.8076, aux_task0.loss_heatmap: 0.5937, aux_task0.loss_bbox: 0.2398, aux_task1.loss_heatmap: 0.7948, aux_task1.loss_bbox: 0.3198, aux_task2.loss_heatmap: 0.8288, aux_task2.loss_bbox: 0.3349, aux_task3.loss_heatmap: 0.7272, aux_task3.loss_bbox: 0.2903, aux_task4.loss_heatmap: 0.5078, aux_task4.loss_bbox: 0.2780, aux_task5.loss_heatmap: 0.5018, aux_task5.loss_bbox: 0.2963, loss: 13.7469, grad_norm: 28.3609
2025-04-25 10:44:17,865 - mmdet - INFO - Epoch [12][500/773]	lr: 9.863e-05, eta: 1:51:09, time: 1.022, data_time: 0.004, memory: 5963, loss_cls: 0.4831, loss_bbox: 0.7976, d0.loss_cls: 0.5205, d0.loss_bbox: 0.9432, d1.loss_cls: 0.4980, d1.loss_bbox: 0.8468, d2.loss_cls: 0.4889, d2.loss_bbox: 0.8256, d3.loss_cls: 0.4827, d3.loss_bbox: 0.8168, d4.loss_cls: 0.4831, d4.loss_bbox: 0.8064, aux_task0.loss_heatmap: 0.6345, aux_task0.loss_bbox: 0.2496, aux_task1.loss_heatmap: 0.7863, aux_task1.loss_bbox: 0.3210, aux_task2.loss_heatmap: 0.7851, aux_task2.loss_bbox: 0.3500, aux_task3.loss_heatmap: 0.5858, aux_task3.loss_bbox: 0.2939, aux_task4.loss_heatmap: 0.4666, aux_task4.loss_bbox: 0.2786, aux_task5.loss_heatmap: 0.4756, aux_task5.loss_bbox: 0.2908, loss: 13.5104, grad_norm: 30.4153
2025-04-25 10:45:11,121 - mmdet - INFO - Epoch [12][550/773]	lr: 9.776e-05, eta: 1:50:19, time: 1.065, data_time: 0.005, memory: 5963, loss_cls: 0.4797, loss_bbox: 0.7885, d0.loss_cls: 0.5186, d0.loss_bbox: 0.9276, d1.loss_cls: 0.4949, d1.loss_bbox: 0.8329, d2.loss_cls: 0.4884, d2.loss_bbox: 0.8116, d3.loss_cls: 0.4809, d3.loss_bbox: 0.8043, d4.loss_cls: 0.4802, d4.loss_bbox: 0.7956, aux_task0.loss_heatmap: 0.6123, aux_task0.loss_bbox: 0.2454, aux_task1.loss_heatmap: 0.7956, aux_task1.loss_bbox: 0.3158, aux_task2.loss_heatmap: 0.8283, aux_task2.loss_bbox: 0.3437, aux_task3.loss_heatmap: 0.6850, aux_task3.loss_bbox: 0.2980, aux_task4.loss_heatmap: 0.4796, aux_task4.loss_bbox: 0.2751, aux_task5.loss_heatmap: 0.4762, aux_task5.loss_bbox: 0.2932, loss: 13.5515, grad_norm: 26.3623
2025-04-25 10:46:02,664 - mmdet - INFO - Epoch [12][600/773]	lr: 9.688e-05, eta: 1:49:27, time: 1.031, data_time: 0.004, memory: 5963, loss_cls: 0.4723, loss_bbox: 0.7946, d0.loss_cls: 0.5134, d0.loss_bbox: 0.9343, d1.loss_cls: 0.4898, d1.loss_bbox: 0.8390, d2.loss_cls: 0.4801, d2.loss_bbox: 0.8187, d3.loss_cls: 0.4709, d3.loss_bbox: 0.8110, d4.loss_cls: 0.4713, d4.loss_bbox: 0.8020, aux_task0.loss_heatmap: 0.6444, aux_task0.loss_bbox: 0.2413, aux_task1.loss_heatmap: 0.8305, aux_task1.loss_bbox: 0.3222, aux_task2.loss_heatmap: 0.7436, aux_task2.loss_bbox: 0.3395, aux_task3.loss_heatmap: 0.6877, aux_task3.loss_bbox: 0.2843, aux_task4.loss_heatmap: 0.4554, aux_task4.loss_bbox: 0.2767, aux_task5.loss_heatmap: 0.5034, aux_task5.loss_bbox: 0.3018, loss: 13.5282, grad_norm: 28.0154
2025-04-25 10:46:54,689 - mmdet - INFO - Epoch [12][650/773]	lr: 9.600e-05, eta: 1:48:35, time: 1.040, data_time: 0.004, memory: 5963, loss_cls: 0.4679, loss_bbox: 0.7800, d0.loss_cls: 0.5066, d0.loss_bbox: 0.9146, d1.loss_cls: 0.4828, d1.loss_bbox: 0.8235, d2.loss_cls: 0.4763, d2.loss_bbox: 0.8024, d3.loss_cls: 0.4676, d3.loss_bbox: 0.7964, d4.loss_cls: 0.4684, d4.loss_bbox: 0.7884, aux_task0.loss_heatmap: 0.6139, aux_task0.loss_bbox: 0.2497, aux_task1.loss_heatmap: 0.7796, aux_task1.loss_bbox: 0.3189, aux_task2.loss_heatmap: 0.7412, aux_task2.loss_bbox: 0.3183, aux_task3.loss_heatmap: 0.6716, aux_task3.loss_bbox: 0.2800, aux_task4.loss_heatmap: 0.4896, aux_task4.loss_bbox: 0.2723, aux_task5.loss_heatmap: 0.4973, aux_task5.loss_bbox: 0.2999, loss: 13.3068, grad_norm: 28.3191
2025-04-25 10:47:46,333 - mmdet - INFO - Epoch [12][700/773]	lr: 9.510e-05, eta: 1:47:44, time: 1.033, data_time: 0.004, memory: 5963, loss_cls: 0.4732, loss_bbox: 0.7877, d0.loss_cls: 0.5111, d0.loss_bbox: 0.9239, d1.loss_cls: 0.4853, d1.loss_bbox: 0.8347, d2.loss_cls: 0.4789, d2.loss_bbox: 0.8129, d3.loss_cls: 0.4734, d3.loss_bbox: 0.8037, d4.loss_cls: 0.4746, d4.loss_bbox: 0.7943, aux_task0.loss_heatmap: 0.6085, aux_task0.loss_bbox: 0.2448, aux_task1.loss_heatmap: 0.7854, aux_task1.loss_bbox: 0.3065, aux_task2.loss_heatmap: 0.7807, aux_task2.loss_bbox: 0.3329, aux_task3.loss_heatmap: 0.6647, aux_task3.loss_bbox: 0.2829, aux_task4.loss_heatmap: 0.4579, aux_task4.loss_bbox: 0.2745, aux_task5.loss_heatmap: 0.5157, aux_task5.loss_bbox: 0.2984, loss: 13.4066, grad_norm: 28.1527
2025-04-25 10:48:38,527 - mmdet - INFO - Epoch [12][750/773]	lr: 9.419e-05, eta: 1:46:52, time: 1.044, data_time: 0.005, memory: 5963, loss_cls: 0.4862, loss_bbox: 0.7950, d0.loss_cls: 0.5249, d0.loss_bbox: 0.9370, d1.loss_cls: 0.5039, d1.loss_bbox: 0.8431, d2.loss_cls: 0.4965, d2.loss_bbox: 0.8195, d3.loss_cls: 0.4873, d3.loss_bbox: 0.8109, d4.loss_cls: 0.4864, d4.loss_bbox: 0.8026, aux_task0.loss_heatmap: 0.6331, aux_task0.loss_bbox: 0.2445, aux_task1.loss_heatmap: 0.7866, aux_task1.loss_bbox: 0.3167, aux_task2.loss_heatmap: 0.7713, aux_task2.loss_bbox: 0.3551, aux_task3.loss_heatmap: 0.6374, aux_task3.loss_bbox: 0.2656, aux_task4.loss_heatmap: 0.4673, aux_task4.loss_bbox: 0.2769, aux_task5.loss_heatmap: 0.5466, aux_task5.loss_bbox: 0.3020, loss: 13.5964, grad_norm: 26.8634
2025-04-25 10:49:02,855 - mmdet - INFO - Saving checkpoint at 12 epochs
2025-04-25 10:50:08,475 - mmdet - INFO - Epoch [13][50/773]	lr: 9.285e-05, eta: 1:45:30, time: 1.283, data_time: 0.200, memory: 5963, loss_cls: 0.4845, loss_bbox: 0.7910, d0.loss_cls: 0.5174, d0.loss_bbox: 0.9282, d1.loss_cls: 0.4955, d1.loss_bbox: 0.8392, d2.loss_cls: 0.4877, d2.loss_bbox: 0.8187, d3.loss_cls: 0.4823, d3.loss_bbox: 0.8092, d4.loss_cls: 0.4830, d4.loss_bbox: 0.7984, aux_task0.loss_heatmap: 0.6104, aux_task0.loss_bbox: 0.2433, aux_task1.loss_heatmap: 0.8103, aux_task1.loss_bbox: 0.3119, aux_task2.loss_heatmap: 0.8312, aux_task2.loss_bbox: 0.3451, aux_task3.loss_heatmap: 0.6236, aux_task3.loss_bbox: 0.2723, aux_task4.loss_heatmap: 0.5116, aux_task4.loss_bbox: 0.2736, aux_task5.loss_heatmap: 0.5119, aux_task5.loss_bbox: 0.2980, loss: 13.5782, grad_norm: 28.5835
2025-04-25 10:51:00,060 - mmdet - INFO - Epoch [13][100/773]	lr: 9.192e-05, eta: 1:44:38, time: 1.032, data_time: 0.004, memory: 5963, loss_cls: 0.4795, loss_bbox: 0.7859, d0.loss_cls: 0.5154, d0.loss_bbox: 0.9268, d1.loss_cls: 0.4931, d1.loss_bbox: 0.8355, d2.loss_cls: 0.4840, d2.loss_bbox: 0.8147, d3.loss_cls: 0.4789, d3.loss_bbox: 0.8053, d4.loss_cls: 0.4797, d4.loss_bbox: 0.7938, aux_task0.loss_heatmap: 0.6016, aux_task0.loss_bbox: 0.2386, aux_task1.loss_heatmap: 0.8131, aux_task1.loss_bbox: 0.3138, aux_task2.loss_heatmap: 0.8605, aux_task2.loss_bbox: 0.3368, aux_task3.loss_heatmap: 0.6657, aux_task3.loss_bbox: 0.2632, aux_task4.loss_heatmap: 0.4960, aux_task4.loss_bbox: 0.2798, aux_task5.loss_heatmap: 0.4730, aux_task5.loss_bbox: 0.2921, loss: 13.5267, grad_norm: 27.4373
2025-04-25 10:51:52,001 - mmdet - INFO - Epoch [13][150/773]	lr: 9.098e-05, eta: 1:43:47, time: 1.039, data_time: 0.004, memory: 5963, loss_cls: 0.4664, loss_bbox: 0.7646, d0.loss_cls: 0.5060, d0.loss_bbox: 0.9081, d1.loss_cls: 0.4829, d1.loss_bbox: 0.8166, d2.loss_cls: 0.4742, d2.loss_bbox: 0.7955, d3.loss_cls: 0.4655, d3.loss_bbox: 0.7864, d4.loss_cls: 0.4658, d4.loss_bbox: 0.7729, aux_task0.loss_heatmap: 0.5795, aux_task0.loss_bbox: 0.2373, aux_task1.loss_heatmap: 0.7671, aux_task1.loss_bbox: 0.3096, aux_task2.loss_heatmap: 0.7736, aux_task2.loss_bbox: 0.3597, aux_task3.loss_heatmap: 0.6301, aux_task3.loss_bbox: 0.2889, aux_task4.loss_heatmap: 0.4919, aux_task4.loss_bbox: 0.2689, aux_task5.loss_heatmap: 0.4999, aux_task5.loss_bbox: 0.2907, loss: 13.2021, grad_norm: 27.3465
2025-04-25 10:52:44,793 - mmdet - INFO - Epoch [13][200/773]	lr: 9.003e-05, eta: 1:42:56, time: 1.056, data_time: 0.004, memory: 5963, loss_cls: 0.4736, loss_bbox: 0.7748, d0.loss_cls: 0.5098, d0.loss_bbox: 0.9082, d1.loss_cls: 0.4898, d1.loss_bbox: 0.8235, d2.loss_cls: 0.4812, d2.loss_bbox: 0.8035, d3.loss_cls: 0.4752, d3.loss_bbox: 0.7930, d4.loss_cls: 0.4756, d4.loss_bbox: 0.7805, aux_task0.loss_heatmap: 0.5891, aux_task0.loss_bbox: 0.2355, aux_task1.loss_heatmap: 0.7923, aux_task1.loss_bbox: 0.3011, aux_task2.loss_heatmap: 0.7717, aux_task2.loss_bbox: 0.3368, aux_task3.loss_heatmap: 0.6286, aux_task3.loss_bbox: 0.2801, aux_task4.loss_heatmap: 0.4884, aux_task4.loss_bbox: 0.2753, aux_task5.loss_heatmap: 0.5271, aux_task5.loss_bbox: 0.2905, loss: 13.3053, grad_norm: 29.0182
2025-04-25 10:53:41,812 - mmdet - INFO - Epoch [13][250/773]	lr: 8.908e-05, eta: 1:42:08, time: 1.140, data_time: 0.004, memory: 5963, loss_cls: 0.4636, loss_bbox: 0.7648, d0.loss_cls: 0.5006, d0.loss_bbox: 0.9022, d1.loss_cls: 0.4784, d1.loss_bbox: 0.8107, d2.loss_cls: 0.4702, d2.loss_bbox: 0.7877, d3.loss_cls: 0.4631, d3.loss_bbox: 0.7812, d4.loss_cls: 0.4629, d4.loss_bbox: 0.7694, aux_task0.loss_heatmap: 0.5841, aux_task0.loss_bbox: 0.2295, aux_task1.loss_heatmap: 0.7789, aux_task1.loss_bbox: 0.3158, aux_task2.loss_heatmap: 0.7162, aux_task2.loss_bbox: 0.3133, aux_task3.loss_heatmap: 0.6296, aux_task3.loss_bbox: 0.2818, aux_task4.loss_heatmap: 0.5143, aux_task4.loss_bbox: 0.2899, aux_task5.loss_heatmap: 0.4976, aux_task5.loss_bbox: 0.2880, loss: 13.0940, grad_norm: 28.6340
2025-04-25 10:54:34,588 - mmdet - INFO - Epoch [13][300/773]	lr: 8.812e-05, eta: 1:41:17, time: 1.055, data_time: 0.004, memory: 5963, loss_cls: 0.4614, loss_bbox: 0.7671, d0.loss_cls: 0.4999, d0.loss_bbox: 0.9079, d1.loss_cls: 0.4812, d1.loss_bbox: 0.8166, d2.loss_cls: 0.4672, d2.loss_bbox: 0.7979, d3.loss_cls: 0.4606, d3.loss_bbox: 0.7882, d4.loss_cls: 0.4604, d4.loss_bbox: 0.7743, aux_task0.loss_heatmap: 0.6207, aux_task0.loss_bbox: 0.2361, aux_task1.loss_heatmap: 0.8371, aux_task1.loss_bbox: 0.3109, aux_task2.loss_heatmap: 0.7138, aux_task2.loss_bbox: 0.3221, aux_task3.loss_heatmap: 0.6326, aux_task3.loss_bbox: 0.2827, aux_task4.loss_heatmap: 0.4474, aux_task4.loss_bbox: 0.2731, aux_task5.loss_heatmap: 0.5210, aux_task5.loss_bbox: 0.2908, loss: 13.1708, grad_norm: 28.8018
2025-04-25 10:55:26,678 - mmdet - INFO - Epoch [13][350/773]	lr: 8.715e-05, eta: 1:40:25, time: 1.042, data_time: 0.004, memory: 5963, loss_cls: 0.4673, loss_bbox: 0.7647, d0.loss_cls: 0.5011, d0.loss_bbox: 0.9013, d1.loss_cls: 0.4804, d1.loss_bbox: 0.8114, d2.loss_cls: 0.4735, d2.loss_bbox: 0.7903, d3.loss_cls: 0.4661, d3.loss_bbox: 0.7817, d4.loss_cls: 0.4676, d4.loss_bbox: 0.7685, aux_task0.loss_heatmap: 0.5680, aux_task0.loss_bbox: 0.2275, aux_task1.loss_heatmap: 0.8155, aux_task1.loss_bbox: 0.3180, aux_task2.loss_heatmap: 0.7568, aux_task2.loss_bbox: 0.3236, aux_task3.loss_heatmap: 0.6870, aux_task3.loss_bbox: 0.2739, aux_task4.loss_heatmap: 0.4782, aux_task4.loss_bbox: 0.2742, aux_task5.loss_heatmap: 0.5142, aux_task5.loss_bbox: 0.2903, loss: 13.2013, grad_norm: 25.9984
2025-04-25 10:56:18,596 - mmdet - INFO - Epoch [13][400/773]	lr: 8.617e-05, eta: 1:39:34, time: 1.038, data_time: 0.004, memory: 5963, loss_cls: 0.4602, loss_bbox: 0.7758, d0.loss_cls: 0.4916, d0.loss_bbox: 0.9178, d1.loss_cls: 0.4735, d1.loss_bbox: 0.8255, d2.loss_cls: 0.4668, d2.loss_bbox: 0.8047, d3.loss_cls: 0.4602, d3.loss_bbox: 0.7954, d4.loss_cls: 0.4598, d4.loss_bbox: 0.7820, aux_task0.loss_heatmap: 0.5971, aux_task0.loss_bbox: 0.2372, aux_task1.loss_heatmap: 0.8039, aux_task1.loss_bbox: 0.3152, aux_task2.loss_heatmap: 0.7693, aux_task2.loss_bbox: 0.3334, aux_task3.loss_heatmap: 0.6393, aux_task3.loss_bbox: 0.2779, aux_task4.loss_heatmap: 0.4627, aux_task4.loss_bbox: 0.2835, aux_task5.loss_heatmap: 0.4929, aux_task5.loss_bbox: 0.2867, loss: 13.2123, grad_norm: 29.8307
2025-04-25 10:57:10,201 - mmdet - INFO - Epoch [13][450/773]	lr: 8.519e-05, eta: 1:38:42, time: 1.032, data_time: 0.004, memory: 5963, loss_cls: 0.4728, loss_bbox: 0.7610, d0.loss_cls: 0.5106, d0.loss_bbox: 0.8992, d1.loss_cls: 0.4901, d1.loss_bbox: 0.8092, d2.loss_cls: 0.4832, d2.loss_bbox: 0.7877, d3.loss_cls: 0.4738, d3.loss_bbox: 0.7792, d4.loss_cls: 0.4731, d4.loss_bbox: 0.7677, aux_task0.loss_heatmap: 0.5550, aux_task0.loss_bbox: 0.2325, aux_task1.loss_heatmap: 0.7463, aux_task1.loss_bbox: 0.3073, aux_task2.loss_heatmap: 0.7887, aux_task2.loss_bbox: 0.3254, aux_task3.loss_heatmap: 0.6942, aux_task3.loss_bbox: 0.2722, aux_task4.loss_heatmap: 0.4742, aux_task4.loss_bbox: 0.2705, aux_task5.loss_heatmap: 0.5053, aux_task5.loss_bbox: 0.2872, loss: 13.1664, grad_norm: 25.8109
2025-04-25 10:58:02,112 - mmdet - INFO - Epoch [13][500/773]	lr: 8.420e-05, eta: 1:37:51, time: 1.038, data_time: 0.004, memory: 5963, loss_cls: 0.4555, loss_bbox: 0.7642, d0.loss_cls: 0.4925, d0.loss_bbox: 0.9027, d1.loss_cls: 0.4711, d1.loss_bbox: 0.8141, d2.loss_cls: 0.4632, d2.loss_bbox: 0.7934, d3.loss_cls: 0.4548, d3.loss_bbox: 0.7847, d4.loss_cls: 0.4547, d4.loss_bbox: 0.7713, aux_task0.loss_heatmap: 0.5637, aux_task0.loss_bbox: 0.2274, aux_task1.loss_heatmap: 0.7734, aux_task1.loss_bbox: 0.3122, aux_task2.loss_heatmap: 0.7760, aux_task2.loss_bbox: 0.3380, aux_task3.loss_heatmap: 0.6080, aux_task3.loss_bbox: 0.2775, aux_task4.loss_heatmap: 0.4631, aux_task4.loss_bbox: 0.2683, aux_task5.loss_heatmap: 0.4540, aux_task5.loss_bbox: 0.2877, loss: 12.9714, grad_norm: 28.4264
2025-04-25 10:58:57,728 - mmdet - INFO - Epoch [13][550/773]	lr: 8.321e-05, eta: 1:37:01, time: 1.112, data_time: 0.004, memory: 5963, loss_cls: 0.4502, loss_bbox: 0.7527, d0.loss_cls: 0.4921, d0.loss_bbox: 0.8852, d1.loss_cls: 0.4688, d1.loss_bbox: 0.8001, d2.loss_cls: 0.4592, d2.loss_bbox: 0.7796, d3.loss_cls: 0.4525, d3.loss_bbox: 0.7710, d4.loss_cls: 0.4507, d4.loss_bbox: 0.7582, aux_task0.loss_heatmap: 0.5667, aux_task0.loss_bbox: 0.2370, aux_task1.loss_heatmap: 0.7825, aux_task1.loss_bbox: 0.3098, aux_task2.loss_heatmap: 0.7459, aux_task2.loss_bbox: 0.3379, aux_task3.loss_heatmap: 0.6346, aux_task3.loss_bbox: 0.2849, aux_task4.loss_heatmap: 0.4480, aux_task4.loss_bbox: 0.2673, aux_task5.loss_heatmap: 0.4496, aux_task5.loss_bbox: 0.2934, loss: 12.8781, grad_norm: 25.9620
2025-04-25 10:59:49,837 - mmdet - INFO - Epoch [13][600/773]	lr: 8.220e-05, eta: 1:36:10, time: 1.042, data_time: 0.004, memory: 5963, loss_cls: 0.4554, loss_bbox: 0.7605, d0.loss_cls: 0.4899, d0.loss_bbox: 0.8983, d1.loss_cls: 0.4715, d1.loss_bbox: 0.8077, d2.loss_cls: 0.4638, d2.loss_bbox: 0.7865, d3.loss_cls: 0.4552, d3.loss_bbox: 0.7775, d4.loss_cls: 0.4560, d4.loss_bbox: 0.7649, aux_task0.loss_heatmap: 0.6440, aux_task0.loss_bbox: 0.2362, aux_task1.loss_heatmap: 0.8046, aux_task1.loss_bbox: 0.3090, aux_task2.loss_heatmap: 0.7294, aux_task2.loss_bbox: 0.3331, aux_task3.loss_heatmap: 0.6329, aux_task3.loss_bbox: 0.2800, aux_task4.loss_heatmap: 0.4554, aux_task4.loss_bbox: 0.2748, aux_task5.loss_heatmap: 0.4371, aux_task5.loss_bbox: 0.2944, loss: 13.0182, grad_norm: 25.7139
2025-04-25 11:00:41,541 - mmdet - INFO - Epoch [13][650/773]	lr: 8.120e-05, eta: 1:35:18, time: 1.034, data_time: 0.004, memory: 5963, loss_cls: 0.4662, loss_bbox: 0.7660, d0.loss_cls: 0.5025, d0.loss_bbox: 0.9002, d1.loss_cls: 0.4858, d1.loss_bbox: 0.8141, d2.loss_cls: 0.4725, d2.loss_bbox: 0.7956, d3.loss_cls: 0.4666, d3.loss_bbox: 0.7883, d4.loss_cls: 0.4654, d4.loss_bbox: 0.7719, aux_task0.loss_heatmap: 0.5911, aux_task0.loss_bbox: 0.2428, aux_task1.loss_heatmap: 0.7432, aux_task1.loss_bbox: 0.3140, aux_task2.loss_heatmap: 0.7235, aux_task2.loss_bbox: 0.3209, aux_task3.loss_heatmap: 0.6309, aux_task3.loss_bbox: 0.2755, aux_task4.loss_heatmap: 0.4974, aux_task4.loss_bbox: 0.2682, aux_task5.loss_heatmap: 0.5099, aux_task5.loss_bbox: 0.2943, loss: 13.1066, grad_norm: 25.3697
2025-04-25 11:01:33,051 - mmdet - INFO - Epoch [13][700/773]	lr: 8.018e-05, eta: 1:34:26, time: 1.030, data_time: 0.004, memory: 5963, loss_cls: 0.4424, loss_bbox: 0.7518, d0.loss_cls: 0.4772, d0.loss_bbox: 0.8766, d1.loss_cls: 0.4574, d1.loss_bbox: 0.7925, d2.loss_cls: 0.4489, d2.loss_bbox: 0.7759, d3.loss_cls: 0.4419, d3.loss_bbox: 0.7684, d4.loss_cls: 0.4422, d4.loss_bbox: 0.7559, aux_task0.loss_heatmap: 0.5796, aux_task0.loss_bbox: 0.2309, aux_task1.loss_heatmap: 0.7327, aux_task1.loss_bbox: 0.2992, aux_task2.loss_heatmap: 0.7735, aux_task2.loss_bbox: 0.3259, aux_task3.loss_heatmap: 0.6116, aux_task3.loss_bbox: 0.2648, aux_task4.loss_heatmap: 0.4518, aux_task4.loss_bbox: 0.2671, aux_task5.loss_heatmap: 0.4616, aux_task5.loss_bbox: 0.2893, loss: 12.7192, grad_norm: 25.1415
2025-04-25 11:02:23,820 - mmdet - INFO - Epoch [13][750/773]	lr: 7.917e-05, eta: 1:33:34, time: 1.015, data_time: 0.004, memory: 5963, loss_cls: 0.4658, loss_bbox: 0.7670, d0.loss_cls: 0.5049, d0.loss_bbox: 0.9095, d1.loss_cls: 0.4833, d1.loss_bbox: 0.8182, d2.loss_cls: 0.4740, d2.loss_bbox: 0.7988, d3.loss_cls: 0.4680, d3.loss_bbox: 0.7865, d4.loss_cls: 0.4680, d4.loss_bbox: 0.7727, aux_task0.loss_heatmap: 0.6034, aux_task0.loss_bbox: 0.2378, aux_task1.loss_heatmap: 0.7639, aux_task1.loss_bbox: 0.3128, aux_task2.loss_heatmap: 0.7556, aux_task2.loss_bbox: 0.3390, aux_task3.loss_heatmap: 0.6784, aux_task3.loss_bbox: 0.2734, aux_task4.loss_heatmap: 0.4558, aux_task4.loss_bbox: 0.2677, aux_task5.loss_heatmap: 0.4908, aux_task5.loss_bbox: 0.2954, loss: 13.1907, grad_norm: 27.5037
2025-04-25 11:02:47,888 - mmdet - INFO - Saving checkpoint at 13 epochs
2025-04-25 11:03:51,157 - mmdet - INFO - Epoch [14][50/773]	lr: 7.767e-05, eta: 1:32:12, time: 1.235, data_time: 0.169, memory: 5963, loss_cls: 0.4463, loss_bbox: 0.7539, d0.loss_cls: 0.4812, d0.loss_bbox: 0.8883, d1.loss_cls: 0.4608, d1.loss_bbox: 0.8026, d2.loss_cls: 0.4527, d2.loss_bbox: 0.7826, d3.loss_cls: 0.4473, d3.loss_bbox: 0.7722, d4.loss_cls: 0.4468, d4.loss_bbox: 0.7591, aux_task0.loss_heatmap: 0.5486, aux_task0.loss_bbox: 0.2338, aux_task1.loss_heatmap: 0.7532, aux_task1.loss_bbox: 0.3077, aux_task2.loss_heatmap: 0.8079, aux_task2.loss_bbox: 0.3323, aux_task3.loss_heatmap: 0.6255, aux_task3.loss_bbox: 0.2706, aux_task4.loss_heatmap: 0.4826, aux_task4.loss_bbox: 0.2633, aux_task5.loss_heatmap: 0.4568, aux_task5.loss_bbox: 0.2857, loss: 12.8622, grad_norm: 28.5905
2025-04-25 11:04:42,254 - mmdet - INFO - Epoch [14][100/773]	lr: 7.664e-05, eta: 1:31:20, time: 1.022, data_time: 0.004, memory: 5963, loss_cls: 0.4636, loss_bbox: 0.7587, d0.loss_cls: 0.5024, d0.loss_bbox: 0.8925, d1.loss_cls: 0.4811, d1.loss_bbox: 0.8064, d2.loss_cls: 0.4718, d2.loss_bbox: 0.7847, d3.loss_cls: 0.4643, d3.loss_bbox: 0.7761, d4.loss_cls: 0.4642, d4.loss_bbox: 0.7634, aux_task0.loss_heatmap: 0.5587, aux_task0.loss_bbox: 0.2264, aux_task1.loss_heatmap: 0.8053, aux_task1.loss_bbox: 0.3085, aux_task2.loss_heatmap: 0.7971, aux_task2.loss_bbox: 0.3318, aux_task3.loss_heatmap: 0.5973, aux_task3.loss_bbox: 0.2608, aux_task4.loss_heatmap: 0.4994, aux_task4.loss_bbox: 0.2753, aux_task5.loss_heatmap: 0.4867, aux_task5.loss_bbox: 0.2897, loss: 13.0663, grad_norm: 25.2645
2025-04-25 11:05:34,408 - mmdet - INFO - Epoch [14][150/773]	lr: 7.561e-05, eta: 1:30:28, time: 1.043, data_time: 0.004, memory: 5963, loss_cls: 0.4537, loss_bbox: 0.7510, d0.loss_cls: 0.4891, d0.loss_bbox: 0.8910, d1.loss_cls: 0.4692, d1.loss_bbox: 0.8044, d2.loss_cls: 0.4629, d2.loss_bbox: 0.7789, d3.loss_cls: 0.4541, d3.loss_bbox: 0.7681, d4.loss_cls: 0.4540, d4.loss_bbox: 0.7564, aux_task0.loss_heatmap: 0.5838, aux_task0.loss_bbox: 0.2345, aux_task1.loss_heatmap: 0.7473, aux_task1.loss_bbox: 0.3017, aux_task2.loss_heatmap: 0.7533, aux_task2.loss_bbox: 0.3413, aux_task3.loss_heatmap: 0.6283, aux_task3.loss_bbox: 0.2762, aux_task4.loss_heatmap: 0.4610, aux_task4.loss_bbox: 0.2612, aux_task5.loss_heatmap: 0.5083, aux_task5.loss_bbox: 0.2912, loss: 12.9208, grad_norm: 23.1635
2025-04-25 11:06:26,337 - mmdet - INFO - Epoch [14][200/773]	lr: 7.457e-05, eta: 1:29:37, time: 1.039, data_time: 0.004, memory: 5963, loss_cls: 0.4668, loss_bbox: 0.7544, d0.loss_cls: 0.5041, d0.loss_bbox: 0.8922, d1.loss_cls: 0.4814, d1.loss_bbox: 0.8062, d2.loss_cls: 0.4731, d2.loss_bbox: 0.7823, d3.loss_cls: 0.4654, d3.loss_bbox: 0.7718, d4.loss_cls: 0.4673, d4.loss_bbox: 0.7598, aux_task0.loss_heatmap: 0.5892, aux_task0.loss_bbox: 0.2291, aux_task1.loss_heatmap: 0.7459, aux_task1.loss_bbox: 0.2884, aux_task2.loss_heatmap: 0.7704, aux_task2.loss_bbox: 0.3295, aux_task3.loss_heatmap: 0.6927, aux_task3.loss_bbox: 0.2748, aux_task4.loss_heatmap: 0.4925, aux_task4.loss_bbox: 0.2728, aux_task5.loss_heatmap: 0.5289, aux_task5.loss_bbox: 0.2903, loss: 13.1293, grad_norm: 26.4890
2025-04-25 11:07:18,440 - mmdet - INFO - Epoch [14][250/773]	lr: 7.353e-05, eta: 1:28:46, time: 1.042, data_time: 0.004, memory: 5963, loss_cls: 0.4514, loss_bbox: 0.7399, d0.loss_cls: 0.4860, d0.loss_bbox: 0.8788, d1.loss_cls: 0.4662, d1.loss_bbox: 0.7917, d2.loss_cls: 0.4580, d2.loss_bbox: 0.7676, d3.loss_cls: 0.4505, d3.loss_bbox: 0.7553, d4.loss_cls: 0.4512, d4.loss_bbox: 0.7446, aux_task0.loss_heatmap: 0.5572, aux_task0.loss_bbox: 0.2293, aux_task1.loss_heatmap: 0.7570, aux_task1.loss_bbox: 0.3050, aux_task2.loss_heatmap: 0.7162, aux_task2.loss_bbox: 0.3091, aux_task3.loss_heatmap: 0.5182, aux_task3.loss_bbox: 0.2652, aux_task4.loss_heatmap: 0.5186, aux_task4.loss_bbox: 0.2832, aux_task5.loss_heatmap: 0.4810, aux_task5.loss_bbox: 0.2889, loss: 12.6701, grad_norm: 28.4622
2025-04-25 11:08:10,697 - mmdet - INFO - Epoch [14][300/773]	lr: 7.249e-05, eta: 1:27:54, time: 1.045, data_time: 0.004, memory: 5963, loss_cls: 0.4481, loss_bbox: 0.7433, d0.loss_cls: 0.4897, d0.loss_bbox: 0.8868, d1.loss_cls: 0.4690, d1.loss_bbox: 0.7958, d2.loss_cls: 0.4583, d2.loss_bbox: 0.7726, d3.loss_cls: 0.4494, d3.loss_bbox: 0.7592, d4.loss_cls: 0.4481, d4.loss_bbox: 0.7493, aux_task0.loss_heatmap: 0.5632, aux_task0.loss_bbox: 0.2241, aux_task1.loss_heatmap: 0.8019, aux_task1.loss_bbox: 0.3089, aux_task2.loss_heatmap: 0.6659, aux_task2.loss_bbox: 0.3120, aux_task3.loss_heatmap: 0.6179, aux_task3.loss_bbox: 0.2882, aux_task4.loss_heatmap: 0.4331, aux_task4.loss_bbox: 0.2678, aux_task5.loss_heatmap: 0.5148, aux_task5.loss_bbox: 0.2937, loss: 12.7612, grad_norm: 27.3181
2025-04-25 11:09:01,505 - mmdet - INFO - Epoch [14][350/773]	lr: 7.144e-05, eta: 1:27:02, time: 1.016, data_time: 0.004, memory: 5963, loss_cls: 0.4452, loss_bbox: 0.7497, d0.loss_cls: 0.4839, d0.loss_bbox: 0.8910, d1.loss_cls: 0.4634, d1.loss_bbox: 0.8031, d2.loss_cls: 0.4539, d2.loss_bbox: 0.7783, d3.loss_cls: 0.4451, d3.loss_bbox: 0.7653, d4.loss_cls: 0.4444, d4.loss_bbox: 0.7559, aux_task0.loss_heatmap: 0.5465, aux_task0.loss_bbox: 0.2309, aux_task1.loss_heatmap: 0.7980, aux_task1.loss_bbox: 0.3122, aux_task2.loss_heatmap: 0.7200, aux_task2.loss_bbox: 0.3268, aux_task3.loss_heatmap: 0.6441, aux_task3.loss_bbox: 0.2828, aux_task4.loss_heatmap: 0.4473, aux_task4.loss_bbox: 0.2676, aux_task5.loss_heatmap: 0.4959, aux_task5.loss_bbox: 0.2919, loss: 12.8432, grad_norm: 27.6813
2025-04-25 11:09:52,914 - mmdet - INFO - Epoch [14][400/773]	lr: 7.040e-05, eta: 1:26:11, time: 1.028, data_time: 0.004, memory: 5963, loss_cls: 0.4483, loss_bbox: 0.7477, d0.loss_cls: 0.4862, d0.loss_bbox: 0.8947, d1.loss_cls: 0.4637, d1.loss_bbox: 0.8087, d2.loss_cls: 0.4571, d2.loss_bbox: 0.7779, d3.loss_cls: 0.4492, d3.loss_bbox: 0.7647, d4.loss_cls: 0.4489, d4.loss_bbox: 0.7532, aux_task0.loss_heatmap: 0.5461, aux_task0.loss_bbox: 0.2224, aux_task1.loss_heatmap: 0.7702, aux_task1.loss_bbox: 0.3149, aux_task2.loss_heatmap: 0.7798, aux_task2.loss_bbox: 0.3289, aux_task3.loss_heatmap: 0.6144, aux_task3.loss_bbox: 0.2807, aux_task4.loss_heatmap: 0.4627, aux_task4.loss_bbox: 0.2795, aux_task5.loss_heatmap: 0.4683, aux_task5.loss_bbox: 0.2793, loss: 12.8475, grad_norm: 27.5730
2025-04-25 11:10:44,917 - mmdet - INFO - Epoch [14][450/773]	lr: 6.935e-05, eta: 1:25:19, time: 1.040, data_time: 0.004, memory: 5963, loss_cls: 0.4444, loss_bbox: 0.7520, d0.loss_cls: 0.4804, d0.loss_bbox: 0.8911, d1.loss_cls: 0.4612, d1.loss_bbox: 0.8041, d2.loss_cls: 0.4541, d2.loss_bbox: 0.7768, d3.loss_cls: 0.4448, d3.loss_bbox: 0.7652, d4.loss_cls: 0.4450, d4.loss_bbox: 0.7554, aux_task0.loss_heatmap: 0.5795, aux_task0.loss_bbox: 0.2281, aux_task1.loss_heatmap: 0.7566, aux_task1.loss_bbox: 0.3090, aux_task2.loss_heatmap: 0.7405, aux_task2.loss_bbox: 0.3199, aux_task3.loss_heatmap: 0.5985, aux_task3.loss_bbox: 0.2703, aux_task4.loss_heatmap: 0.4642, aux_task4.loss_bbox: 0.2706, aux_task5.loss_heatmap: 0.4803, aux_task5.loss_bbox: 0.2900, loss: 12.7820, grad_norm: 24.6637
2025-04-25 11:11:36,706 - mmdet - INFO - Epoch [14][500/773]	lr: 6.829e-05, eta: 1:24:28, time: 1.036, data_time: 0.004, memory: 5963, loss_cls: 0.4494, loss_bbox: 0.7441, d0.loss_cls: 0.4930, d0.loss_bbox: 0.8851, d1.loss_cls: 0.4706, d1.loss_bbox: 0.7987, d2.loss_cls: 0.4622, d2.loss_bbox: 0.7717, d3.loss_cls: 0.4508, d3.loss_bbox: 0.7602, d4.loss_cls: 0.4496, d4.loss_bbox: 0.7509, aux_task0.loss_heatmap: 0.5819, aux_task0.loss_bbox: 0.2267, aux_task1.loss_heatmap: 0.7719, aux_task1.loss_bbox: 0.3049, aux_task2.loss_heatmap: 0.7229, aux_task2.loss_bbox: 0.3275, aux_task3.loss_heatmap: 0.6185, aux_task3.loss_bbox: 0.2819, aux_task4.loss_heatmap: 0.4355, aux_task4.loss_bbox: 0.2604, aux_task5.loss_heatmap: 0.4797, aux_task5.loss_bbox: 0.2881, loss: 12.7862, grad_norm: 25.4662
2025-04-25 11:12:28,083 - mmdet - INFO - Epoch [14][550/773]	lr: 6.724e-05, eta: 1:23:36, time: 1.028, data_time: 0.004, memory: 5963, loss_cls: 0.4506, loss_bbox: 0.7339, d0.loss_cls: 0.4862, d0.loss_bbox: 0.8680, d1.loss_cls: 0.4655, d1.loss_bbox: 0.7857, d2.loss_cls: 0.4580, d2.loss_bbox: 0.7580, d3.loss_cls: 0.4513, d3.loss_bbox: 0.7465, d4.loss_cls: 0.4510, d4.loss_bbox: 0.7391, aux_task0.loss_heatmap: 0.5849, aux_task0.loss_bbox: 0.2264, aux_task1.loss_heatmap: 0.7785, aux_task1.loss_bbox: 0.3037, aux_task2.loss_heatmap: 0.7288, aux_task2.loss_bbox: 0.3288, aux_task3.loss_heatmap: 0.6229, aux_task3.loss_bbox: 0.2843, aux_task4.loss_heatmap: 0.4513, aux_task4.loss_bbox: 0.2661, aux_task5.loss_heatmap: 0.4568, aux_task5.loss_bbox: 0.2893, loss: 12.7155, grad_norm: 24.6213
2025-04-25 11:13:19,467 - mmdet - INFO - Epoch [14][600/773]	lr: 6.618e-05, eta: 1:22:44, time: 1.028, data_time: 0.004, memory: 5963, loss_cls: 0.4422, loss_bbox: 0.7450, d0.loss_cls: 0.4861, d0.loss_bbox: 0.8865, d1.loss_cls: 0.4606, d1.loss_bbox: 0.7985, d2.loss_cls: 0.4527, d2.loss_bbox: 0.7710, d3.loss_cls: 0.4432, d3.loss_bbox: 0.7604, d4.loss_cls: 0.4424, d4.loss_bbox: 0.7507, aux_task0.loss_heatmap: 0.5929, aux_task0.loss_bbox: 0.2288, aux_task1.loss_heatmap: 0.7837, aux_task1.loss_bbox: 0.3065, aux_task2.loss_heatmap: 0.6926, aux_task2.loss_bbox: 0.3258, aux_task3.loss_heatmap: 0.6325, aux_task3.loss_bbox: 0.2818, aux_task4.loss_heatmap: 0.4232, aux_task4.loss_bbox: 0.2642, aux_task5.loss_heatmap: 0.4565, aux_task5.loss_bbox: 0.2894, loss: 12.7173, grad_norm: 24.7294
2025-04-25 11:14:11,971 - mmdet - INFO - Epoch [14][650/773]	lr: 6.512e-05, eta: 1:21:53, time: 1.050, data_time: 0.004, memory: 5963, loss_cls: 0.4325, loss_bbox: 0.7344, d0.loss_cls: 0.4756, d0.loss_bbox: 0.8795, d1.loss_cls: 0.4537, d1.loss_bbox: 0.7900, d2.loss_cls: 0.4444, d2.loss_bbox: 0.7582, d3.loss_cls: 0.4333, d3.loss_bbox: 0.7488, d4.loss_cls: 0.4318, d4.loss_bbox: 0.7405, aux_task0.loss_heatmap: 0.5335, aux_task0.loss_bbox: 0.2173, aux_task1.loss_heatmap: 0.7403, aux_task1.loss_bbox: 0.3073, aux_task2.loss_heatmap: 0.6788, aux_task2.loss_bbox: 0.3160, aux_task3.loss_heatmap: 0.6027, aux_task3.loss_bbox: 0.2725, aux_task4.loss_heatmap: 0.4660, aux_task4.loss_bbox: 0.2628, aux_task5.loss_heatmap: 0.4544, aux_task5.loss_bbox: 0.2919, loss: 12.4660, grad_norm: 25.7412
2025-04-25 11:15:04,858 - mmdet - INFO - Epoch [14][700/773]	lr: 6.407e-05, eta: 1:21:02, time: 1.058, data_time: 0.005, memory: 5963, loss_cls: 0.4203, loss_bbox: 0.7334, d0.loss_cls: 0.4626, d0.loss_bbox: 0.8698, d1.loss_cls: 0.4391, d1.loss_bbox: 0.7842, d2.loss_cls: 0.4316, d2.loss_bbox: 0.7580, d3.loss_cls: 0.4217, d3.loss_bbox: 0.7467, d4.loss_cls: 0.4221, d4.loss_bbox: 0.7370, aux_task0.loss_heatmap: 0.5780, aux_task0.loss_bbox: 0.2230, aux_task1.loss_heatmap: 0.7207, aux_task1.loss_bbox: 0.2926, aux_task2.loss_heatmap: 0.7527, aux_task2.loss_bbox: 0.3194, aux_task3.loss_heatmap: 0.5587, aux_task3.loss_bbox: 0.2634, aux_task4.loss_heatmap: 0.4377, aux_task4.loss_bbox: 0.2597, aux_task5.loss_heatmap: 0.4623, aux_task5.loss_bbox: 0.2889, loss: 12.3835, grad_norm: 25.8657
2025-04-25 11:15:56,958 - mmdet - INFO - Epoch [14][750/773]	lr: 6.301e-05, eta: 1:20:11, time: 1.042, data_time: 0.004, memory: 5963, loss_cls: 0.4399, loss_bbox: 0.7370, d0.loss_cls: 0.4825, d0.loss_bbox: 0.8801, d1.loss_cls: 0.4623, d1.loss_bbox: 0.7896, d2.loss_cls: 0.4527, d2.loss_bbox: 0.7626, d3.loss_cls: 0.4418, d3.loss_bbox: 0.7511, d4.loss_cls: 0.4405, d4.loss_bbox: 0.7419, aux_task0.loss_heatmap: 0.5569, aux_task0.loss_bbox: 0.2185, aux_task1.loss_heatmap: 0.7487, aux_task1.loss_bbox: 0.3095, aux_task2.loss_heatmap: 0.6767, aux_task2.loss_bbox: 0.3380, aux_task3.loss_heatmap: 0.6146, aux_task3.loss_bbox: 0.2690, aux_task4.loss_heatmap: 0.4248, aux_task4.loss_bbox: 0.2608, aux_task5.loss_heatmap: 0.5069, aux_task5.loss_bbox: 0.2940, loss: 12.6003, grad_norm: 26.1445
2025-04-25 11:16:21,823 - mmdet - INFO - Saving checkpoint at 14 epochs
2025-04-25 11:17:24,729 - mmdet - INFO - Epoch [15][50/773]	lr: 6.146e-05, eta: 1:18:49, time: 1.227, data_time: 0.172, memory: 5963, loss_cls: 0.4537, loss_bbox: 0.7489, d0.loss_cls: 0.4912, d0.loss_bbox: 0.8753, d1.loss_cls: 0.4710, d1.loss_bbox: 0.7960, d2.loss_cls: 0.4632, d2.loss_bbox: 0.7711, d3.loss_cls: 0.4549, d3.loss_bbox: 0.7605, d4.loss_cls: 0.4543, d4.loss_bbox: 0.7516, aux_task0.loss_heatmap: 0.5475, aux_task0.loss_bbox: 0.2212, aux_task1.loss_heatmap: 0.7297, aux_task1.loss_bbox: 0.2977, aux_task2.loss_heatmap: 0.7934, aux_task2.loss_bbox: 0.3263, aux_task3.loss_heatmap: 0.5842, aux_task3.loss_bbox: 0.2613, aux_task4.loss_heatmap: 0.4721, aux_task4.loss_bbox: 0.2560, aux_task5.loss_heatmap: 0.4633, aux_task5.loss_bbox: 0.2884, loss: 12.7326, grad_norm: 27.4981
2025-04-25 11:18:17,173 - mmdet - INFO - Epoch [15][100/773]	lr: 6.041e-05, eta: 1:17:58, time: 1.049, data_time: 0.004, memory: 5963, loss_cls: 0.4363, loss_bbox: 0.7423, d0.loss_cls: 0.4752, d0.loss_bbox: 0.8763, d1.loss_cls: 0.4564, d1.loss_bbox: 0.7902, d2.loss_cls: 0.4456, d2.loss_bbox: 0.7654, d3.loss_cls: 0.4376, d3.loss_bbox: 0.7561, d4.loss_cls: 0.4377, d4.loss_bbox: 0.7469, aux_task0.loss_heatmap: 0.5613, aux_task0.loss_bbox: 0.2232, aux_task1.loss_heatmap: 0.7675, aux_task1.loss_bbox: 0.2988, aux_task2.loss_heatmap: 0.7986, aux_task2.loss_bbox: 0.3224, aux_task3.loss_heatmap: 0.5749, aux_task3.loss_bbox: 0.2585, aux_task4.loss_heatmap: 0.4808, aux_task4.loss_bbox: 0.2650, aux_task5.loss_heatmap: 0.4638, aux_task5.loss_bbox: 0.2915, loss: 12.6723, grad_norm: 28.2288
2025-04-25 11:19:09,103 - mmdet - INFO - Epoch [15][150/773]	lr: 5.935e-05, eta: 1:17:07, time: 1.039, data_time: 0.005, memory: 5963, loss_cls: 0.4300, loss_bbox: 0.7066, d0.loss_cls: 0.4742, d0.loss_bbox: 0.8517, d1.loss_cls: 0.4481, d1.loss_bbox: 0.7637, d2.loss_cls: 0.4406, d2.loss_bbox: 0.7320, d3.loss_cls: 0.4321, d3.loss_bbox: 0.7215, d4.loss_cls: 0.4309, d4.loss_bbox: 0.7116, aux_task0.loss_heatmap: 0.5109, aux_task0.loss_bbox: 0.2106, aux_task1.loss_heatmap: 0.6939, aux_task1.loss_bbox: 0.2909, aux_task2.loss_heatmap: 0.7089, aux_task2.loss_bbox: 0.3392, aux_task3.loss_heatmap: 0.5907, aux_task3.loss_bbox: 0.2763, aux_task4.loss_heatmap: 0.4455, aux_task4.loss_bbox: 0.2525, aux_task5.loss_heatmap: 0.4664, aux_task5.loss_bbox: 0.2835, loss: 12.2123, grad_norm: 26.2919
2025-04-25 11:20:02,282 - mmdet - INFO - Epoch [15][200/773]	lr: 5.829e-05, eta: 1:16:16, time: 1.064, data_time: 0.005, memory: 5963, loss_cls: 0.4340, loss_bbox: 0.7204, d0.loss_cls: 0.4692, d0.loss_bbox: 0.8635, d1.loss_cls: 0.4530, d1.loss_bbox: 0.7726, d2.loss_cls: 0.4464, d2.loss_bbox: 0.7420, d3.loss_cls: 0.4373, d3.loss_bbox: 0.7319, d4.loss_cls: 0.4357, d4.loss_bbox: 0.7237, aux_task0.loss_heatmap: 0.5224, aux_task0.loss_bbox: 0.2215, aux_task1.loss_heatmap: 0.7137, aux_task1.loss_bbox: 0.2837, aux_task2.loss_heatmap: 0.7008, aux_task2.loss_bbox: 0.3184, aux_task3.loss_heatmap: 0.6370, aux_task3.loss_bbox: 0.2752, aux_task4.loss_heatmap: 0.4704, aux_task4.loss_bbox: 0.2682, aux_task5.loss_heatmap: 0.4719, aux_task5.loss_bbox: 0.2863, loss: 12.3992, grad_norm: 26.4310
2025-04-25 11:20:54,814 - mmdet - INFO - Epoch [15][250/773]	lr: 5.724e-05, eta: 1:15:25, time: 1.051, data_time: 0.004, memory: 5963, loss_cls: 0.4318, loss_bbox: 0.7264, d0.loss_cls: 0.4718, d0.loss_bbox: 0.8621, d1.loss_cls: 0.4510, d1.loss_bbox: 0.7776, d2.loss_cls: 0.4455, d2.loss_bbox: 0.7474, d3.loss_cls: 0.4343, d3.loss_bbox: 0.7389, d4.loss_cls: 0.4325, d4.loss_bbox: 0.7314, aux_task0.loss_heatmap: 0.5497, aux_task0.loss_bbox: 0.2196, aux_task1.loss_heatmap: 0.7102, aux_task1.loss_bbox: 0.2990, aux_task2.loss_heatmap: 0.6801, aux_task2.loss_bbox: 0.3030, aux_task3.loss_heatmap: 0.5208, aux_task3.loss_bbox: 0.2727, aux_task4.loss_heatmap: 0.4863, aux_task4.loss_bbox: 0.2714, aux_task5.loss_heatmap: 0.4912, aux_task5.loss_bbox: 0.2848, loss: 12.3395, grad_norm: 24.2894
2025-04-25 11:21:47,388 - mmdet - INFO - Epoch [15][300/773]	lr: 5.618e-05, eta: 1:14:34, time: 1.051, data_time: 0.004, memory: 5963, loss_cls: 0.4327, loss_bbox: 0.7187, d0.loss_cls: 0.4746, d0.loss_bbox: 0.8574, d1.loss_cls: 0.4522, d1.loss_bbox: 0.7721, d2.loss_cls: 0.4461, d2.loss_bbox: 0.7412, d3.loss_cls: 0.4351, d3.loss_bbox: 0.7332, d4.loss_cls: 0.4336, d4.loss_bbox: 0.7233, aux_task0.loss_heatmap: 0.5317, aux_task0.loss_bbox: 0.2150, aux_task1.loss_heatmap: 0.7853, aux_task1.loss_bbox: 0.3040, aux_task2.loss_heatmap: 0.6280, aux_task2.loss_bbox: 0.3053, aux_task3.loss_heatmap: 0.5830, aux_task3.loss_bbox: 0.2659, aux_task4.loss_heatmap: 0.4352, aux_task4.loss_bbox: 0.2620, aux_task5.loss_heatmap: 0.4885, aux_task5.loss_bbox: 0.2935, loss: 12.3177, grad_norm: 25.1364
2025-04-25 11:22:39,306 - mmdet - INFO - Epoch [15][350/773]	lr: 5.513e-05, eta: 1:13:42, time: 1.038, data_time: 0.004, memory: 5963, loss_cls: 0.4300, loss_bbox: 0.7345, d0.loss_cls: 0.4719, d0.loss_bbox: 0.8696, d1.loss_cls: 0.4494, d1.loss_bbox: 0.7845, d2.loss_cls: 0.4448, d2.loss_bbox: 0.7548, d3.loss_cls: 0.4331, d3.loss_bbox: 0.7455, d4.loss_cls: 0.4308, d4.loss_bbox: 0.7394, aux_task0.loss_heatmap: 0.5712, aux_task0.loss_bbox: 0.2203, aux_task1.loss_heatmap: 0.7885, aux_task1.loss_bbox: 0.3092, aux_task2.loss_heatmap: 0.7225, aux_task2.loss_bbox: 0.3200, aux_task3.loss_heatmap: 0.6212, aux_task3.loss_bbox: 0.2634, aux_task4.loss_heatmap: 0.4370, aux_task4.loss_bbox: 0.2652, aux_task5.loss_heatmap: 0.4676, aux_task5.loss_bbox: 0.2838, loss: 12.5582, grad_norm: 23.0810
2025-04-25 11:23:31,554 - mmdet - INFO - Epoch [15][400/773]	lr: 5.408e-05, eta: 1:12:51, time: 1.045, data_time: 0.005, memory: 5963, loss_cls: 0.4251, loss_bbox: 0.7328, d0.loss_cls: 0.4693, d0.loss_bbox: 0.8736, d1.loss_cls: 0.4463, d1.loss_bbox: 0.7871, d2.loss_cls: 0.4384, d2.loss_bbox: 0.7567, d3.loss_cls: 0.4275, d3.loss_bbox: 0.7465, d4.loss_cls: 0.4257, d4.loss_bbox: 0.7377, aux_task0.loss_heatmap: 0.5384, aux_task0.loss_bbox: 0.2191, aux_task1.loss_heatmap: 0.7440, aux_task1.loss_bbox: 0.3072, aux_task2.loss_heatmap: 0.7761, aux_task2.loss_bbox: 0.3272, aux_task3.loss_heatmap: 0.5339, aux_task3.loss_bbox: 0.2646, aux_task4.loss_heatmap: 0.4413, aux_task4.loss_bbox: 0.2738, aux_task5.loss_heatmap: 0.4600, aux_task5.loss_bbox: 0.2850, loss: 12.4373, grad_norm: 26.2468
2025-04-25 11:24:24,766 - mmdet - INFO - Epoch [15][450/773]	lr: 5.303e-05, eta: 1:12:00, time: 1.064, data_time: 0.004, memory: 5963, loss_cls: 0.4277, loss_bbox: 0.7234, d0.loss_cls: 0.4698, d0.loss_bbox: 0.8628, d1.loss_cls: 0.4472, d1.loss_bbox: 0.7758, d2.loss_cls: 0.4391, d2.loss_bbox: 0.7468, d3.loss_cls: 0.4285, d3.loss_bbox: 0.7371, d4.loss_cls: 0.4264, d4.loss_bbox: 0.7288, aux_task0.loss_heatmap: 0.5355, aux_task0.loss_bbox: 0.2186, aux_task1.loss_heatmap: 0.7251, aux_task1.loss_bbox: 0.2958, aux_task2.loss_heatmap: 0.7328, aux_task2.loss_bbox: 0.3140, aux_task3.loss_heatmap: 0.6051, aux_task3.loss_bbox: 0.2643, aux_task4.loss_heatmap: 0.4647, aux_task4.loss_bbox: 0.2650, aux_task5.loss_heatmap: 0.4438, aux_task5.loss_bbox: 0.2835, loss: 12.3618, grad_norm: 24.1998
2025-04-25 11:25:16,888 - mmdet - INFO - Epoch [15][500/773]	lr: 5.199e-05, eta: 1:11:09, time: 1.042, data_time: 0.004, memory: 5963, loss_cls: 0.4420, loss_bbox: 0.7272, d0.loss_cls: 0.4849, d0.loss_bbox: 0.8683, d1.loss_cls: 0.4617, d1.loss_bbox: 0.7841, d2.loss_cls: 0.4516, d2.loss_bbox: 0.7532, d3.loss_cls: 0.4405, d3.loss_bbox: 0.7431, d4.loss_cls: 0.4419, d4.loss_bbox: 0.7325, aux_task0.loss_heatmap: 0.5950, aux_task0.loss_bbox: 0.2260, aux_task1.loss_heatmap: 0.7121, aux_task1.loss_bbox: 0.3010, aux_task2.loss_heatmap: 0.7242, aux_task2.loss_bbox: 0.3268, aux_task3.loss_heatmap: 0.6210, aux_task3.loss_bbox: 0.2759, aux_task4.loss_heatmap: 0.4358, aux_task4.loss_bbox: 0.2573, aux_task5.loss_heatmap: 0.4511, aux_task5.loss_bbox: 0.2896, loss: 12.5469, grad_norm: 24.1398
2025-04-25 11:26:09,002 - mmdet - INFO - Epoch [15][550/773]	lr: 5.095e-05, eta: 1:10:17, time: 1.042, data_time: 0.004, memory: 5963, loss_cls: 0.4256, loss_bbox: 0.7187, d0.loss_cls: 0.4670, d0.loss_bbox: 0.8579, d1.loss_cls: 0.4471, d1.loss_bbox: 0.7695, d2.loss_cls: 0.4354, d2.loss_bbox: 0.7406, d3.loss_cls: 0.4263, d3.loss_bbox: 0.7313, d4.loss_cls: 0.4257, d4.loss_bbox: 0.7230, aux_task0.loss_heatmap: 0.5694, aux_task0.loss_bbox: 0.2211, aux_task1.loss_heatmap: 0.7496, aux_task1.loss_bbox: 0.2974, aux_task2.loss_heatmap: 0.6882, aux_task2.loss_bbox: 0.3279, aux_task3.loss_heatmap: 0.5909, aux_task3.loss_bbox: 0.2772, aux_task4.loss_heatmap: 0.4387, aux_task4.loss_bbox: 0.2600, aux_task5.loss_heatmap: 0.4631, aux_task5.loss_bbox: 0.2938, loss: 12.3455, grad_norm: 25.1552
2025-04-25 11:27:00,264 - mmdet - INFO - Epoch [15][600/773]	lr: 4.991e-05, eta: 1:09:25, time: 1.025, data_time: 0.005, memory: 5963, loss_cls: 0.4139, loss_bbox: 0.7158, d0.loss_cls: 0.4528, d0.loss_bbox: 0.8499, d1.loss_cls: 0.4320, d1.loss_bbox: 0.7641, d2.loss_cls: 0.4235, d2.loss_bbox: 0.7387, d3.loss_cls: 0.4160, d3.loss_bbox: 0.7284, d4.loss_cls: 0.4139, d4.loss_bbox: 0.7203, aux_task0.loss_heatmap: 0.5305, aux_task0.loss_bbox: 0.2164, aux_task1.loss_heatmap: 0.7518, aux_task1.loss_bbox: 0.2966, aux_task2.loss_heatmap: 0.6518, aux_task2.loss_bbox: 0.3163, aux_task3.loss_heatmap: 0.6705, aux_task3.loss_bbox: 0.2897, aux_task4.loss_heatmap: 0.4185, aux_task4.loss_bbox: 0.2613, aux_task5.loss_heatmap: 0.4169, aux_task5.loss_bbox: 0.2878, loss: 12.1775, grad_norm: 24.4141
2025-04-25 11:27:53,873 - mmdet - INFO - Epoch [15][650/773]	lr: 4.887e-05, eta: 1:08:35, time: 1.072, data_time: 0.005, memory: 5963, loss_cls: 0.4180, loss_bbox: 0.7181, d0.loss_cls: 0.4558, d0.loss_bbox: 0.8589, d1.loss_cls: 0.4348, d1.loss_bbox: 0.7701, d2.loss_cls: 0.4291, d2.loss_bbox: 0.7428, d3.loss_cls: 0.4194, d3.loss_bbox: 0.7319, d4.loss_cls: 0.4182, d4.loss_bbox: 0.7233, aux_task0.loss_heatmap: 0.5290, aux_task0.loss_bbox: 0.2181, aux_task1.loss_heatmap: 0.7357, aux_task1.loss_bbox: 0.2967, aux_task2.loss_heatmap: 0.6442, aux_task2.loss_bbox: 0.3035, aux_task3.loss_heatmap: 0.6217, aux_task3.loss_bbox: 0.2814, aux_task4.loss_heatmap: 0.4438, aux_task4.loss_bbox: 0.2609, aux_task5.loss_heatmap: 0.4728, aux_task5.loss_bbox: 0.2896, loss: 12.2178, grad_norm: 25.5637
2025-04-25 11:28:46,121 - mmdet - INFO - Epoch [15][700/773]	lr: 4.784e-05, eta: 1:07:43, time: 1.045, data_time: 0.004, memory: 5963, loss_cls: 0.4190, loss_bbox: 0.7121, d0.loss_cls: 0.4657, d0.loss_bbox: 0.8551, d1.loss_cls: 0.4453, d1.loss_bbox: 0.7628, d2.loss_cls: 0.4343, d2.loss_bbox: 0.7337, d3.loss_cls: 0.4225, d3.loss_bbox: 0.7235, d4.loss_cls: 0.4212, d4.loss_bbox: 0.7155, aux_task0.loss_heatmap: 0.5593, aux_task0.loss_bbox: 0.2173, aux_task1.loss_heatmap: 0.7257, aux_task1.loss_bbox: 0.2875, aux_task2.loss_heatmap: 0.7083, aux_task2.loss_bbox: 0.3092, aux_task3.loss_heatmap: 0.6107, aux_task3.loss_bbox: 0.2595, aux_task4.loss_heatmap: 0.4115, aux_task4.loss_bbox: 0.2587, aux_task5.loss_heatmap: 0.4505, aux_task5.loss_bbox: 0.2874, loss: 12.1962, grad_norm: 27.4693
2025-04-25 11:29:37,618 - mmdet - INFO - Epoch [15][750/773]	lr: 4.682e-05, eta: 1:06:52, time: 1.030, data_time: 0.004, memory: 5963, loss_cls: 0.4158, loss_bbox: 0.7104, d0.loss_cls: 0.4615, d0.loss_bbox: 0.8508, d1.loss_cls: 0.4403, d1.loss_bbox: 0.7632, d2.loss_cls: 0.4311, d2.loss_bbox: 0.7342, d3.loss_cls: 0.4181, d3.loss_bbox: 0.7254, d4.loss_cls: 0.4155, d4.loss_bbox: 0.7168, aux_task0.loss_heatmap: 0.5473, aux_task0.loss_bbox: 0.2195, aux_task1.loss_heatmap: 0.7018, aux_task1.loss_bbox: 0.2907, aux_task2.loss_heatmap: 0.6883, aux_task2.loss_bbox: 0.3256, aux_task3.loss_heatmap: 0.5830, aux_task3.loss_bbox: 0.2605, aux_task4.loss_heatmap: 0.4321, aux_task4.loss_bbox: 0.2559, aux_task5.loss_heatmap: 0.4904, aux_task5.loss_bbox: 0.2945, loss: 12.1725, grad_norm: 25.0220
2025-04-25 11:30:01,519 - mmdet - INFO - Saving checkpoint at 15 epochs
2025-04-25 11:52:15,195 - mmdet - INFO - Exp name: lidar_0075v_900q_cascadeded_split40.py
2025-04-25 11:52:17,189 - mmdet - INFO - Epoch(val) [15][1505]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.4908, pts_bbox_NuScenes/car_AP_dist_1.0: 0.6353, pts_bbox_NuScenes/car_AP_dist_2.0: 0.7087, pts_bbox_NuScenes/car_AP_dist_4.0: 0.7544, pts_bbox_NuScenes/car_trans_err: 0.2774, pts_bbox_NuScenes/car_scale_err: 0.1762, pts_bbox_NuScenes/car_orient_err: 0.3924, pts_bbox_NuScenes/car_vel_err: 1.3396, pts_bbox_NuScenes/car_attr_err: 0.3988, pts_bbox_NuScenes/mATE: 0.4807, pts_bbox_NuScenes/mASE: 0.2973, pts_bbox_NuScenes/mAOE: 0.9200, pts_bbox_NuScenes/mAVE: 1.0568, pts_bbox_NuScenes/mAAE: 0.4172, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.1210, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.2641, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.3662, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.4100, pts_bbox_NuScenes/truck_trans_err: 0.4965, pts_bbox_NuScenes/truck_scale_err: 0.2413, pts_bbox_NuScenes/truck_orient_err: 0.5232, pts_bbox_NuScenes/truck_vel_err: 0.9603, pts_bbox_NuScenes/truck_attr_err: 0.3671, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0285, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.1051, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.1499, pts_bbox_NuScenes/construction_vehicle_trans_err: 0.8038, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.4652, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.2868, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1335, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.3480, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.1029, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.2877, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.4954, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.5822, pts_bbox_NuScenes/bus_trans_err: 0.5938, pts_bbox_NuScenes/bus_scale_err: 0.2454, pts_bbox_NuScenes/bus_orient_err: 0.7831, pts_bbox_NuScenes/bus_vel_err: 2.0575, pts_bbox_NuScenes/bus_attr_err: 0.6359, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0037, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.0916, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.1834, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.2665, pts_bbox_NuScenes/trailer_trans_err: 0.7585, pts_bbox_NuScenes/trailer_scale_err: 0.2673, pts_bbox_NuScenes/trailer_orient_err: 1.2155, pts_bbox_NuScenes/trailer_vel_err: 0.4447, pts_bbox_NuScenes/trailer_attr_err: 0.1883, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.1670, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.3761, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.5216, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.5813, pts_bbox_NuScenes/barrier_trans_err: 0.5563, pts_bbox_NuScenes/barrier_scale_err: 0.2963, pts_bbox_NuScenes/barrier_orient_err: 0.3133, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.1214, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.1654, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.1893, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.2047, pts_bbox_NuScenes/motorcycle_trans_err: 0.3380, pts_bbox_NuScenes/motorcycle_scale_err: 0.2737, pts_bbox_NuScenes/motorcycle_orient_err: 1.0767, pts_bbox_NuScenes/motorcycle_vel_err: 1.9841, pts_bbox_NuScenes/motorcycle_attr_err: 0.4649, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.0100, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.0122, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.0150, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.0165, pts_bbox_NuScenes/bicycle_trans_err: 0.3226, pts_bbox_NuScenes/bicycle_scale_err: 0.3113, pts_bbox_NuScenes/bicycle_orient_err: 1.1257, pts_bbox_NuScenes/bicycle_vel_err: 0.5850, pts_bbox_NuScenes/bicycle_attr_err: 0.1399, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.4079, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.6082, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.6553, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.6855, pts_bbox_NuScenes/pedestrian_trans_err: 0.3993, pts_bbox_NuScenes/pedestrian_scale_err: 0.2918, pts_bbox_NuScenes/pedestrian_orient_err: 1.5635, pts_bbox_NuScenes/pedestrian_vel_err: 0.9493, pts_bbox_NuScenes/pedestrian_attr_err: 0.7948, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.3220, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.3675, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.4047, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.4589, pts_bbox_NuScenes/traffic_cone_trans_err: 0.2612, pts_bbox_NuScenes/traffic_cone_scale_err: 0.4044, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.3427, pts_bbox_NuScenes/mAP: 0.3084
2025-04-25 11:52:17,214 - mmdet - INFO - No ObjectSample now!
2025-04-25 11:53:11,287 - mmdet - INFO - Epoch [16][50/773]	lr: 4.533e-05, eta: 1:05:29, time: 1.058, data_time: 0.079, memory: 5963, loss_cls: 0.4606, loss_bbox: 0.6963, d0.loss_cls: 0.4912, d0.loss_bbox: 0.8374, d1.loss_cls: 0.4762, d1.loss_bbox: 0.7457, d2.loss_cls: 0.4700, d2.loss_bbox: 0.7158, d3.loss_cls: 0.4633, d3.loss_bbox: 0.7073, d4.loss_cls: 0.4623, d4.loss_bbox: 0.7019, aux_task0.loss_heatmap: 0.5334, aux_task0.loss_bbox: 0.2122, aux_task1.loss_heatmap: 0.7476, aux_task1.loss_bbox: 0.2224, aux_task2.loss_heatmap: 0.5517, aux_task2.loss_bbox: 0.1697, aux_task3.loss_heatmap: 0.3360, aux_task3.loss_bbox: 0.1044, aux_task4.loss_heatmap: 0.5979, aux_task4.loss_bbox: 0.1425, aux_task5.loss_heatmap: 0.5591, aux_task5.loss_bbox: 0.2726, loss: 11.6776, grad_norm: 32.1880
2025-04-25 11:54:01,661 - mmdet - INFO - Epoch [16][100/773]	lr: 4.431e-05, eta: 1:04:37, time: 1.007, data_time: 0.005, memory: 5963, loss_cls: 0.4361, loss_bbox: 0.6969, d0.loss_cls: 0.4661, d0.loss_bbox: 0.8419, d1.loss_cls: 0.4467, d1.loss_bbox: 0.7466, d2.loss_cls: 0.4436, d2.loss_bbox: 0.7192, d3.loss_cls: 0.4373, d3.loss_bbox: 0.7102, d4.loss_cls: 0.4370, d4.loss_bbox: 0.7009, aux_task0.loss_heatmap: 0.5120, aux_task0.loss_bbox: 0.2083, aux_task1.loss_heatmap: 0.7108, aux_task1.loss_bbox: 0.2176, aux_task2.loss_heatmap: 0.5179, aux_task2.loss_bbox: 0.1782, aux_task3.loss_heatmap: 0.4202, aux_task3.loss_bbox: 0.1394, aux_task4.loss_heatmap: 0.5087, aux_task4.loss_bbox: 0.1334, aux_task5.loss_heatmap: 0.5100, aux_task5.loss_bbox: 0.2590, loss: 11.3981, grad_norm: 30.6543
2025-04-25 11:54:52,344 - mmdet - INFO - Epoch [16][150/773]	lr: 4.330e-05, eta: 1:03:45, time: 1.014, data_time: 0.005, memory: 5963, loss_cls: 0.4407, loss_bbox: 0.7185, d0.loss_cls: 0.4663, d0.loss_bbox: 0.8589, d1.loss_cls: 0.4483, d1.loss_bbox: 0.7686, d2.loss_cls: 0.4449, d2.loss_bbox: 0.7390, d3.loss_cls: 0.4386, d3.loss_bbox: 0.7299, d4.loss_cls: 0.4400, d4.loss_bbox: 0.7221, aux_task0.loss_heatmap: 0.5182, aux_task0.loss_bbox: 0.2132, aux_task1.loss_heatmap: 0.6763, aux_task1.loss_bbox: 0.2077, aux_task2.loss_heatmap: 0.4144, aux_task2.loss_bbox: 0.1539, aux_task3.loss_heatmap: 0.3982, aux_task3.loss_bbox: 0.1462, aux_task4.loss_heatmap: 0.5341, aux_task4.loss_bbox: 0.1465, aux_task5.loss_heatmap: 0.5250, aux_task5.loss_bbox: 0.2640, loss: 11.4135, grad_norm: 32.2063
2025-04-25 11:55:42,619 - mmdet - INFO - Epoch [16][200/773]	lr: 4.230e-05, eta: 1:02:53, time: 1.005, data_time: 0.005, memory: 5963, loss_cls: 0.4259, loss_bbox: 0.7039, d0.loss_cls: 0.4582, d0.loss_bbox: 0.8460, d1.loss_cls: 0.4371, d1.loss_bbox: 0.7537, d2.loss_cls: 0.4302, d2.loss_bbox: 0.7276, d3.loss_cls: 0.4256, d3.loss_bbox: 0.7165, d4.loss_cls: 0.4253, d4.loss_bbox: 0.7091, aux_task0.loss_heatmap: 0.5331, aux_task0.loss_bbox: 0.2098, aux_task1.loss_heatmap: 0.7223, aux_task1.loss_bbox: 0.2236, aux_task2.loss_heatmap: 0.4644, aux_task2.loss_bbox: 0.1567, aux_task3.loss_heatmap: 0.3552, aux_task3.loss_bbox: 0.1251, aux_task4.loss_heatmap: 0.5158, aux_task4.loss_bbox: 0.1505, aux_task5.loss_heatmap: 0.4940, aux_task5.loss_bbox: 0.2697, loss: 11.2790, grad_norm: 30.1639
2025-04-25 11:56:32,285 - mmdet - INFO - Epoch [16][250/773]	lr: 4.130e-05, eta: 1:02:01, time: 0.993, data_time: 0.005, memory: 5963, loss_cls: 0.4425, loss_bbox: 0.7033, d0.loss_cls: 0.4769, d0.loss_bbox: 0.8567, d1.loss_cls: 0.4598, d1.loss_bbox: 0.7583, d2.loss_cls: 0.4528, d2.loss_bbox: 0.7283, d3.loss_cls: 0.4415, d3.loss_bbox: 0.7189, d4.loss_cls: 0.4413, d4.loss_bbox: 0.7103, aux_task0.loss_heatmap: 0.5494, aux_task0.loss_bbox: 0.2127, aux_task1.loss_heatmap: 0.7463, aux_task1.loss_bbox: 0.2153, aux_task2.loss_heatmap: 0.4978, aux_task2.loss_bbox: 0.1590, aux_task3.loss_heatmap: 0.4485, aux_task3.loss_bbox: 0.1428, aux_task4.loss_heatmap: 0.4769, aux_task4.loss_bbox: 0.1341, aux_task5.loss_heatmap: 0.5153, aux_task5.loss_bbox: 0.2488, loss: 11.5372, grad_norm: 32.3093
2025-04-25 11:57:21,111 - mmdet - INFO - Epoch [16][300/773]	lr: 4.030e-05, eta: 1:01:09, time: 0.976, data_time: 0.005, memory: 5963, loss_cls: 0.4377, loss_bbox: 0.6985, d0.loss_cls: 0.4713, d0.loss_bbox: 0.8427, d1.loss_cls: 0.4551, d1.loss_bbox: 0.7442, d2.loss_cls: 0.4470, d2.loss_bbox: 0.7190, d3.loss_cls: 0.4420, d3.loss_bbox: 0.7104, d4.loss_cls: 0.4410, d4.loss_bbox: 0.7020, aux_task0.loss_heatmap: 0.5044, aux_task0.loss_bbox: 0.2082, aux_task1.loss_heatmap: 0.6797, aux_task1.loss_bbox: 0.2105, aux_task2.loss_heatmap: 0.4707, aux_task2.loss_bbox: 0.1718, aux_task3.loss_heatmap: 0.3966, aux_task3.loss_bbox: 0.1247, aux_task4.loss_heatmap: 0.4810, aux_task4.loss_bbox: 0.1390, aux_task5.loss_heatmap: 0.5114, aux_task5.loss_bbox: 0.2663, loss: 11.2752, grad_norm: 34.1677
2025-04-25 11:58:10,513 - mmdet - INFO - Epoch [16][350/773]	lr: 3.932e-05, eta: 1:00:17, time: 0.988, data_time: 0.005, memory: 5963, loss_cls: 0.4356, loss_bbox: 0.7018, d0.loss_cls: 0.4655, d0.loss_bbox: 0.8469, d1.loss_cls: 0.4482, d1.loss_bbox: 0.7501, d2.loss_cls: 0.4413, d2.loss_bbox: 0.7251, d3.loss_cls: 0.4340, d3.loss_bbox: 0.7150, d4.loss_cls: 0.4366, d4.loss_bbox: 0.7065, aux_task0.loss_heatmap: 0.4923, aux_task0.loss_bbox: 0.2037, aux_task1.loss_heatmap: 0.6893, aux_task1.loss_bbox: 0.2150, aux_task2.loss_heatmap: 0.3950, aux_task2.loss_bbox: 0.1363, aux_task3.loss_heatmap: 0.4388, aux_task3.loss_bbox: 0.1389, aux_task4.loss_heatmap: 0.4361, aux_task4.loss_bbox: 0.1265, aux_task5.loss_heatmap: 0.4862, aux_task5.loss_bbox: 0.2709, loss: 11.1357, grad_norm: 32.2899
2025-04-25 11:58:59,423 - mmdet - INFO - Epoch [16][400/773]	lr: 3.834e-05, eta: 0:59:25, time: 0.978, data_time: 0.005, memory: 5963, loss_cls: 0.4404, loss_bbox: 0.6897, d0.loss_cls: 0.4712, d0.loss_bbox: 0.8363, d1.loss_cls: 0.4507, d1.loss_bbox: 0.7414, d2.loss_cls: 0.4448, d2.loss_bbox: 0.7183, d3.loss_cls: 0.4407, d3.loss_bbox: 0.7058, d4.loss_cls: 0.4385, d4.loss_bbox: 0.6973, aux_task0.loss_heatmap: 0.5208, aux_task0.loss_bbox: 0.2148, aux_task1.loss_heatmap: 0.6980, aux_task1.loss_bbox: 0.2200, aux_task2.loss_heatmap: 0.4524, aux_task2.loss_bbox: 0.1721, aux_task3.loss_heatmap: 0.3759, aux_task3.loss_bbox: 0.1301, aux_task4.loss_heatmap: 0.5151, aux_task4.loss_bbox: 0.1403, aux_task5.loss_heatmap: 0.4937, aux_task5.loss_bbox: 0.2580, loss: 11.2661, grad_norm: 27.2440
2025-04-25 11:59:48,003 - mmdet - INFO - Epoch [16][450/773]	lr: 3.737e-05, eta: 0:58:33, time: 0.972, data_time: 0.005, memory: 5963, loss_cls: 0.4309, loss_bbox: 0.6872, d0.loss_cls: 0.4614, d0.loss_bbox: 0.8225, d1.loss_cls: 0.4444, d1.loss_bbox: 0.7309, d2.loss_cls: 0.4380, d2.loss_bbox: 0.7098, d3.loss_cls: 0.4332, d3.loss_bbox: 0.7012, d4.loss_cls: 0.4311, d4.loss_bbox: 0.6932, aux_task0.loss_heatmap: 0.4997, aux_task0.loss_bbox: 0.2050, aux_task1.loss_heatmap: 0.6794, aux_task1.loss_bbox: 0.2013, aux_task2.loss_heatmap: 0.5806, aux_task2.loss_bbox: 0.1942, aux_task3.loss_heatmap: 0.3801, aux_task3.loss_bbox: 0.1179, aux_task4.loss_heatmap: 0.4774, aux_task4.loss_bbox: 0.1261, aux_task5.loss_heatmap: 0.4650, aux_task5.loss_bbox: 0.2637, loss: 11.1742, grad_norm: 30.1165
2025-04-25 12:00:36,783 - mmdet - INFO - Epoch [16][500/773]	lr: 3.640e-05, eta: 0:57:40, time: 0.976, data_time: 0.005, memory: 5963, loss_cls: 0.4280, loss_bbox: 0.6965, d0.loss_cls: 0.4643, d0.loss_bbox: 0.8412, d1.loss_cls: 0.4415, d1.loss_bbox: 0.7460, d2.loss_cls: 0.4379, d2.loss_bbox: 0.7203, d3.loss_cls: 0.4312, d3.loss_bbox: 0.7103, d4.loss_cls: 0.4311, d4.loss_bbox: 0.7015, aux_task0.loss_heatmap: 0.5160, aux_task0.loss_bbox: 0.2144, aux_task1.loss_heatmap: 0.6977, aux_task1.loss_bbox: 0.2189, aux_task2.loss_heatmap: 0.4376, aux_task2.loss_bbox: 0.1509, aux_task3.loss_heatmap: 0.4002, aux_task3.loss_bbox: 0.1363, aux_task4.loss_heatmap: 0.3668, aux_task4.loss_bbox: 0.1045, aux_task5.loss_heatmap: 0.5049, aux_task5.loss_bbox: 0.2572, loss: 11.0548, grad_norm: 29.8900
2025-04-25 12:01:25,930 - mmdet - INFO - Epoch [16][550/773]	lr: 3.544e-05, eta: 0:56:48, time: 0.983, data_time: 0.005, memory: 5963, loss_cls: 0.4384, loss_bbox: 0.6953, d0.loss_cls: 0.4744, d0.loss_bbox: 0.8381, d1.loss_cls: 0.4559, d1.loss_bbox: 0.7436, d2.loss_cls: 0.4485, d2.loss_bbox: 0.7193, d3.loss_cls: 0.4391, d3.loss_bbox: 0.7086, d4.loss_cls: 0.4392, d4.loss_bbox: 0.6993, aux_task0.loss_heatmap: 0.5359, aux_task0.loss_bbox: 0.2085, aux_task1.loss_heatmap: 0.7323, aux_task1.loss_bbox: 0.2140, aux_task2.loss_heatmap: 0.4832, aux_task2.loss_bbox: 0.1776, aux_task3.loss_heatmap: 0.4156, aux_task3.loss_bbox: 0.1398, aux_task4.loss_heatmap: 0.5083, aux_task4.loss_bbox: 0.1393, aux_task5.loss_heatmap: 0.4924, aux_task5.loss_bbox: 0.2525, loss: 11.3992, grad_norm: 32.8657
2025-04-25 12:02:37,581 - mmdet - INFO - Epoch [16][600/773]	lr: 3.449e-05, eta: 0:56:02, time: 1.433, data_time: 0.005, memory: 5963, loss_cls: 0.4367, loss_bbox: 0.6758, d0.loss_cls: 0.4696, d0.loss_bbox: 0.8222, d1.loss_cls: 0.4537, d1.loss_bbox: 0.7211, d2.loss_cls: 0.4441, d2.loss_bbox: 0.7002, d3.loss_cls: 0.4368, d3.loss_bbox: 0.6884, d4.loss_cls: 0.4361, d4.loss_bbox: 0.6809, aux_task0.loss_heatmap: 0.4939, aux_task0.loss_bbox: 0.2019, aux_task1.loss_heatmap: 0.7443, aux_task1.loss_bbox: 0.2277, aux_task2.loss_heatmap: 0.4562, aux_task2.loss_bbox: 0.1646, aux_task3.loss_heatmap: 0.3826, aux_task3.loss_bbox: 0.1273, aux_task4.loss_heatmap: 0.3688, aux_task4.loss_bbox: 0.1013, aux_task5.loss_heatmap: 0.4815, aux_task5.loss_bbox: 0.2542, loss: 10.9698, grad_norm: 30.3828
2025-04-25 12:03:29,285 - mmdet - INFO - Epoch [16][650/773]	lr: 3.355e-05, eta: 0:55:11, time: 1.034, data_time: 0.005, memory: 5963, loss_cls: 0.4241, loss_bbox: 0.6907, d0.loss_cls: 0.4681, d0.loss_bbox: 0.8363, d1.loss_cls: 0.4436, d1.loss_bbox: 0.7374, d2.loss_cls: 0.4369, d2.loss_bbox: 0.7118, d3.loss_cls: 0.4296, d3.loss_bbox: 0.7013, d4.loss_cls: 0.4276, d4.loss_bbox: 0.6951, aux_task0.loss_heatmap: 0.5190, aux_task0.loss_bbox: 0.2080, aux_task1.loss_heatmap: 0.7304, aux_task1.loss_bbox: 0.2254, aux_task2.loss_heatmap: 0.4388, aux_task2.loss_bbox: 0.1570, aux_task3.loss_heatmap: 0.4088, aux_task3.loss_bbox: 0.1415, aux_task4.loss_heatmap: 0.4684, aux_task4.loss_bbox: 0.1377, aux_task5.loss_heatmap: 0.4820, aux_task5.loss_bbox: 0.2606, loss: 11.1798, grad_norm: 32.7498
2025-04-25 12:04:19,359 - mmdet - INFO - Epoch [16][700/773]	lr: 3.262e-05, eta: 0:54:19, time: 1.001, data_time: 0.005, memory: 5963, loss_cls: 0.4343, loss_bbox: 0.6843, d0.loss_cls: 0.4672, d0.loss_bbox: 0.8332, d1.loss_cls: 0.4473, d1.loss_bbox: 0.7375, d2.loss_cls: 0.4391, d2.loss_bbox: 0.7110, d3.loss_cls: 0.4335, d3.loss_bbox: 0.7012, d4.loss_cls: 0.4325, d4.loss_bbox: 0.6904, aux_task0.loss_heatmap: 0.5036, aux_task0.loss_bbox: 0.2009, aux_task1.loss_heatmap: 0.6871, aux_task1.loss_bbox: 0.2229, aux_task2.loss_heatmap: 0.4631, aux_task2.loss_bbox: 0.1684, aux_task3.loss_heatmap: 0.3715, aux_task3.loss_bbox: 0.1285, aux_task4.loss_heatmap: 0.4306, aux_task4.loss_bbox: 0.1216, aux_task5.loss_heatmap: 0.4742, aux_task5.loss_bbox: 0.2395, loss: 11.0234, grad_norm: 30.9820
2025-04-25 12:05:09,114 - mmdet - INFO - Epoch [16][750/773]	lr: 3.169e-05, eta: 0:53:27, time: 0.995, data_time: 0.005, memory: 5963, loss_cls: 0.4183, loss_bbox: 0.6925, d0.loss_cls: 0.4568, d0.loss_bbox: 0.8336, d1.loss_cls: 0.4331, d1.loss_bbox: 0.7343, d2.loss_cls: 0.4274, d2.loss_bbox: 0.7129, d3.loss_cls: 0.4197, d3.loss_bbox: 0.7038, d4.loss_cls: 0.4178, d4.loss_bbox: 0.6972, aux_task0.loss_heatmap: 0.5195, aux_task0.loss_bbox: 0.2089, aux_task1.loss_heatmap: 0.7163, aux_task1.loss_bbox: 0.2243, aux_task2.loss_heatmap: 0.3847, aux_task2.loss_bbox: 0.1472, aux_task3.loss_heatmap: 0.3656, aux_task3.loss_bbox: 0.1260, aux_task4.loss_heatmap: 0.4090, aux_task4.loss_bbox: 0.1158, aux_task5.loss_heatmap: 0.4733, aux_task5.loss_bbox: 0.2482, loss: 10.8865, grad_norm: 30.2031
2025-04-25 12:05:32,882 - mmdet - INFO - Saving checkpoint at 16 epochs
2025-04-25 12:05:34,682 - mmdet - INFO - No ObjectSample now!
2025-04-25 12:06:29,785 - mmdet - INFO - Epoch [17][50/773]	lr: 3.036e-05, eta: 0:52:07, time: 1.102, data_time: 0.065, memory: 5963, loss_cls: 0.4088, loss_bbox: 0.6824, d0.loss_cls: 0.4455, d0.loss_bbox: 0.8289, d1.loss_cls: 0.4264, d1.loss_bbox: 0.7313, d2.loss_cls: 0.4178, d2.loss_bbox: 0.7094, d3.loss_cls: 0.4103, d3.loss_bbox: 0.6960, d4.loss_cls: 0.4091, d4.loss_bbox: 0.6890, aux_task0.loss_heatmap: 0.4932, aux_task0.loss_bbox: 0.2045, aux_task1.loss_heatmap: 0.6688, aux_task1.loss_bbox: 0.2205, aux_task2.loss_heatmap: 0.3995, aux_task2.loss_bbox: 0.1521, aux_task3.loss_heatmap: 0.3666, aux_task3.loss_bbox: 0.1311, aux_task4.loss_heatmap: 0.4571, aux_task4.loss_bbox: 0.1277, aux_task5.loss_heatmap: 0.4862, aux_task5.loss_bbox: 0.2576, loss: 10.8197, grad_norm: 29.9154
2025-04-25 12:07:18,978 - mmdet - INFO - Epoch [17][100/773]	lr: 2.945e-05, eta: 0:51:15, time: 0.984, data_time: 0.005, memory: 5963, loss_cls: 0.3971, loss_bbox: 0.6629, d0.loss_cls: 0.4377, d0.loss_bbox: 0.8012, d1.loss_cls: 0.4140, d1.loss_bbox: 0.7076, d2.loss_cls: 0.4078, d2.loss_bbox: 0.6849, d3.loss_cls: 0.4007, d3.loss_bbox: 0.6756, d4.loss_cls: 0.3976, d4.loss_bbox: 0.6676, aux_task0.loss_heatmap: 0.4978, aux_task0.loss_bbox: 0.1972, aux_task1.loss_heatmap: 0.6264, aux_task1.loss_bbox: 0.2088, aux_task2.loss_heatmap: 0.4265, aux_task2.loss_bbox: 0.1550, aux_task3.loss_heatmap: 0.3703, aux_task3.loss_bbox: 0.1330, aux_task4.loss_heatmap: 0.4254, aux_task4.loss_bbox: 0.1163, aux_task5.loss_heatmap: 0.4838, aux_task5.loss_bbox: 0.2675, loss: 10.5627, grad_norm: 31.5514
2025-04-25 12:08:07,814 - mmdet - INFO - Epoch [17][150/773]	lr: 2.856e-05, eta: 0:50:23, time: 0.977, data_time: 0.004, memory: 5963, loss_cls: 0.4085, loss_bbox: 0.6678, d0.loss_cls: 0.4436, d0.loss_bbox: 0.8203, d1.loss_cls: 0.4251, d1.loss_bbox: 0.7219, d2.loss_cls: 0.4208, d2.loss_bbox: 0.6970, d3.loss_cls: 0.4108, d3.loss_bbox: 0.6864, d4.loss_cls: 0.4103, d4.loss_bbox: 0.6748, aux_task0.loss_heatmap: 0.5281, aux_task0.loss_bbox: 0.2091, aux_task1.loss_heatmap: 0.6514, aux_task1.loss_bbox: 0.2212, aux_task2.loss_heatmap: 0.3798, aux_task2.loss_bbox: 0.1604, aux_task3.loss_heatmap: 0.3751, aux_task3.loss_bbox: 0.1421, aux_task4.loss_heatmap: 0.3887, aux_task4.loss_bbox: 0.1175, aux_task5.loss_heatmap: 0.4376, aux_task5.loss_bbox: 0.2534, loss: 10.6517, grad_norm: 29.6227
2025-04-25 12:08:56,599 - mmdet - INFO - Epoch [17][200/773]	lr: 2.768e-05, eta: 0:49:31, time: 0.976, data_time: 0.004, memory: 5963, loss_cls: 0.4008, loss_bbox: 0.6595, d0.loss_cls: 0.4449, d0.loss_bbox: 0.8057, d1.loss_cls: 0.4210, d1.loss_bbox: 0.7074, d2.loss_cls: 0.4154, d2.loss_bbox: 0.6837, d3.loss_cls: 0.4062, d3.loss_bbox: 0.6710, d4.loss_cls: 0.4047, d4.loss_bbox: 0.6633, aux_task0.loss_heatmap: 0.4520, aux_task0.loss_bbox: 0.1974, aux_task1.loss_heatmap: 0.6385, aux_task1.loss_bbox: 0.2079, aux_task2.loss_heatmap: 0.3927, aux_task2.loss_bbox: 0.1528, aux_task3.loss_heatmap: 0.2711, aux_task3.loss_bbox: 0.1102, aux_task4.loss_heatmap: 0.4000, aux_task4.loss_bbox: 0.1163, aux_task5.loss_heatmap: 0.4838, aux_task5.loss_bbox: 0.2504, loss: 10.3565, grad_norm: 31.3297
2025-04-25 12:09:46,207 - mmdet - INFO - Epoch [17][250/773]	lr: 2.680e-05, eta: 0:48:39, time: 0.992, data_time: 0.004, memory: 5963, loss_cls: 0.3980, loss_bbox: 0.6684, d0.loss_cls: 0.4319, d0.loss_bbox: 0.8112, d1.loss_cls: 0.4145, d1.loss_bbox: 0.7134, d2.loss_cls: 0.4066, d2.loss_bbox: 0.6939, d3.loss_cls: 0.4006, d3.loss_bbox: 0.6837, d4.loss_cls: 0.3985, d4.loss_bbox: 0.6753, aux_task0.loss_heatmap: 0.4892, aux_task0.loss_bbox: 0.2034, aux_task1.loss_heatmap: 0.6852, aux_task1.loss_bbox: 0.2173, aux_task2.loss_heatmap: 0.4571, aux_task2.loss_bbox: 0.1652, aux_task3.loss_heatmap: 0.3723, aux_task3.loss_bbox: 0.1232, aux_task4.loss_heatmap: 0.4295, aux_task4.loss_bbox: 0.1258, aux_task5.loss_heatmap: 0.4413, aux_task5.loss_bbox: 0.2606, loss: 10.6661, grad_norm: 29.0616
2025-04-25 12:10:35,575 - mmdet - INFO - Epoch [17][300/773]	lr: 2.594e-05, eta: 0:47:48, time: 0.987, data_time: 0.004, memory: 5963, loss_cls: 0.3909, loss_bbox: 0.6712, d0.loss_cls: 0.4309, d0.loss_bbox: 0.8194, d1.loss_cls: 0.4091, d1.loss_bbox: 0.7237, d2.loss_cls: 0.4031, d2.loss_bbox: 0.6975, d3.loss_cls: 0.3945, d3.loss_bbox: 0.6859, d4.loss_cls: 0.3918, d4.loss_bbox: 0.6781, aux_task0.loss_heatmap: 0.4986, aux_task0.loss_bbox: 0.2038, aux_task1.loss_heatmap: 0.6450, aux_task1.loss_bbox: 0.2009, aux_task2.loss_heatmap: 0.4760, aux_task2.loss_bbox: 0.1778, aux_task3.loss_heatmap: 0.3745, aux_task3.loss_bbox: 0.1341, aux_task4.loss_heatmap: 0.4740, aux_task4.loss_bbox: 0.1412, aux_task5.loss_heatmap: 0.4528, aux_task5.loss_bbox: 0.2554, loss: 10.7303, grad_norm: 27.4472
2025-04-25 12:11:24,572 - mmdet - INFO - Epoch [17][350/773]	lr: 2.509e-05, eta: 0:46:56, time: 0.980, data_time: 0.004, memory: 5963, loss_cls: 0.4139, loss_bbox: 0.6720, d0.loss_cls: 0.4542, d0.loss_bbox: 0.8154, d1.loss_cls: 0.4350, d1.loss_bbox: 0.7173, d2.loss_cls: 0.4260, d2.loss_bbox: 0.6977, d3.loss_cls: 0.4157, d3.loss_bbox: 0.6848, d4.loss_cls: 0.4141, d4.loss_bbox: 0.6766, aux_task0.loss_heatmap: 0.4733, aux_task0.loss_bbox: 0.1959, aux_task1.loss_heatmap: 0.7663, aux_task1.loss_bbox: 0.2224, aux_task2.loss_heatmap: 0.4457, aux_task2.loss_bbox: 0.1532, aux_task3.loss_heatmap: 0.3807, aux_task3.loss_bbox: 0.1392, aux_task4.loss_heatmap: 0.4824, aux_task4.loss_bbox: 0.1332, aux_task5.loss_heatmap: 0.4637, aux_task5.loss_bbox: 0.2520, loss: 10.9307, grad_norm: 29.4734
2025-04-25 12:12:14,078 - mmdet - INFO - Epoch [17][400/773]	lr: 2.424e-05, eta: 0:46:04, time: 0.990, data_time: 0.005, memory: 5963, loss_cls: 0.3983, loss_bbox: 0.6846, d0.loss_cls: 0.4324, d0.loss_bbox: 0.8244, d1.loss_cls: 0.4145, d1.loss_bbox: 0.7296, d2.loss_cls: 0.4063, d2.loss_bbox: 0.7049, d3.loss_cls: 0.4002, d3.loss_bbox: 0.6959, d4.loss_cls: 0.3984, d4.loss_bbox: 0.6898, aux_task0.loss_heatmap: 0.5188, aux_task0.loss_bbox: 0.2025, aux_task1.loss_heatmap: 0.6912, aux_task1.loss_bbox: 0.2079, aux_task2.loss_heatmap: 0.4265, aux_task2.loss_bbox: 0.1681, aux_task3.loss_heatmap: 0.3387, aux_task3.loss_bbox: 0.1273, aux_task4.loss_heatmap: 0.4357, aux_task4.loss_bbox: 0.1191, aux_task5.loss_heatmap: 0.4431, aux_task5.loss_bbox: 0.2462, loss: 10.7045, grad_norm: 28.6510
2025-04-25 12:13:04,466 - mmdet - INFO - Epoch [17][450/773]	lr: 2.341e-05, eta: 0:45:12, time: 1.008, data_time: 0.005, memory: 5963, loss_cls: 0.4052, loss_bbox: 0.6603, d0.loss_cls: 0.4399, d0.loss_bbox: 0.8100, d1.loss_cls: 0.4225, d1.loss_bbox: 0.7063, d2.loss_cls: 0.4135, d2.loss_bbox: 0.6820, d3.loss_cls: 0.4065, d3.loss_bbox: 0.6717, d4.loss_cls: 0.4050, d4.loss_bbox: 0.6652, aux_task0.loss_heatmap: 0.4752, aux_task0.loss_bbox: 0.1988, aux_task1.loss_heatmap: 0.6226, aux_task1.loss_bbox: 0.1987, aux_task2.loss_heatmap: 0.4272, aux_task2.loss_bbox: 0.1598, aux_task3.loss_heatmap: 0.4005, aux_task3.loss_bbox: 0.1241, aux_task4.loss_heatmap: 0.4487, aux_task4.loss_bbox: 0.1391, aux_task5.loss_heatmap: 0.4933, aux_task5.loss_bbox: 0.2646, loss: 10.6406, grad_norm: 30.9181
2025-04-25 12:13:54,514 - mmdet - INFO - Epoch [17][500/773]	lr: 2.259e-05, eta: 0:44:21, time: 1.001, data_time: 0.005, memory: 5963, loss_cls: 0.4160, loss_bbox: 0.6767, d0.loss_cls: 0.4545, d0.loss_bbox: 0.8198, d1.loss_cls: 0.4322, d1.loss_bbox: 0.7249, d2.loss_cls: 0.4272, d2.loss_bbox: 0.6985, d3.loss_cls: 0.4171, d3.loss_bbox: 0.6893, d4.loss_cls: 0.4139, d4.loss_bbox: 0.6828, aux_task0.loss_heatmap: 0.4913, aux_task0.loss_bbox: 0.1949, aux_task1.loss_heatmap: 0.6389, aux_task1.loss_bbox: 0.2100, aux_task2.loss_heatmap: 0.4422, aux_task2.loss_bbox: 0.1523, aux_task3.loss_heatmap: 0.3675, aux_task3.loss_bbox: 0.1255, aux_task4.loss_heatmap: 0.4010, aux_task4.loss_bbox: 0.1220, aux_task5.loss_heatmap: 0.5107, aux_task5.loss_bbox: 0.2675, loss: 10.7768, grad_norm: 29.1433
2025-04-25 12:14:46,196 - mmdet - INFO - Epoch [17][550/773]	lr: 2.178e-05, eta: 0:43:29, time: 1.034, data_time: 0.005, memory: 5963, loss_cls: 0.4135, loss_bbox: 0.6686, d0.loss_cls: 0.4507, d0.loss_bbox: 0.8126, d1.loss_cls: 0.4330, d1.loss_bbox: 0.7130, d2.loss_cls: 0.4232, d2.loss_bbox: 0.6909, d3.loss_cls: 0.4139, d3.loss_bbox: 0.6806, d4.loss_cls: 0.4155, d4.loss_bbox: 0.6731, aux_task0.loss_heatmap: 0.4736, aux_task0.loss_bbox: 0.2023, aux_task1.loss_heatmap: 0.7251, aux_task1.loss_bbox: 0.2263, aux_task2.loss_heatmap: 0.4070, aux_task2.loss_bbox: 0.1549, aux_task3.loss_heatmap: 0.3293, aux_task3.loss_bbox: 0.1250, aux_task4.loss_heatmap: 0.3674, aux_task4.loss_bbox: 0.1080, aux_task5.loss_heatmap: 0.5156, aux_task5.loss_bbox: 0.2538, loss: 10.6769, grad_norm: 30.4694
2025-04-25 12:15:35,499 - mmdet - INFO - Epoch [17][600/773]	lr: 2.099e-05, eta: 0:42:38, time: 0.986, data_time: 0.005, memory: 5963, loss_cls: 0.4096, loss_bbox: 0.6767, d0.loss_cls: 0.4495, d0.loss_bbox: 0.8211, d1.loss_cls: 0.4292, d1.loss_bbox: 0.7258, d2.loss_cls: 0.4206, d2.loss_bbox: 0.7036, d3.loss_cls: 0.4107, d3.loss_bbox: 0.6944, d4.loss_cls: 0.4091, d4.loss_bbox: 0.6853, aux_task0.loss_heatmap: 0.4948, aux_task0.loss_bbox: 0.2022, aux_task1.loss_heatmap: 0.6342, aux_task1.loss_bbox: 0.2003, aux_task2.loss_heatmap: 0.3783, aux_task2.loss_bbox: 0.1666, aux_task3.loss_heatmap: 0.3812, aux_task3.loss_bbox: 0.1274, aux_task4.loss_heatmap: 0.4179, aux_task4.loss_bbox: 0.1274, aux_task5.loss_heatmap: 0.4725, aux_task5.loss_bbox: 0.2588, loss: 10.6972, grad_norm: 29.4309
2025-04-25 12:16:25,318 - mmdet - INFO - Epoch [17][650/773]	lr: 2.020e-05, eta: 0:41:46, time: 0.996, data_time: 0.005, memory: 5963, loss_cls: 0.3992, loss_bbox: 0.6539, d0.loss_cls: 0.4426, d0.loss_bbox: 0.8029, d1.loss_cls: 0.4201, d1.loss_bbox: 0.7080, d2.loss_cls: 0.4109, d2.loss_bbox: 0.6819, d3.loss_cls: 0.4011, d3.loss_bbox: 0.6724, d4.loss_cls: 0.3995, d4.loss_bbox: 0.6609, aux_task0.loss_heatmap: 0.4911, aux_task0.loss_bbox: 0.2000, aux_task1.loss_heatmap: 0.6838, aux_task1.loss_bbox: 0.2063, aux_task2.loss_heatmap: 0.3984, aux_task2.loss_bbox: 0.1423, aux_task3.loss_heatmap: 0.3701, aux_task3.loss_bbox: 0.1210, aux_task4.loss_heatmap: 0.3922, aux_task4.loss_bbox: 0.1194, aux_task5.loss_heatmap: 0.4692, aux_task5.loss_bbox: 0.2447, loss: 10.4918, grad_norm: 30.5993
2025-04-25 12:17:13,872 - mmdet - INFO - Epoch [17][700/773]	lr: 1.943e-05, eta: 0:40:54, time: 0.971, data_time: 0.004, memory: 5963, loss_cls: 0.4082, loss_bbox: 0.6708, d0.loss_cls: 0.4509, d0.loss_bbox: 0.8169, d1.loss_cls: 0.4279, d1.loss_bbox: 0.7225, d2.loss_cls: 0.4188, d2.loss_bbox: 0.6979, d3.loss_cls: 0.4093, d3.loss_bbox: 0.6863, d4.loss_cls: 0.4084, d4.loss_bbox: 0.6765, aux_task0.loss_heatmap: 0.4729, aux_task0.loss_bbox: 0.1996, aux_task1.loss_heatmap: 0.6886, aux_task1.loss_bbox: 0.2102, aux_task2.loss_heatmap: 0.4398, aux_task2.loss_bbox: 0.1637, aux_task3.loss_heatmap: 0.3893, aux_task3.loss_bbox: 0.1299, aux_task4.loss_heatmap: 0.4435, aux_task4.loss_bbox: 0.1230, aux_task5.loss_heatmap: 0.4652, aux_task5.loss_bbox: 0.2504, loss: 10.7704, grad_norm: 28.4954
2025-04-25 12:18:03,120 - mmdet - INFO - Epoch [17][750/773]	lr: 1.867e-05, eta: 0:40:03, time: 0.985, data_time: 0.004, memory: 5963, loss_cls: 0.4087, loss_bbox: 0.6821, d0.loss_cls: 0.4501, d0.loss_bbox: 0.8225, d1.loss_cls: 0.4238, d1.loss_bbox: 0.7307, d2.loss_cls: 0.4166, d2.loss_bbox: 0.7099, d3.loss_cls: 0.4099, d3.loss_bbox: 0.6980, d4.loss_cls: 0.4111, d4.loss_bbox: 0.6879, aux_task0.loss_heatmap: 0.5031, aux_task0.loss_bbox: 0.1989, aux_task1.loss_heatmap: 0.6236, aux_task1.loss_bbox: 0.1987, aux_task2.loss_heatmap: 0.4031, aux_task2.loss_bbox: 0.1492, aux_task3.loss_heatmap: 0.3990, aux_task3.loss_bbox: 0.1389, aux_task4.loss_heatmap: 0.4650, aux_task4.loss_bbox: 0.1526, aux_task5.loss_heatmap: 0.4634, aux_task5.loss_bbox: 0.2440, loss: 10.7909, grad_norm: 29.2191
2025-04-25 12:18:25,845 - mmdet - INFO - Saving checkpoint at 17 epochs
2025-04-25 12:18:27,807 - mmdet - INFO - No ObjectSample now!
2025-04-25 12:19:20,872 - mmdet - INFO - Epoch [18][50/773]	lr: 1.758e-05, eta: 0:38:44, time: 1.061, data_time: 0.064, memory: 5963, loss_cls: 0.4101, loss_bbox: 0.6705, d0.loss_cls: 0.4497, d0.loss_bbox: 0.8178, d1.loss_cls: 0.4286, d1.loss_bbox: 0.7230, d2.loss_cls: 0.4206, d2.loss_bbox: 0.6980, d3.loss_cls: 0.4118, d3.loss_bbox: 0.6863, d4.loss_cls: 0.4114, d4.loss_bbox: 0.6772, aux_task0.loss_heatmap: 0.4962, aux_task0.loss_bbox: 0.1967, aux_task1.loss_heatmap: 0.6845, aux_task1.loss_bbox: 0.2124, aux_task2.loss_heatmap: 0.4387, aux_task2.loss_bbox: 0.1584, aux_task3.loss_heatmap: 0.3973, aux_task3.loss_bbox: 0.1410, aux_task4.loss_heatmap: 0.4899, aux_task4.loss_bbox: 0.1445, aux_task5.loss_heatmap: 0.4608, aux_task5.loss_bbox: 0.2550, loss: 10.8803, grad_norm: 28.5015
2025-04-25 12:20:10,873 - mmdet - INFO - Epoch [18][100/773]	lr: 1.685e-05, eta: 0:37:53, time: 1.000, data_time: 0.005, memory: 5963, loss_cls: 0.3870, loss_bbox: 0.6495, d0.loss_cls: 0.4174, d0.loss_bbox: 0.7947, d1.loss_cls: 0.4002, d1.loss_bbox: 0.6991, d2.loss_cls: 0.3953, d2.loss_bbox: 0.6756, d3.loss_cls: 0.3869, d3.loss_bbox: 0.6644, d4.loss_cls: 0.3871, d4.loss_bbox: 0.6547, aux_task0.loss_heatmap: 0.4534, aux_task0.loss_bbox: 0.1964, aux_task1.loss_heatmap: 0.6297, aux_task1.loss_bbox: 0.2040, aux_task2.loss_heatmap: 0.4022, aux_task2.loss_bbox: 0.1436, aux_task3.loss_heatmap: 0.3198, aux_task3.loss_bbox: 0.1206, aux_task4.loss_heatmap: 0.4284, aux_task4.loss_bbox: 0.1388, aux_task5.loss_heatmap: 0.4355, aux_task5.loss_bbox: 0.2452, loss: 10.2296, grad_norm: 27.3236
2025-04-25 12:21:02,224 - mmdet - INFO - Epoch [18][150/773]	lr: 1.613e-05, eta: 0:37:01, time: 1.027, data_time: 0.005, memory: 5963, loss_cls: 0.3947, loss_bbox: 0.6677, d0.loss_cls: 0.4298, d0.loss_bbox: 0.8167, d1.loss_cls: 0.4133, d1.loss_bbox: 0.7181, d2.loss_cls: 0.4070, d2.loss_bbox: 0.6940, d3.loss_cls: 0.3966, d3.loss_bbox: 0.6830, d4.loss_cls: 0.3952, d4.loss_bbox: 0.6740, aux_task0.loss_heatmap: 0.4969, aux_task0.loss_bbox: 0.2027, aux_task1.loss_heatmap: 0.6561, aux_task1.loss_bbox: 0.2133, aux_task2.loss_heatmap: 0.4673, aux_task2.loss_bbox: 0.1712, aux_task3.loss_heatmap: 0.3801, aux_task3.loss_bbox: 0.1406, aux_task4.loss_heatmap: 0.3938, aux_task4.loss_bbox: 0.1188, aux_task5.loss_heatmap: 0.5022, aux_task5.loss_bbox: 0.2646, loss: 10.6980, grad_norm: 27.4944
2025-04-25 12:21:52,817 - mmdet - INFO - Epoch [18][200/773]	lr: 1.543e-05, eta: 0:36:10, time: 1.012, data_time: 0.005, memory: 5963, loss_cls: 0.3881, loss_bbox: 0.6615, d0.loss_cls: 0.4303, d0.loss_bbox: 0.8058, d1.loss_cls: 0.4092, d1.loss_bbox: 0.7105, d2.loss_cls: 0.3978, d2.loss_bbox: 0.6855, d3.loss_cls: 0.3901, d3.loss_bbox: 0.6765, d4.loss_cls: 0.3884, d4.loss_bbox: 0.6672, aux_task0.loss_heatmap: 0.4988, aux_task0.loss_bbox: 0.1990, aux_task1.loss_heatmap: 0.6658, aux_task1.loss_bbox: 0.1981, aux_task2.loss_heatmap: 0.4287, aux_task2.loss_bbox: 0.1708, aux_task3.loss_heatmap: 0.3525, aux_task3.loss_bbox: 0.1280, aux_task4.loss_heatmap: 0.4660, aux_task4.loss_bbox: 0.1291, aux_task5.loss_heatmap: 0.4680, aux_task5.loss_bbox: 0.2502, loss: 10.5660, grad_norm: 29.5313
2025-04-25 12:22:46,768 - mmdet - INFO - Epoch [18][250/773]	lr: 1.474e-05, eta: 0:35:19, time: 1.079, data_time: 0.004, memory: 5963, loss_cls: 0.3924, loss_bbox: 0.6683, d0.loss_cls: 0.4317, d0.loss_bbox: 0.8145, d1.loss_cls: 0.4088, d1.loss_bbox: 0.7202, d2.loss_cls: 0.4050, d2.loss_bbox: 0.6964, d3.loss_cls: 0.3950, d3.loss_bbox: 0.6844, d4.loss_cls: 0.3907, d4.loss_bbox: 0.6772, aux_task0.loss_heatmap: 0.5046, aux_task0.loss_bbox: 0.1973, aux_task1.loss_heatmap: 0.6947, aux_task1.loss_bbox: 0.2138, aux_task2.loss_heatmap: 0.4382, aux_task2.loss_bbox: 0.1741, aux_task3.loss_heatmap: 0.3402, aux_task3.loss_bbox: 0.1257, aux_task4.loss_heatmap: 0.3753, aux_task4.loss_bbox: 0.1134, aux_task5.loss_heatmap: 0.4557, aux_task5.loss_bbox: 0.2603, loss: 10.5776, grad_norm: 29.5045
2025-04-25 12:23:36,048 - mmdet - INFO - Epoch [18][300/773]	lr: 1.407e-05, eta: 0:34:28, time: 0.986, data_time: 0.004, memory: 5963, loss_cls: 0.3825, loss_bbox: 0.6675, d0.loss_cls: 0.4211, d0.loss_bbox: 0.8019, d1.loss_cls: 0.4022, d1.loss_bbox: 0.7129, d2.loss_cls: 0.3924, d2.loss_bbox: 0.6920, d3.loss_cls: 0.3851, d3.loss_bbox: 0.6798, d4.loss_cls: 0.3847, d4.loss_bbox: 0.6724, aux_task0.loss_heatmap: 0.4570, aux_task0.loss_bbox: 0.1960, aux_task1.loss_heatmap: 0.6705, aux_task1.loss_bbox: 0.2186, aux_task2.loss_heatmap: 0.3393, aux_task2.loss_bbox: 0.1385, aux_task3.loss_heatmap: 0.3410, aux_task3.loss_bbox: 0.1391, aux_task4.loss_heatmap: 0.3444, aux_task4.loss_bbox: 0.0986, aux_task5.loss_heatmap: 0.4668, aux_task5.loss_bbox: 0.2534, loss: 10.2578, grad_norm: 29.4623
2025-04-25 12:24:25,323 - mmdet - INFO - Epoch [18][350/773]	lr: 1.340e-05, eta: 0:33:36, time: 0.985, data_time: 0.004, memory: 5963, loss_cls: 0.3962, loss_bbox: 0.6442, d0.loss_cls: 0.4316, d0.loss_bbox: 0.7894, d1.loss_cls: 0.4097, d1.loss_bbox: 0.6941, d2.loss_cls: 0.4045, d2.loss_bbox: 0.6700, d3.loss_cls: 0.3983, d3.loss_bbox: 0.6592, d4.loss_cls: 0.3957, d4.loss_bbox: 0.6511, aux_task0.loss_heatmap: 0.4551, aux_task0.loss_bbox: 0.1957, aux_task1.loss_heatmap: 0.6354, aux_task1.loss_bbox: 0.1977, aux_task2.loss_heatmap: 0.3843, aux_task2.loss_bbox: 0.1421, aux_task3.loss_heatmap: 0.3117, aux_task3.loss_bbox: 0.0997, aux_task4.loss_heatmap: 0.4554, aux_task4.loss_bbox: 0.1359, aux_task5.loss_heatmap: 0.4732, aux_task5.loss_bbox: 0.2497, loss: 10.2798, grad_norm: 31.3660
2025-04-25 12:25:14,206 - mmdet - INFO - Epoch [18][400/773]	lr: 1.276e-05, eta: 0:32:45, time: 0.978, data_time: 0.004, memory: 5963, loss_cls: 0.3910, loss_bbox: 0.6679, d0.loss_cls: 0.4275, d0.loss_bbox: 0.8147, d1.loss_cls: 0.4056, d1.loss_bbox: 0.7188, d2.loss_cls: 0.3995, d2.loss_bbox: 0.6948, d3.loss_cls: 0.3922, d3.loss_bbox: 0.6851, d4.loss_cls: 0.3923, d4.loss_bbox: 0.6748, aux_task0.loss_heatmap: 0.4882, aux_task0.loss_bbox: 0.2040, aux_task1.loss_heatmap: 0.6720, aux_task1.loss_bbox: 0.2124, aux_task2.loss_heatmap: 0.3790, aux_task2.loss_bbox: 0.1501, aux_task3.loss_heatmap: 0.3833, aux_task3.loss_bbox: 0.1540, aux_task4.loss_heatmap: 0.3924, aux_task4.loss_bbox: 0.1004, aux_task5.loss_heatmap: 0.4523, aux_task5.loss_bbox: 0.2551, loss: 10.5076, grad_norm: 28.6181
2025-04-25 12:26:03,162 - mmdet - INFO - Epoch [18][450/773]	lr: 1.212e-05, eta: 0:31:53, time: 0.979, data_time: 0.004, memory: 5963, loss_cls: 0.3865, loss_bbox: 0.6428, d0.loss_cls: 0.4262, d0.loss_bbox: 0.7866, d1.loss_cls: 0.4057, d1.loss_bbox: 0.6902, d2.loss_cls: 0.3985, d2.loss_bbox: 0.6683, d3.loss_cls: 0.3869, d3.loss_bbox: 0.6575, d4.loss_cls: 0.3880, d4.loss_bbox: 0.6462, aux_task0.loss_heatmap: 0.4947, aux_task0.loss_bbox: 0.1986, aux_task1.loss_heatmap: 0.6423, aux_task1.loss_bbox: 0.1989, aux_task2.loss_heatmap: 0.3587, aux_task2.loss_bbox: 0.1544, aux_task3.loss_heatmap: 0.3897, aux_task3.loss_bbox: 0.1306, aux_task4.loss_heatmap: 0.3854, aux_task4.loss_bbox: 0.1203, aux_task5.loss_heatmap: 0.5120, aux_task5.loss_bbox: 0.2580, loss: 10.3269, grad_norm: 30.3728
2025-04-25 12:26:56,405 - mmdet - INFO - Epoch [18][500/773]	lr: 1.150e-05, eta: 0:31:02, time: 1.065, data_time: 0.005, memory: 5963, loss_cls: 0.3995, loss_bbox: 0.6645, d0.loss_cls: 0.4341, d0.loss_bbox: 0.8031, d1.loss_cls: 0.4124, d1.loss_bbox: 0.7148, d2.loss_cls: 0.4081, d2.loss_bbox: 0.6923, d3.loss_cls: 0.4001, d3.loss_bbox: 0.6835, d4.loss_cls: 0.3986, d4.loss_bbox: 0.6741, aux_task0.loss_heatmap: 0.4673, aux_task0.loss_bbox: 0.1929, aux_task1.loss_heatmap: 0.6559, aux_task1.loss_bbox: 0.2035, aux_task2.loss_heatmap: 0.4200, aux_task2.loss_bbox: 0.1482, aux_task3.loss_heatmap: 0.3316, aux_task3.loss_bbox: 0.1242, aux_task4.loss_heatmap: 0.3223, aux_task4.loss_bbox: 0.1127, aux_task5.loss_heatmap: 0.4591, aux_task5.loss_bbox: 0.2583, loss: 10.3811, grad_norm: 27.6928
2025-04-25 12:27:45,562 - mmdet - INFO - Epoch [18][550/773]	lr: 1.090e-05, eta: 0:30:11, time: 0.983, data_time: 0.004, memory: 5963, loss_cls: 0.3763, loss_bbox: 0.6507, d0.loss_cls: 0.4150, d0.loss_bbox: 0.7926, d1.loss_cls: 0.3954, d1.loss_bbox: 0.6966, d2.loss_cls: 0.3875, d2.loss_bbox: 0.6763, d3.loss_cls: 0.3791, d3.loss_bbox: 0.6654, d4.loss_cls: 0.3772, d4.loss_bbox: 0.6559, aux_task0.loss_heatmap: 0.4430, aux_task0.loss_bbox: 0.1907, aux_task1.loss_heatmap: 0.6533, aux_task1.loss_bbox: 0.2002, aux_task2.loss_heatmap: 0.4228, aux_task2.loss_bbox: 0.1670, aux_task3.loss_heatmap: 0.4163, aux_task3.loss_bbox: 0.1436, aux_task4.loss_heatmap: 0.3794, aux_task4.loss_bbox: 0.1249, aux_task5.loss_heatmap: 0.4325, aux_task5.loss_bbox: 0.2432, loss: 10.2848, grad_norm: 26.9550
2025-04-25 12:28:35,489 - mmdet - INFO - Epoch [18][600/773]	lr: 1.031e-05, eta: 0:29:19, time: 0.999, data_time: 0.005, memory: 5963, loss_cls: 0.3883, loss_bbox: 0.6567, d0.loss_cls: 0.4323, d0.loss_bbox: 0.8014, d1.loss_cls: 0.4147, d1.loss_bbox: 0.7028, d2.loss_cls: 0.4033, d2.loss_bbox: 0.6805, d3.loss_cls: 0.3924, d3.loss_bbox: 0.6709, d4.loss_cls: 0.3923, d4.loss_bbox: 0.6606, aux_task0.loss_heatmap: 0.4774, aux_task0.loss_bbox: 0.2013, aux_task1.loss_heatmap: 0.6676, aux_task1.loss_bbox: 0.2132, aux_task2.loss_heatmap: 0.3752, aux_task2.loss_bbox: 0.1415, aux_task3.loss_heatmap: 0.3362, aux_task3.loss_bbox: 0.1158, aux_task4.loss_heatmap: 0.3962, aux_task4.loss_bbox: 0.1229, aux_task5.loss_heatmap: 0.4457, aux_task5.loss_bbox: 0.2522, loss: 10.3413, grad_norm: 28.8712
2025-04-25 12:29:24,738 - mmdet - INFO - Epoch [18][650/773]	lr: 9.734e-06, eta: 0:28:28, time: 0.985, data_time: 0.004, memory: 5963, loss_cls: 0.3811, loss_bbox: 0.6655, d0.loss_cls: 0.4189, d0.loss_bbox: 0.8118, d1.loss_cls: 0.3991, d1.loss_bbox: 0.7170, d2.loss_cls: 0.3925, d2.loss_bbox: 0.6927, d3.loss_cls: 0.3830, d3.loss_bbox: 0.6812, d4.loss_cls: 0.3817, d4.loss_bbox: 0.6704, aux_task0.loss_heatmap: 0.4776, aux_task0.loss_bbox: 0.1930, aux_task1.loss_heatmap: 0.5976, aux_task1.loss_bbox: 0.1978, aux_task2.loss_heatmap: 0.4056, aux_task2.loss_bbox: 0.1520, aux_task3.loss_heatmap: 0.3028, aux_task3.loss_bbox: 0.1118, aux_task4.loss_heatmap: 0.4267, aux_task4.loss_bbox: 0.1299, aux_task5.loss_heatmap: 0.4356, aux_task5.loss_bbox: 0.2467, loss: 10.2720, grad_norm: 27.4463
2025-04-25 12:30:14,260 - mmdet - INFO - Epoch [18][700/773]	lr: 9.175e-06, eta: 0:27:37, time: 0.990, data_time: 0.004, memory: 5963, loss_cls: 0.3744, loss_bbox: 0.6351, d0.loss_cls: 0.4094, d0.loss_bbox: 0.7885, d1.loss_cls: 0.3900, d1.loss_bbox: 0.6902, d2.loss_cls: 0.3809, d2.loss_bbox: 0.6676, d3.loss_cls: 0.3741, d3.loss_bbox: 0.6557, d4.loss_cls: 0.3728, d4.loss_bbox: 0.6448, aux_task0.loss_heatmap: 0.4430, aux_task0.loss_bbox: 0.1857, aux_task1.loss_heatmap: 0.5768, aux_task1.loss_bbox: 0.1953, aux_task2.loss_heatmap: 0.3618, aux_task2.loss_bbox: 0.1447, aux_task3.loss_heatmap: 0.3351, aux_task3.loss_bbox: 0.1245, aux_task4.loss_heatmap: 0.4376, aux_task4.loss_bbox: 0.1348, aux_task5.loss_heatmap: 0.4295, aux_task5.loss_bbox: 0.2468, loss: 9.9992, grad_norm: 28.9155
2025-04-25 12:31:04,089 - mmdet - INFO - Epoch [18][750/773]	lr: 8.630e-06, eta: 0:26:45, time: 0.997, data_time: 0.005, memory: 5963, loss_cls: 0.3889, loss_bbox: 0.6293, d0.loss_cls: 0.4274, d0.loss_bbox: 0.7750, d1.loss_cls: 0.4096, d1.loss_bbox: 0.6753, d2.loss_cls: 0.4026, d2.loss_bbox: 0.6539, d3.loss_cls: 0.3914, d3.loss_bbox: 0.6450, d4.loss_cls: 0.3887, d4.loss_bbox: 0.6364, aux_task0.loss_heatmap: 0.4620, aux_task0.loss_bbox: 0.1902, aux_task1.loss_heatmap: 0.6365, aux_task1.loss_bbox: 0.2096, aux_task2.loss_heatmap: 0.3176, aux_task2.loss_bbox: 0.1402, aux_task3.loss_heatmap: 0.3100, aux_task3.loss_bbox: 0.1094, aux_task4.loss_heatmap: 0.4265, aux_task4.loss_bbox: 0.1191, aux_task5.loss_heatmap: 0.4598, aux_task5.loss_bbox: 0.2540, loss: 10.0586, grad_norm: 28.6575
2025-04-25 12:31:27,489 - mmdet - INFO - Saving checkpoint at 18 epochs
2025-04-25 12:31:29,548 - mmdet - INFO - No ObjectSample now!
2025-04-25 12:32:22,714 - mmdet - INFO - Epoch [19][50/773]	lr: 7.863e-06, eta: 0:25:28, time: 1.063, data_time: 0.065, memory: 5963, loss_cls: 0.3621, loss_bbox: 0.6394, d0.loss_cls: 0.4030, d0.loss_bbox: 0.7837, d1.loss_cls: 0.3784, d1.loss_bbox: 0.6917, d2.loss_cls: 0.3730, d2.loss_bbox: 0.6683, d3.loss_cls: 0.3636, d3.loss_bbox: 0.6564, d4.loss_cls: 0.3635, d4.loss_bbox: 0.6463, aux_task0.loss_heatmap: 0.4628, aux_task0.loss_bbox: 0.1965, aux_task1.loss_heatmap: 0.6688, aux_task1.loss_bbox: 0.2001, aux_task2.loss_heatmap: 0.4160, aux_task2.loss_bbox: 0.1592, aux_task3.loss_heatmap: 0.2929, aux_task3.loss_bbox: 0.1127, aux_task4.loss_heatmap: 0.3934, aux_task4.loss_bbox: 0.1346, aux_task5.loss_heatmap: 0.4480, aux_task5.loss_bbox: 0.2556, loss: 10.0700, grad_norm: 26.9243
2025-04-25 12:33:11,336 - mmdet - INFO - Epoch [19][100/773]	lr: 7.357e-06, eta: 0:24:37, time: 0.972, data_time: 0.004, memory: 5963, loss_cls: 0.3747, loss_bbox: 0.6321, d0.loss_cls: 0.4151, d0.loss_bbox: 0.7826, d1.loss_cls: 0.3936, d1.loss_bbox: 0.6852, d2.loss_cls: 0.3847, d2.loss_bbox: 0.6630, d3.loss_cls: 0.3745, d3.loss_bbox: 0.6510, d4.loss_cls: 0.3742, d4.loss_bbox: 0.6400, aux_task0.loss_heatmap: 0.4510, aux_task0.loss_bbox: 0.1874, aux_task1.loss_heatmap: 0.6628, aux_task1.loss_bbox: 0.2117, aux_task2.loss_heatmap: 0.3749, aux_task2.loss_bbox: 0.1421, aux_task3.loss_heatmap: 0.3022, aux_task3.loss_bbox: 0.1152, aux_task4.loss_heatmap: 0.3944, aux_task4.loss_bbox: 0.1231, aux_task5.loss_heatmap: 0.4676, aux_task5.loss_bbox: 0.2458, loss: 10.0491, grad_norm: 27.5389
2025-04-25 12:34:00,690 - mmdet - INFO - Epoch [19][150/773]	lr: 6.867e-06, eta: 0:23:46, time: 0.987, data_time: 0.005, memory: 5963, loss_cls: 0.3893, loss_bbox: 0.6525, d0.loss_cls: 0.4235, d0.loss_bbox: 0.7999, d1.loss_cls: 0.4032, d1.loss_bbox: 0.7017, d2.loss_cls: 0.3977, d2.loss_bbox: 0.6786, d3.loss_cls: 0.3884, d3.loss_bbox: 0.6688, d4.loss_cls: 0.3896, d4.loss_bbox: 0.6580, aux_task0.loss_heatmap: 0.5098, aux_task0.loss_bbox: 0.2039, aux_task1.loss_heatmap: 0.6046, aux_task1.loss_bbox: 0.2049, aux_task2.loss_heatmap: 0.3913, aux_task2.loss_bbox: 0.1510, aux_task3.loss_heatmap: 0.3556, aux_task3.loss_bbox: 0.1362, aux_task4.loss_heatmap: 0.3691, aux_task4.loss_bbox: 0.1113, aux_task5.loss_heatmap: 0.4409, aux_task5.loss_bbox: 0.2501, loss: 10.2799, grad_norm: 27.6362
2025-04-25 12:34:50,739 - mmdet - INFO - Epoch [19][200/773]	lr: 6.393e-06, eta: 0:22:54, time: 1.001, data_time: 0.005, memory: 5963, loss_cls: 0.3866, loss_bbox: 0.6470, d0.loss_cls: 0.4304, d0.loss_bbox: 0.7911, d1.loss_cls: 0.4099, d1.loss_bbox: 0.6957, d2.loss_cls: 0.4009, d2.loss_bbox: 0.6742, d3.loss_cls: 0.3893, d3.loss_bbox: 0.6636, d4.loss_cls: 0.3885, d4.loss_bbox: 0.6522, aux_task0.loss_heatmap: 0.4592, aux_task0.loss_bbox: 0.1967, aux_task1.loss_heatmap: 0.6272, aux_task1.loss_bbox: 0.2003, aux_task2.loss_heatmap: 0.3946, aux_task2.loss_bbox: 0.1504, aux_task3.loss_heatmap: 0.3399, aux_task3.loss_bbox: 0.1192, aux_task4.loss_heatmap: 0.4812, aux_task4.loss_bbox: 0.1267, aux_task5.loss_heatmap: 0.4331, aux_task5.loss_bbox: 0.2566, loss: 10.3145, grad_norm: 27.2397
2025-04-25 12:35:41,070 - mmdet - INFO - Epoch [19][250/773]	lr: 5.935e-06, eta: 0:22:03, time: 1.007, data_time: 0.005, memory: 5963, loss_cls: 0.3809, loss_bbox: 0.6596, d0.loss_cls: 0.4156, d0.loss_bbox: 0.8011, d1.loss_cls: 0.3981, d1.loss_bbox: 0.7105, d2.loss_cls: 0.3896, d2.loss_bbox: 0.6897, d3.loss_cls: 0.3814, d3.loss_bbox: 0.6777, d4.loss_cls: 0.3825, d4.loss_bbox: 0.6666, aux_task0.loss_heatmap: 0.4778, aux_task0.loss_bbox: 0.1965, aux_task1.loss_heatmap: 0.6505, aux_task1.loss_bbox: 0.2082, aux_task2.loss_heatmap: 0.3799, aux_task2.loss_bbox: 0.1744, aux_task3.loss_heatmap: 0.4217, aux_task3.loss_bbox: 0.1547, aux_task4.loss_heatmap: 0.3566, aux_task4.loss_bbox: 0.1098, aux_task5.loss_heatmap: 0.4538, aux_task5.loss_bbox: 0.2582, loss: 10.3952, grad_norm: 26.9210
2025-04-25 12:36:29,985 - mmdet - INFO - Epoch [19][300/773]	lr: 5.493e-06, eta: 0:21:12, time: 0.978, data_time: 0.005, memory: 5963, loss_cls: 0.3654, loss_bbox: 0.6528, d0.loss_cls: 0.4094, d0.loss_bbox: 0.7909, d1.loss_cls: 0.3848, d1.loss_bbox: 0.6979, d2.loss_cls: 0.3789, d2.loss_bbox: 0.6750, d3.loss_cls: 0.3654, d3.loss_bbox: 0.6683, d4.loss_cls: 0.3646, d4.loss_bbox: 0.6585, aux_task0.loss_heatmap: 0.4719, aux_task0.loss_bbox: 0.1942, aux_task1.loss_heatmap: 0.6120, aux_task1.loss_bbox: 0.1982, aux_task2.loss_heatmap: 0.4081, aux_task2.loss_bbox: 0.1479, aux_task3.loss_heatmap: 0.3297, aux_task3.loss_bbox: 0.1243, aux_task4.loss_heatmap: 0.3735, aux_task4.loss_bbox: 0.1201, aux_task5.loss_heatmap: 0.4190, aux_task5.loss_bbox: 0.2540, loss: 10.0648, grad_norm: 27.4114
2025-04-25 12:37:20,086 - mmdet - INFO - Epoch [19][350/773]	lr: 5.067e-06, eta: 0:20:21, time: 1.002, data_time: 0.007, memory: 5963, loss_cls: 0.3670, loss_bbox: 0.6455, d0.loss_cls: 0.4121, d0.loss_bbox: 0.7815, d1.loss_cls: 0.3894, d1.loss_bbox: 0.6926, d2.loss_cls: 0.3826, d2.loss_bbox: 0.6702, d3.loss_cls: 0.3714, d3.loss_bbox: 0.6594, d4.loss_cls: 0.3682, d4.loss_bbox: 0.6507, aux_task0.loss_heatmap: 0.4770, aux_task0.loss_bbox: 0.1934, aux_task1.loss_heatmap: 0.5822, aux_task1.loss_bbox: 0.1896, aux_task2.loss_heatmap: 0.3857, aux_task2.loss_bbox: 0.1560, aux_task3.loss_heatmap: 0.3351, aux_task3.loss_bbox: 0.1410, aux_task4.loss_heatmap: 0.4280, aux_task4.loss_bbox: 0.1338, aux_task5.loss_heatmap: 0.4447, aux_task5.loss_bbox: 0.2578, loss: 10.1151, grad_norm: 28.6389
2025-04-25 12:38:10,455 - mmdet - INFO - Epoch [19][400/773]	lr: 4.658e-06, eta: 0:19:30, time: 1.007, data_time: 0.005, memory: 5963, loss_cls: 0.3722, loss_bbox: 0.6369, d0.loss_cls: 0.4148, d0.loss_bbox: 0.7802, d1.loss_cls: 0.3933, d1.loss_bbox: 0.6851, d2.loss_cls: 0.3845, d2.loss_bbox: 0.6639, d3.loss_cls: 0.3749, d3.loss_bbox: 0.6546, d4.loss_cls: 0.3746, d4.loss_bbox: 0.6431, aux_task0.loss_heatmap: 0.4411, aux_task0.loss_bbox: 0.1884, aux_task1.loss_heatmap: 0.5846, aux_task1.loss_bbox: 0.1942, aux_task2.loss_heatmap: 0.3595, aux_task2.loss_bbox: 0.1381, aux_task3.loss_heatmap: 0.3661, aux_task3.loss_bbox: 0.1345, aux_task4.loss_heatmap: 0.3908, aux_task4.loss_bbox: 0.1297, aux_task5.loss_heatmap: 0.4466, aux_task5.loss_bbox: 0.2531, loss: 10.0046, grad_norm: 27.6159
2025-04-25 12:39:01,345 - mmdet - INFO - Epoch [19][450/773]	lr: 4.265e-06, eta: 0:18:39, time: 1.018, data_time: 0.005, memory: 5963, loss_cls: 0.3822, loss_bbox: 0.6576, d0.loss_cls: 0.4241, d0.loss_bbox: 0.8028, d1.loss_cls: 0.4035, d1.loss_bbox: 0.7073, d2.loss_cls: 0.3951, d2.loss_bbox: 0.6835, d3.loss_cls: 0.3852, d3.loss_bbox: 0.6730, d4.loss_cls: 0.3829, d4.loss_bbox: 0.6642, aux_task0.loss_heatmap: 0.4589, aux_task0.loss_bbox: 0.1922, aux_task1.loss_heatmap: 0.6346, aux_task1.loss_bbox: 0.2043, aux_task2.loss_heatmap: 0.3927, aux_task2.loss_bbox: 0.1534, aux_task3.loss_heatmap: 0.3453, aux_task3.loss_bbox: 0.1302, aux_task4.loss_heatmap: 0.4055, aux_task4.loss_bbox: 0.1279, aux_task5.loss_heatmap: 0.4266, aux_task5.loss_bbox: 0.2242, loss: 10.2575, grad_norm: 27.4458
2025-04-25 12:39:50,730 - mmdet - INFO - Epoch [19][500/773]	lr: 3.890e-06, eta: 0:17:48, time: 0.988, data_time: 0.005, memory: 5963, loss_cls: 0.3803, loss_bbox: 0.6455, d0.loss_cls: 0.4228, d0.loss_bbox: 0.7919, d1.loss_cls: 0.3989, d1.loss_bbox: 0.6933, d2.loss_cls: 0.3903, d2.loss_bbox: 0.6720, d3.loss_cls: 0.3816, d3.loss_bbox: 0.6611, d4.loss_cls: 0.3807, d4.loss_bbox: 0.6515, aux_task0.loss_heatmap: 0.4703, aux_task0.loss_bbox: 0.1952, aux_task1.loss_heatmap: 0.6397, aux_task1.loss_bbox: 0.2099, aux_task2.loss_heatmap: 0.4283, aux_task2.loss_bbox: 0.1612, aux_task3.loss_heatmap: 0.3413, aux_task3.loss_bbox: 0.1233, aux_task4.loss_heatmap: 0.3922, aux_task4.loss_bbox: 0.1201, aux_task5.loss_heatmap: 0.4378, aux_task5.loss_bbox: 0.2472, loss: 10.2367, grad_norm: 27.9257
2025-04-25 12:40:40,242 - mmdet - INFO - Epoch [19][550/773]	lr: 3.531e-06, eta: 0:16:56, time: 0.990, data_time: 0.005, memory: 5963, loss_cls: 0.3828, loss_bbox: 0.6583, d0.loss_cls: 0.4225, d0.loss_bbox: 0.7997, d1.loss_cls: 0.4020, d1.loss_bbox: 0.7066, d2.loss_cls: 0.3937, d2.loss_bbox: 0.6858, d3.loss_cls: 0.3856, d3.loss_bbox: 0.6735, d4.loss_cls: 0.3833, d4.loss_bbox: 0.6656, aux_task0.loss_heatmap: 0.4814, aux_task0.loss_bbox: 0.1962, aux_task1.loss_heatmap: 0.6117, aux_task1.loss_bbox: 0.1994, aux_task2.loss_heatmap: 0.4422, aux_task2.loss_bbox: 0.1700, aux_task3.loss_heatmap: 0.2957, aux_task3.loss_bbox: 0.1123, aux_task4.loss_heatmap: 0.3515, aux_task4.loss_bbox: 0.1079, aux_task5.loss_heatmap: 0.4549, aux_task5.loss_bbox: 0.2580, loss: 10.2407, grad_norm: 27.9410
2025-04-25 12:41:29,959 - mmdet - INFO - Epoch [19][600/773]	lr: 3.188e-06, eta: 0:16:05, time: 0.994, data_time: 0.005, memory: 5963, loss_cls: 0.3762, loss_bbox: 0.6381, d0.loss_cls: 0.4164, d0.loss_bbox: 0.7817, d1.loss_cls: 0.3959, d1.loss_bbox: 0.6860, d2.loss_cls: 0.3874, d2.loss_bbox: 0.6638, d3.loss_cls: 0.3777, d3.loss_bbox: 0.6540, d4.loss_cls: 0.3773, d4.loss_bbox: 0.6440, aux_task0.loss_heatmap: 0.4751, aux_task0.loss_bbox: 0.1988, aux_task1.loss_heatmap: 0.6535, aux_task1.loss_bbox: 0.2074, aux_task2.loss_heatmap: 0.3762, aux_task2.loss_bbox: 0.1507, aux_task3.loss_heatmap: 0.3743, aux_task3.loss_bbox: 0.1443, aux_task4.loss_heatmap: 0.3736, aux_task4.loss_bbox: 0.1124, aux_task5.loss_heatmap: 0.4821, aux_task5.loss_bbox: 0.2617, loss: 10.2088, grad_norm: 26.6247
2025-04-25 12:42:19,081 - mmdet - INFO - Epoch [19][650/773]	lr: 2.863e-06, eta: 0:15:14, time: 0.982, data_time: 0.004, memory: 5963, loss_cls: 0.3919, loss_bbox: 0.6559, d0.loss_cls: 0.4390, d0.loss_bbox: 0.8076, d1.loss_cls: 0.4182, d1.loss_bbox: 0.7048, d2.loss_cls: 0.4050, d2.loss_bbox: 0.6824, d3.loss_cls: 0.3952, d3.loss_bbox: 0.6711, d4.loss_cls: 0.3935, d4.loss_bbox: 0.6621, aux_task0.loss_heatmap: 0.4431, aux_task0.loss_bbox: 0.1879, aux_task1.loss_heatmap: 0.6155, aux_task1.loss_bbox: 0.2025, aux_task2.loss_heatmap: 0.4143, aux_task2.loss_bbox: 0.1587, aux_task3.loss_heatmap: 0.3809, aux_task3.loss_bbox: 0.1253, aux_task4.loss_heatmap: 0.3897, aux_task4.loss_bbox: 0.1116, aux_task5.loss_heatmap: 0.4737, aux_task5.loss_bbox: 0.2516, loss: 10.3815, grad_norm: 26.9579
2025-04-25 12:43:07,669 - mmdet - INFO - Epoch [19][700/773]	lr: 2.555e-06, eta: 0:14:23, time: 0.972, data_time: 0.005, memory: 5963, loss_cls: 0.3880, loss_bbox: 0.6511, d0.loss_cls: 0.4283, d0.loss_bbox: 0.7921, d1.loss_cls: 0.4107, d1.loss_bbox: 0.6957, d2.loss_cls: 0.3990, d2.loss_bbox: 0.6781, d3.loss_cls: 0.3923, d3.loss_bbox: 0.6678, d4.loss_cls: 0.3887, d4.loss_bbox: 0.6580, aux_task0.loss_heatmap: 0.4638, aux_task0.loss_bbox: 0.1929, aux_task1.loss_heatmap: 0.5993, aux_task1.loss_bbox: 0.1948, aux_task2.loss_heatmap: 0.3164, aux_task2.loss_bbox: 0.1265, aux_task3.loss_heatmap: 0.3069, aux_task3.loss_bbox: 0.1047, aux_task4.loss_heatmap: 0.4249, aux_task4.loss_bbox: 0.1382, aux_task5.loss_heatmap: 0.4364, aux_task5.loss_bbox: 0.2491, loss: 10.1039, grad_norm: 28.5528
2025-04-25 12:43:56,998 - mmdet - INFO - Epoch [19][750/773]	lr: 2.264e-06, eta: 0:13:32, time: 0.987, data_time: 0.005, memory: 5963, loss_cls: 0.3897, loss_bbox: 0.6654, d0.loss_cls: 0.4323, d0.loss_bbox: 0.8059, d1.loss_cls: 0.4101, d1.loss_bbox: 0.7141, d2.loss_cls: 0.4019, d2.loss_bbox: 0.6939, d3.loss_cls: 0.3919, d3.loss_bbox: 0.6816, d4.loss_cls: 0.3912, d4.loss_bbox: 0.6710, aux_task0.loss_heatmap: 0.4936, aux_task0.loss_bbox: 0.2003, aux_task1.loss_heatmap: 0.6708, aux_task1.loss_bbox: 0.2039, aux_task2.loss_heatmap: 0.4393, aux_task2.loss_bbox: 0.1795, aux_task3.loss_heatmap: 0.3497, aux_task3.loss_bbox: 0.1327, aux_task4.loss_heatmap: 0.4871, aux_task4.loss_bbox: 0.1399, aux_task5.loss_heatmap: 0.4540, aux_task5.loss_bbox: 0.2448, loss: 10.6445, grad_norm: 28.1817
2025-04-25 12:44:20,046 - mmdet - INFO - Saving checkpoint at 19 epochs
2025-04-25 12:44:22,053 - mmdet - INFO - No ObjectSample now!
2025-04-25 12:45:14,473 - mmdet - INFO - Epoch [20][50/773]	lr: 1.871e-06, eta: 0:12:16, time: 1.048, data_time: 0.062, memory: 5963, loss_cls: 0.3790, loss_bbox: 0.6483, d0.loss_cls: 0.4181, d0.loss_bbox: 0.7936, d1.loss_cls: 0.3947, d1.loss_bbox: 0.7007, d2.loss_cls: 0.3885, d2.loss_bbox: 0.6767, d3.loss_cls: 0.3798, d3.loss_bbox: 0.6652, d4.loss_cls: 0.3797, d4.loss_bbox: 0.6536, aux_task0.loss_heatmap: 0.4738, aux_task0.loss_bbox: 0.2029, aux_task1.loss_heatmap: 0.6154, aux_task1.loss_bbox: 0.1950, aux_task2.loss_heatmap: 0.3814, aux_task2.loss_bbox: 0.1599, aux_task3.loss_heatmap: 0.3229, aux_task3.loss_bbox: 0.1240, aux_task4.loss_heatmap: 0.4283, aux_task4.loss_bbox: 0.1368, aux_task5.loss_heatmap: 0.4314, aux_task5.loss_bbox: 0.2433, loss: 10.1929, grad_norm: 28.2663
2025-04-25 12:46:03,702 - mmdet - INFO - Epoch [20][100/773]	lr: 1.623e-06, eta: 0:11:25, time: 0.985, data_time: 0.005, memory: 5963, loss_cls: 0.3817, loss_bbox: 0.6346, d0.loss_cls: 0.4231, d0.loss_bbox: 0.7676, d1.loss_cls: 0.4040, d1.loss_bbox: 0.6766, d2.loss_cls: 0.3940, d2.loss_bbox: 0.6574, d3.loss_cls: 0.3832, d3.loss_bbox: 0.6482, d4.loss_cls: 0.3817, d4.loss_bbox: 0.6399, aux_task0.loss_heatmap: 0.4393, aux_task0.loss_bbox: 0.1825, aux_task1.loss_heatmap: 0.6433, aux_task1.loss_bbox: 0.2027, aux_task2.loss_heatmap: 0.3191, aux_task2.loss_bbox: 0.1421, aux_task3.loss_heatmap: 0.3411, aux_task3.loss_bbox: 0.1179, aux_task4.loss_heatmap: 0.4067, aux_task4.loss_bbox: 0.1183, aux_task5.loss_heatmap: 0.4643, aux_task5.loss_bbox: 0.2553, loss: 10.0245, grad_norm: 28.2178
2025-04-25 12:46:52,915 - mmdet - INFO - Epoch [20][150/773]	lr: 1.392e-06, eta: 0:10:34, time: 0.984, data_time: 0.005, memory: 5963, loss_cls: 0.3926, loss_bbox: 0.6622, d0.loss_cls: 0.4336, d0.loss_bbox: 0.8040, d1.loss_cls: 0.4111, d1.loss_bbox: 0.7113, d2.loss_cls: 0.4053, d2.loss_bbox: 0.6866, d3.loss_cls: 0.3953, d3.loss_bbox: 0.6770, d4.loss_cls: 0.3946, d4.loss_bbox: 0.6674, aux_task0.loss_heatmap: 0.5073, aux_task0.loss_bbox: 0.2038, aux_task1.loss_heatmap: 0.6456, aux_task1.loss_bbox: 0.2092, aux_task2.loss_heatmap: 0.3943, aux_task2.loss_bbox: 0.1483, aux_task3.loss_heatmap: 0.3444, aux_task3.loss_bbox: 0.1205, aux_task4.loss_heatmap: 0.3785, aux_task4.loss_bbox: 0.1270, aux_task5.loss_heatmap: 0.4379, aux_task5.loss_bbox: 0.2481, loss: 10.4060, grad_norm: 27.5581
2025-04-25 12:47:42,853 - mmdet - INFO - Epoch [20][200/773]	lr: 1.179e-06, eta: 0:09:43, time: 0.999, data_time: 0.005, memory: 5963, loss_cls: 0.3769, loss_bbox: 0.6463, d0.loss_cls: 0.4179, d0.loss_bbox: 0.7902, d1.loss_cls: 0.3974, d1.loss_bbox: 0.6926, d2.loss_cls: 0.3889, d2.loss_bbox: 0.6694, d3.loss_cls: 0.3785, d3.loss_bbox: 0.6610, d4.loss_cls: 0.3773, d4.loss_bbox: 0.6527, aux_task0.loss_heatmap: 0.4756, aux_task0.loss_bbox: 0.1926, aux_task1.loss_heatmap: 0.6131, aux_task1.loss_bbox: 0.1983, aux_task2.loss_heatmap: 0.3874, aux_task2.loss_bbox: 0.1500, aux_task3.loss_heatmap: 0.2980, aux_task3.loss_bbox: 0.1103, aux_task4.loss_heatmap: 0.4275, aux_task4.loss_bbox: 0.1345, aux_task5.loss_heatmap: 0.4726, aux_task5.loss_bbox: 0.2595, loss: 10.1687, grad_norm: 27.7905
2025-04-25 12:48:33,169 - mmdet - INFO - Epoch [20][250/773]	lr: 9.829e-07, eta: 0:08:52, time: 1.006, data_time: 0.005, memory: 5963, loss_cls: 0.3883, loss_bbox: 0.6449, d0.loss_cls: 0.4279, d0.loss_bbox: 0.7928, d1.loss_cls: 0.4075, d1.loss_bbox: 0.6963, d2.loss_cls: 0.4005, d2.loss_bbox: 0.6725, d3.loss_cls: 0.3922, d3.loss_bbox: 0.6604, d4.loss_cls: 0.3901, d4.loss_bbox: 0.6497, aux_task0.loss_heatmap: 0.4566, aux_task0.loss_bbox: 0.1885, aux_task1.loss_heatmap: 0.6552, aux_task1.loss_bbox: 0.2128, aux_task2.loss_heatmap: 0.3315, aux_task2.loss_bbox: 0.1297, aux_task3.loss_heatmap: 0.3770, aux_task3.loss_bbox: 0.1336, aux_task4.loss_heatmap: 0.3698, aux_task4.loss_bbox: 0.1181, aux_task5.loss_heatmap: 0.4608, aux_task5.loss_bbox: 0.2536, loss: 10.2104, grad_norm: 28.6026
2025-04-25 12:49:23,378 - mmdet - INFO - Epoch [20][300/773]	lr: 8.049e-07, eta: 0:08:01, time: 1.004, data_time: 0.005, memory: 5963, loss_cls: 0.3753, loss_bbox: 0.6532, d0.loss_cls: 0.4161, d0.loss_bbox: 0.7976, d1.loss_cls: 0.3926, d1.loss_bbox: 0.7072, d2.loss_cls: 0.3860, d2.loss_bbox: 0.6836, d3.loss_cls: 0.3776, d3.loss_bbox: 0.6723, d4.loss_cls: 0.3755, d4.loss_bbox: 0.6629, aux_task0.loss_heatmap: 0.4903, aux_task0.loss_bbox: 0.2001, aux_task1.loss_heatmap: 0.5623, aux_task1.loss_bbox: 0.1921, aux_task2.loss_heatmap: 0.4092, aux_task2.loss_bbox: 0.1595, aux_task3.loss_heatmap: 0.3140, aux_task3.loss_bbox: 0.1190, aux_task4.loss_heatmap: 0.3953, aux_task4.loss_bbox: 0.1268, aux_task5.loss_heatmap: 0.4657, aux_task5.loss_bbox: 0.2543, loss: 10.1886, grad_norm: 27.7614
2025-04-25 12:50:12,485 - mmdet - INFO - Epoch [20][350/773]	lr: 6.445e-07, eta: 0:07:10, time: 0.982, data_time: 0.005, memory: 5963, loss_cls: 0.3635, loss_bbox: 0.6435, d0.loss_cls: 0.4060, d0.loss_bbox: 0.7935, d1.loss_cls: 0.3825, d1.loss_bbox: 0.6974, d2.loss_cls: 0.3746, d2.loss_bbox: 0.6729, d3.loss_cls: 0.3653, d3.loss_bbox: 0.6627, d4.loss_cls: 0.3645, d4.loss_bbox: 0.6523, aux_task0.loss_heatmap: 0.4523, aux_task0.loss_bbox: 0.1911, aux_task1.loss_heatmap: 0.6272, aux_task1.loss_bbox: 0.1940, aux_task2.loss_heatmap: 0.3947, aux_task2.loss_bbox: 0.1712, aux_task3.loss_heatmap: 0.3368, aux_task3.loss_bbox: 0.1377, aux_task4.loss_heatmap: 0.3390, aux_task4.loss_bbox: 0.1093, aux_task5.loss_heatmap: 0.4413, aux_task5.loss_bbox: 0.2502, loss: 10.0235, grad_norm: 26.2868
2025-04-25 12:51:01,626 - mmdet - INFO - Epoch [20][400/773]	lr: 5.020e-07, eta: 0:06:19, time: 0.983, data_time: 0.005, memory: 5963, loss_cls: 0.3750, loss_bbox: 0.6479, d0.loss_cls: 0.4151, d0.loss_bbox: 0.7937, d1.loss_cls: 0.3954, d1.loss_bbox: 0.7012, d2.loss_cls: 0.3875, d2.loss_bbox: 0.6771, d3.loss_cls: 0.3790, d3.loss_bbox: 0.6651, d4.loss_cls: 0.3766, d4.loss_bbox: 0.6547, aux_task0.loss_heatmap: 0.4715, aux_task0.loss_bbox: 0.1952, aux_task1.loss_heatmap: 0.6329, aux_task1.loss_bbox: 0.2077, aux_task2.loss_heatmap: 0.4142, aux_task2.loss_bbox: 0.1587, aux_task3.loss_heatmap: 0.3343, aux_task3.loss_bbox: 0.1170, aux_task4.loss_heatmap: 0.3729, aux_task4.loss_bbox: 0.1253, aux_task5.loss_heatmap: 0.4211, aux_task5.loss_bbox: 0.2523, loss: 10.1713, grad_norm: 26.3524
2025-04-25 12:51:51,016 - mmdet - INFO - Epoch [20][450/773]	lr: 3.772e-07, eta: 0:05:28, time: 0.988, data_time: 0.005, memory: 5963, loss_cls: 0.3788, loss_bbox: 0.6457, d0.loss_cls: 0.4195, d0.loss_bbox: 0.7942, d1.loss_cls: 0.3987, d1.loss_bbox: 0.6947, d2.loss_cls: 0.3915, d2.loss_bbox: 0.6741, d3.loss_cls: 0.3813, d3.loss_bbox: 0.6616, d4.loss_cls: 0.3792, d4.loss_bbox: 0.6536, aux_task0.loss_heatmap: 0.4543, aux_task0.loss_bbox: 0.1898, aux_task1.loss_heatmap: 0.6471, aux_task1.loss_bbox: 0.2051, aux_task2.loss_heatmap: 0.3646, aux_task2.loss_bbox: 0.1411, aux_task3.loss_heatmap: 0.3681, aux_task3.loss_bbox: 0.1264, aux_task4.loss_heatmap: 0.3501, aux_task4.loss_bbox: 0.1156, aux_task5.loss_heatmap: 0.4608, aux_task5.loss_bbox: 0.2452, loss: 10.1412, grad_norm: 27.5858
2025-04-25 12:52:39,880 - mmdet - INFO - Epoch [20][500/773]	lr: 2.702e-07, eta: 0:04:37, time: 0.977, data_time: 0.005, memory: 5963, loss_cls: 0.3775, loss_bbox: 0.6536, d0.loss_cls: 0.4117, d0.loss_bbox: 0.7926, d1.loss_cls: 0.3944, d1.loss_bbox: 0.6997, d2.loss_cls: 0.3877, d2.loss_bbox: 0.6791, d3.loss_cls: 0.3778, d3.loss_bbox: 0.6701, d4.loss_cls: 0.3759, d4.loss_bbox: 0.6618, aux_task0.loss_heatmap: 0.4637, aux_task0.loss_bbox: 0.1945, aux_task1.loss_heatmap: 0.6305, aux_task1.loss_bbox: 0.2029, aux_task2.loss_heatmap: 0.4124, aux_task2.loss_bbox: 0.1583, aux_task3.loss_heatmap: 0.3432, aux_task3.loss_bbox: 0.1411, aux_task4.loss_heatmap: 0.3871, aux_task4.loss_bbox: 0.1166, aux_task5.loss_heatmap: 0.4566, aux_task5.loss_bbox: 0.2620, loss: 10.2510, grad_norm: 27.7446
2025-04-25 12:53:33,403 - mmdet - INFO - Epoch [20][550/773]	lr: 1.810e-07, eta: 0:03:47, time: 1.070, data_time: 0.005, memory: 5963, loss_cls: 0.3784, loss_bbox: 0.6507, d0.loss_cls: 0.4233, d0.loss_bbox: 0.7961, d1.loss_cls: 0.4034, d1.loss_bbox: 0.7005, d2.loss_cls: 0.3956, d2.loss_bbox: 0.6807, d3.loss_cls: 0.3845, d3.loss_bbox: 0.6693, d4.loss_cls: 0.3804, d4.loss_bbox: 0.6580, aux_task0.loss_heatmap: 0.4607, aux_task0.loss_bbox: 0.1874, aux_task1.loss_heatmap: 0.6179, aux_task1.loss_bbox: 0.2063, aux_task2.loss_heatmap: 0.3484, aux_task2.loss_bbox: 0.1365, aux_task3.loss_heatmap: 0.3386, aux_task3.loss_bbox: 0.1311, aux_task4.loss_heatmap: 0.4729, aux_task4.loss_bbox: 0.1336, aux_task5.loss_heatmap: 0.4596, aux_task5.loss_bbox: 0.2539, loss: 10.2675, grad_norm: 27.0623
2025-04-25 12:54:22,803 - mmdet - INFO - Epoch [20][600/773]	lr: 1.097e-07, eta: 0:02:56, time: 0.988, data_time: 0.005, memory: 5963, loss_cls: 0.3792, loss_bbox: 0.6462, d0.loss_cls: 0.4171, d0.loss_bbox: 0.7933, d1.loss_cls: 0.3996, d1.loss_bbox: 0.6962, d2.loss_cls: 0.3899, d2.loss_bbox: 0.6738, d3.loss_cls: 0.3819, d3.loss_bbox: 0.6608, d4.loss_cls: 0.3800, d4.loss_bbox: 0.6529, aux_task0.loss_heatmap: 0.4540, aux_task0.loss_bbox: 0.1914, aux_task1.loss_heatmap: 0.6393, aux_task1.loss_bbox: 0.2038, aux_task2.loss_heatmap: 0.4011, aux_task2.loss_bbox: 0.1707, aux_task3.loss_heatmap: 0.3070, aux_task3.loss_bbox: 0.1308, aux_task4.loss_heatmap: 0.3195, aux_task4.loss_bbox: 0.0972, aux_task5.loss_heatmap: 0.4579, aux_task5.loss_bbox: 0.2578, loss: 10.1016, grad_norm: 26.5360
2025-04-25 12:55:12,413 - mmdet - INFO - Epoch [20][650/773]	lr: 5.636e-08, eta: 0:02:05, time: 0.992, data_time: 0.005, memory: 5963, loss_cls: 0.3652, loss_bbox: 0.6424, d0.loss_cls: 0.4015, d0.loss_bbox: 0.7895, d1.loss_cls: 0.3808, d1.loss_bbox: 0.6926, d2.loss_cls: 0.3741, d2.loss_bbox: 0.6697, d3.loss_cls: 0.3639, d3.loss_bbox: 0.6606, d4.loss_cls: 0.3651, d4.loss_bbox: 0.6496, aux_task0.loss_heatmap: 0.4424, aux_task0.loss_bbox: 0.1929, aux_task1.loss_heatmap: 0.6111, aux_task1.loss_bbox: 0.1980, aux_task2.loss_heatmap: 0.4490, aux_task2.loss_bbox: 0.1612, aux_task3.loss_heatmap: 0.3058, aux_task3.loss_bbox: 0.1182, aux_task4.loss_heatmap: 0.4404, aux_task4.loss_bbox: 0.1405, aux_task5.loss_heatmap: 0.3942, aux_task5.loss_bbox: 0.2449, loss: 10.0537, grad_norm: 26.3734
2025-04-25 12:56:02,814 - mmdet - INFO - Epoch [20][700/773]	lr: 2.088e-08, eta: 0:01:14, time: 1.008, data_time: 0.005, memory: 5963, loss_cls: 0.3786, loss_bbox: 0.6300, d0.loss_cls: 0.4225, d0.loss_bbox: 0.7750, d1.loss_cls: 0.3989, d1.loss_bbox: 0.6817, d2.loss_cls: 0.3919, d2.loss_bbox: 0.6585, d3.loss_cls: 0.3787, d3.loss_bbox: 0.6481, d4.loss_cls: 0.3791, d4.loss_bbox: 0.6372, aux_task0.loss_heatmap: 0.4524, aux_task0.loss_bbox: 0.1882, aux_task1.loss_heatmap: 0.5950, aux_task1.loss_bbox: 0.1985, aux_task2.loss_heatmap: 0.3776, aux_task2.loss_bbox: 0.1527, aux_task3.loss_heatmap: 0.3565, aux_task3.loss_bbox: 0.1358, aux_task4.loss_heatmap: 0.3944, aux_task4.loss_bbox: 0.1250, aux_task5.loss_heatmap: 0.4448, aux_task5.loss_bbox: 0.2419, loss: 10.0430, grad_norm: 26.0443
2025-04-25 12:56:53,759 - mmdet - INFO - Epoch [20][750/773]	lr: 3.315e-09, eta: 0:00:23, time: 1.019, data_time: 0.005, memory: 5963, loss_cls: 0.3757, loss_bbox: 0.6460, d0.loss_cls: 0.4206, d0.loss_bbox: 0.7853, d1.loss_cls: 0.3990, d1.loss_bbox: 0.6905, d2.loss_cls: 0.3898, d2.loss_bbox: 0.6696, d3.loss_cls: 0.3771, d3.loss_bbox: 0.6606, d4.loss_cls: 0.3754, d4.loss_bbox: 0.6520, aux_task0.loss_heatmap: 0.4782, aux_task0.loss_bbox: 0.1970, aux_task1.loss_heatmap: 0.6146, aux_task1.loss_bbox: 0.1920, aux_task2.loss_heatmap: 0.3932, aux_task2.loss_bbox: 0.1587, aux_task3.loss_heatmap: 0.3330, aux_task3.loss_bbox: 0.1139, aux_task4.loss_heatmap: 0.3783, aux_task4.loss_bbox: 0.1182, aux_task5.loss_heatmap: 0.4405, aux_task5.loss_bbox: 0.2479, loss: 10.1070, grad_norm: 26.4586
2025-04-25 12:57:17,149 - mmdet - INFO - Saving checkpoint at 20 epochs
2025-04-25 13:18:25,751 - mmdet - INFO - Exp name: lidar_0075v_900q_cascadeded_split40.py
2025-04-25 13:18:25,751 - mmdet - INFO - Epoch(val) [20][1505]	pts_bbox_NuScenes/car_AP_dist_0.5: 0.5549, pts_bbox_NuScenes/car_AP_dist_1.0: 0.6959, pts_bbox_NuScenes/car_AP_dist_2.0: 0.7601, pts_bbox_NuScenes/car_AP_dist_4.0: 0.8004, pts_bbox_NuScenes/car_trans_err: 0.2523, pts_bbox_NuScenes/car_scale_err: 0.1720, pts_bbox_NuScenes/car_orient_err: 0.2932, pts_bbox_NuScenes/car_vel_err: 1.5080, pts_bbox_NuScenes/car_attr_err: 0.4335, pts_bbox_NuScenes/mATE: 0.4458, pts_bbox_NuScenes/mASE: 0.2864, pts_bbox_NuScenes/mAOE: 0.8429, pts_bbox_NuScenes/mAVE: 1.1434, pts_bbox_NuScenes/mAAE: 0.4374, pts_bbox_NuScenes/truck_AP_dist_0.5: 0.1742, pts_bbox_NuScenes/truck_AP_dist_1.0: 0.3684, pts_bbox_NuScenes/truck_AP_dist_2.0: 0.4728, pts_bbox_NuScenes/truck_AP_dist_4.0: 0.5201, pts_bbox_NuScenes/truck_trans_err: 0.4684, pts_bbox_NuScenes/truck_scale_err: 0.2336, pts_bbox_NuScenes/truck_orient_err: 0.3694, pts_bbox_NuScenes/truck_vel_err: 0.9556, pts_bbox_NuScenes/truck_attr_err: 0.3689, pts_bbox_NuScenes/construction_vehicle_AP_dist_0.5: 0.0000, pts_bbox_NuScenes/construction_vehicle_AP_dist_1.0: 0.0612, pts_bbox_NuScenes/construction_vehicle_AP_dist_2.0: 0.1708, pts_bbox_NuScenes/construction_vehicle_AP_dist_4.0: 0.2672, pts_bbox_NuScenes/construction_vehicle_trans_err: 0.7827, pts_bbox_NuScenes/construction_vehicle_scale_err: 0.4647, pts_bbox_NuScenes/construction_vehicle_orient_err: 1.2560, pts_bbox_NuScenes/construction_vehicle_vel_err: 0.1386, pts_bbox_NuScenes/construction_vehicle_attr_err: 0.3548, pts_bbox_NuScenes/bus_AP_dist_0.5: 0.1890, pts_bbox_NuScenes/bus_AP_dist_1.0: 0.4797, pts_bbox_NuScenes/bus_AP_dist_2.0: 0.6571, pts_bbox_NuScenes/bus_AP_dist_4.0: 0.7001, pts_bbox_NuScenes/bus_trans_err: 0.5004, pts_bbox_NuScenes/bus_scale_err: 0.2309, pts_bbox_NuScenes/bus_orient_err: 0.4602, pts_bbox_NuScenes/bus_vel_err: 2.2937, pts_bbox_NuScenes/bus_attr_err: 0.6457, pts_bbox_NuScenes/trailer_AP_dist_0.5: 0.0506, pts_bbox_NuScenes/trailer_AP_dist_1.0: 0.1782, pts_bbox_NuScenes/trailer_AP_dist_2.0: 0.3464, pts_bbox_NuScenes/trailer_AP_dist_4.0: 0.4813, pts_bbox_NuScenes/trailer_trans_err: 0.7167, pts_bbox_NuScenes/trailer_scale_err: 0.2554, pts_bbox_NuScenes/trailer_orient_err: 1.4239, pts_bbox_NuScenes/trailer_vel_err: 0.4260, pts_bbox_NuScenes/trailer_attr_err: 0.2296, pts_bbox_NuScenes/barrier_AP_dist_0.5: 0.2208, pts_bbox_NuScenes/barrier_AP_dist_1.0: 0.4701, pts_bbox_NuScenes/barrier_AP_dist_2.0: 0.6217, pts_bbox_NuScenes/barrier_AP_dist_4.0: 0.6784, pts_bbox_NuScenes/barrier_trans_err: 0.5092, pts_bbox_NuScenes/barrier_scale_err: 0.2923, pts_bbox_NuScenes/barrier_orient_err: 0.3020, pts_bbox_NuScenes/barrier_vel_err: nan, pts_bbox_NuScenes/barrier_attr_err: nan, pts_bbox_NuScenes/motorcycle_AP_dist_0.5: 0.2473, pts_bbox_NuScenes/motorcycle_AP_dist_1.0: 0.3338, pts_bbox_NuScenes/motorcycle_AP_dist_2.0: 0.3632, pts_bbox_NuScenes/motorcycle_AP_dist_4.0: 0.3950, pts_bbox_NuScenes/motorcycle_trans_err: 0.3220, pts_bbox_NuScenes/motorcycle_scale_err: 0.2671, pts_bbox_NuScenes/motorcycle_orient_err: 0.9986, pts_bbox_NuScenes/motorcycle_vel_err: 1.9092, pts_bbox_NuScenes/motorcycle_attr_err: 0.4589, pts_bbox_NuScenes/bicycle_AP_dist_0.5: 0.1323, pts_bbox_NuScenes/bicycle_AP_dist_1.0: 0.1580, pts_bbox_NuScenes/bicycle_AP_dist_2.0: 0.1702, pts_bbox_NuScenes/bicycle_AP_dist_4.0: 0.1877, pts_bbox_NuScenes/bicycle_trans_err: 0.2866, pts_bbox_NuScenes/bicycle_scale_err: 0.2795, pts_bbox_NuScenes/bicycle_orient_err: 0.9645, pts_bbox_NuScenes/bicycle_vel_err: 0.9430, pts_bbox_NuScenes/bicycle_attr_err: 0.2014, pts_bbox_NuScenes/pedestrian_AP_dist_0.5: 0.5002, pts_bbox_NuScenes/pedestrian_AP_dist_1.0: 0.6848, pts_bbox_NuScenes/pedestrian_AP_dist_2.0: 0.7327, pts_bbox_NuScenes/pedestrian_AP_dist_4.0: 0.7625, pts_bbox_NuScenes/pedestrian_trans_err: 0.3697, pts_bbox_NuScenes/pedestrian_scale_err: 0.2846, pts_bbox_NuScenes/pedestrian_orient_err: 1.5188, pts_bbox_NuScenes/pedestrian_vel_err: 0.9729, pts_bbox_NuScenes/pedestrian_attr_err: 0.8063, pts_bbox_NuScenes/traffic_cone_AP_dist_0.5: 0.4004, pts_bbox_NuScenes/traffic_cone_AP_dist_1.0: 0.4560, pts_bbox_NuScenes/traffic_cone_AP_dist_2.0: 0.4989, pts_bbox_NuScenes/traffic_cone_AP_dist_4.0: 0.5581, pts_bbox_NuScenes/traffic_cone_trans_err: 0.2502, pts_bbox_NuScenes/traffic_cone_scale_err: 0.3841, pts_bbox_NuScenes/traffic_cone_orient_err: nan, pts_bbox_NuScenes/traffic_cone_vel_err: nan, pts_bbox_NuScenes/traffic_cone_attr_err: nan, pts_bbox_NuScenes/NDS: 0.4050, pts_bbox_NuScenes/mAP: 0.4125
